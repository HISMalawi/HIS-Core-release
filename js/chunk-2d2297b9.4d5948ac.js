(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2297b9"],{de46:function(t,e,s){"use strict";s.r(e);var a=s("7a23");function r(t,e,s,r,o,i){const n=Object(a["resolveComponent"])("report-template");return Object(a["openBlock"])(),Object(a["createBlock"])(n,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,canExportCsv:!0,canExportPDf:!0,reportReady:t.reportReady,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","reportReady","onReportConfiguration"])}s("14d9");var o=s("1497"),i=s("44e3"),n=s("4ba2"),d=s("ad8d"),l=s("d95e"),p=s("9ceb"),h=Object(a["defineComponent"])({mixins:[i["a"]],components:{ReportTemplate:n["a"]},data:()=>({title:"Tests requested",rows:[],cohort:[],reportType:"",reportReady:!1,columns:[],patientLevelColumns:[[p["a"].thTxt("ARV#"),p["a"].thTxt("Gender"),p["a"].thTxt("Birthdate"),p["a"].thTxt("Ordered Date"),p["a"].thTxt("Test"),p["a"].thTxt("Reason")]],disaggregatedColumns:[p["a"].thTxt("Age group"),p["a"].thTxt("Gender")]}),created(){this.report=new o["a"],this.fields=this.getFormFields()},methods:{async onPeriod({type:t,tests:e}){this.reportReady=!0,this.rows=[],this.period=this.report.getDateIntervalPeriod(),this.reportType=t.value,"disaggregated"===this.reportType?this.setDisaggregatedRows(e):"patient_level"===this.reportType&&this.setPatientLevelRows(e)},getFormFields(){return[...this.getDateDurationFields(),{id:"tests",helpText:"Test(s) Requested",type:l["b"].TT_MULTIPLE_SELECT,options:async(t,e,s)=>{this.report.setStartDate(s.start_date),this.report.setEndDate(s.end_date);const a=await this.report.getSamplesDrawnReport(),r=this.buildAvailableTests(a);return this.buildAvailableTestOptions(r)}},{id:"type",helpText:"Select report type",type:l["b"].TT_SELECT,options:()=>[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}]}]},buildAvailableTests(t){const e={};return t.forEach(t=>{t.tests.forEach(s=>{s in e||(e[s]=[]),e[s].push(t)})}),e},buildAvailableTestOptions(t){const e=[];for(const s in t){const a=t[s];e.push({label:s,value:a.length,other:a})}return e},setDisaggregatedRows(t){const e=[],s=[];this.columns=[this.disaggregatedColumns.concat(t.map(t=>p["a"].thTxt(t.label)))];for(const a in d["a"]){const r=d["a"][a],o=[p["a"].td(r),p["a"].td("M")],i=[p["a"].td(r),p["a"].td("F")];t.forEach(({other:t})=>{const e=e=>t.filter(t=>t.gender===e&&t.age_group===r).map(t=>t.patient_id);o.push(this.drill(e("M"),"Males of "+r)),i.push(this.drill(e("F"),"Females of "+r))}),e.push(o),s.push(i),this.rows=[...s,...e]}},setPatientLevelRows(t){this.columns=this.patientLevelColumns,t.forEach(({other:t})=>{this.sortByArvNumber(t).forEach(t=>{this.rows.push([p["a"].td(t.arv_number),p["a"].td(t.gender),p["a"].tdDate(t.birthdate),p["a"].tdDate(t.order_date),p["a"].td(t.tests.join(",")),p["a"].td(t.reason_for_test)])})})}}}),c=s("d959"),u=s.n(c);const g=u()(h,[["render",r]]);e["default"]=g}}]);
//# sourceMappingURL=chunk-2d2297b9.4d5948ac.js.map