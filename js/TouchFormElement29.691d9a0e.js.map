{"version":3,"sources":["webpack:///./src/components/FormElements/HisIPAddress.vue?6df7","webpack:///./src/components/FormElements/HisIPAddress.vue","webpack:///./src/components/FormElements/HisIPAddress.vue?50fa","webpack:///./src/components/FormElements/FieldMixin.vue","webpack:///./src/components/FormElements/FieldMixin.vue?27e2","webpack:///./src/components/FormElements/HisIPAddress.vue?e0e1","webpack:///./src/components/Keyboard/HisKeyboard.vue?dcb9","webpack:///./src/components/Keyboard/HisKeyboard.vue","webpack:///./src/components/Keyboard/HisKeyboard.vue?396a"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_input","_resolveComponent","_component_ion_col","_component_ion_row","_component_ion_grid","_component_view_port","_component_his_keyboard","_openBlock","_createElementBlock","_Fragment","_createVNode","showFull","default","_withCtx","_renderList","addressInputs","address","index","_createBlock","key","readonly","activePlatformProfile","keyboard","mode","inputmode","type","max","class","_normalizeClass","activeIndex","modelValue","$event","onIonFocus","onAddressClick","style","textAlign","placeholder","_","showKeyboard","onKeyPress","keypress","kbConfig","numbers","_createCommentVNode","defineComponent","components","IonInput","IonRow","IonCol","IonGrid","HisKeyboard","ViewPort","mixins","FieldMixinVue","methods","clearValue","this","first","second","third","fourth","setup","props","emit","Platform","onActivated","ref","input","value","handleVirtualInput","length","charAt","substring","watch","complete","Object","values","map","i","isEmpty","every","Boolean","join","label","deep","immediate","NUMBER_PAD_LO","__exports__","emits","config","preset","defaultValue","Function","fdata","required","cdata","options","activationState","String","onValue","onValueUpdate","footerButtonEvent","_hoisted_1","_hoisted_2","_component_base_keyboard","_createElementVNode","activeLayout","layout","BaseKeyboard","initalKeyboardName","Array","data","handler","name","$nextTick","switchKeyboard","isFunctionKey","kbIndex","KEY_BTN_NAV","item","btn","indexOf"],"mappings":"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","file":"js/TouchFormElement29.691d9a0e.js","sourcesContent":["import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_input = _resolveComponent(\"ion-input\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_view_port = _resolveComponent(\"view-port\")!\n  const _component_his_keyboard = _resolveComponent(\"his-keyboard\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_view_port, { showFull: false }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.addressInputs, (address, index) => {\n                  return (_openBlock(), _createBlock(_component_ion_col, { key: index }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_input, {\n                        readonly: _ctx.activePlatformProfile.keyboard === 'HIS_KEYBOARD_ONLY',\n                        mode: \"md\",\n                        inputmode: \"numeric\",\n                        type: \"number\",\n                        max: 255,\n                        class: _normalizeClass([{\n                            'highlighted-input' : index === _ctx.activeIndex\n                        }, \"input_display\"]),\n                        modelValue: _ctx.addressInputs[index],\n                        \"onUpdate:modelValue\": ($event: any) => ((_ctx.addressInputs[index]) = $event),\n                        onIonFocus: ($event: any) => (_ctx.onAddressClick(index)),\n                        style: { textAlign: 'center' },\n                        placeholder: \"0\"\n                      }, null, 8, [\"readonly\", \"class\", \"modelValue\", \"onUpdate:modelValue\", \"onIonFocus\"])\n                    ]),\n                    _: 2\n                  }, 1024))\n                }), 128))\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    (_ctx.showKeyboard)\n      ? (_openBlock(), _createBlock(_component_his_keyboard, {\n          key: 0,\n          onKeyPress: _ctx.keypress,\n          kbConfig: _ctx.numbers\n        }, null, 8, [\"onKeyPress\", \"kbConfig\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","\nimport { defineComponent, onActivated, onMounted, ref, watch } from 'vue'\nimport HisKeyboard from \"@/components/Keyboard/HisKeyboard.vue\"\nimport { NUMBER_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport ViewPort from \"@/components/DataViews/ViewPort.vue\"\nimport FieldMixinVue from './FieldMixin.vue'\nimport handleVirtualInput from \"@/components/Keyboard/KbHandler\"\nimport { \n    IonInput,\n    IonRow,\n    IonCol,\n    IonGrid\n} from \"@ionic/vue\"\nimport { isEmpty } from 'lodash'\nimport Platform from \"@/composables/usePlatform\"\n\nexport default defineComponent({\n    components: { \n        IonInput, \n        IonRow,\n        IonCol,\n        IonGrid,\n        HisKeyboard, \n        ViewPort\n    },\n    mixins: [FieldMixinVue],\n    methods: {\n        clearValue() {\n            this.addressInputs = {\n                first:  '',\n                second: '',\n                third:  '',\n                fourth: ''\n            } \n        }\n    },\n    setup(props, {emit}) {\n        const  { activePlatformProfile } = Platform()\n        onActivated(() => emit('onFieldActivated', this))\n        const showKeyboard = ref(false)\n        const activeIndex = ref('')\n        // Track IP Address parts\n        const addressInputs = ref({\n            first:  '',\n            second: '',\n            third:  '',\n            fourth: ''\n        }) as any\n\n        function keypress(input: string) {\n            if (!activeIndex.value) {\n                return\n            } \n            const index = activeIndex.value\n            const value = handleVirtualInput(\n                input, addressInputs.value[index]\n            )\n            // Tab to next IP Address part if value exceeds 3\n            if (value.length > 3) {\n                switch(activeIndex.value) {\n                    case 'first':\n                        activeIndex.value = 'second'\n                        break\n                    case 'second':\n                        activeIndex.value = 'third'\n                        break\n                    case 'third':\n                        activeIndex.value = 'fourth'\n                        break\n                    case 'fourth':\n                        activeIndex.value = ''\n                }\n            } else {\n                // Do a check here to prevent the first letter being \n                // a zero for that IP Address\n                addressInputs.value[index] = \n                    value.charAt(0) === '0' && value.length > 1\n                    ? value.substring(1)\n                    : value\n            }\n        }\n\n        function onAddressClick(index: string) {\n            activeIndex.value = index\n            showKeyboard.value = true\n        }\n\n        watch(addressInputs, (address) => {\n            if (!address) return\n            // Only Emit the IP Address if all the parts are set\n            const complete = Object.values(address)\n                .map(\n                    (i: any) => !isEmpty(i)\n                )\n            if (complete.every(Boolean)) {\n                const value = Object\n                    .values(address)\n                    .map(i => i)\n                    .join('.')\n                emit('onValue', {label: value, value})\n            } else {\n                emit('onValue', null)\n            }\n        }, { deep: true, immediate: true })\n\n        return {\n            activePlatformProfile,\n            keypress,\n            activeIndex,\n            onAddressClick,\n            showKeyboard,\n            addressInputs,\n            numbers: [\n                NUMBER_PAD_LO,\n                [\n                   ['Delete'],\n                   [ 'Clear' ]\n                ]\n            ]\n        }\n    }\n})\n","import { render } from \"./HisIPAddress.vue?vue&type=template&id=42a8db00&scoped=true&ts=true\"\nimport script from \"./HisIPAddress.vue?vue&type=script&lang=ts\"\nexport * from \"./HisIPAddress.vue?vue&type=script&lang=ts\"\n\nimport \"./HisIPAddress.vue?vue&type=style&index=0&id=42a8db00&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-42a8db00\"]])\n\nexport default __exports__","\nimport { isPlatform } from '@ionic/core'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n    emits: [\n        'onValue',\n        'onFieldActivated'\n    ],\n    props: {\n        config: {\n            type: Object,\n            default: () => ({})\n        },\n        preset: {\n            type: Object,\n            default: () => ({\n                label: '',\n                value: ''\n            })\n        },\n        defaultValue: {\n            type: Function\n        },\n        fdata: {\n            type: Object,\n            required: true\n        },\n        cdata: {\n            type: Object,\n            required: true\n        },\n        options: {\n            type: Function,\n            default: () => ([])\n        },\n        activationState: {\n            type: String,\n            default: ''\n        },\n        onValue: {\n            type: Function\n        },\n        onValueUpdate: {\n            type: Function\n        },\n        footerButtonEvent: {\n            type: Object\n        }\n    }\n})\n","import script from \"./FieldMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./FieldMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./HisIPAddress.vue?vue&type=style&index=0&id=42a8db00&scoped=true&lang=css\"","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"his-floating-keyboard\" }\nconst _hoisted_2 = { class: \"his-floating-keyboard-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_base_keyboard = _resolveComponent(\"base-keyboard\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.activeLayout, (layout, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n          _createVNode(_component_base_keyboard, {\n            layout: layout,\n            onKeyPress: _ctx.keypress\n          }, null, 8, [\"layout\", \"onKeyPress\"])\n        ]))\n      }), 128))\n    ])\n  ]))\n}","\nimport { defineComponent } from \"vue\";\nimport { KEY_BTN_NAV } from \"@/components/Keyboard/HisKbConfigurations\"\nimport BaseKeyboard from \"@/components/Keyboard/BaseKeyboard.vue\";\nexport default defineComponent({\n  components: { BaseKeyboard},\n  props: {\n    initalKeyboardName: {\n      type: String\n    },\n    kbConfig: {\n      type: Array,\n      required: true\n    },\n    onKeyPress: {\n      type: Function,\n      required: true,\n    },\n  },\n  data: () => ({\n    activeLayout: {} as Array<any>\n  }),\n  watch: {\n    initalKeyboardName: {\n      handler(name: string) {\n        if (name) {\n          this.$nextTick(() => this.switchKeyboard(name))\n        }\n      },\n      immediate: true\n    },\n    kbConfig: {\n      handler(keyboard: Array<any>){\n        if(keyboard) {\n          this.activeLayout = keyboard\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    keypress(key: any) {\n      if (!this.isFunctionKey(key)) {\n        this.onKeyPress(key);\n      }\n    },\n    isFunctionKey(key: string) {  \n      if (this.switchKeyboard(key)) {\n        return true\n      }\n      return false\n    },\n    switchKeyboard(key: string): boolean {\n      const kbIndex = KEY_BTN_NAV.map(item => item.btn).indexOf(key)\n      if (kbIndex >= 0) {\n        this.activeLayout = KEY_BTN_NAV[kbIndex].keyboard\n        return true\n      }\n      return false\n    }\n  },\n});\n","import { render } from \"./HisKeyboard.vue?vue&type=template&id=7167c7d4&ts=true\"\nimport script from \"./HisKeyboard.vue?vue&type=script&lang=ts\"\nexport * from \"./HisKeyboard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}