(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-53dfc2ec"],{3383:function(t,e,n){"use strict";n.r(e);var i=n("7a23");function a(t,e,n,a,o,s){const r=Object(i["resolveComponent"])("his-standard-form"),c=Object(i["resolveComponent"])("ion-page");return Object(i["openBlock"])(),Object(i["createBlock"])(c,null,{default:Object(i["withCtx"])(()=>[Object(i["createVNode"])(r,{formLabel:"ART (Re-) Initiation",fields:t.fields,onFinishAction:t.onFinish,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}var o=n("7365"),s=n("d95e"),r=n("d867"),c=n("c39b"),l=n("e86e"),u=n("0011"),d=Object(i["defineComponent"])({components:{IonPage:r["D"]},mixins:[o["a"]],data:()=>({service:{}}),watch:{ready:{handler(t){t&&(this.service=new c["a"](this.patientID,this.providerID),this.fields=[this.referralForArtInitiation(),this.intendedArtSiteField(),this.artAppointmentDataField(),this.htsLinkageCodeField(),this.hiddenArtReferralOutcomeStatusField()])},immediate:!0}},methods:{onFinish(t,e){this.saveFormEncounterAndProceed({encounterTypeID:this.service.encounterTypeID,formData:t,computedData:e})},referralForArtInitiation(){return{id:"is_referral",helpText:"Referral for ART (Re-)Initiation",type:s["b"].TT_YES_NO,isRequired:()=>!0,finalComputedValue:t=>({obs:this.service.buildValueText("ART referral",t)}),options:()=>[{label:"Do you want to Refer client?",value:"",values:this.yesNoOptions()}]}},intendedArtSiteField(){return{id:"art_site",helpText:"Intended Site for ART",type:s["b"].TT_SELECT,isRequired:()=>!0,finalComputedValue:({label:t})=>({obs:this.service.buildValueText("Referral location",t)}),options:(t,e="")=>Object(l["b"])(e),condition:t=>"Yes"===t.is_referral,defaultValue:()=>c["a"].getLocationName(),config:{footerBtns:[{name:"Here",slot:"end",onClickComponentEvents:{setValue:()=>c["a"].getLocationName()},onClick:()=>null}],showKeyboard:!0,isFilterDataViaApi:!0}}},artAppointmentDataField(){return{id:"art_appointment_date",helpText:"Appointment Date for ART Referral",type:s["b"].TT_DATE_PICKER,isRequired:()=>!0,defaultValue:()=>this.service.date,condition:t=>"Yes"===t.is_referral,finalComputedValue:t=>({obs:this.service.buildValueDate("Appointment date",""+t.value)}),config:{minDate:()=>this.service.date,infoItems:t=>[{label:"Set appointment date",value:Object(u["e"])(t)}],hiddenFooterBtns:["Clear"]}}},htsLinkageCodeField(){let t="";return{id:"linkage_code",helpText:"LINKAGE CODE",type:s["b"].TT_TEXT_BANNER,init:async()=>(t=await this.service.getHtsCode(),!0),defaultValue:()=>this.toOption(t),finalComputedValue:t=>({obs:this.service.buildValueText("HTC serial number",""+t.value)}),options:()=>this.mapStrToOptions([t]),config:{footerBtns:[{name:"Print",slot:"end",onClick:async()=>await this.service.printHtsLinkageId(t)}],showKeyboard:!0,isFilterDataViaApi:!0}}},hiddenArtReferralOutcomeStatusField(){return{id:"art_outcome_field",helpText:"Art outcome",type:s["b"].TT_HIDDEN,defaultValue:()=>this.toOption("Unknown"),finalComputedValue:t=>({obs:this.service.buildValueCoded("Antiretroviral status or outcome",t.value)})}}}}),h=n("d959"),p=n.n(h);const f=p()(d,[["render",a]]);e["default"]=f},7365:function(t,e,n){"use strict";n("d9e2"),n("14d9"),n("13d5");var i,a=n("7a23"),o=n("ad60"),s=n("2ef0"),r=n("0fa1"),c=n("7f35"),l=n("9283");(function(t){t["SET_PROVIDER"]="SET_PROVIDER",t["CHANGE_SESSION_DATE"]="change_session_date",t["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",t["CHANGE_PATIENT_OUTCOME"]="change_outcome",t["CONTINUE"]="continue",t["EXIT"]="exit"})(i||(i={}));const u=t=>l["b"].toStandardHisDisplayFormat(t),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:t})=>{const e=await Object(c["a"])("Data Integrity Issue Found","Patient died on "+u(t),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===e?i.GO_TO_PATIENT_DASHBOARD:"Change outcome"===e?i.CHANGE_PATIENT_OUTCOME:i.CONTINUE}},conditions:{outcome(t){return"Patient died"===t},outcomeStartDate(t,{sessionDate:e}){return e>=t}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:t,sessionDate:e})=>{const n=await Object(c["a"])("Data integrity issue found","",`Session date ${u(e)} is less than birth date of ${u(t)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===n?i.CHANGE_SESSION_DATE:i.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(t,{sessionDate:e}){return e<t}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:t,encounterName:e,sessionDate:n,apiDate:a})=>{const o=await Object(c["c"])("Please select a provider for "+e,`BDE: ${u(n)} | Current: ${u(a)}`,t,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:i.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:i.SET_PROVIDER}}},conditions:{isBdeMode(t){return t}}}};var h=n("c21d"),p=n("7920"),f=n("b5e4"),m=n("8e8b"),b=n("fe70"),D=n("b432"),v=n("5a0c"),O=n.n(v),g=n("cc6f"),y=Object(a["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{age:-1,gender:"",birthDate:"",sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():m["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(t=>{this.patient=t,Object(s["isEmpty"])(this.patient)||Object(D["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0}).catch(t=>console.log(t))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{goOffline(){return!D["c"].value||D["b"].value},isOnline(){return D["c"].value},isOfflineMode(){return D["b"].value},initOfflineData(){const{getOfflinePerson:t}=Object(D["a"])(),e=t(this.offlineID);e&&(this.facts.birthDate=e.birthdate,this.facts.age=O()(o["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.gender=e.gender,this.ready=!0)},saveObsOffline(t,e,n,i,a="Pending"){Object(D["a"])().saveObsOffline({observations:n,id:this.offlineID,uploadStatus:a,encounterName:this.$route.name,encounterTypeID:t,meta:e,labOrders:i})},async saveFormEncounterAndProceed(t={}){const e=await this.resolveObs(t.computedData);let n="Pending";try{const i=new g["a"](this.patientID,t.encounterTypeID,this.providerID);await i.createEncounter()&&await i.saveObservationList(e)&&(n="Success"),"function"===typeof t.callback&&await t.callback(i)}catch(i){n=/NetworkError|Failed to fetch/i.test(""+i)?"NetworkError":"Exception",console.error(""+i)}if("Exception"===n)throw new Error("Unable to proceed!");this.saveObsOffline(t.encounterTypeID,t.formData,e,t.labOrders,n),t.skipNextTask||this.nextTask()},runflowState(t,e=null){const n={};if(n[i.SET_PROVIDER]=t=>{const[e]=t.split(" "),n=Object(s["find"])(this.providers,{username:e});return n&&(this.providerID=n.person_id),i.CONTINUE},n[i.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),i.EXIT),n[i.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),i.EXIT),n[i.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),i.EXIT),t in n)return n[t](e)},async checkEncounterGuidelines(){const t=Object(h["a"])(this.facts,d);for(const s in t){var e,n;const r=t[s];if(null!==r&&void 0!==r&&null!==(e=r.actions)&&void 0!==e&&e.alert){var a;const t=this.runflowState(await(null===r||void 0===r||null===(a=r.actions)||void 0===a?void 0:a.alert(this.facts)));if(t===i.EXIT)return}if(null!==r&&void 0!==r&&null!==(n=r.actions)&&void 0!==n&&n.selection){var o;const t=await(null===r||void 0===r||null===(o=r.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(t.flowState,t.value)}}},async setEncounterFacts(){try{const t=await m["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=t.programID===o["a"].getProgramID(),this.facts.outcome=t.outcome,this.facts.outcomeStartDate=t.startDate}catch(t){console.error(t),Object(f["c"])(""+t)}this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await m["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((t,e)=>{const n=t.username.toUpperCase(),i=e.username.toUpperCase();return n<i?-1:n>i?1:0}).map(t=>{var e;let n=""+t.username;if(!Object(s["isEmpty"])(null===t||void 0===t||null===(e=t.person)||void 0===e?void 0:e.names)){var i;const[e]=(null===(i=t.person)||void 0===i?void 0:i.names)||[];n+=` (${e.given_name} ${e.family_name})`}return n}))},toOption(t,e={}){return{label:t,value:t,other:e}},mapStrToOptions(t){return t.map(t=>"string"===typeof t||"number"===typeof t?{label:t,value:t}:t)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){(await b["h"].create({backdropDismiss:!1,message:"Checking Next task.."})).present();try{const t=this.offlineID||this.patientID;await Object(r["b"])(t,this.$router,this.$route)}catch(t){console.error(t)}b["h"].getTop().then(t=>t&&b["h"].dismiss())},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(t,e={}){return{label:t,value:"",other:{...e,values:this.yesNoOptions()}}},mapOptions(t){return t.map(t=>({label:t,value:t}))},toConditionalOptions(t){const e=[];for(const n of t)("boolean"!==typeof n[1]||n[1])&&e.push(this.toOption(n[0]));return e},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(t,e=""){const n=Object.values(t).filter(t=>t&&(t.tag===e||""===e)).reduce((t,e)=>{const n=e.obs?e.obs:e;return Array.isArray(n)?t=t.concat(n):"function"===typeof n?t.push(n()):t.push(n),t},[]);return Promise.all(n)},inArray(t,e){try{return t.filter(t=>e(t)).length>0}catch(n){return!1}},validateSeries(t){try{for(const e in t){const n=t[e]();if(n)return n}}catch(e){return[e]}}}});const T=y;e["a"]=T},7920:function(t,e,n){"use strict";var i=n("7a23");function a(t,e,n,a,o,s){return Object(i["openBlock"])(),Object(i["createBlock"])(Object(i["resolveDynamicComponent"])(t.formType),{fields:t.fields,skipSummary:t.skipSummary,activeField:t.activeField,cancelDestinationPath:t.cancelDestinationPath,onOnFinish:t.onFinish,onFinish:t.onFinishAction,onOnIndex:t.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=n("9441"),s=Object(i["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(t,e){this.$emit("onFinish",t,e)},onIndex(t){this.$emit("onIndex",t)}}}),r=n("d959"),c=n.n(r);const l=c()(s,[["render",a]]);e["a"]=l},c21d:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));n("14d9");function i(t,e){const n=[],i=[-1,"",null,void 0];for(const a in e){if(!(a in t))continue;const o=t[a];i.includes(o)?n.push(!1):n.push(e[a](o,t))}return n.every(Boolean)}function a(t){return t.sort((t,e)=>t.priority&&e.priority&&t.priority<e.priority?-1:1)}function o(t){return t.sort((t,e)=>t.weight&&e.weight&&t.weight>e.weight?-1:1)}function s(t,e,n="",s="",r="priority"){const c=[];for(const a in e){const o=e[a],r=[o.target&&n&&o.target!=n,o.targetEvent&&s&&o.targetEvent!=s];r.some(Boolean)||i(t,o.conditions)&&(o.title=a,o.description&&(o.description.text=o.description.info(t)),c.push(o))}return"priority"===r?a(c):o(c)}},c39b:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var i=n("ade3"),a=n("cc6f"),o=n("b89f"),s=n("cc74");class r extends a["a"]{constructor(t,e=-1){super(t,79,e),Object(i["a"])(this,"patientID",void 0),Object(i["a"])(this,"printoutService",new o["a"]),this.patientID=t}async printHtsLinkageId(t){await this.printoutService.printLbl(`/patients/${this.patientID}/labels/print_hts_linkage_code/${t}`)}async getHtsCode(){return`${await s["b"].sitePrefix()||"FAC"}-HTS-${this.patientID}`}}},e86e:function(t,e,n){"use strict";n.d(e,"b",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"c",(function(){return r})),n.d(e,"f",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"a",(function(){return u})),n.d(e,"g",(function(){return d})),n.d(e,"h",(function(){return h}));var i=n("5713"),a=n("2ef0");async function o(t=""){const e=await i["a"].getFacilities({name:t});return e.filter(t=>!Object(a["isEmpty"])(t)&&""!=t.name.trim()).map(t=>({label:t.name,value:t.location_id,other:t}))}async function s(t=""){const e=await i["a"].getLabs({search_name:t});return e.map(t=>({label:t,value:t}))}async function r(t=""){const e=await i["a"].getFacilities({name:t,tag:"Facility adult sections"});return e.map(t=>({label:t.name,value:t.name,other:t}))}async function c(){const t=await i["a"].getSpecialistClinics();return t.map(t=>({label:t.name,value:t.name,other:t}))}async function l(){const t=await i["a"].getRegions();return t.map(t=>({label:t.name,value:t.region_id,other:t}))}async function u(t){const e=await i["a"].getDistricts(t);return e.map(t=>({label:t.name,value:t.district_id,other:t}))}async function d(t,e=""){const n=await i["a"].getTraditionalAuthorities(t,e);return n.map(t=>({label:t.name,value:t.traditional_authority_id,other:t}))}async function h(t,e=""){const n=await i["a"].getVillages(t,e);return n.map(t=>({label:t.name,value:t.village_id,other:t}))}}}]);
//# sourceMappingURL=chunk-53dfc2ec.de863817.js.map