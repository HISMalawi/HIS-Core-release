(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-6dc40fde"],{"32b3":function(t,e,i){"use strict";i.d(e,"b",(function(){return n})),i.d(e,"a",(function(){return r}));var n,a=i("cc6f"),s=i("7957");(function(t){t["Prescription"]="htnPrescription"})(n||(n={}));class r extends a["a"]{constructor(t,e){super(t,48,e)}static getBpGrade(t,e){return t<140&&e<90?"normal":t>=140&&t<160||e>=100&&e<110?"grade 1":t>=180&&e>110||t>=180?"grade 3":t>=160&&t<180||e>=110?"grade 2":"N/A"}static isBpNormotensive(t){const[e,i]=Object.values(t).sort((t,e)=>t.date<e.date?1:0).map(t=>this.getBpGrade(t.sbp,t.dbp));return"normal"===e&&"normal"===i}getSystolicBp(){return s["a"].getFirstValueNumber(this.patientID,"Systolic blood pressure")}getDiastolicBp(){return s["a"].getFirstValueNumber(this.patientID,"Diastolic blood pressure")}async onBpDrugs(){const t=await s["a"].getFirstValueCoded(this.patientID,"Treatment status");return!!t&&"Yes"===t}async getBPTrail(){return await a["a"].getJson(`/patients/${this.patientID}/bp_trail`)}async getCurrentDrugs(){return await a["a"].getJson(`/patients/${this.patientID}/current_bp_drugs`)}async getLastDrugs(){return await a["a"].getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`)}async getAdherence(t,e){return await a["a"].postJson(`/patients/${this.patientID}/remaining_bp_drugs`,{drug_id:t,pills:e})}async enrollPatient(t){return await a["a"].postJson(`/patients/${this.patientID}/update_or_create_htn_state`,t)}static htnDrugReferences(){return[{drug_id:275,drug_name:"HCZ (25mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:942,drug_name:"Enalapril (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:943,drug_name:"Enalapril (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:558,drug_name:"Amlodipine (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:559,drug_name:"Amlodipine (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:117,drug_name:"Atenolol (50mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:11,drug_name:"Atenolol(100mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"}]}getDrugs(){return{HCZ:{drugs:[{drugName:"HCZ (25mg tablet)",drugID:275,amount:"25mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null}],selected:null,notes:[]},Enalapril:{drugs:[{drugName:"Enalapril (5mg tablet)",drugID:942,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Enalapril (10mg tablet)",drugID:943,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Amlodipine:{drugs:[{drugName:"Amlodipine (5mg tablet)",drugID:558,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Amlodipine (10mg tablet)",drugID:559,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Atenolol:{drugs:[{drugName:"Atenolol (50mg tablet)",drugID:117,amount:"50mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Atenolol(100mg tablet)",drugID:11,amount:"100mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]}}}}},"6d32":function(t,e,i){"use strict";i.d(e,"a",(function(){return a}));var n=i("1c74");class a extends n["e"]{constructor(){super()}static getAllArvRegimens(){return this.getJson(`programs/${this.getProgramID()}/all_arv_regimens`)}static getRegimens(t){return this.getJson(`programs/${this.getProgramID()}/regimens`,{patient_id:t})}static getCustomIngridients(){return this.getJson(`programs/${this.getProgramID()}/custom_regimen_ingredients`)}static getCurrentRegimen(t,e=this.getSessionDate()){return this.getJson(`programs/${this.getProgramID()}/${t}`,{date:e})}}},"71c3":function(t,e,i){"use strict";i.d(e,"a",(function(){return a}));var n=i("1c74");class a extends n["e"]{constructor(){super()}static create(t){return this.postJson("drug_orders",t)}static updateDispensationOrders(t){return this.postJson("dispensations",{program_id:this.getProgramID(),dispensations:t.map(t=>({date:this.getSessionDate(),drug_order_id:t["order_id"],quantity:t["quantity"]}))})}static getDrugOrderHistory(t){return this.getJson("drug_orders",{patient_id:t})}static getDrugOrders(t){return this.getJson("drug_orders",{patient_id:t,date:this.getSessionDate(),program_id:this.getProgramID()})}static getAllDrugOrders(t,e=1e3){return this.getJson("drug_orders",{patient_id:t,program_id:n["e"].getProgramID(),page_size:e})}static getLastDrugsReceived(t){return this.getJson(`patients/${t}/last_drugs_received`,{date:this.getSessionDate(),program_id:this.getProgramID()})}static getDrugDosages(t,e,i=this.getSessionDate()){const n={drug_id:e,date:i};return this.getJson(`programs/${this.getProgramID()}/patients/${t}/drug_doses`,n)}static getOrderByPatient(t,e){return this.getJson("/drug_orders",{patient_id:t,program_id:this.getProgramID(),...e})}}},7365:function(t,e,i){"use strict";i("14d9"),i("13d5");var n,a=i("7a23"),s=i("ad60"),r=i("2ef0"),o=i("0fa1"),c=i("7f35"),d=i("9283");(function(t){t["SET_PROVIDER"]="SET_PROVIDER",t["CHANGE_SESSION_DATE"]="change_session_date",t["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",t["CHANGE_PATIENT_OUTCOME"]="change_outcome",t["CONTINUE"]="continue",t["EXIT"]="exit"})(n||(n={}));const u=t=>d["b"].toStandardHisDisplayFormat(t),l={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:t})=>{const e=await Object(c["a"])("Data Integrity Issue Found","Patient died on "+u(t),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===e?n.GO_TO_PATIENT_DASHBOARD:"Change outcome"===e?n.CHANGE_PATIENT_OUTCOME:n.CONTINUE}},conditions:{outcome(t){return"Patient died"===t},outcomeStartDate(t,{sessionDate:e}){return e>=t}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:t,sessionDate:e})=>{const i=await Object(c["a"])("Data integrity issue found","",`Session date ${u(e)} is less than birth date of ${u(t)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===i?n.CHANGE_SESSION_DATE:n.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(t,{sessionDate:e}){return e<t}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:t,encounterName:e,sessionDate:i,apiDate:a})=>{const s=await Object(c["c"])("Please select a provider for "+e,`BDE: ${u(i)} | Current: ${u(a)}`,t,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===s.action?{value:-1,flowState:n.GO_TO_PATIENT_DASHBOARD}:{value:s.selection,flowState:n.SET_PROVIDER}}},conditions:{isBdeMode(t){return t}}}};var g=i("c21d"),h=i("7920"),p=i("b5e4"),m=i("8e8b"),f=i("b432"),D=i("5a0c"),_=i.n(D),v=i("cc6f"),b=i("2ed9"),O=Object(a["defineComponent"])({components:{HisStandardForm:h["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],encounterStartTime:null,facts:{npid:"",givenName:"",familyName:"",age:-1,gender:"",birthDate:"",birthEstimated:!1,sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:"",village:"",district:"",currentTA:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():m["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(t=>{this.patient=t,Object(r["isEmpty"])(this.patient)||Object(f["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0,this.setStartTime()}).catch(t=>console.log(t))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{setStartTime(){this.encounterStartTime=(new Date).getTime()},goOffline(){return!f["c"].value||f["b"].value},isOnline(){return f["c"].value},isOfflineMode(){return f["b"].value},initOfflineData(){var t,e,i;const n=Object(f["a"])().findByID(this.offlineID),a=null===n||void 0===n||null===(t=n.personParams)||void 0===t?void 0:t.person;a&&(this.facts.birthDate=a.birthdate,this.facts.age=_()(s["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.birthEstimated=(null===n||void 0===n||null===(e=n.personParams)||void 0===e?void 0:e.person.birthdate_estimated)||!1,this.facts.npid=null===n||void 0===n||null===(i=n.personParams)||void 0===i?void 0:i.npid,this.facts.givenName=a.given_name,this.facts.familyName=a.family_name,this.facts.district=a.current_district,this.facts.village=a.current_village,this.facts.currentTA=a.current_traditional_authority,this.facts.gender=a.gender,this.ready=!0,this.setStartTime())},async saveFormEncounterAndProceed(t={}){let e="Pending",i=!1,n=null;const a=(new Date).getTime(),s=(a-this.encounterStartTime)/1e3,r=s/60;try{const a=await v["a"].buildValueText("Device",Object(b["f"])()),s=await v["a"].buildValueNumber("Review Time",r);n=[...await this.resolveObs(t.computedData),a,s],Object(f["a"])().saveObsOffline({observations:n,id:this.offlineID,uploadStatus:e,encounterName:this.$route.name,encounterTypeID:t.encounterTypeID,meta:t.formData,labOrders:t.labOrders,created:i},i),Object(f["a"])().synchronizeRecord(this.offlineID),t.skipNextTask||this.nextOfflineFlow()}catch(o){return console.error(""+o),Object(p["e"])("Unable to resolve observations")}},runflowState(t,e=null){const i={};if(i[n.SET_PROVIDER]=t=>{const[e]=t.split(" "),i=Object(r["find"])(this.providers,{username:e});return i&&(this.providerID=i.person_id),n.CONTINUE},i[n.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),n.EXIT),i[n.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),n.EXIT),i[n.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),n.EXIT),t in i)return i[t](e)},async checkEncounterGuidelines(){const t=Object(g["a"])(this.facts,l);for(const r in t){var e,i;const o=t[r];if(null!==o&&void 0!==o&&null!==(e=o.actions)&&void 0!==e&&e.alert){var a;const t=this.runflowState(await(null===o||void 0===o||null===(a=o.actions)||void 0===a?void 0:a.alert(this.facts)));if(t===n.EXIT)return}if(null!==o&&void 0!==o&&null!==(i=o.actions)&&void 0!==i&&i.selection){var s;const t=await(null===o||void 0===o||null===(s=o.actions)||void 0===s?void 0:s.selection(this.facts));this.runflowState(t.flowState,t.value)}}},async setEncounterFacts(){try{const t=await m["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=t.programID===s["a"].getProgramID(),this.facts.outcome=t.outcome,this.facts.outcomeStartDate=t.startDate}catch(t){console.error(t),Object(p["c"])(""+t)}this.facts.npid=this.patient.getNationalID(),this.facts.givenName=this.patient.getGivenName(),this.facts.familyName=this.patient.getFamilyName(),this.facts.currentTA=this.patient.getCurrentTA(),this.facts.district=this.patient.getCurrentDistrict(),this.facts.village=this.patient.getCurrentVillage(),this.facts.sessionDate=s["a"].getSessionDate(),this.facts.apiDate=s["a"].getCachedApiDate(),this.facts.isBdeMode=s["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",s["a"].isBDE()&&(this.providers=await m["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((t,e)=>{const i=t.username.toUpperCase(),n=e.username.toUpperCase();return i<n?-1:i>n?1:0}).map(t=>{var e;let i=""+t.username;if(!Object(r["isEmpty"])(null===t||void 0===t||null===(e=t.person)||void 0===e?void 0:e.names)){var n;const[e]=(null===(n=t.person)||void 0===n?void 0:n.names)||[];i+=` (${e.given_name} ${e.family_name})`}return i}))},toOption(t,e={}){return{label:t,value:t,other:e}},mapStrToOptions(t){return t.map(t=>"string"===typeof t||"number"===typeof t?{label:t,value:t}:t)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},nextOfflineFlow(){const t=Object(f["a"])().nextPatientWorkflowActivity(this.patientID);return t&&t.patientUrl?this.$router.push(`${t.patientUrl}/${this.patientID}`):this.$router.push("/patient/dashboard/"+this.patientID)},async nextTask(){try{const t=this.offlineID||this.patientID;await Object(o["b"])(t,this.$router,this.$route)}catch(t){console.error("Workflow error "+t),this.gotoPatientDashboard()}},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(t,e={}){return{label:t,value:"",other:{...e,values:this.yesNoOptions()}}},mapOptions(t){return t.map(t=>({label:t,value:t}))},toConditionalOptions(t){const e=[];for(const i of t)("boolean"!==typeof i[1]||i[1])&&e.push(this.toOption(i[0]));return e},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(t,e=""){const i=Object.values(t).filter(t=>t&&(t.tag===e||""===e)).reduce((t,e)=>{const i=e.obs?e.obs:e;return Array.isArray(i)?t=t.concat(i):"function"===typeof i?t.push(i()):t.push(i),t},[]);return Promise.all(i)},inArray(t,e){try{return t.filter(t=>e(t)).length>0}catch(i){return!1}},validateSeries(t){try{for(const e in t){const i=t[e]();if(i)return i}}catch(e){return[e]}}}});const I=O;e["a"]=I},7920:function(t,e,i){"use strict";var n=i("7a23");function a(t,e,i,a,s,r){return Object(n["openBlock"])(),Object(n["createBlock"])(Object(n["resolveDynamicComponent"])(t.formType),{fields:t.fields,skipSummary:t.skipSummary,activeField:t.activeField,cancelDestinationPath:t.cancelDestinationPath,onOnFinish:t.onFinish,onFinish:t.onFinishAction,onOnIndex:t.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var s=i("9441"),r=Object(n["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:s["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(t,e){this.$emit("onFinish",t,e)},onIndex(t){this.$emit("onIndex",t)}}}),o=i("6b0d"),c=i.n(o);const d=c()(r,[["render",a]]);e["a"]=d},c21d:function(t,e,i){"use strict";i.d(e,"a",(function(){return r}));i("14d9");function n(t,e){const i=[],n=[-1,"",null,void 0];for(const a in e){if(!(a in t))continue;const s=t[a];n.includes(s)?i.push(!1):i.push(e[a](s,t))}return i.every(Boolean)}function a(t){return t.sort((t,e)=>t.priority&&e.priority&&t.priority<e.priority?-1:1)}function s(t){return t.sort((t,e)=>t.weight&&e.weight&&t.weight>e.weight?-1:1)}function r(t,e,i="",r="",o="priority"){const c=[];for(const a in e){const s=e[a],o=[s.target&&i&&s.target!=i,s.targetEvent&&r&&s.targetEvent!=r];o.some(Boolean)||n(t,s.conditions)&&(s.title=a,s.description&&(s.description.text=s.description.info(t)),c.push(s))}return"priority"===o?a(c):s(c)}},dac2:function(t,e,i){"use strict";i.d(e,"a",(function(){return l}));var n,a=i("ade3"),s=(i("14d9"),i("71c3")),r=i("9283"),o=i("6d32"),c=i("2ef0"),d=i("cc6f"),u=i("0011");(function(t){t["CONTRAINDICATION"]="contraindication",t["SIDE_EFFECT"]="side_effect"})(n||(n={}));class l extends d["a"]{constructor(t,e){super(t,25,e),Object(a["a"])(this,"nextVisitInterval",void 0),Object(a["a"])(this,"fastTrack",void 0),Object(a["a"])(this,"regimenExtras",void 0),Object(a["a"])(this,"hangingPills",void 0),Object(a["a"])(this,"fastTrackMedications",void 0),Object(a["a"])(this,"medicationOrders",void 0),Object(a["a"])(this,"treatmentState",void 0),Object(a["a"])(this,"contraindications",void 0),Object(a["a"])(this,"sideEffects",void 0),Object(a["a"])(this,"tptPrescriptionCount",void 0),Object(a["a"])(this,"lastSideEffectDate",void 0),this.nextVisitInterval=0,this.fastTrack=!1,this.regimenExtras=[],this.fastTrackMedications=[],this.hangingPills=[],this.medicationOrders=[],this.treatmentState="",this.contraindications={},this.sideEffects={},this.tptPrescriptionCount=0,this.lastSideEffectDate=""}setNextVisitInterval(t){this.nextVisitInterval=t}getHangingPills(){return this.hangingPills}getMedicationOrders(){return this.medicationOrders.map(t=>d["a"].getCachedConceptName(t))}getTptPrescriptionCount(){return this.tptPrescriptionCount}getLastSideEffectDate(){return this.lastSideEffectDate}getContraindications(){return this.contraindications}getSideEffects(){return this.sideEffects}getRegimenExtras(){return this.regimenExtras}getPatientRegimens(){return o["a"].getRegimens(this.patientID)}getARVs(){return o["a"].getJson("arv_drugs")}getCustomIngridients(){return o["a"].getCustomIngridients()}getFastTrackMedications(){return this.fastTrackMedications}getTreatmentState(){return this.treatmentState}isFastTrack(){return this.fastTrack}medicationOrdersAvailable(){return!Object(c["isEmpty"])(this.medicationOrders)}shouldPrescribeArvs(){const t=d["a"].getCachedConceptID("Antiretroviral drugs");return this.medicationOrders.includes(t)}shouldPrescribeExtras(){const t=d["a"].getConceptsByCategory("art_extra_medication_order"),e=t.map(t=>this.medicationOrders.includes(t.concept_id));return e.some(Boolean)}getRegimenStarterpack(t,e){const i={weight:e,regimen:t};return d["a"].getJson(`programs/${d["a"].getProgramID()}/regimen_starter_packs`,i)}async getLvpDrugsByType(t,e){return d["a"].getJson(`programs/${d["a"].getProgramID()}/regimens/${e}`,{patient_id:this.patientID,lpv_drug_type:t})}async loadContraindications(){const t=await d["a"].getConceptID("Contraindications"),e=await d["a"].getObs({concept_id:t,person_id:this.patientID});e.forEach(t=>{const e=r["b"].toStandardHisFormat(t.obs_datetime);this.contraindications[e]||(this.contraindications[e]=[]);const i=d["a"].getCachedConceptName(t.value_coded);this.contraindications[e].push(i)})}async loadDrugInduced(){const t=await d["a"].getConceptID("Drug induced"),e=await d["a"].getObs({concept_id:t,person_id:this.patientID});e&&e.forEach(t=>{const e=r["b"].toStandardHisFormat(t.obs_datetime);if(this.lastSideEffectDate||(this.lastSideEffectDate=e),!t.value_drug||!t.value_coded)return;this.sideEffects[e]||(this.sideEffects[e]={}),this.sideEffects[e][t.value_drug]||(this.sideEffects[e][t.value_drug]=[]);const i=d["a"].getCachedConceptName(t.value_coded);this.sideEffects[e][t.value_drug].push(i)})}async loadTptPrescriptionCount(){const t=await d["a"].getJson("tpt_prescription_count",{patient_id:this.patientID,date:this.date});if(t){const e=t.count+1;this.tptPrescriptionCount=e>3?3:e}}async loadFastTrackStatus(){const t=await d["a"].getFirstValueCoded(this.patientID,"Fast track"),e=await d["a"].getConceptID("yes");t&&(this.fastTrack=t===e)}async loadRegimenExtras(t=this.date){const e=await o["a"].getJson(`programs/${o["a"].getProgramID()}/patients/${this.patientID}/dosages`,{date:t});e&&(this.regimenExtras=Object.values(e))}async loadMedicationOrders(){const t=await d["a"].getConceptID("Medication orders"),e=await d["a"].getObs({concept_id:t,date:this.date,person_id:this.patientID,page_size:5});this.medicationOrders=e.map(t=>t.value_coded)}async loadHangingPills(){const t=await d["a"].getAll(this.patientID,"Pills brought")||[];this.hangingPills=t.filter(t=>t.value_numeric>=1&&(!(!t.value_drug||Object(u["g"])(t.obs_datetime)!==Object(u["g"])(this.date))||(t.order||!1))).map(t=>{var e;return(null===t||void 0===t||null===(e=t.order)||void 0===e||null===(e=e.drug_order)||void 0===e?void 0:e.drug_inventory_id)||t.value_drug})}async loadFastTrackMedications(){const t=await s["a"].getLastDrugsReceived(this.patientID),e=t.map(async t=>{const{drug:e}=t,i=await s["a"].getDrugDosages(this.patientID,e.drug_id);return{drug_id:e.drug_id,drug_name:e.name,units:e.units,am:i.am,noon:i.noon,pm:i.pm,frequency:t.frequency}});this.fastTrackMedications=await Promise.all(e)}async loadTreatmentState(){const t={date:this.date},e=await d["a"].getJson(`programs/${d["a"].getProgramID()}/patients/${this.patientID}/status`,t);e&&(this.treatmentState=e["status"])}findAndGroupDrugSideEffects(t){const e={};for(const i in this.sideEffects){const n=this.sideEffects[i];for(const a in n)t.includes(parseInt(a))&&(e[i]||(e[i]=[]),e[i]=[...e[i],...n[a]])}return e}calculatePillsPerDay(t,e,i){return parseFloat(t.toString())+e+i}estimatePackSize(t,e=0){const i=t*this.nextVisitInterval/e;let n=Math.round(i);return n<=0&&(n+=1),n}calculateDosage(t,e){let i=0;return 0===e&&(i=t),0==t&&(i=e),t>0&&e>0&&(i=(t+e)/2),i}calculateEquivalentDosage(t,e){return t+e}calculateDateFromInterval(){const t=new Date(this.date);return t.setDate(t.getDate()+this.nextVisitInterval),r["b"].toStandardHisFormat(t)}getDrugPackSize(t){if(t.pack_size)return t.pack_size;try{return t.barcodes[0].tabs}catch(e){return 30}}getInstructions(t,e,i,n){return`${t} :- Morning: ${e} ${n}, Evening: ${i} ${n}`}toOrderObj(t,e,i,n=0,a=0,s=""){return{drug_inventory_id:t,equivalent_daily_dose:this.calculateEquivalentDosage(n,a),start_date:this.date,auto_expire_date:this.calculateDateFromInterval(),units:i,instructions:this.getInstructions(e,n,a,i),dose:this.calculateDosage(n,a),frequency:s}}async getReasonForRegimenSwitch(){const t=await d["a"].getFirstValueText(this.patientID,"Reason for ARV switch");return t||"N/A"}async createDrugOrder(t){return s["a"].create({encounter_id:this.encounterID,drug_orders:t})}async createHangingPillsObs(t){return this.saveValueTextObs("appointment type",t)}async createRegimenSwitchObs(t){return this.saveValueTextObs("Reason for ARV switch",t)}}}}]);
//# sourceMappingURL=chunk-6dc40fde.35c5fdfb.js.map