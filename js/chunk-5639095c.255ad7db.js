(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5639095c"],{"71c3":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var s=r("1c74");class a extends s["e"]{constructor(){super()}static create(e){return this.postJson("drug_orders",e)}static updateDispensationOrders(e){return this.postJson("dispensations",{program_id:this.getProgramID(),dispensations:e.map(e=>({date:this.getSessionDate(),drug_order_id:e["order_id"],quantity:e["quantity"]}))})}static getDrugOrderHistory(e){return this.getJson("drug_orders",{patient_id:e})}static getDrugOrders(e){return this.getJson("drug_orders",{patient_id:e,date:this.getSessionDate(),program_id:this.getProgramID()})}static getAllDrugOrders(e,t=1e3){return this.getJson("drug_orders",{patient_id:e,program_id:s["e"].getProgramID(),page_size:t})}static getLastDrugsReceived(e){return this.getJson(`patients/${e}/last_drugs_received`,{date:this.getSessionDate(),program_id:this.getProgramID()})}static getDrugDosages(e,t,r=this.getSessionDate()){const s={drug_id:t,date:r};return this.getJson(`programs/${this.getProgramID()}/patients/${e}/drug_doses`,s)}static getOrderByPatient(e,t){return this.getJson("/drug_orders",{patient_id:e,program_id:this.getProgramID(),...t})}}},"8ee8":function(e,t,r){"use strict";r.d(t,"b",(function(){return o})),r.d(t,"a",(function(){return d}));var s=r("cc6f"),a=r("71c3"),i=r("2ef0"),n=r("9283");const o={"Once a day (OD)":1,"Twice a day (BD)":2,"Three a day (TDS)":3,"Four times a day (QID)":4,"Five times a day (5X/D)":5,"Six times a day (Q4HRS)":6,"In the morning (QAM)":.5,"Once a week (QWK)":.14,"Once a month":.03,"Twice a month":.071};class d extends s["a"]{constructor(e,t){super(e,25,t)}ttvDrugObj(){return{drug_inventory_id:609,dose:.5,equivalent_daily_dose:.5,frequency:"Once a day (od)",start_date:this.date,auto_expire_date:this.date,instructions:"Once a day",units:"ml"}}async updateTTvOrder(){const e=await this.dispenseTTV();if(!Object(i["isEmpty"])(e)){const t=e[0].order_id;return a["a"].updateDispensationOrders([{order_id:t,quantity:1}])}throw"Unable to dispense"}dispenseTTV(){return this.createOrders([this.ttvDrugObj()])}createOrders(e){return a["a"].create({drug_orders:e,encounter_id:this.getEncounterID()})}async submitTreatment(e){await this.createEncounter();const t=await this.createOrders(e.map(e=>this.buildDrugOrderObj(e))),r=new s["a"](this.patientID,54,this.providerID);await r.createEncounter(),e.forEach(e=>{const r=o[e.frequency]*e.duration;t.forEach(t=>{t.drug_inventory_id===e.id&&(t.quantity=r)})}),await a["a"].updateDispensationOrders(t)}buildDrugOrderObj(e){const t=new Date(this.date),r=t.setDate(t.getDate()+parseInt(""+e.duration)),s=e.dose||o[e.frequency],a=parseFloat(s)*o[e.frequency];return{drug_inventory_id:e.id,dose:s,equivalent_daily_dose:a,frequency:e.frequency,start_date:this.date,auto_expire_date:n["b"].toStandardHisFormat(new Date(r)),instructions:e.drug_name+":"+e.dose+" "+e.units+" "+e.frequency+"days",units:e.units}}}},dc52:function(e,t,r){"use strict";r.r(t);var s=r("7a23");function a(e,t,r,a,i,n){const o=Object(s["resolveComponent"])("his-standard-form"),d=Object(s["resolveComponent"])("ion-page");return Object(s["openBlock"])(),Object(s["createBlock"])(d,null,{default:Object(s["withCtx"])(()=>[Object(s["createVNode"])(o,{fields:e.formFields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}var i=r("7365"),n=r("d95e"),o=r("cc6f");class d extends o["a"]{constructor(e,t){super(e,54,t)}saveNoDispensationObs(){return this.saveValueTextObs("Tetanus toxoid vaccine","Not dispensed")}}var c=r("8ee8"),u=r("8a30"),p=Object(s["defineComponent"])({components:{IonPage:u["D"]},mixins:[i["a"]],data:()=>({formFields:[],service:{}}),watch:{ready:{handler(e){e&&(this.formFields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){await t["prescription"].action(),this.nextTask()},getFields(){return[{id:"prescription",helpText:"Prescription",type:n["b"].TT_YES_NO,validation:e=>e?null:["Value is required"],computedValue:e=>e.match(/true/i)?{action:async()=>{const e=new c["a"](this.patientID,this.providerID);await e.createEncounter(),await e.updateTTvOrder()}}:{action:async()=>{const e=new d(this.patientID,this.providerID);await e.createEncounter(),await e.saveNoDispensationObs()}},options:()=>[{label:"TTV has been given today",values:[{label:"yes",value:"true"},{label:"no",value:"false"}]}]}]}}}),g=r("6b0d"),h=r.n(g);const l=h()(p,[["render",a]]);t["default"]=l}}]);
//# sourceMappingURL=chunk-5639095c.255ad7db.js.map