{"version":3,"sources":["webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/components/DataViews/VLReminderModal.vue","webpack:///./src/components/DataViews/SideEffectsModal.vue","webpack:///./src/apps/ART/views/encounters/Consultation.vue","webpack:///./src/components/DataViews/VLReminderModal.vue?b147","webpack:///./src/components/DataViews/SideEffectsModal.vue?7f52"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","ConsultationService","AppEncounterService","constructor","patientID","providerID","getFamilyPlanningMethods","getJson","obs","ObservationService","getFirstObs","value_text","match","obsInValidPeriod","getDrugSideEffects","getProgramID","date","getClient","getFirstValueCoded","req","id","isEmpty","lastScreened","duration","dayjs","diff","secondCheck","getFirstValueText","isTL","value_coded","tlObs","fpObs","drugs","uniqueDrugs","forEach","drug","drug_inventory_id","familyPlanningMethods","label","values","familyPlanningLogic","selected","map","data","value","isChecked","disabled","StockService","Service","drugId","stock","length","reduce","accum","pharm","current_quantity","DRUG_PACK_SIZES","DispensationService","drugHistory","currentDrugOrder","useDrugManagement","setIsDrugManagementEnabled","isEnabled","ART_PROP","drugManagementEnabled","getDrugHistory","getCurrentOrder","buildDispensations","orderId","tabs","totalPacks","dispensations","i","push","quantity","saveDispensations","postJson","void","res","DrugOrderService","getDrugOrderHistory","e","console","warn","getDrugOrders","d","fetchAvailableDrugStock","drug_id","Promise","all","getDrugPackSizes","calcCompletePack","units","drugOrderBarcodes","barcodes","sort","a","b","parseInt","completePack","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","_withId","_withScopeId","_pushScopeId","_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_popScopeId","_component_ion_title","_component_ion_toolbar","_component_ion_header","_component_ion_content","_component_ion_button","_component_ion_footer","_Fragment","_createVNode","default","_","style","overflowY","background","_toDisplayString","artStartDate","monthsOnART","lastOrder","currentRegimen","regimenStartDate","slot","color","size","onClick","$event","closeModal","defineComponent","name","props","VLData","type","Object","required","HisDate","toStandardHisDisplayFormat","earliest_start_date","period_on_art","last_order_date","current_regimen","date_started","methods","val","modalController","dismiss","content","components","IonHeader","IonToolbar","IonTitle","IonContent","IonFooter","IonButton","__exports__","ARTLabService","milestone","concept","getConceptID","coded","class","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_component_ion_label","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_radio","_component_ion_radio_group","_component_ion_row","_component_ion_grid","height","_renderList","sides","index","key","selectSideEffect","detail","activeIndex","modelValue","_createCommentVNode","postSideEffects","allSelected","sideEffects","Array","computed","filter","side","mounted","extendedLabsEnabled","appActivities","specimens","reasons","IonLabel","IonList","IonItem","IonRadioGroup","IonRow","mixins","AdherenceMixinVue","HisStandardForm","currentWeight","weightTrail","customRegimens","labOrders","weightLossPercentageNum","lostTenPercentBodyWeight","CxCaEnabled","CxCaStartAge","CxCaMaxAge","DueForCxCa","currentlyPregnant","patientHitMenopause","hasPregnancyObsToday","autoSelect3HP","labOrderFieldContext","consultation","prescription","dispensation","completed3HP","hasTbHistoryObs","allergicToSulphur","TBSuspected","presentedTBSymptoms","askAdherence","lastDrugsReceived","sideEffectsHistory","onPermanentFPMethods","reasonForDecliningTPTObs","malawiSideEffectReasonObs","otherSideEffectReasonObs","wasTransferredIn","dateStartedArt","clientHadAHysterectomy","isNoneClientPatient","tptStatus","customDrugs","watch","ready","handler","this","PrescriptionService","getFields","immediate","f","computedData","encounter","createEncounter","toastWarning","computedObs","resolveObs","secondaryObs","savedObs","saveObservationList","drugObs","saveAdherence","toastSuccess","refer_to_clinician","gotoPatientDashboard","nextTask","formData","drugFilters","tptHistory","routine_tb_therapy","RegimenService","getCustomIngridients","includes","other","receivedArvs","transferLetterObs","toStandardHisFormat","obs_datetime","getDate","dateStarted","getFirstValueDatetime","action","infoActionSheet","vals","ProgramService","getPatientVLInfo","eligibile","modal","create","component","VLReminderModal","backdropDismiss","cssClass","componentProps","present","onDidDismiss","launchOrderSelection","waitForVL","orderService","observations","buildDefferedOrder","canScreenCxCa","age","patient","getAge","isFemale","pregnancyEligible","isChildBearing","showCurrentContraceptionMethods","isPregnant","isANCclient","showNewContraceptionMethods","isOnTubalLigation","pregnant_breastfeeding","inArray","p","current_fp_methods","listData","infoAlert","noneIndex","findIndex","currentIndex","disablePrescriptions","buildMedicationOrders","options","o","buildValueCoded","priscribed","medications","declinedFPM","fp_methods","riskOfUnplannedPregnancy","reason_for_no_fpm","showOtherSideEffects","side_effects","hasTBSymptoms","tb_side_effects","attr","sideEffectReasons","getSideEffectsReasons","undefined","drugInducedConcept","ConceptService","getCachedConceptID","isOtherReason","reason","r","allYes","s","SideEffectsModalVue","getFPMethods","exclusionList","preChecked","filtered","method","getOptions","preValues","preValue","find","yesNoOptions","getContraindications","contraIndications","getConceptsByCategory","getOtherContraindications","lastElement","pop","getTBSymptoms","getReasonsForNoCxcaOptions","c","runAppendOptionParams","prechecked","checkedOptions","appendOptionParams","appendedOptions","option","didCompleted3HP","tptAutoSelectionMode","curOption","is3HPorTPT","ipt3HPConflict","checkedDrugs","item","noTpTPresent","every","Boolean","optionsActionSheet","role","buildValueText","selection","medicationOrderOptions","completedTpt","everTakenTpt","tpt","disableOption","text","description","show","toOption","tb_treatment","completed","OrderService","formatLabs","Store","get","getSuspendedProgram","proxyID","helpText","FieldType","TT_MULTIPLE_SELECT","init","async","isGuardian","PatientTypeService","isDrugRefillPatient","Number","getRecentWeight","getTptTreatmentStatus","validation","Validation","computedValue","v","tag","onValueUpdate","list","on3HPValueUpdate","cd","l","condition","exitsForm","generateDateFields","getTransferInStatus","getDateStartedArt","minDate","maxDate","computeValue","setDate","buildValueDate","estimation","allowUnknown","getARVs","config","showKeyboard","TT_NEXT_VISIT_INTERVAL_SELECTION","nextAppointment","intervals","setNextVisitInterval","calculateDateFromInterval","TT_DRUG_TRANSFER_IN","validateSeries","pillsBrought","some","drugID","buildObs","drug_interval","child","date_last_received_arvs","previous_arvs_received","drugName","prevValue","qty","rmndr","TT_LAB_ORDERS","getVlLabData","unload","checkVLReminder","noGivenResults","result_given","alertConfirmation","enc","result","resultIds","encounterID","encounter_id","saveObs","resultID","onload","fieldContext","printOrder","orderID","PatientPrintoutService","printLabOrderLbl","hiddenFooterBtns","footerBtns","visible","getTLObs","TT_MULTIPLE_YES_NO","anyEmpty","concat","TT_WEIGHT_CHART","getWeightHistory","getWeightLossPercentageFromTrail","bmi","getBMI","x","y","weight","TT_TEXT_BANNER","mapStrToOptions","disableFPMethods","checked","TT_SELECT","offer_contraceptives","cervicalCancerScreeningEnabled","start","end","cervicalCancerScreeningAgeBounds","clientDueForCxCa","clientHasHadAHysterectomy","offer_cxca","getBirthdate","getSessionDate","reason_for_no_cxca","isEstimate","buildValueDateEstimated","estimationFieldType","EstimationFieldType","MONTH_ESTIMATE_FIELD","TT_DATA_TABLE","columns","table","thTxt","rows","keys","k","tdDate","td","drug_induced","cur","getPreviousDrugs","beforeNext","buildSideEffectObs","onValue","checkIfWeightLossIsControlled","onConditionFalse","TT_NOTE","other_side_effects","on_tb_treatment","defaultValue","hasTreatmentHistoryObs","test","TT_ADHERENCE_INPUT","getTptDrugs","date_started_tpt","titles","getFacilities","isFilterDataViaApi","yesNoUnknownOptions","getAdherenceFields","UserService","isNurse","currentOptions","onClickComponentEvents","refreshOptions","btnEvent","btnOutput","patientId","onTbTreatment","orders","order","pageSize","params","getYearField","showUnknown","primaryFunctions","appearInSummary","TT_TEXT","customKeyboard","getMonthField","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","getDefaultDate","form","field","datePart","year","month","day","split","validateMinMax","min","Date","max","refDate","fullDate","yearValue","monthValue","dayValue","dateIsEstimated","yearID","monthID","dayID","ageEstimateID","durationEstimateID","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","buildHelpTextDate","part","parts","partValues","dpart","wl","join","updateHelpTextOnValue","toString","StandardValidations","isNaN","minYear","getYear","summaryMapValue","summaryLabel","ref","keyboardActions","valueEstimateCondition","estimateType","conditions","ageEstimateRegex","subtract","AGE_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","AdverseEffectsCategories","nextVisitInterval","fastTrack","regimenExtras","fastTrackMedications","hangingPills","medicationOrders","treatmentState","contraindications","tptPrescriptionCount","lastSideEffectDate","getHangingPills","getMedicationOrders","getCachedConceptName","getTptPrescriptionCount","getLastSideEffectDate","getSideEffects","getRegimenExtras","getPatientRegimens","getRegimens","getFastTrackMedications","getTreatmentState","isFastTrack","medicationOrdersAvailable","shouldPrescribeArvs","arvs","shouldPrescribeExtras","extras","extrasAvailable","concept_id","getRegimenStarterpack","regimenCode","patientWeight","regimen","contraindication","getObs","drugInduced","value_drug","count","yes","meds","pills","getAll","value_numeric","drug_order","getLastDrugsReceived","withDosages","dosage","getDrugDosages","am","noon","pm","frequency","findAndGroupDrugSideEffects","allSideEffects","calculatePillsPerDay","parseFloat","estimatePackSize","pillsPerDay","packSize","packs","roundedPacks","Math","round","calculateDosage","morningTabs","eveningTabs","dose","calculateEquivalentDosage","dateObj","getDrugPackSize","pack_size","getInstructions","toOrderObj","drugOrders","response","saveValueTextObs","reasonForSwitch","facilities","LocationService","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","getVillagesByName","page","getLandmarks","landmarks","landmark","code"],"mappings":"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","file":"js/chunk-16596dfe.094c5963.js","sourcesContent":["import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport async function getVillagesByName(name='a', page=1): Promise<Option[]> {\n    const villages = await LocationService.getVillagesByName(name, page)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport function getLandmarks(): Option[] {\n    const landmarks = [\n        'Catholic Church',\n        'CCAP',\n        'Seventh Day',\n        'Mosque',\n        'Primary School',\n        'Borehole',\n        'Secondary School',\n        'College',\n        'Market',\n        'Football Ground',\n        'Other'\n    ]\n\n    return landmarks.map(landmark =>({\n        label: landmark,\n        value: landmark,\n        other: {\n            code: landmark\n        }\n    }))\n}\n","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-546674a2\")\n\n_pushScopeId(\"data-v-546674a2\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Side effects suspected causes\")\nconst _hoisted_2 = { style: {} }\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"div\", { class: \"side-title\" }, \" Select reason \", -1)\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"p\", null, \"Current Medication\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createVNode(\"p\", null, \"Previous Medication\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Other, not drug related\")\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Drug side effect\")\nconst _hoisted_8 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" Close \")\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\" Save \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_label = _resolveComponent(\"ion-label\")\n  const _component_ion_item = _resolveComponent(\"ion-item\")\n  const _component_ion_list = _resolveComponent(\"ion-list\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withId(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: { overflowY: 'hidden', background: 'grey' } }, {\n      default: _withId(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withId(() => [\n                _createVNode(_component_ion_col, { size: \"4\" }, {\n                  default: _withId(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'78vh'} }, {\n                      default: _withId(() => [\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.sides, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            key: data,\n                            onClick: $event => (_ctx.selectSideEffect(index)),\n                            detail: true,\n                            style: _ctx.activeIndex === index ? 'color: green': 'color: black'\n                          }, {\n                            default: _withId(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withId(() => [\n                                  _createTextVNode(_toDisplayString(data.label), 1 /* TEXT */)\n                                ]),\n                                _: 2\n                              }, 1024)\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\", \"style\"]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, { style: {overflowY: 'auto', height:'78vh'} }, {\n                  default: _withId(() => [\n                    _createVNode(\"div\", _hoisted_2, [\n                      _createVNode(_component_ion_list, null, {\n                        default: _withId(() => [\n                          (_ctx.activeIndex !== null)\n                            ? (_openBlock(), _createBlock(_component_ion_radio_group, {\n                                key: 0,\n                                modelValue: _ctx.sides[_ctx.activeIndex]['reason'],\n                                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (_ctx.sides[_ctx.activeIndex]['reason'] = $event))\n                              }, {\n                                default: _withId(() => [\n                                  _hoisted_3,\n                                  _hoisted_4,\n                                  (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.drugs, (drug, i) => {\n                                    return (_openBlock(), _createBlock(_component_ion_item, { key: i }, {\n                                      default: _withId(() => [\n                                        _createVNode(_component_ion_label, null, {\n                                          default: _withId(() => [\n                                            _createTextVNode(_toDisplayString(drug.drug.name), 1 /* TEXT */)\n                                          ]),\n                                          _: 2\n                                        }, 1024),\n                                        _createVNode(_component_ion_radio, {\n                                          slot: \"start\",\n                                          value: drug.drug_inventory_id\n                                        }, null, 8, [\"value\"])\n                                      ]),\n                                      _: 2\n                                    }, 1024))\n                                  }), 128 /* KEYED_FRAGMENT */)),\n                                  _hoisted_5,\n                                  _createVNode(_component_ion_item, null, {\n                                    default: _withId(() => [\n                                      _createVNode(_component_ion_label, null, {\n                                        default: _withId(() => [\n                                          _hoisted_6\n                                        ]),\n                                        _: 1\n                                      }),\n                                      _createVNode(_component_ion_radio, {\n                                        slot: \"start\",\n                                        value: \"other\"\n                                      })\n                                    ]),\n                                    _: 1\n                                  }),\n                                  _createVNode(_component_ion_item, null, {\n                                    default: _withId(() => [\n                                      _createVNode(_component_ion_label, null, {\n                                        default: _withId(() => [\n                                          _hoisted_7\n                                        ]),\n                                        _: 1\n                                      }),\n                                      _createVNode(_component_ion_radio, {\n                                        slot: \"start\",\n                                        value: \"drug\"\n                                      })\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              }, 8, [\"modelValue\"]))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _hoisted_8\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.closeModal,\n              slot: \"end\",\n              color: \"danger\"\n            }, {\n              default: _withId(() => [\n                _hoisted_9\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postSideEffects,\n              slot: \"end\",\n              disabled: !_ctx.allSelected\n            }, {\n              default: _withId(() => [\n                _hoisted_10\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64 /* STABLE_FRAGMENT */))\n})","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport { FooterBtnEvent, Option } from \"@/components/Forms/FieldInterface\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { alertConfirmation, infoAlert, toastSuccess, toastWarning } from \"@/utils/Alerts\";\nimport HisDate from \"@/utils/Date\";\nimport { findIndex, isEmpty, find } from \"lodash\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { UserService } from \"@/services/user_service\";\nimport { OrderService } from \"@/services/order_service\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport AdherenceMixinVue from \"./AdherenceMixin.vue\";\nimport { modalController } from \"@ionic/vue\";\nimport VLReminderModal from \"@/components/DataViews/VLReminderModal.vue\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { ARTLabService } from \"../../services/lab_service\";\nimport { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport SideEffectsModalVue from \"@/components/DataViews/SideEffectsModal.vue\";\nimport ART_PROP from \"@/apps/ART/art_global_props\";\nimport { generateDateFields, EstimationFieldType } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { PatientTypeService } from \"../../services/patient_type_service\";\nimport { PrescriptionService } from \"../../services/prescription_service\";\nimport { DispensationService } from \"../../services/dispensation_service\";\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\";\nimport Store from \"@/composables/ApiStore\"\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { RegimenService } from \"@/services/regimen_service\";\n\nexport default defineComponent({\n  mixins: [AdherenceMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    fields: [] as any,\n    currentWeight: -1 as any,\n    weightTrail: [] as any,\n    customRegimens: [] as any,\n    labOrders: [] as any,\n    weightLossPercentageNum: 0 as number,\n    lostTenPercentBodyWeight: false as boolean,\n    CxCaEnabled: false as boolean,\n    CxCaStartAge: -1 as number,\n    CxCaMaxAge: -1 as number,\n    DueForCxCa: false as boolean,\n    currentlyPregnant: false as boolean,\n    patientHitMenopause: false as boolean,\n    hasPregnancyObsToday: false as boolean,\n    autoSelect3HP: false as boolean,\n    labOrderFieldContext: {} as any,\n    consultation: {} as any,\n    prescription: {} as any,\n    dispensation: {} as any,\n    completed3HP: false as boolean,\n    hasTbHistoryObs: false,\n    allergicToSulphur: false as boolean | null,\n    TBSuspected: false,\n    presentedTBSymptoms: false,\n    askAdherence: false as boolean,\n    lastDrugsReceived: [] as any,\n    sideEffectsHistory: {} as any,\n    onPermanentFPMethods: false,\n    reasonForDecliningTPTObs: {} as any,\n    malawiSideEffectReasonObs: [] as any,\n    otherSideEffectReasonObs: [] as any,\n    wasTransferredIn: false as boolean,\n    dateStartedArt: '' as string,\n    clientHadAHysterectomy: false as any,\n    isNoneClientPatient: false as boolean,\n    tptStatus: {} as Record<string, any>,\n    customDrugs: [] as any\n  }),\n  watch: {\n    ready: {\n      handler(value: boolean) {\n        if (value) {\n          this.consultation = new ConsultationService(this.patientID, this.providerID)\n          this.prescription = new PrescriptionService(this.patientID, this.providerID)\n          this.dispensation = new DispensationService(this.patientID, this.providerID)\n          this.fields = this.getFields();\n        }\n      },\n      immediate: true\n    },\n  },\n  methods: {\n    async onFinish(f: any, computedData: any) {\n      const encounter = await this.consultation.createEncounter();  \n\n      if (!encounter) return toastWarning(\"Unable to create encounter\");\n\n      const computedObs = await this.resolveObs(computedData, 'consultation')\n\n      const secondaryObs = (await Promise.all([\n        ...this.malawiSideEffectReasonObs,\n        ...this.otherSideEffectReasonObs,\n        this.reasonForDecliningTPTObs\n      ])).filter((d) => !isEmpty(d))\n\n      const savedObs = await this.consultation.saveObservationList([\n        ...computedObs, ...secondaryObs\n      ])\n\n      if (!isEmpty(this.drugObs) && !this.isNoneClientPatient) await this.saveAdherence();\n\n      if (!savedObs) return toastWarning(\"Unable to save patient observations\");\n\n      toastSuccess(\"Observations and encounter created!\");\n\n      if (f.refer_to_clinician && f.refer_to_clinician.value ==='Yes') {\n        this.gotoPatientDashboard()\n        return\n      }\n      this.nextTask();\n    },\n    async getTptDrugs(formData: any){\n      const drugFilters: string[] = []\n      const tptHistory = formData.routine_tb_therapy.value\n      if (isEmpty(this.customDrugs)) {\n        this.customDrugs = await RegimenService.getCustomIngridients()\n      }\n      if(tptHistory.match(/ipt/i)) {\n        drugFilters.push(\"INH or H (Isoniazid 300mg tablet)\")\n      } else if(tptHistory.includes(\"3HP (RFP + INH)\")){\n        drugFilters.push('INH or H (Isoniazid 300mg tablet)')\n        drugFilters.push('Rifapentine (150mg)')\n      } else if(tptHistory.includes(\"INH 300 / RFP 300 (3HP)\")){\n        drugFilters.push(\"INH 300 / RFP 300 (3HP)\")\n      }\n      return !isEmpty(drugFilters) \n        ? this.customDrugs.filter((drug: any) => drugFilters.includes(drug.name))\n          .map((drug: any) => ({\n            label: drug.name,\n            value: '',\n            other: drug\n          }))\n        : []\n    },\n    async getTransferInStatus() {\n      const receivedArvs = await ConsultationService.getFirstValueCoded(\n        this.patientID, 'Ever received ART'\n      )\n      const transferLetterObs = await ConsultationService.getFirstObs(\n        this.patientID, 'Has transfer letter'\n      )\n      const date = transferLetterObs ? HisDate.toStandardHisFormat(transferLetterObs.obs_datetime) : ''\n      return receivedArvs \n        && receivedArvs.match(/yes/i) \n        && transferLetterObs \n        && `${transferLetterObs.value_coded}`.match(/yes/i)\n        && date === this.consultation.getDate()\n    },\n    async getDateStartedArt() {\n      const dateStarted = await ConsultationService.getFirstValueDatetime(this.patientID, 'Date ART started')\n      return dateStarted ? HisDate.toStandardHisFormat(dateStarted) : ''\n    },\n    async checkIfWeightLossIsControlled(val: any) {\n      if (this.lostTenPercentBodyWeight\n        && `${val.label}`.match(/malnutrition/i)\n        && `${val.value}`.match(/no/i)) {\n        const action = await infoActionSheet(\n          'Recommendation',\n          `Patient's weight has dropped by ${this.weightLossPercentageNum}% , is this controlled weight loss??`,\n          'Please verify',\n          [\n            { name: 'Confirm weight loss', slot: 'start', color: 'success'},\n            { name: 'Confirm controlled', slot: 'end', color: 'primary'}\n          ]\n        )\n        val.value = action === 'Confirm weight loss' ? 'Yes' : 'No'\n      }\n    },\n    async checkVLReminder() {\n      const vals = await ProgramService.getPatientVLInfo(this.patientID);\n      if (vals.eligibile === true) {\n        const modal = await modalController.create({\n          component: VLReminderModal,\n          backdropDismiss: false,\n          cssClass: \"large-modal\",\n          componentProps: { VLData: vals },\n        });\n        modal.present();\n        const { data } = await modal.onDidDismiss();\n        switch (data) {\n          case \"order\":\n            await this.labOrderFieldContext.launchOrderSelection();\n            break;\n          case \"wait\":\n            await this.waitForVL();\n            break;\n          case \"later\":\n            break;\n          default:\n            break;\n        }\n      }\n    },\n    async waitForVL(milestone: any = null) {\n      const orderService = new ARTLabService(this.patientID, this.providerID);\n      const encounter = await orderService.createEncounter();\n      const observations = await orderService.buildDefferedOrder(milestone);\n      if (!encounter) return toastWarning(\"Unable to create encounter\");\n      await orderService.saveObservationList(observations);\n    },\n    canScreenCxCa() {\n      const age = this.patient.getAge()\n      return this.patient.isFemale()\n        && this.DueForCxCa\n        && this.CxCaEnabled \n        && age >= this.CxCaStartAge \n        && age <= this.CxCaMaxAge\n        && !this.clientHadAHysterectomy\n    },\n    pregnancyEligible() {\n      return this.patient.isChildBearing() && !this.onPermanentFPMethods\n    },\n    showCurrentContraceptionMethods(formData: any) {\n      return (this.pregnancyEligible()\n        && !this.patientHitMenopause \n        && !this.isPregnant(formData))\n        && !this.isANCclient()\n    },\n    showNewContraceptionMethods(formData: any) {\n      return (\n        this.pregnancyEligible() &&\n        !this.patientHitMenopause &&\n        !this.isPregnant(formData) &&\n        !this.isOnTubalLigation(formData)\n        && !this.isANCclient()\n      )\n    },\n    isPregnant(formData: any) {\n      if (formData.pregnant_breastfeeding) {\n        return this.inArray(formData.pregnant_breastfeeding, \n          p => p.label === 'Pregnant' && p.value === 'Yes'\n        )\n      }\n      return this.currentlyPregnant\n    },\n    isOnTubalLigation(formData: any) {\n      return this.inArray(formData.current_fp_methods, d => d.value === \"TUBAL LIGATION\")\n    },\n    async disableFPMethods(listData: Array<Option>, value: Option) {\n      if (value.isChecked && value.label === \"NONE\") {\n        return listData.map((i) => {\n          if (i.label != \"NONE\") {\n            i.isChecked = false;\n            i.disabled = false;\n          }\n          return i;\n        });\n      } else if (value.label != \"NONE\" && value.isChecked) {\n        if (value.label.match(/condom/gi)) infoAlert(\"Combine with other modern methods of family planning\") \n        const noneIndex = findIndex(listData, { label: \"NONE\" });\n        listData[noneIndex].isChecked = false;\n        const vals = this.consultation.familyPlanningMethods(\n          value.label,\n          listData\n        );\n        const currentIndex = findIndex(vals, { label: value.label });\n        vals[currentIndex].isChecked = true;\n        return vals;\n      } else {\n        return listData.map((i) => {\n          i.disabled = false;\n          return i;\n        });\n      }\n    },\n    disablePrescriptions(listData: Array<Option>, value: Option) {\n      if (value.isChecked && value.label === \"NONE OF THE ABOVE\") {\n        return listData.map((i) => {\n          if (i.label != \"NONE OF THE ABOVE\") i.isChecked = false;\n          return i;\n        });\n      } else if (value.label != \"NONE OF THE ABOVE\" && value.isChecked) {\n        const noneIndex = findIndex(listData, { label: \"NONE OF THE ABOVE\" });\n        listData[noneIndex].isChecked = false;\n      }\n      return listData;\n    },\n    buildMedicationOrders(options: Option[]) {\n      if (this.inArray(options, o => o.label === \"NONE OF THE ABOVE\")) {\n        return this.consultation.buildValueCoded('Prescribe drugs', 'No')\n      }\n      const priscribed = this.consultation.buildValueCoded('Prescribe drugs', 'Yes')\n      const medications = options.map( o => this.consultation.buildValueCoded(\n        'Medication orders', o.label\n      ))\n      return [priscribed, ...medications]\n    },\n    declinedFPM(formData: any) {\n      return this.inArray(formData.fp_methods, d => d.value === \"NONE\")\n        && this.inArray(formData.current_fp_methods, d => d.value === \"NONE\")\n    },\n    riskOfUnplannedPregnancy(formData: any) {\n      return formData.reason_for_no_fpm.value === \"At risk of unplanned pregnancy\"\n    },\n    showOtherSideEffects(formData: any) {\n      return this.inArray(formData.side_effects, d => d.label === \"Other\" && d.value === \"Yes\")\n    },\n    hasTBSymptoms(formData: any) {\n      this.presentedTBSymptoms = this.inArray(formData.tb_side_effects, d => d.value === \"Yes\")\n      return this.presentedTBSymptoms\n    },\n    async buildSideEffectObs(data: Option[], attr: 'malawiSideEffectReasonObs' | 'otherSideEffectReasonObs'): Promise<boolean> {\n      const sideEffectReasons  = await this.getSideEffectsReasons(data)\n\n      this[attr] = [] //Clear this incase side effects no longer exist\n  \n      if (sideEffectReasons === undefined) return false\n\n      if (sideEffectReasons != -1) {\n        const drugInducedConcept = ConceptService.getCachedConceptID('Drug induced', true)\n        const isOtherReason = (reason: string) => `${reason}`.match(/other|drug/i) ? true : false\n        this[attr] = sideEffectReasons.map((r: any) => ({\n          'concept_id': drugInducedConcept,\n          'value_coded': ConceptService.getCachedConceptID(r.label, true),\n          'value_text': isOtherReason(r.reason) ? 'Past medication history' : null,\n          'value_drug': !isOtherReason(r.reason) ? r.reason : null //Reason is drug ID number if caused by specific drug\n        }))\n      }\n      return true\n    },\n    async getSideEffectsReasons(sideEffects: Option[]) {\n      const allYes = sideEffects.filter(s => !(`${s.label}`.match(/other/i)) && s.value==='Yes')\n      if (allYes.length > 0) {\n        const modal = await modalController.create({\n          component: SideEffectsModalVue,\n          backdropDismiss: false,\n          cssClass: \"large-modal\",\n          componentProps: { sideEffects: allYes, drugs: this.lastDrugsReceived },\n        });\n        modal.present();\n        const { data } = await modal.onDidDismiss();\n        return data;\n      }\n      return -1\n    },\n    getFPMethods(exclusionList: string[] = [], preChecked: Array<Option>) {\n      const methods = this.consultation.getFamilyPlanningMethods();\n      const filtered = methods.filter(\n        (data: string) => !exclusionList.includes(data)\n      )\n      return filtered.map((method: any) => ({\n        label: method,\n        value: method,\n        isChecked: preChecked.map((i) => i.label).includes(method),\n      }))\n    },\n    getOptions(options: string[], preValues: Array<Option>) {\n      return options.map((data: any) => {\n        const preValue = find(preValues, { label: data });\n        return {\n          label: data,\n          value: preValue ? preValue.value : \"\",\n          other: {\n            values: this.yesNoOptions(),\n          },\n        };\n      });\n    },\n    getContraindications(preValues: Array<Option>) {\n      const contraIndications = ConceptService.getConceptsByCategory(\n        \"contraindication\", true\n      ).map((data) => data.name);\n      return this.getOptions([...contraIndications, \"Other\"], preValues);\n    },\n    getOtherContraindications(preValues: Array<Option>) {\n      const contraIndications = ConceptService.getConceptsByCategory(\n        \"side_effect\", true\n      ).map((data) => data.name);\n      /**\n       * HACK ALERT!!!\n       * Dont want to show Other (Specify) as a last element\n       */\n      const lastElement = contraIndications.pop()\n      return this.getOptions([...contraIndications, \"Other (Specify)\", `${lastElement}`], preValues)\n    },\n    getTBSymptoms(preValues: Array<Option>) {\n      const contraIndications = ConceptService.getConceptsByCategory(\n        \"tb_symptom\", true\n      ).map((data) => data.name)\n      return this.getOptions([...contraIndications], preValues);\n    },\n    getReasonsForNoCxcaOptions() {\n      return ConceptService.getConceptsByCategory(\"reason_for_no_cxca\")\n        .map((c: any) => ({\n          label: c.name,\n          value: c.name,\n          other: {\n            c\n          }\n        }))\n    },\n    runAppendOptionParams(options: Option[], prechecked: Option[]) {\n      const checkedOptions = prechecked.filter(o => o.isChecked).map(o => o.label)\n      return options.map(o => {\n        if (typeof o?.other?.appendOptionParams === 'function') {\n          const appendedOptions = o?.other?.appendOptionParams()\n          if (typeof appendedOptions === 'object')  {\n            const option: Option = {\n              label: o.label,\n              value: o.value,\n              other: o.other\n            }\n            if (appendedOptions.isChecked) {\n              option.isChecked = appendedOptions.isChecked\n              delete appendedOptions.isChecked\n            } else {\n              option.isChecked = checkedOptions.includes(o.label)\n            }\n            return { ...option, ...appendedOptions}\n          }\n        }\n        return o\n      })\n    },\n    /**\n     * Checks formdata and previous observation state if a patient completed 3HP\n     */\n    didCompleted3HP(formData: any) {\n      return !this.completed3HP \n        ? formData.routine_tb_therapy \n        && formData.routine_tb_therapy.value.match(/complete/i) ? true : false\n        : true\n    },\n    /**\n     * Checks if 3HP can be auto selected based on FormData and \n     * if  it is enabled in global preferences\n     */\n    tptAutoSelectionMode(formData: any) {\n      return this.autoSelect3HP && !this.didCompleted3HP(formData)\n    },\n    /**\n     * Provides validations for TPT selections and value updates\n     */\n    async on3HPValueUpdate(listData: Option[], curOption: Option, formData: any) {\n      const is3HPorTPT = (i: Option) => i.label.match(/IPT|3HP/i) ? true : false\n\n      //Checks if IPT and 3HP are both selected and returns a boolean\n      const ipt3HPConflict: boolean = (() => {\n        const checkedDrugs = listData.reduce(\n        (checkedDrugs: string[], item: Option) => {\n          if (is3HPorTPT(item) \n            && !(item.label in checkedDrugs) \n            && item.isChecked) {\n            checkedDrugs.push(item.label)\n          }\n          return checkedDrugs\n        }, [])\n        return checkedDrugs.includes('IPT') \n          && (checkedDrugs.includes('3HP (RFP + INH)') \n          || checkedDrugs.includes('INH 300 / RFP 300 (3HP)'))\n      })()\n\n      // check if no tpt is present\n      const noTpTPresent = is3HPorTPT(curOption) \n        && listData.filter(i => is3HPorTPT(i)).map(i => !i.isChecked)\n          .every(Boolean)\n  \n      if (noTpTPresent && this.tptAutoSelectionMode(formData)) {\n        const modal = await optionsActionSheet(\n          'Reasons for declining TPT', \n          '',\n          [\n            'Patient declined',\n            'Side-effects (previous or current)',\n            'Stock-out',\n            'Starting TB treatment',\n            'Other'\n          ],\n          [\n            { name : 'Done', slot: 'start', role: 'action'}\n          ]\n        )\n        this.reasonForDecliningTPTObs = this.consultation.buildValueText(\n          'Other reason for not seeking services', modal.selection\n        )\n      } else {\n        this.reasonForDecliningTPTObs = {}\n      }\n\n      if (ipt3HPConflict) {\n        const action = await infoActionSheet(\n          \"IPT / 3HP conflict\",\n          \"IPT and 3HP can NOT be prescribed together\",\n          \"Please pick either one\",\n          [\n            { name: \"Prescribe 3HP\", slot: \"start\", color: \"primary\" },\n            { name: \"Prescribe IPT\", slot: \"end\", color: \"primary\" },\n          ]\n        )\n        return listData.map(i => {\n          if (is3HPorTPT(i)) {\n            i.isChecked =\n              action === 'Prescribe IPT' && i.label === 'IPT' || \n              action ==='Prescribe 3HP' && i.label === 'INH 300 / RFP 300 (3HP)'\n          }\n          return i\n        })\n      }\n      return listData.map(i => {\n        // By default, toggle between variants of 3HP. All of them cant be selected at once\n        if (curOption.label === '3HP (RFP + INH)' \n          && i.label === 'INH 300 / RFP 300 (3HP)'\n          && curOption.isChecked) {\n          i.isChecked = false\n        } else if (curOption.label === 'INH 300 / RFP 300 (3HP)' \n          && i.label === '3HP (RFP + INH)'\n          && curOption.isChecked ) {\n            i.isChecked = false\n        }\n        return i\n      })\n    },\n    medicationOrderOptions(formData: any, prechecked=[] as Option[]): Option[] {\n      const completedTpt = this.didCompleted3HP(formData)\n      const everTakenTpt = this.tptStatus.tpt !== null\n      const autoSelect3HP = this.tptAutoSelectionMode(formData)\n\n      const disableOption = (text: string) => ({\n        disabled: true,\n        isChecked: false,\n        description: {\n          color: \"danger\",\n          show: \"always\",\n          text\n        }\n      })\n\n      return this.runAppendOptionParams([\n        this.toOption('ARVs', {\n          appendOptionParams: () => ({ \n            isChecked: autoSelect3HP && !this.TBSuspected\n          })\n        }),\n        this.toOption('CPT', {\n          appendOptionParams: () => {\n            if (autoSelect3HP && !this.TBSuspected \n              && !this.allergicToSulphur) {\n              return { isChecked : true }\n            }\n            return this.allergicToSulphur \n              ? disableOption('Allergic to CPT')\n              : { disabled: false }\n          }\n        }),\n        this.toOption('3HP (RFP + INH)', {\n          appendOptionParams: () => {\n            if (completedTpt) return disableOption(`Completed TPT treatment`)\n            if (this.tptStatus.tb_treatment) return disableOption(`Completed/on TB treatment`)\n            if (this.TBSuspected) return disableOption('TB Suspect')\n            if (this.currentWeight < 20) return disableOption('Weight below regulation')\n            if (everTakenTpt && this.tptStatus.tpt !== '3HP (RFP + INH)' && !this.tptStatus.completed) {\n              return disableOption(`On ${this.tptStatus.tpt} treatment`)\n            }\n            if (this.tptStatus.tpt === '3HP (RFP + INH)' && !this.tptStatus.completed) return { isChecked: true }\n          }\n        }),\n        this.toOption('INH 300 / RFP 300 (3HP)', {\n          appendOptionParams: () => { \n            if (completedTpt) return disableOption(`Completed TPT treatment`)\n            if (this.tptStatus.tb_treatment) return disableOption(`Completed/on TB treatment`)\n            if (this.TBSuspected) return disableOption('TB Suspect')\n            if (this.currentWeight < 30) return disableOption('Weight below regulation') \n            if (everTakenTpt && this.tptStatus.tpt !== 'INH 300 / RFP 300 (3HP)' && !this.tptStatus.completed) {\n              return disableOption(`On ${this.tptStatus.tpt} treatment`)\n            }\n            if (this.tptStatus.tpt === 'INH 300 / RFP 300 (3HP)' && !this.tptStatus.completed) return { isChecked: true }\n            return { isChecked: autoSelect3HP }\n          }\n        }),\n        this.toOption('IPT', {\n          appendOptionParams: () => {\n            if (completedTpt) return disableOption(`Completed TPT treatment`)\n            if (this.tptStatus.tb_treatment) return disableOption(`Completed/on TB treatment`)\n            if (this.TBSuspected) return disableOption('TB Suspect')\n            if (everTakenTpt && this.tptStatus.tpt !== 'IPT' && !this.tptStatus.completed) {\n              return disableOption(`On ${this.tptStatus.tpt} treatment`)\n            }\n            if (this.tptStatus.tpt === 'IPT' && !this.tptStatus.completed) return { isChecked: true }\n          }\n        }),\n        this.toOption('NONE OF THE ABOVE')\n      ], prechecked)\n    },\n    async getVlLabData() {\n      return OrderService.formatLabs((await Store.get('GET_LAB_ORDERS_WITH_GIVEN_RESULT_STATUS', { patientID: this.patientID })));\n    },\n    isANCclient() {\n      return ProgramService.getSuspendedProgram() === 'ANC'\n    },\n    getFields(): any {\n      return [\n        {\n          id: \"other_patient_prescription\",\n          proxyID: \"prescription\",\n          helpText: \"Medication to prescribe during this visit\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          init: async () => {\n            const isGuardian = (await this.consultation.getClient()) === \"No\";\n            if (isGuardian) {\n              this.isNoneClientPatient = true\n            } else {\n              this.isNoneClientPatient = (await PatientTypeService.isDrugRefillPatient(this.patientID))\n                ? true : false\n            }\n            if (this.isNoneClientPatient) {\n              this.currentWeight = Number((await this.patient.getRecentWeight()))\n              this.autoSelect3HP = await Store.get('ART_AUTO_3HP_SELECTION')\n              this.tptStatus = await this.consultation.getTptTreatmentStatus()\n              this.completed3HP = this.tptStatus.tpt !== null && this.tptStatus.completed\n            }\n            return true\n          },\n          validation: (data: any) => Validation.required(data),\n          computedValue: (v: Option[]) => ({ \n            tag: 'consultation',\n            obs: this.buildMedicationOrders(v)\n          }),\n          onValueUpdate: (listData: Array<Option>, value: Option, f: any) => {          \n            const list = this.disablePrescriptions(listData, value);\n            return this.on3HPValueUpdate(list, value, f)\n          },\n          options: (formData: any, c: Array<Option>, cd: any, l: any) => {\n            return !isEmpty(l) ? l : this.medicationOrderOptions(formData)\n          },\n          condition: () => this.isNoneClientPatient,\n          exitsForm: () => true\n        },\n        /**\n        * DRUG TRANSFER IN INITIATION \n        */\n        ...generateDateFields({\n          id: 'date_last_received_arvs',\n          helpText: 'Last ARV Dispensation',\n          required: true,\n          init: async () => {\n            this.wasTransferredIn = (await this.getTransferInStatus()) || false\n            this.dateStartedArt = await this.getDateStartedArt()\n            return true\n          },\n          condition: () => this.wasTransferredIn,\n          minDate: () => this.dateStartedArt,\n          maxDate: () => this.consultation.getDate(),\n          computeValue: (date: string) => {\n            this.prescription.setDate(date)\n            return {\n              tag: 'consultation',\n              date,\n              obs: this.consultation.buildValueDate(\n                'Date drug received from previous facility', date\n              )\n            }\n          },\n          estimation: {\n            allowUnknown: false\n          }\n        }, this.consultation.getDate()),\n        {\n          id: 'previous_arvs_received',\n          helpText: 'Last ARV drugs dispensed',\n          type: FieldType.TT_MULTIPLE_SELECT,\n          computedValue: (v: Option[]) => v.map(d => d.other),\n          validation: (v: Option[]) => Validation.required(v),\n          options: async () => {\n            if (!isEmpty(this.customRegimens)) return this.customRegimens\n            const p = new PrescriptionService(this.patientID, this.providerID)\n            this.customRegimens = (await p.getARVs())\n              .map((drug: any ) => ({\n                label: drug.name,\n                value: drug.drug_id,\n                other: { ...drug }\n              })) as Option[]\n            return this.customRegimens\n          },\n          config: {\n            showKeyboard: true\n          },\n          condition: () => this.wasTransferredIn\n        },\n        {\n          id: 'drug_interval',\n          helpText: 'Duration period for last received ARVs',\n          type: FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n          condition: () => this.wasTransferredIn,\n          validation: (val: Option) => Validation.required(val),\n          computedValue: (d: Option) => d.other.nextAppointment,\n          options: () => {\n            const intervals = [\n              { label: '2 weeks', value: 14 },\n              { label: '1 month', value: 28 },\n              { label: '2 months', value: 56 },\n              { label: '3 months', value: 84 },\n              { label: '4 months', value: 112 },\n              { label: '5 months', value: 140 },\n              { label: '6 months', value: 168 },\n              { label: '7 months', value: 196 },\n              { label: '8 months', value: 224 },\n              { label: '9 months', value: 252 },\n              { label: '10 months', value: 280 },\n              { label: '11 months', value: 308 },                        \n              { label: '12 months', value: 336 }\n            ]\n            return intervals.map(({label, value}: Option) => {\n              this.prescription.setNextVisitInterval(value)\n              const nextAppointment = this.prescription.calculateDateFromInterval()\n              return {\n                label,\n                value,\n                other: {\n                  label: 'Medication run-out date:',\n                  value: HisDate.toStandardHisDisplayFormat(nextAppointment),\n                  nextAppointment,\n                  other: {\n                    label: \"\",\n                    value: []\n                  }\n                }\n              }\n            })\n          }\n        },\n        {\n          id: 'arv_quantities',\n          helpText: 'Amount of drugs dispensed (From last ART Facility)',\n          type: FieldType.TT_DRUG_TRANSFER_IN,\n          validation: (v: Option[]) => this.validateSeries([\n            () => Validation.required(v),\n            () => v.map((i: Option) => i.value === '' || i?.other?.pillsBrought === '')\n              .some(Boolean) ? ['Some Drugs are missing values'] : null\n          ]),\n          computedValue: (v: Option[], f: any, c: any) => {\n            return {\n              tag: 'consultation',\n              obs:  v.map(async (d: any) => {\n                const drugID: number = d?.other?.drug?.drug_id || 0\n                return { \n                  ...(await this.consultation.buildObs(\n                    'Drug received from previous facility', {\n                      'value_drug': drugID,\n                      'value_datetime': c?.drug_interval || null,\n                      'value_numeric': d?.value || 0\n                      }\n                  )),\n                  child: (await this.consultation.buildObs(\n                    'Number of tablets brought to clinic', {\n                      'value_drug': drugID,\n                      'value_numeric': d?.other?.pillsBrought || -1,\n                      'value_datetime': c?.date_last_received_arvs?.date || null\n                   }\n                ))}\n              })\n            }\n          },\n          options: (_: any, c: any, listData: Option) => {\n            return c.previous_arvs_received\n              .map((d: any) => {\n                const drugName = d['alternative_drug_name'] || d['drug_name'] || d['name']\n                const prevValue = find(listData, { label: drugName })\n                let qty = ''\n                let rmndr = ''\n                if (prevValue) {\n                  qty = prevValue?.value\n                  rmndr = prevValue?.other?.pillsBrought\n                }\n                return {\n                  label: drugName,\n                  value: qty,\n                  other: {\n                    drug: d,\n                    pillsBrought: rmndr\n                  }\n                }\n              })\n          },\n          condition: () => this.wasTransferredIn\n        },\n        /**\n        * END OF DRUG TRANSFER IN\n        */\n        {\n          id: \"patient_lab_orders\",\n          helpText: \"Lab orders\",\n          type: FieldType.TT_LAB_ORDERS,\n          init: async () => {\n            this.labOrders = await this.getVlLabData()\n            return true\n          },\n          unload: async () => {\n            await this.checkVLReminder()\n            // Check if released results were given to the patient\n            const noGivenResults = this.labOrders.filter((r: any) => r.result_given === 'No')\n            if (noGivenResults.length && (await alertConfirmation('Result(s) Given to Client?'))) {\n              const enc = new AppEncounterService(this.patientID, -1, this.providerID)\n              // flatten array and save observations for results given\n              const obs = noGivenResults.reduce((all: any, result: any) => [\n                ...all, ...(result.resultIds.map(async (resultID: number) =>{\n                  enc.encounterID = result.encounter_id\n                  return enc.saveObs((await enc.buildObs(\"Result Given to Client\", {\n                      \"value_coded\": \"Yes\",\n                      \"obs_group_id\": resultID\n                    })))\n                })) \n              ], [])\n              await Promise.all(obs)\n            }\n            // refresh data\n            this.labOrders = await this.getVlLabData()\n          },\n          onload: (fieldContext: any) =>  this.labOrderFieldContext = fieldContext,\n          options: () => {\n            return [\n              {\n                label: \"Lab orders\",\n                value: \"order trail\",\n                other: {\n                  values: this.labOrders\n                }\n              }\n            ]\n          },\n          config: {\n            printOrder: (orderID: number) => {\n              return new PatientPrintoutService(this.patientID).printLabOrderLbl(orderID)\n            },\n            hiddenFooterBtns: [\"Clear\"],\n            footerBtns: [\n              {\n                name: \"Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => {\n                  if (!isEmpty(this.labOrderFieldContext)) {\n                    await this.labOrderFieldContext.launchOrderSelection();\n                  }\n                }\n              }\n            ]\n          },\n        },\n        {\n          id: \"pregnant_breastfeeding\",\n          helpText: `Patient Pregnant or breastfeeding?`,\n          init: async () => {\n            if (this.patient.isFemale()) {\n              if (this.patient.isChildBearing()) {\n                this.hasPregnancyObsToday = await this.patient.hasPregnancyObsToday()\n                this.currentlyPregnant = await this.patient.isPregnant()\n              }\n              this.onPermanentFPMethods = await this.consultation.getTLObs();\n            }\n            return true\n          },\n          condition: () => !this.hasPregnancyObsToday && this.pregnancyEligible(),\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          validation: (data: any) =>\n            this.validateSeries([\n              () => Validation.required(data),\n              () => Validation.anyEmpty(data),\n            ]),\n          computedValue: (v: Option[]) => {\n            let obs = []\n            if (this.isANCclient()) obs.push(\n              this.consultation.buildValueCoded('Is patient pregnant', 'Yes')\n            )\n            obs = obs.concat(v.map(d => this.consultation.buildValueCoded(d.other.concept, d.value)))\n            return {\n              obs,\n              tag: 'consultation'\n            }\n          },\n          options: (formData: any) => {\n            const options = []\n            // Because ANC clients are always Pregnant!\n            if (!this.isANCclient()) options.push({\n              label: \"Pregnant\",\n              value: \"\",\n              other: {\n                values: this.yesNoOptions(),\n                concept: \"Is patient pregnant\",\n              }\n            })\n\n            options.push({\n              label: \"Breastfeeding\",\n              value: \"\",\n              other: {\n                values: this.yesNoOptions(),\n                concept: \"Is patient breast feeding\",\n              }\n            })\n\n            return formData.pregnant_breastfeeding || options\n          }\n        },\n        {\n          id: \"patient_weight_chart\",\n          helpText: \"Patient weight chart\",\n          type: FieldType.TT_WEIGHT_CHART,\n          init: async () => {\n            this.weightTrail = await this.patient.getWeightHistory()\n            this.weightLossPercentageNum = this.patient.getWeightLossPercentageFromTrail(this.weightTrail)\n            this.lostTenPercentBodyWeight = this.weightLossPercentageNum >= 10\n            return true\n          },\n          options: async () => {\n            const bmi = await this.patient.getBMI();\n            const values = this.weightTrail;\n            return [\n              {\n                label: \"Weight for patient\",\n                value: \"Weight trail\",\n                other: {\n                  bmi,\n                  values: values.map((d: any) => ({\n                    x: HisDate.toStandardHisDisplayFormat(d.date),\n                    y: d.weight,\n                  })),\n                  age: this.patient.getAge(),\n                },\n              },\n            ];\n          },\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: \"has_fp_methods\",\n          helpText: \"\",\n          type: FieldType.TT_TEXT_BANNER,\n          condition: () => this.onPermanentFPMethods,\n          options: () => this.mapStrToOptions([\n            \"Patient is on Tubal ligation method\"\n          ])\n        },\n        {\n          id: \"current_fp_methods\",\n          helpText: \"What method are you currently on?\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          init: async () => {\n            if (this.patient.isFemale()) {\n              this.patientHitMenopause = await this.consultation.patientHitMenopause()\n            }\n            return true\n          },\n          validation: (data: any) => Validation.required(data),\n          onValueUpdate: (listData: Array<Option>, value: Option) => {\n            return this.disableFPMethods(listData, value);\n          },\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.map(d => this.consultation.buildValueCoded('Family planning method', d.value))\n          }),\n          condition: (formData: any) => this.showCurrentContraceptionMethods(formData),\n          options: (_: any, checked: Array<Option>) =>this.getFPMethods([], checked),\n        },\n        {\n          id: \"fp_methods\",\n          helpText: \"What method are you providing today?\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          condition: (formData: any) => this.showNewContraceptionMethods(formData),\n          validation: (data: any) => Validation.required(data),\n          onValueUpdate: (listData: Array<Option>, value: Option) => {\n            return this.disableFPMethods(listData, value);\n          },\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.map((d: Option) => this.consultation.buildValueCoded('Family planning, action to take', d.value))\n          }),\n          options: (_: any, checked: Array<Option>) => this.getFPMethods([], checked)\n        },\n        {\n          id: \"reason_for_no_fpm\",\n          helpText: \"Main reason for not using family planning methods\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          condition: (formData: any) => this.declinedFPM(formData),\n          computedValue: (v: Option) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueText(\"Why does the woman not use birth control\", v.value) \n          }),\n          options: () => this.mapStrToOptions([\n            \"Not Sexually active\",\n            \"Patient want to get pregnant\",\n            \"Not needed for medical reasons\",\n            \"At risk of unplanned pregnancy\",\n            \"Menopause\"\n          ])\n        },\n        {\n          id: \"specific_reason_for_no_fpm\",\n          helpText: \"Specific reason for not using family planning methods\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (v: Option) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueText(\"Reason for not using contraceptives\", v.value)\n          }),\n          condition: (formData: any) => this.riskOfUnplannedPregnancy(formData),\n          options: () => this.mapStrToOptions([\n            \"Following wishes of spouse\",\n            \"Religious reasons\",\n            \"Afraid of side effects\",\n            \"Never though about it\",\n            \"Indifferent (does not mind getting pregnant)\"\n          ])\n        },\n        {\n          id: \"offer_contraceptives\",\n          helpText: \"Offer contraceptives\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          condition: (formData: any) => this.riskOfUnplannedPregnancy(formData),\n          computedValue: (v: any) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueCoded(\"Family planning, action to take\", v.value)\n          }),\n          options: () => [\n            { label: \"Accepted\", value: \"Yes\" },\n            { label: \"Declined\", value: \"No\" },\n            { label: \"Discuss with spouse\", value: \"Discuss with spouse\" },\n          ]\n        },\n        {\n          id: \"offered_intervention\",\n          helpText: \"Offered intervention\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          validation: (data: any) => Validation.required(data),\n          condition: (formData: any) => formData.offer_contraceptives.value === \"Accepted\",\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.map(d => this.consultation.buildValueCoded(d.label, d.value))\n          }),\n          options: (_: any, checked: Array<Option>) => this.getFPMethods([\"NONE\"], checked),\n        },\n        {\n          id: \"offer_cxca\",\n          helpText: \"Refer client for CxCa screening\",\n          type: FieldType.TT_SELECT,\n          init: async () => {\n            if (this.patient.isFemale()) {\n              this.CxCaEnabled = await ART_PROP.cervicalCancerScreeningEnabled()\n              if (this.CxCaEnabled) {\n                const { start, end } = await ART_PROP.cervicalCancerScreeningAgeBounds()\n                this.CxCaMaxAge = end\n                this.CxCaStartAge = start\n                this.DueForCxCa = await this.consultation.clientDueForCxCa()\n                this.clientHadAHysterectomy =  await this.consultation.clientHasHadAHysterectomy();\n              }\n            }\n            return true\n          },\n          validation: (v: Option) => Validation.required(v),\n          condition: (f: any) => this.canScreenCxCa() && !this.isPregnant(f),\n          computedValue: (v: Option) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueCoded('Offer CxCa', v.value)\n          }),\n          options: () => this.yesNoOptions()\n        },\n        {\n          id: \"reason_for_no_cxca\",\n          helpText: \"Reason for NOT offering CxCa\",\n          type: FieldType.TT_SELECT,\n          validation: (v: Option) => Validation.required(v),\n          condition: (f: any) => f.offer_cxca.value === 'No',\n          computedValue: (v: Option) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueCoded(\"Reason for NOT offering CxCa\", v.value)\n          }),\n          options: () => this.getReasonsForNoCxcaOptions(),\n        },\n        ...generateDateFields({\n          id: 'previous_cxca_test_date',\n          helpText: 'Previous CxCa test',\n          required: true,\n          minDate: () => this.patient.getBirthdate(),\n          maxDate: () => ConsultationService.getSessionDate(),\n          condition: (f: any) => f.reason_for_no_cxca.value === 'Not due for screening',\n          computeValue: (date: string, isEstimate: boolean) => {\n            if (isEstimate) {\n              return {\n                tag: 'consultation',\n                obs: this.consultation.buildValueDateEstimated('CxCa test date', date)\n              }\n            } else {\n              return {\n                tag: 'consultation',\n                obs: this.consultation.buildValueDate('CxCa test date', date) \n              }\n            }\n          },\n          estimation: {\n            allowUnknown: true,\n            estimationFieldType: EstimationFieldType.MONTH_ESTIMATE_FIELD\n          }\n        }),\n        {\n          id: 'previous_side_effects',\n          helpText: 'Side effects / Contraindications history',\n          type: FieldType.TT_DATA_TABLE,\n          init: async () => {\n            this.sideEffectsHistory = await this.consultation.getDrugSideEffects()\n            return true\n          },\n          config: {\n            columns: () => [\n              [\n                table.thTxt('Date'),\n                table.thTxt('Condition'),\n                table.thTxt('Drug induced'),\n                table.thTxt('Drug')\n              ]\n            ],\n            rows: () => {\n              return Object.keys(this.sideEffectsHistory)\n              .map((k: string) =>\n                Object.values(this.sideEffectsHistory[k])\n                .filter((d: any) => !isEmpty(d.name))\n                .map((d: any) => [\n                  table.tdDate(k),\n                  table.td(d.name),\n                  table.td(d.drug_induced ? 'Yes' : 'No'),\n                  table.td(d.drug)\n              ]))\n              .reduce((accum, cur) => accum.concat(cur), [])\n            }\n          }\n        },\n        {\n          id: \"side_effects\",\n          helpText: \"Contraindications / Side effects (select either 'Yes' or 'No')\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          init: async () => {\n            this.lastDrugsReceived = await this.consultation.getPreviousDrugs();\n            return true\n          },\n          validation: (data: any) =>\n            this.validateSeries([\n              () => Validation.required(data),\n              () => Validation.anyEmpty(data),\n            ]),\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.map(async (d) => ({\n              ...(await this.consultation.buildValueCoded('Malawi ART side effects', d.label)),\n              child: (await this.consultation.buildValueCoded(d.label, d.value)) \n            }))\n          }),\n          beforeNext: (data: Option[]) => this.buildSideEffectObs(data, 'malawiSideEffectReasonObs'),\n          options: (_: any, checked: Array<Option>) => this.getContraindications(checked)\n        },\n        {\n          id: \"other_side_effects\",\n          helpText: \"Other Contraindications / Side effects (select either 'Yes' or 'No')\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          onValue: async (val: any) => {\n            await this.checkIfWeightLossIsControlled(val)\n            return true\n          },\n          condition: (formData: any) => this.showOtherSideEffects(formData),\n          onConditionFalse: () => this.otherSideEffectReasonObs = [],\n          validation: (data: any) =>\n            this.validateSeries([\n              () => Validation.required(data),\n              () => Validation.anyEmpty(data),\n            ]),\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.filter(d => d.label != 'Other (Specify)')\n              .map(async (d) => ({\n              ...(await this.consultation.buildValueCoded('Other side effect', d.label)),\n              child: (await this.consultation.buildValueCoded(d.label, d.value))\n            }))\n          }),\n          beforeNext: (data: Option[]) => this.buildSideEffectObs(data, 'otherSideEffectReasonObs'),\n          options: (_: any, checked: Array<Option>) => this.getOtherContraindications(checked),\n        },\n        {\n          id: 'other_side_effect_specify',\n          helpText: \"Other Contraindications / Side effects (specify)\",\n          type: FieldType.TT_NOTE,\n          computedValue: async (v: Option) => ({\n            tag: 'consultation',\n            obs: {\n              ...(await this.consultation.buildValueCoded('Other side effect', 'Other (Specify)')),\n              child: (await this.consultation.buildValueText('Other (Specify)', v.value ))\n            }\n          }),\n          condition: (f: any) => this.inArray(\n            f.other_side_effects, d => d.label === \"Other (Specify)\" && d.value === 'Yes'\n          ),\n          validation: (v: Option) => Validation.required(v)\n        },\n        {\n          id: \"on_tb_treatment\",\n          helpText: \"On TB Treatment?\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (data: any) => {\n            this.TBSuspected = data.value === \"Yes\"\n            const obs = [\n              this.consultation.buildValueCoded(\"TB treatment\", data.value)\n            ]\n            if (this.TBSuspected) obs.push(this.consultation.buildValueCoded(\"TB Status\", \"Confirmed TB on treatment\"))\n            return ({ tag: 'consultation', obs })\n          },\n          options: () => this.yesNoOptions()\n        },\n        {\n          id: \"tb_side_effects\",\n          helpText: \"TB Associated symptoms\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          onValue: async (val: any) => {\n            await this.checkIfWeightLossIsControlled(val)\n            return true\n          },\n          validation: (data: any) =>\n            this.validateSeries([\n              () => Validation.required(data),\n              () => Validation.anyEmpty(data)\n          ]), \n          condition: (formData: any) => formData.on_tb_treatment.value.match(/no/i),\n          options: (_: any, checked: Array<Option>) => this.getTBSymptoms(checked),\n          computedValue: (vals: Option[]) => {\n            this.presentedTBSymptoms = this.inArray(vals, d => d.value === \"Yes\")\n            return {\n              tag: 'consultation',\n              obs: vals.map(async (data: Option) => ({\n                ...(await this.consultation.buildValueCoded(\"Routine TB Screening\", data.label)),\n                child: (await this.consultation.buildValueCoded(data.label, data.value))\n              }))\n            } \n          }\n        },\n        {\n          id: \"tb_status\",\n          helpText: \"TB Status\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          condition: (formData: any) => this.hasTBSymptoms(formData),\n          onConditionFalse: () => this.TBSuspected = false,\n          defaultValue: () => 'TB Suspected',\n          computedValue: (data: any) => {\n            this.TBSuspected = data.value === \"TB Suspected\"\n            return {\n              tag: 'consultation',\n              obs: this.consultation.buildValueCoded(\"TB Status\", data.value)\n            }\n          },\n          beforeNext: async (data: Option) => {\n            if (data.value === \"TB Suspected\") {\n              const action = await infoActionSheet(\n                \"Lab Order\",\n                \"The patient is a TB suspect. Do you want to take lab orders?\",\n                \"\",\n                [\n                  { name: \"Order now\", slot: \"start\", color: \"success\" },\n                  { name: \"NOT now\", slot: \"end\", color: \"danger\" },\n                ]\n              )\n              if (action === 'Order now') this.labOrderFieldContext.launchOrderSelection([\n                'TB Microscopic Exam', \n                'GeneXpert', \n                'Culture & Sensitivity',\n                'TB Tests'\n              ])\n            }\n            return true\n          },\n          options: () => this.mapStrToOptions([\n            \"TB NOT suspected\",\n            \"TB Suspected\",\n            \"Confirmed TB Not on treatment\",\n          ])\n        },\n        {\n          id: \"routine_tb_therapy\",\n          helpText: \"TB preventive therapy (TPT) history\",\n          type: FieldType.TT_SELECT,\n          init: async () => {\n            this.hasTbHistoryObs = await this.consultation.hasTreatmentHistoryObs()\n            return true\n          },\n          validation: (data: any) => Validation.required(data),\n          condition: () => !this.hasTbHistoryObs,\n          computedValue: (data: any) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueText(\"Previous TB treatment history\", data.value)\n          }),\n          options: (f: any) => {\n            let options: string[] = []\n            if(/no/i.test(f.on_tb_treatment.value)) {\n              options = [\n                \"Currently on IPT\",\n                \"Currently on 3HP (RFP + INH)\",\n                \"Currently on INH 300 / RFP 300 (3HP)\"\n              ]\n            }\n            options = options.concat([\n              \"Complete course of 3HP in the past (3 months RFP+INH)\",\n              \"Complete course of IPT in the past (min. 6 months of INH)\",\n              \"Aborted course of 3HP (RFP + INH) in the past\",\n              \"Aborted course of INH 300 / RFP 300 (3HP) in the past\",\n              \"Aborted course of IPT in the past\",\n              \"Never taken IPT or 3HP\"\n            ])\n            return this.mapStrToOptions(options)\n          }\n        },\n        ...generateDateFields({\n          id: 'date_started_tpt',\n          helpText: 'Started TPT Treatment',\n          required: true,\n          minDate: () => this.patient.getBirthdate(),\n          maxDate: () => ConsultationService.getSessionDate(),\n          condition: (f: any) => f.routine_tb_therapy.value.match(/currently/i),\n          computeValue: (date: string) => date,\n          estimation: {\n            allowUnknown: true,\n            estimationFieldType: EstimationFieldType.MONTH_ESTIMATE_FIELD\n          }\n        }),\n        {\n          id: \"tpt_drugs_received\",\n          helpText: \"TPT Drugs Received\",\n          required: true,\n          condition: (f: any) => f.routine_tb_therapy.value.match(/currently/i),\n          type: FieldType.TT_ADHERENCE_INPUT,\n          options: (f: any) => this.getTptDrugs(f),\n          computedValue: (drugs: Option[], f: any, c: any) => {\n            return {\n              tag: 'consultation',\n              obs:  drugs.map(async (drug: any) => this.consultation.buildObs(\n                'TPT Drugs Received', \n                {\n                  'value_drug': drug?.other?.drug_id || 0,\n                  'value_datetime': c?.date_started_tpt || null,\n                  'value_numeric': drug?.value || 0\n                }\n              ))\n            }\n          },\n          config: {\n            titles: {\n              label: 'Drug name',\n              value: 'Tablets received'\n            }\n          }\n        },\n        {\n          id: 'tpt_tranfer_from',\n          helpText: 'Facility client is transferring in from',\n          type: FieldType.TT_SELECT,\n          computedValue: ({label}: Option) => ({\n            tag:'consultation',\n            obs: this.consultation.buildValueText(\n              'Location TPT last received', label\n            )\n          }),\n          validation: (val: any) => Validation.required(val),\n          condition: (f: any) => f.routine_tb_therapy.value.match(/currently/i),\n          options: (_: any, filter='') => getFacilities(filter),\n          config: {\n            showKeyboard: true,\n            isFilterDataViaApi: true\n          }\n        },\n        {\n          id: \"allergic_to_sulphur\",\n          helpText: \"Allergic to Cotrimoxazole\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (data: any) => {\n            this.allergicToSulphur = data.value.match(/unknown/i) \n              ? null \n              : data.value.match(/yes/i) \n              ? true \n              : false  \n            return {\n              tag: 'consultation',\n              obs: () => {\n                return this.consultation.buildValueCoded(\"Allergic to sulphur\", \n                  this.allergicToSulphur === null \n                  ? data.value \n                  : this.allergicToSulphur \n                  ? 'Yes' \n                  : 'No')\n              }\n            }\n          },\n          options: () => this.yesNoUnknownOptions()\n        },\n        ...this.getAdherenceFields(true),\n        {\n          id: \"refer_to_clinician\",\n          helpText: \"Refer to clinician\",\n          type: FieldType.TT_SELECT,\n          condition: () => UserService.isNurse(),\n          validation: (data: any) => Validation.required(data),\n          computedValue: (data: any) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueCoded(\"Refer to clinician\", data.value)\n          }),\n          options: () => this.yesNoOptions(),\n        },\n        {\n          id: \"medication_to_prescribe\",\n          proxyID: \"prescription\",\n          helpText: \"Medication to prescribe during this visit\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          init: async () => {\n            if (!this.isNoneClientPatient) {\n              this.currentWeight = Number((await this.patient.getRecentWeight()))\n              this.autoSelect3HP = await Store.get('ART_AUTO_3HP_SELECTION')\n              this.tptStatus = await this.consultation.getTptTreatmentStatus()\n              this.completed3HP = this.tptStatus.tpt !== null && this.tptStatus.completed\n            }\n            return true\n          },\n          condition: (f: any) => !f.refer_to_clinician || `${f.refer_to_clinician.value}`.match(/no/i),\n          validation: (data: Option) => Validation.required(data),\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation', \n            obs: this.buildMedicationOrders(v)\n          }),\n          onValueUpdate: (listData: Array<Option>, value: Option, formData: any) => {\n            const list =  this.disablePrescriptions(listData, value)\n            return this.on3HPValueUpdate(list, value, formData)\n          },\n          options: (formData: any, c: Array<Option>, cd: any, currentOptions: any) => {\n            return this.medicationOrderOptions(formData, currentOptions)\n          },\n          config: {\n            footerBtns: [\n              {\n                name: \"Update allergic to CPT\",\n                onClickComponentEvents: {\n                  refreshOptions: (btnEvent: FooterBtnEvent, options: Option[], formData: any): Option[] => {\n                    this.allergicToSulphur = btnEvent.btnOutput === 'Allergic'\n                    return this.medicationOrderOptions(formData, options)\n                  }\n                },\n                onClick: () => {\n                  return infoActionSheet(\n                    \"Allergic to Cotrimoxazole update\",\n                    `Is the patient allergic to cotrimoxazole.`,\n                    \"\",\n                    [\n                      { name: \"Allergic\", slot: \"start\", color: \"success\" },\n                      { name: \"NOT Allergic\", slot: \"end\" },\n                    ]\n                  )\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./VLReminderModal.vue?vue&type=template&id=10a26cd2&scoped=true&ts=true\"\nimport script from \"./VLReminderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./VLReminderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./VLReminderModal.vue?vue&type=style&index=0&id=10a26cd2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-10a26cd2\"]])\n\nexport default __exports__","import { render } from \"./SideEffectsModal.vue?vue&type=template&id=546674a2&scoped=true&ts=true\"\nimport script from \"./SideEffectsModal.vue?vue&type=script&lang=ts\"\nexport * from \"./SideEffectsModal.vue?vue&type=script&lang=ts\"\n\nimport \"./SideEffectsModal.vue?vue&type=style&index=0&id=546674a2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-546674a2\"]])\n\nexport default __exports__","import { render } from \"./Consultation.vue?vue&type=template&id=336b620e&ts=true\"\nimport script from \"./Consultation.vue?vue&type=script&lang=ts\"\nexport * from \"./Consultation.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./VLReminderModal.vue?vue&type=style&index=0&id=10a26cd2&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SideEffectsModal.vue?vue&type=style&index=0&id=546674a2&scoped=true&lang=css\""],"sourceRoot":""}