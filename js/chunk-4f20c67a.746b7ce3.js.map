{"version":3,"sources":["webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/composables/storage.ts","webpack:///./src/apps/RADIOLOGY/views/RadiologyPreferences.vue?7fb5","webpack:///./src/apps/RADIOLOGY/views/RadiologyPreferences.vue","webpack:///./src/apps/RADIOLOGY/views/RadiologyPreferences.vue?b429","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts","webpack:///./src/apps/RADIOLOGY/radiology_global_props.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","defineComponent","name","components","TouchScreenForm","emits","data","props","type","Function","Boolean","default","String","Object","required","methods","formData","computedData","this","$emit","i","__exports__","INDEX_STORE","DB_NAME","storageFactory","storageName","eval","LocalStorage","existsinStorage","key","localStorage","getItem","Promise","resolve","getFromStorage","reject","JSON","parse","deleteFromStorage","removeItem","saveToStorage","setItem","stringify","IndexedDBStorage","constructor","_defineProperty","openRequest","indexedDB","open","onupgradeneeded","result","createObjectStore","onsuccess","db","request","transaction","objectStore","get","onerror","error","filters","openCursor","cursor","filteredData","value","continue","put","delete","filter","item","entries","every","isInteger","toLower","includes","_component_his_standard_form","_resolveComponent","_component_ion_page","_withCtx","_createVNode","_","HisStandardForm","IonPage","preference","created","$route","params","defaultReferralLocation","prop","GlobalPropertyService","set","toastSuccess","$router","back","isPreference","id","RADIOLOGY_GLOBAL_PROP","DEFAULT_REFERRAL_LOCATION","helpText","FieldType","TT_SELECT","computedValue","v","label","defaultValue","RADIOLOGY_PROP","validation","val","Validation","condition","options","getFacilities","config","showKeyboard","isFilterDataViaApi","offlineStorage","async","facilities","isEmpty","LocationService","f","trim","map","facility","location_id","other","getLabFacilities","getLabs","getFacilityWards","wards","tag","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id"],"mappings":"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","file":"js/chunk-4f20c67a.746b7ce3.js","sourcesContent":["import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { StorageInterface } from '@/interfaces/storage';\nimport { filter, isInteger, toLower } from 'lodash';\n\nconst INDEX_STORE = 'openmrs'\nconst DB_NAME = 'offline_db'\n\ntype StorageName = \"LocalStorage\" | \"IndexedDBStorage\";\n\nexport const storageFactory = (storageName: StorageName='IndexedDBStorage'): StorageInterface => {\n  return eval(`new ${storageName}()`) as StorageInterface;\n};\n\nexport class LocalStorage implements StorageInterface {\n  existsinStorage(key: string): Promise<boolean> {\n    const data = localStorage.getItem(key);\n    if (data) {\n      return Promise.resolve(true);\n    }\n    return Promise.resolve(false);\n  }\n\n  getFromStorage(key: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const data = localStorage.getItem(key);\n      if (data) {\n        return resolve(JSON.parse(data));\n      }\n      resolve([]);\n    });\n  }\n\n  deleteFromStorage(key: string): boolean {\n    localStorage.removeItem(key);\n    return true;\n  }\n\n  saveToStorage(key: string, data: JSON): boolean {\n    localStorage.setItem(key, JSON.stringify(data));\n    return true;\n  }\n}\n\nexport class IndexedDBStorage implements StorageInterface {\n  db!: IDBDatabase;\n\n  constructor() {\n    const openRequest = indexedDB.open(DB_NAME, 1);\n    openRequest.onupgradeneeded = function () {\n      openRequest.result.createObjectStore(INDEX_STORE);\n    };\n    openRequest.onsuccess = () => {\n      this.db = openRequest.result;\n    };\n  }\n\n  existsinStorage(key: string): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      const request = this.db\n        .transaction(INDEX_STORE)\n        .objectStore(INDEX_STORE)\n        .get(key);\n      request.onsuccess = () => {\n        resolve(request.result);\n      };\n      request.onerror = () => {\n        reject(request.error);\n      };\n    });\n  }\n\n  getFromStorage(key: string, filters: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const request = this.db\n        .transaction(INDEX_STORE)\n        .objectStore(INDEX_STORE)\n        .openCursor();\n      request.onsuccess = () => {\n        const cursor = request.result;\n        if (cursor) {\n          if (cursor.key === key) {\n            if (filters) {\n              resolve(filteredData(cursor, filters));\n            } else {\n              resolve(cursor.value.data);\n            }\n          }\n          cursor.continue();\n        } else {\n          resolve([]);\n        }\n      };\n      request.onerror = () => {\n        reject(\"error\");\n      };\n    });\n  }\n\n  saveToStorage(key: string, data: any): boolean {\n    this.db\n      .transaction(INDEX_STORE, \"readwrite\")\n      .objectStore(INDEX_STORE)\n      .put(data, key);\n    return true;\n  }\n\n  deleteFromStorage(key: string): boolean {\n    this.db\n      .transaction(INDEX_STORE, \"readwrite\")\n      .objectStore(INDEX_STORE)\n      .delete(key);\n    return true;\n  }\n}\n\nfunction filteredData(cursor: IDBCursorWithValue, filters: any): any {\n  return filter(cursor.value, (item: any) => {\n    return Object.entries(filters).every(([key, value]: any) => {\n      if (isInteger(item[key])) {\n        return !value || item[key] === value;\n      } else {\n        return !value || toLower(item[key]).includes(toLower(value));\n      }\n    });\n  });\n}\n\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onFinish,\n        skipSummary: true\n      }, null, 8, [\"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport RADIOLOGY_PROP from \"@/apps/RADIOLOGY/radiology_global_props\"\nimport { RADIOLOGY_GLOBAL_PROP } from \"@/apps/RADIOLOGY/radiology_global_props\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from '@/components/Forms/FieldInterface';\nimport { GlobalPropertyService } from '@/services/global_property_service';\nimport { toastSuccess } from '@/utils/Alerts';\nimport { IonPage } from \"@ionic/vue\"\nimport {\n\tgetFacilities\n} from '@/utils/HisFormHelpers/LocationFieldOptions'\n\nexport default defineComponent({\n\tcomponents: { HisStandardForm, IonPage },\n\tdata: () => ({\n\t\tpreference: '' as string,\n\t\tfields: [] as any\n\t}),\n\tcreated() {\n\t\tthis.preference = this.$route.params.name as string\n\t\tthis.fields = [\n\t\t\t...this.defaultReferralLocation()\n\t\t]\n\t},\n\tmethods: {\n\t\tasync onFinish(_: any, data: Record<string, any>) {\n\t\t\tfor(const prop in data) {\n\t\t\t\tawait GlobalPropertyService.set(prop, data[prop])\n\t\t\t\ttoastSuccess('Property has been updated', 2000)\n\t\t\t}\n\t\t\tthis.$router.back()\n\t\t},\n        isPreference(prop: string) {\n\t\t\treturn !this.preference || prop === this.preference\n\t\t},\n\t\tdefaultReferralLocation() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: RADIOLOGY_GLOBAL_PROP.DEFAULT_REFERRAL_LOCATION,\n\t\t\t\t\thelpText: 'Default external referral location',\n\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\tcomputedValue: (v: Option) => v.label,\n\t\t\t\t\tdefaultValue: () => RADIOLOGY_PROP.defaultReferralLocation(),\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\n\t\t\t\t\tcondition: () => this.isPreference('default_referral_location'),\n\t\t\t\t\toptions: (_: any, filter='') => getFacilities(filter),\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tshowKeyboard: true,\n\t\t\t\t\t\tisFilterDataViaApi: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n})\n","import { render } from \"./RadiologyPreferences.vue?vue&type=template&id=1b97face&ts=true\"\nimport script from \"./RadiologyPreferences.vue?vue&type=script&lang=ts\"\nexport * from \"./RadiologyPreferences.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { storageFactory } from \"@/composables/storage\"\nimport isEmpty from \"lodash/isEmpty\"\n\nconst offlineStorage = storageFactory()\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    let facilities = await offlineStorage.getFromStorage('locations', { name: filter })\n    if (isEmpty(facilities)) facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    let regions = await offlineStorage.getFromStorage('regions', [])\n    if (isEmpty(regions)) {\n        regions = await LocationService.getRegions()\n    }\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    let districts = await offlineStorage.getFromStorage('districts', { 'region_id': regionID })\n    if (isEmpty(districts)) districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    let TAs = await offlineStorage.getFromStorage('traditional_authorities', {\n        district_id: districtID, name\n    })\n    if (isEmpty(TAs)) TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    let villages = await offlineStorage.getFromStorage('villages', { \n        traditional_authority_id: traditionalAuthorityID, name\n    })\n    if (isEmpty(villages)) villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n","import { GlobalPropertyService } from \"@/services/global_property_service\"\n\nexport enum RADIOLOGY_GLOBAL_PROP {\n    DEFAULT_REFERRAL_LOCATION = 'default.referral.location'\n}\n\nexport default {\n    defaultReferralLocation: () => GlobalPropertyService.get(RADIOLOGY_GLOBAL_PROP.DEFAULT_REFERRAL_LOCATION)\n}"],"sourceRoot":""}