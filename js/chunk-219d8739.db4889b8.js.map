{"version":3,"sources":["webpack:///./src/components/DrillPatientIds.vue?36c5","webpack:///./src/components/DrillPatientIds.vue","webpack:///./src/components/DrillPatientIds.vue?8e60","webpack:///./src/apps/CxCa/views/reports/moh/Monthly_CxCa_MOH_Report.vue?1aa9","webpack:///./src/apps/CxCa/views/reports/moh/TableView.vue?8a43","webpack:///./src/apps/CxCa/views/reports/moh/TableView.vue","webpack:///./src/apps/CxCa/views/reports/moh/TableView.vue?5ef4","webpack:///./src/apps/CxCa/views/reports/moh/Monthly_CxCa_MOH_Report.vue","webpack:///./src/apps/CxCa/views/reports/moh/Monthly_CxCa_MOH_Report.vue?5485","webpack:///./src/apps/CxCa/services/reports/cxca_report_service.ts","webpack:///./src/apps/CxCa/views/reports/moh/TableView.vue?2fd4"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_v2Datatable","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","subtitle","columnData","reportData","columns","onFinish","rowsPerPage","ITEMS_PER_PAGE","_","defineComponent","props","type","String","patientIdentifiers","Object","Function","components","IonPage","v2Datatable","setup","ref","router","useRouter","label","exportable","tdClick","data","push","path","patient_id","value","watch","async","length","backlog","chunk","log","id","patient","Patientservice","findByID","getID","getNationalID","getGivenName","getFamilyName","toDate","getBirthdate","e","console","error","delayPromise","immediate","__exports__","_component_ion_loading","isLoading","message","period","onConfigure","configure","csvQuarter","onRefresh","generate","order","headers","csvheaders","spacing","csvData","_hoisted_1","key","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_component_ion_title","_component_ion_icon","_component_ion_button","_component_ion_buttons","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_item","_component_ion_content","_component_ion_footer","_createElementBlock","_Fragment","_createTextVNode","_toDisplayString","_createCommentVNode","_createElementVNode","slot","onClick","size","icon","calendar","color","sync","_renderList","headerRow","column","index","item","i","_item$span","_item$span2","colspan","span","thColspan","rowspan","thRowspan","$event","sortColumn","lines","columnSorted","sortOrder","arrowUp","arrowDown","sectionOne","row","info","k","_info$column","onClickTablecell","_normalizeClass","colSpan","style","_normalizeStyle","styling","toCSV","toPDF","finish","IonToolbar","IonItem","IonIcon","IonLabel","IonTitle","IonHeader","IonButton","IonFooter","IonContent","IonButtons","required","Array","csvSpacing","Number","csvSubHeader","route","computed","slice","_props$columnData","temp","forEach","record","map","isEmpty","dataStyle","searchIndex","d","join","cell","_cell$column","_cell$column2","getExpandedColumns","reduce","a","c","concat","filter","col","_window","html","window","document","getElementById","toPDFfromHTML","innerHTML","filename","Service","getLocationName","getSessionDate","toCsv","dayjs","format","getCoreVersion","getApiVersion","getSiteUUID","getUserName","mapcolumnValues","isArray","deep","search","close","startDate","endDate","IonLoading","orderingRows","mid","Math","floor","array1","half","array2","merge","mergedArray","processData","result","csvresult","keys","previouskey","indicatorWholeNumber","indicatorDecimal","indicator","values","entries","subKey","subValues","mappedheaders","mappedKey","sortData","sortedData","drilldown","modalController","create","component","DrillPatientIds","backdropDismiss","cssClass","componentProps","getTop","then","v","dismiss","present","processArray","dataArray","entry","secondaryLabel","indicatorOne","nameOfIndicatorOne","valueOne","fontWeight","indicatorTwo","nameOfIndicatorTwo","valueTwo","toastWarning","report","CxCaReportService","rawReport","getClinicReport","sortedDataObject","array","midIndex","formattedArray","tempArray","cloneDeep","convertedArray","obj","toastDanger","MultiStepPopupForm","helpText","FieldType","TT_NUMBER","computedValue","validation","year","isPlainObject","Validation","validateSeries","isNaN","parseInt","rangeOf","HisDate","getYear","TT_SELECT","options","f","month","Date","toISOString","endOf","onMounted","constructor","super","_defineProperty","this","date","programID","getProgramID","getPepfarReport","reportName","getReport","getMohReport","getDateIntervalPeriod","toStandardHisDisplayFormat","setStartDate","setEndDate","getReportPeriod","url","params","getJson","buildRequest","config","payload","minDuration","quarters","getCurrentYear","name","start","end"],"mappings":"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","file":"js/chunk-219d8739.db4889b8.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_v2Datatable = _resolveComponent(\"v2Datatable\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_v2Datatable, {\n        title: _ctx.title,\n        subtitle: _ctx.subtitle,\n        columnData: _ctx.reportData,\n        columns: _ctx.columns,\n        \"on-finish\": _ctx.onFinish,\n        rowsPerPage: _ctx.ITEMS_PER_PAGE\n      }, null, 8, [\"title\", \"subtitle\", \"columnData\", \"columns\", \"on-finish\", \"rowsPerPage\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent, ref, PropType, watch } from 'vue';\nimport { IonPage } from \"@ionic/vue\"\nimport  v2Datatable from \"@/components/DataViews/tables/v2PocDatatable/TableView.vue\"\nimport { v2ColumnDataInterface, v2ColumnInterface } from '@/components/DataViews/tables/v2PocDatatable/types';\nimport { useRouter } from \"vue-router\"\nimport { chunk } from 'lodash';\nimport { delayPromise } from '@/utils/Timers';\nimport { Patientservice } from '@/services/patient_service';\nimport { toDate } from '@/utils/Strs';\n\nconst ITEMS_PER_PAGE = 20\nexport default defineComponent({ \n    props: {\n        title: {\n            type: String,\n            default: 'Drilldown'\n        },\n        patientIdentifiers: {\n            type: Object as PropType<number[]>\n        },\n        onFinish: {\n            type: Function\n        }\n    },\n    components: {\n        IonPage,\n        v2Datatable\n    },\n    setup(props) {\n        const subtitle = ref('-')\n        const reportData = ref<any>([])\n        const router = useRouter()\n        const columns: Array<v2ColumnInterface[]> = [\n            [\n                {\n                    label: 'National ID',\n                    ref: 'national_id'\n                },\n                {\n                    label: 'First name',\n                    ref: 'given_name'\n                },\n                {\n                    label: 'Last name',\n                    ref: 'family_name'\n                },\n                {\n                    label: 'Birthdate',\n                    ref: 'birthdate'\n                },\n                {\n                    label: 'Action',\n                    ref: 'patient_id',\n                    exportable: false,\n                    tdClick: ({data}: v2ColumnDataInterface) => router.push({ path: `/patient/dashboard/${data.patient_id}`}) ,\n                    value: () => 'View client'\n                }\n            ]\n        ]\n        \n        watch(() => props.patientIdentifiers, async (data) => {\n            reportData.value = []\n            subtitle.value = `Total: 0`\n            if (!(data && data.length)) return\n            const backlog = chunk(data, ITEMS_PER_PAGE)\n            for(const log of backlog) {\n                for (const id of log) {\n                    try {\n                        const patient = new Patientservice((await Patientservice.findByID(id)))\n                        reportData.value.push({\n                            'patient_id': patient.getID(),\n                            'national_id': patient.getNationalID(),\n                            'given_name': patient.getGivenName(),\n                            'family_name': patient.getFamilyName(),\n                            'birthdate': toDate(patient.getBirthdate())\n                        })\n                    } catch (e) {\n                        console.error(e)\n                        reportData.value.push({})\n                    }\n                    subtitle.value = `Total: ${reportData.value.length} of ${(data||[]).length}`\n                }\n                await delayPromise(500)\n            }\n        }, { immediate: true })\n\n        return  {\n            columns,\n            subtitle,\n            reportData,\n            ITEMS_PER_PAGE\n        }\n    }\n})\n","import { render } from \"./DrillPatientIds.vue?vue&type=template&id=561e476c&ts=true\"\nimport script from \"./DrillPatientIds.vue?vue&type=script&lang=ts\"\nexport * from \"./DrillPatientIds.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_loading = _resolveComponent(\"ion-loading\")!\n  const _component_v2Datatable = _resolveComponent(\"v2Datatable\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_loading, {\n        \"is-open\": _ctx.isLoading,\n        message: \"Please wait...\"\n      }, null, 8, [\"is-open\"]),\n      _createVNode(_component_v2Datatable, {\n        title: \"MONTHLY MOH Report\",\n        subtitle: _ctx.period,\n        columns: _ctx.columns,\n        columnData: _ctx.reportData,\n        rowsPerPage: 25,\n        onConfigure: _ctx.configure,\n        csvQuarter: _ctx.csvQuarter,\n        onRefresh: () => _ctx.generate(),\n        order: _ctx.order,\n        headers: _ctx.csvheaders,\n        \"csv-spacing\": _ctx.spacing,\n        \"csv-data\": _ctx.csvData\n      }, null, 8, [\"subtitle\", \"columns\", \"columnData\", \"onConfigure\", \"csvQuarter\", \"onRefresh\", \"order\", \"headers\", \"csv-spacing\", \"csv-data\"])\n    ]),\n    _: 1\n  }))\n}","import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-42d2e679\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"his-sm-text\" }\nconst _hoisted_3 = { id: \"report-content\" }\nconst _hoisted_4 = { class: \"art-report-theme\" }\nconst _hoisted_5 = { class: \"stick-report-header\" }\nconst _hoisted_6 = [\"colspan\", \"rowspan\", \"onClick\"]\nconst _hoisted_7 = [\"onClick\", \"colspan\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-md-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.title) + \" \", 1),\n                (_ctx.subtitle)\n                  ? (_openBlock(), _createElementBlock(\"br\", _hoisted_1))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"span\", _hoisted_2, _toDisplayString(_ctx.subtitle), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                (typeof _ctx.onConfigure === 'function')\n                  ? (_openBlock(), _createBlock(_component_ion_button, {\n                      key: 0,\n                      onClick: _ctx.onConfigure\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_icon, {\n                          size: \"large\",\n                          icon: _ctx.calendar\n                        }, null, 8, [\"icon\"])\n                      ]),\n                      _: 1\n                    }, 8, [\"onClick\"]))\n                  : _createCommentVNode(\"\", true),\n                (typeof _ctx.onRefresh === 'function')\n                  ? (_openBlock(), _createBlock(_component_ion_button, {\n                      key: 1,\n                      onClick: _ctx.onRefresh,\n                      color: \"success\",\n                      size: \"large\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_icon, {\n                          size: \"large\",\n                          icon: _ctx.sync\n                        }, null, 8, [\"icon\"])\n                      ]),\n                      _: 1\n                    }, 8, [\"onClick\"]))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, {\n      \"scroll-y\": \"\",\n      \"scroll-x\": \"\"\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"table\", _hoisted_4, [\n            _createElementVNode(\"thead\", _hoisted_5, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.headerRow, (column, index) => {\n                return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(column, (item, i) => {\n                    return (_openBlock(), _createElementBlock(\"th\", {\n                      key: i,\n                      colspan: item?.span?.thColspan || 1,\n                      rowspan: item?.span?.thRowspan || 1,\n                      onClick: ($event: any) => (_ctx.sortColumn(item.ref))\n                    }, [\n                      _createVNode(_component_ion_item, { lines: \"none\" }, {\n                        default: _withCtx(() => [\n                          (_ctx.columnSorted && _ctx.columnSorted === item.ref)\n                            ? (_openBlock(), _createBlock(_component_ion_icon, {\n                                key: 0,\n                                icon: _ctx.sortOrder === 'asc' ? _ctx.arrowUp : _ctx.arrowDown\n                              }, null, 8, [\"icon\"]))\n                            : _createCommentVNode(\"\", true),\n                          (index < _ctx.columns.length - 1)\n                            ? (_openBlock(), _createBlock(_component_ion_label, {\n                                key: 1,\n                                class: \"ion-text-center\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createElementVNode(\"b\", null, _toDisplayString(item.label), 1)\n                                ]),\n                                _: 2\n                              }, 1024))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ], 8, _hoisted_6))\n                  }), 128))\n                ]))\n              }), 128))\n            ]),\n            _createElementVNode(\"tbody\", null, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sectionOne, (data, i) => {\n                return (_openBlock(), _createElementBlock(\"tr\", { key: i }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(data.row || [], (info, k) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, { key: k }, [\n                      (info.value !='TH' )\n                        ? (_openBlock(), _createElementBlock(\"td\", {\n                            key: 0,\n                            onClick: () => _ctx.onClickTablecell(info),\n                            class: _normalizeClass({\n                                'clickable-cell': info?.column?.tdClick\n                            }),\n                            colspan: info.colSpan\n                          }, [\n                            _createElementVNode(\"b\", {\n                              style: _normalizeStyle(info.styling),\n                              class: \"his-sm-text\"\n                            }, _toDisplayString(info.value), 5)\n                          ], 10, _hoisted_7))\n                        : _createCommentVNode(\"\", true)\n                    ], 64))\n                  }), 128))\n                ]))\n              }), 128))\n            ])\n          ])\n        ])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.toCSV())),\n              size: \"large\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" CSV \")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.toPDF())),\n              size: \"large\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" PDF \")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.finish,\n              color: \"success\",\n              size: \"large\",\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Finish \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonLabel,\n  IonIcon,\n  IonItem,\n  IonTitle,\n  IonToolbar,\n  IonHeader,\n  IonButton,\n  IonFooter,\n  IonContent,\n  IonButtons\n} from \"@ionic/vue\"\nimport { \n    sync,\n    search, \n    close, \n    arrowUp, \n    arrowDown, \n    document,\n    calendar\n} from \"ionicons/icons\"\nimport { computed, defineComponent, PropType, ref, watch } from \"vue\";\nimport { isEmpty } from \"lodash\";\nimport { v2ColumnDataInterface, v2ColumnInterface } from \"@/components/DataViews/tables/v2PocDatatable/types\";\nimport { toCsv, toPDFfromHTML } from \"@/utils/Export\"\nimport { Service } from \"@/services/service\";\nimport { useRouter } from \"vue-router\";\nimport dayjs from \"dayjs\";\n\nexport default defineComponent({\n    components: {\n        IonToolbar,\n        IonItem,\n        IonIcon,\n        IonLabel,\n        IonTitle,\n        IonHeader,\n        IonButton,\n        IonFooter,\n        IonContent,\n        IonButtons,\n    },\n    props: {\n        title: {\n            type: String,\n            default: 'Report'\n        },\n        subtitle: {\n            type: String,\n        },\n        columns: {\n            type: Object as PropType<Array<v2ColumnInterface[]>>,\n            required: true\n        },\n        columnData: {\n            type: Array as PropType<Array<Array<any>>>,\n            default: () => []\n        },\n        onFinish: {\n            type: Function\n        },\n        onRefresh: {\n            type: Function\n        },\n        onConfigure: {\n            type: Function\n        },\n        csvQuarter: {\n            type: String\n        },\n        headers: {\n            type: Array as PropType<Array<Array<any>>>,\n            default: () => []\n        },\n        order: {\n            type: Array as PropType<Array<Array<any>>>,\n            default: () => []\n        },\n        csvSpacing: {\n            type: Number\n        },\n        csvSubHeader: {\n            type: Array as PropType<Array<Array<any>>>,\n            default: () => []\n        },\n        csvData: {\n            type: Array as PropType<Array<Array<any>>>,\n            default: () => []\n        },\n    },\n    setup(props) {\n        const route = useRouter()\n        const reportData = ref<any>([])\n        const columnSorted = ref<string>('')\n        const sortOrder = ref<'asc'|'desc'>('desc')\n        const headerRow = computed(() => props.columns.slice(0, 1))\n\n\n\n        const sectionOne = computed(() => {\n            /**\n             * Used to retrieve element of the array (1st time scfeened)\n             */\n\n            const temp: Array<any> = [] \n            props.columnData?.forEach((record: any)=> {\n                    const row = props.columns[1].map((column: v2ColumnInterface) => {\n                        let value = ''\n                        let styling = {}\n                        let colSpan = 1\n                        try {\n                            if (isEmpty(record)) {\n                                value = \"...\"\n                            }else if (typeof column.value === 'function') {\n                                value = column.value(record) as string\n                            } else {\n                                // Use the ref to map to a value inside the record\n                                value = record[column.ref] || ''\n                            }\n                        } catch (e) {\n                            value = '_ERROR_'\n                            console.error(e)\n                        }\n                        if (typeof column.dataStyle === 'function') {\n                            styling = column.dataStyle(record)\n                        }\n\n                        if (typeof column.colSpan === 'function') {\n                            colSpan = column.colSpan(record)\n                        }\n                        return {\n                            column,\n                            data: record,\n                            value: value,\n                            styling,\n                            colSpan,\n                            [column.ref || 'nada']: value\n                        }\n                    })\n                    \n                    temp.push({ \n                        row, \n                        data: record, \n                        searchIndex: [...row, row.map((d: any) => d.value).join(' ')]\n                    })\n                })\n            return temp\n        })\n\n        const sortColumn = (column: string) => {\n            columnSorted.value = column\n            sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc'\n        }\n    \n        const finish = () => {\n            if (typeof props.onFinish === 'function') {\n                props.onFinish()\n            } else {\n                route.push('/')\n            }\n        }\n\n        /**\n         * Event handler when TD on HTML report is clicked\n         * @param cell \n         */\n        const onClickTablecell = (cell: v2ColumnDataInterface) => {\n            try {\n                if (typeof cell.column?.tdClick === 'function') {\n                    cell.column?.tdClick(cell)\n                }   \n                return\n            } catch (e) {\n                console.error(e)\n            }\n        }\n\n        const getExpandedColumns = () => props.columns.reduce((a: any, c: v2ColumnInterface[]) => a.concat(c), [])\n            .filter((col: v2ColumnInterface) => col.value || col.ref)\n        \n        const toPDF = () => {\n            const html: any = window?.document?.getElementById(\"report-content\")\n            toPDFfromHTML(`\n                <html>\n                    <head> \n                        <style> \n                        table {\n                            border-collapse: collapse;\n                        }\n                        th, td {\n                            width: 4%;\n                            text-align: left;\n                            border: solid 1px black;\n                        }\n                        td {\n                            border-bottom: 1px solid rgb(165, 165, 165);\n                            padding: 0.6em;\n                            font-weight: 500;\n                            font-size: .8em;\n                        }\n                        </style>    \n                    </head>\n                <body> \n                 ${html.innerHTML}    \n                </body>\n                </html>\n            `)\n        }\n\n        const toCSV = () => {\n            const filename = `${Service.getLocationName()||'Unknown site'}-${props.title}-${props.subtitle}-${Service.getSessionDate()}`\n            toCsv(\n                [props.headers],\n                [\n                    ...props.csvData,\n                    [`Date Created: ${dayjs().format('DD/MMM/YYYY HH:MM:ss')}`],\n                    [`Quarter: ${props.csvQuarter || props.subtitle}`],\n                    [`HIS-Core Version: ${Service.getCoreVersion()}`],\n                    [`API Version: ${Service.getApiVersion()}`],\n                    [`Site UUID: ${Service.getSiteUUID()}`],\n                    [`Generated by: ${Service.getUserName()}`]\n                ],\n                filename\n            )\n        }\n\n        /**\n         * Create a table header and cell mapping\n         * @param data \n         */\n        const mapcolumnValues = (data: any) => {\n            data.forEach((record: any)=> {\n                const row = getExpandedColumns().map((column: v2ColumnInterface) => {\n                    let value = ''\n                    let styling = {}\n                    let colSpan = 1\n                    try {\n                        if (isEmpty(record)) {\n                            value = \"...\"\n                        }else if (typeof column.value === 'function') {\n                            value = column.value(record) as string\n                        } else {\n                            // Use the ref to map to a value inside the record\n                            value = record[column.ref] || ''\n                        }\n                    } catch (e) {\n                        value = '_ERROR_'\n                        console.error(e)\n                    }\n\n                    if (typeof column.dataStyle === 'function') {\n                        styling = column.dataStyle(record)\n                    }\n\n                    if (typeof column.colSpan === 'function') {\n                        colSpan = column.colSpan(record)\n                    }\n                    return {\n                        column,\n                        data: record,\n                        value: value,\n                        styling,\n                        colSpan,\n                        [column.ref || 'nada']: value\n                    }\n                })\n                reportData.value.push({ \n                    row, \n                    data: record, \n                    searchIndex: [...row, row.map((d: any) => d.value).join(' ')]\n                })\n            })\n        }\n\n        /**\n         * Initiates generation of table data through column data prop\n         */\n        watch(() => props.columnData, (data) => {\n            reportData.value = [];\n            if (Array.isArray(data)) {\n                mapcolumnValues(data)\n            }\n        }, { immediate: true, deep: true })\n\n        return {\n            sortColumn,\n            onClickTablecell,\n            toPDF,\n            toCSV,\n            finish,\n            headerRow,\n            sync, \n            search, \n            close, \n            arrowUp, \n            arrowDown, \n            document,\n            calendar,\n            sortOrder,\n            sectionOne,\n            columnSorted\n        }\n    }\n})\n","import { render } from \"./TableView.vue?vue&type=template&id=42d2e679&scoped=true&ts=true\"\nimport script from \"./TableView.vue?vue&type=script&lang=ts\"\nexport * from \"./TableView.vue?vue&type=script&lang=ts\"\n\nimport \"./TableView.vue?vue&type=style&index=0&id=42d2e679&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-42d2e679\"]])\n\nexport default __exports__","\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { IonPage, IonLoading, modalController } from \"@ionic/vue\"\nimport  v2Datatable from \"@/apps/CxCa/views/reports/moh/TableView.vue\"\nimport { v2ColumnDataInterface, v2ColumnInterface } from '@/components/DataViews/tables/v2PocDatatable/types';\nimport { CxCaReportService } from \"@/apps/CxCa/services/reports/cxca_report_service\"\nimport { toastDanger, toastWarning } from '@/utils/Alerts';\nimport DrillPatientIds from '../../../../../components/DrillPatientIds.vue';\nimport { toDate } from '@/utils/Strs';\nimport { MultiStepPopupForm } from \"@/utils/PopupKeyboard\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport { Option } from '@/components/Forms/FieldInterface'\nimport { isPlainObject } from \"lodash\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport dayjs from \"dayjs\";\nimport { cloneDeep } from 'lodash';\n\n\nconst reportData = ref<any>([])\nconst startDate = ref('')\nconst endDate = ref('')\nconst period = ref('')\nconst isLoading = ref(false)\nconst csvQuarter = ref('')\n//adding a new reactive variable to store csv data\nconst csvData = ref<any>([])\n\nexport default defineComponent({ \n    components: { \n        IonPage,\n        IonLoading,\n        v2Datatable,\n    },\n    setup() {\n        const totals = ref<any[]>([])\n\n        /**\n         * Ordering rows\n         */\n         const orderingRows = [\n            'screened_disaggregated_by_age',\n            'screened_disaggregated_by_hiv_status',\n            'screened_disaggregated_by_reason_for_visit',\n            'screened_disaggregated_by_screening_method',\n            'screening_results_hiv_positive',\n            'screening_results_hiv_negative',\n            'suspects_disaggregated_by_age',\n            'total_treated',\n            'total_treated_disaggregated_by_tx_option',\n            'referral_reasons',\n            'referral_feedback',\n            'family_planning'\n        ];\n\n        const mid =(data: []) => {\n            return Math.floor(data.length / 2);\n        }\n\n        const array1 = (data: [], mid : number) =>{\n            const half = data.slice(0, mid)\n            return half;\n        }\n\n        const array2 = (data: [], mid : number) =>{\n            const half = data.slice(mid)\n            return half;\n        }\n\n        const merge = (array1: any[], array2: any[]): any[] => {\n            const mergedArray: any[] = [];\n            for (let i = 0; i < array1.length; i++) {\n                mergedArray.push(array1[i].concat(array2[i]));\n            }\n            return mergedArray;\n        };\n        const processData = (data: any) => {\n            //to be displayed\n            const result: any = [];\n            //to be generated as csv\n            const csvresult: any = [];\n            const keys = Object.keys(data);\n            //doing this to show title\n            let previouskey: any;\n            //indicator whole number\n            let indicatorWholeNumber = 0\n            //indicator decimal notation\n            let indicatorDecimal = 0\n            //concatinated value of both indicator whole number and decimal used as the actual indicator\n            let indicator = \"\"\n\n            keys.forEach((key) => {\n                const values = Object.entries(data[key]);\n                values.forEach(([subKey, subValues]) => {\n                    if(previouskey != key){\n                        //before we push this to the array lets change the headers to accurately present the data\n                        //increment by 1\n                        indicatorWholeNumber = indicatorWholeNumber + 1\n                        //reset the decimal value to 0 after incrementing the whole number\n                        indicatorDecimal = 0\n                        mappedheaders.forEach((mappedKey) => {\n                            if(mappedKey[0] == key){\n                                key = mappedKey[1]\n                            }\n                        });\n                        result.push([indicatorWholeNumber, key, \"TH\"]);\n                        //csv format\n                        csvresult.push([indicatorWholeNumber, key, \"\"]);\n                    }\n                    if (Array.isArray(subValues)) {\n                        indicatorDecimal = indicatorDecimal + 1\n                        //concatinating the value\n                        indicator = indicatorWholeNumber + \".\" + indicatorDecimal\n                        result.push([indicator, subKey, subValues]);\n                        //csv format\n                        csvresult.push([indicator, subKey, subValues]);\n                    } else {\n                        result.push([indicator, subKey, []]);\n                        //csv format\n                        csvresult.push([indicator, subKey, []]);\n                    }\n                    //keep the previous key/title\n                    previouskey = key\n                });\n            });\n            //save to csv data for generating csv file\n            csvData.value = csvresult\n            return result;\n        };\n\n        const sortData = (data: Record<string, any>) => {\n            const sortedData: Record<string, any> = {};\n            orderingRows.forEach((key) => {\n                if (data[key]) {\n                sortedData[key] = data[key];\n                }\n            });\n            return sortedData;\n        };\n\n        // Define the flattened object array type\n        interface FlattenedObject {\n        category: string;\n        value: number;\n        }\n        // Flatten the object into an array\n        const flattenedArray: FlattenedObject[] = [];\n        const flattenObject = (obj: Record<string, any>, category: any) => {\n            for (const key in obj) {\n                const value = obj[key];\n\n                if (typeof value === 'object' && !Array.isArray(value)) {\n                flattenObject(value, category ? `${category} - ${key}` : key);\n                } else {\n                flattenedArray.push({ category, value });\n                }\n            }\n        };\n\n        const drilldown = async (title: string, patientIdentifiers: number[]) => {\n            (await modalController.create({\n                component: DrillPatientIds,\n                backdropDismiss: false,\n                cssClass: 'large-modal',\n                componentProps: {\n                    title,\n                    subtitle: period,\n                    patientIdentifiers,\n                    onFinish: () => modalController.getTop().then(v => v && modalController.dismiss())\n                }\n            })).present()\n        }\n\n        const processArray = (dataArray:any) => {\n        \n        \n            dataArray.forEach((entry: (string | any[])[]) => {\n            // Step 1: Swap \"TH\" with \"\"\n            entry[2] = entry[2] === 'TH' ? \" \" : entry[2];\n\n            // Step 2: Replace arrays with their length\n            if (Array.isArray(entry[5])) {\n            entry[5] = \"\" + entry[5].length;\n            }\n\n            // Step 2: Replace arrays with their length\n            if (Array.isArray(entry[2])) {\n            entry[2] = \"\" + entry[2].length;\n\n            // Step 1: Swap \"TH\" with \"\"\n            entry[5] = entry[5] === 'TH' ? \" \" : entry[5];\n            }\n        });\n        return dataArray\n        };\n        \n        /**\n         * ordering of columns\n         */\n        const order = [\n            'age_group',\n            'cryotherapy',\n            'thermocoagulation',\n            'leep',\n            'via_deffered',\n            'via_reffered',\n            'suspected_reffered'\n        ];\n        //mapping to show actual report headers\n        const mappedheaders = [\n            [\"family_planning\", \"Offered family planning services\"],\n            [\"referral_feedback\", \"Number of clients with referral feedback\"],\n            [\"referral_reasons\", \"Number of clients referred disaggregated by referral reasons\"],\n            [\"screened_disaggregated_by_age\", \"Number of clients screened for cervical cancer disaggregated by age\"],\n            [\"screened_disaggregated_by_hiv_status\", \"Number of clients screened for cervical cancer disaggregated by HIV status\"],\n            [\"screened_disaggregated_by_reason_for_visit\", \"Number of clients screened for cervical cancer disaggregated by reason for visit\"],\n            [\"screened_disaggregated_by_screening_method\", \"Number of clients screened disaggregated by screening method\"],\n            [\"screening_results_hiv_negative\", \"Cervical cancer screening results (HIV- / unknown)\"],\n            [\"screening_results_hiv_positive\", \"Cervical cancer screening results (HIV+)\"],\n            [\"suspects_disaggregated_by_age\", \"Cervical Cancer suspects disaggregated by age\"],\n            [\"total_treated\", \"Total number of clients treated\"],\n            [\"total_treated_disaggregated_by_tx_option\", \"Number of clients treated disaggregated by treatment option\"]\n        ]\n        //csv headers\n        const csvheaders = [\n            'Indicator #', \n            'Name of Indicator', \n            'Value', \n            'Indicator #', \n            'Name of Indicator', \n            'Value'\n        ];\n\n        //blank spacing for csv spacing\n        const spacing = 5;\n\n\n        /**\n         * Table column definition and value mapping\n         */\n        const columns: Array<v2ColumnInterface[]> = [\n            [\n                {\n                    label: \"indicator #\",\n                    ref: \"\"\n                },\n                {\n                    label: \"Name of indicator\",\n                    ref: \"\"\n                },\n                {\n                    label: \"value\",\n                    ref: \"\"\n                },\n                {\n                    label: \"indicator #\",\n                    ref: \"\"\n                },\n                {\n                    label: \"Name of indicator\",\n                    ref: \"\"\n                },\n                {\n                    label: \"value\",\n                    ref: \"\"\n                },\n            ],\n            [\n                {\n                    label: \"Indicator #\",\n                    ref: \"data.indicatorOne\",\n                    secondaryLabel: \"Indicator #\",\n                    value: (data: any) => data.indicatorOne\n                }, \n                {\n                    label: \"Name of Indicator\",\n                    ref: \"data.nameOfIndicatorOne\",\n                    secondaryLabel: \"Name of Indicator\",\n                    value: (data: any) => data.nameOfIndicatorOne,\n                    dataStyle: (data: any) => {\n                        if(data.valueOne === \"TH\"){\n                            return {\n                                fontWeight: 'bold'\n                            }\n                        }\n                        return {\n                            fontWeight: 'normal'\n                        }                        \n                    },\n                    colSpan: (data: any) => {\n                        if(data.valueOne === \"TH\"){\n                            return 2\n                        } \n                        return 1\n                    }\n                },\n                {\n                    label: \"value\",\n                    ref: \"data.valueOne\",\n                    secondaryLabel: \"Value\",\n                    value: (data: any) => {\n                        if(Array.isArray(data.valueOne)){\n                            return data.valueOne.length\n                        }else{\n                            return data.valueOne\n                        }\n                    },\n                    tdClick: ({ column, data }: v2ColumnDataInterface) => drilldown(\n                        `${data.indicatorOne} ${data.nameOfIndicatorOne}`, data.valueOne\n                    )\n                }, \n                {\n                    label: \"Indicator #\",\n                    ref: \"data.indicatorTwo\",\n                    secondaryLabel: \"Indicator #\",\n                    value: (data: any) => data.indicatorTwo\n                }, \n                {\n                    label: \"Name of Indicator\",\n                    ref: \"data.nameOfIndicatorTwo\",\n                    secondaryLabel: \"Name of Indicator\",\n                    value: (data: any) => data.nameOfIndicatorTwo,\n                    dataStyle: (data: any) => {\n                        if(data.valueTwo === \"TH\"){\n                            return {\n                                fontWeight: 'bold'\n                            }\n                        }\n                        return {\n                            fontWeight: 'normal',\n                        }                        \n                    },\n                    colSpan: (data: any) => {\n                        if(data.valueTwo === \"TH\"){\n                            return 2\n                        } \n                        return 1\n                    }\n                },\n                {\n                    label: \"value\",\n                    ref: \"data.valueTwo\",\n                    secondaryLabel: \"Value\",\n                    value: (data: any) => {\n                        if(Array.isArray(data.valueTwo)){\n                            return data.valueTwo.length\n                        }else{\n                            return data.valueTwo\n                        }\n                    },\n                    tdClick: ({ column, data }: v2ColumnDataInterface) => drilldown(\n                        `${data.indicatorTwo} ${data.nameOfIndicatorTwo}`, data.valueTwo\n                    )\n                },   \n            ],\n        ]\n        /**\n         * Generates report by start date and end date\n         */\n         const generate = async () => {\n            if (!(startDate.value && endDate.value))  {\n                return toastWarning('Start date and end date required!')\n            }\n            isLoading.value = true\n            reportData.value = []\n            const report = new CxCaReportService()\n            report.startDate = startDate.value\n            report.endDate = endDate.value\n            try {\n                const rawReport = (await report.getClinicReport('SCREENED FOR CXCA'))\n                //sorting the data basing on the template order\n                const sortedDataObject = sortData(rawReport)\n                //formating to array\n                const array = processData(sortedDataObject)\n                //spliting the array and merging it\n                const midIndex = mid(array)\n                //merging\n                const formattedArray = merge(array1(array, midIndex), array2(array, midIndex))\n                //copy the array and passit to the csvData.value\n                const tempArray = cloneDeep(formattedArray)\n                //csv format\n                csvData.value = processArray(tempArray)\n                \n                //convert to desired array of objects format\n                const convertedArray = formattedArray.map((item) => {\n                    const obj = {\n                        indicatorOne: item[0],\n                        nameOfIndicatorOne: item[1],\n                        valueOne: item[2],\n                        indicatorTwo: item[3],\n                        nameOfIndicatorTwo: item[4],\n                        valueTwo: item[5]\n                    };\n                    return obj;\n                });\n\n                reportData.value = convertedArray\n            } catch (e) {\n                toastDanger(\"Unable to generate report!\")\n                console.error(e)\n            }\n            isLoading.value = false\n        }\n        /**\n         * Loads a dialogue to allow users to configure start and end date\n         */\n         const configure = () => MultiStepPopupForm([\n            {\n                id: 'year',\n                helpText: 'Select Year',\n                type: FieldType.TT_NUMBER,\n                computedValue: (v: Option) => v.value,\n                validation: (v: Option) => {\n                    const year = isPlainObject(v) ? v.value : -1\n                    return Validation.validateSeries([\n                        () => Validation.required(v),\n                        () => {\n                            if (isNaN(parseInt(`${year}`))) {\n                                return ['Invalid year']\n                            }\n                            return null\n                        },\n                        () => Validation.rangeOf(v, 2000, HisDate.getYear(Service.getSessionDate()))\n                    ])\n                }\n            },\n            {\n                id: 'month',\n                helpText: 'Select Month',\n                type: FieldType.TT_SELECT,\n                validation: (v: Option) => Validation.required(v),\n                computedValue: (v: Option) => v.value,\n                options: () => {\n                    return [\n                        {label: 'January', value: '01'},\n                        {label: 'February', value: '02'},\n                        {label: 'March', value: '03'},\n                        {label: 'April', value: '04'},\n                        {label: 'May', value: '05'},\n                        {label: 'June', value: '06'},\n                        {label: 'July', value: '07'},\n                        {label: 'August', value: '08'},\n                        {label: 'September', value: '09'},\n                        {label: 'October', value: '10'},\n                        {label: 'November', value: '11'},\n                        {label: 'December', value: '12'}\n                    ]\n                }\n            }\n        ], \n        (f: any) => {\n            startDate.value = `${f.year.value}-${f.month.value}-01`\n            endDate.value = dayjs(new Date(startDate.value).toISOString()).endOf(\"month\").format(\"YYYY-MM-DD\")\n            period.value = `Period (${toDate(startDate.value)} to ${toDate(endDate.value)})`\n            modalController.dismiss()\n            csvQuarter.value = `${toDate(startDate.value)} to ${toDate(endDate.value)}`\n            generate()\n        })\n\n        /**\n         * Initialization code when the report is empty!\n         */\n        onMounted(() => !reportData.value.length && configure())\n\n\n        return  {\n            columns,\n            isLoading,\n            reportData,\n            period,\n            csvQuarter,\n            generate,\n            configure,\n            order,\n            csvheaders,\n            spacing,\n            csvData\n        }\n    }\n})\n\n","import { render } from \"./Monthly_CxCa_MOH_Report.vue?vue&type=template&id=0144b536&ts=true\"\nimport script from \"./Monthly_CxCa_MOH_Report.vue?vue&type=script&lang=ts\"\nexport * from \"./Monthly_CxCa_MOH_Report.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\n\n\nexport const AGE_GROUPS = [\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\n\nexport class CxCaReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPepfarReport(reportName: string) {\n        return this.getReport('pepfar_cxca', {'report_name': reportName})\n    }\n    getClinicReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    getMohReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    \n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n   \n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': 24}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TableView.vue?vue&type=style&index=0&id=42d2e679&scoped=true&lang=css\""],"sourceRoot":""}