{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/Examination.vue?5bb9","webpack:///./src/apps/ANC/Services/anc_examination_service.ts","webpack:///./src/apps/ANC/Views/Encounters/Examination.vue","webpack:///./src/apps/ANC/Views/Encounters/Examination.vue?4167","webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/components/Keyboard/HisKbConfigurations.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?f5b0","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/apps/ANC/Services/anc_current_pregnancy.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","fields","skipSummary","onFinishAction","onFinish","cancelDestinationPath","cancelDestination","_","FUNDAL_CM_TO_WEEKS","AncExaminationService","patientID","providerID","gestationWeeks","this","getEquivalentFundalHeight","AppEncounterService","getJson","programID","res","dateofLmp","p","AncCurrentPregnancyService","parseInt","calculateWeekOfFirstVisit","fundalHeight","cm","weeks","defineComponent","components","IonPage","mixins","EncounterMixinVue","data","service","watch","ready","handler","loadPregnancyStatus","getFields","immediate","methods","computedData","createEncounter","resolveObs","saveObservationList","nextTask","diagnosisOptions","onMap","ConceptService","getConceptsByCategory","name","map","c","toOption","isChecked","id","helpText","type","FieldType","TT_SELECT","validation","v","Validation","required","computedValue","buildValueCoded","value","options","yesNoOptions","buildValueText","condition","f","ultrasound","label","mapStrToOptions","TT_GROUP_SELECTOR","validateSeries","other","subGroupOptions","isEmpty","subGroupOptionValue","subgroupTitle","obs","push","concept","presentation","TT_NUMBER","dynamicHelpText","title","beforeNext","match","includes","alertConfirmation","expectedFundalHeight","expectedFundalHeightForGestationWeeks","val","rangeOf","buildValueNumber","buildObs","config","keypad","NUMBERS_WITH_UNKNOWN","min","max","ok","fetal_heart_beat","fetal_movement_felt","yesNoUnknownOptions","TT_MULTIPLE_SELECT","d","onValueUpdate","listData","l","o","footerBtns","slot","onClickComponentEvents","refreshOptions","onClick","__exports__","DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","FlowState","dformat","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","HisStandardForm","patient","facts","route","params","patient_id","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","deep","computed","patientDashboardUrl","runflowState","state","states","split","username","provider","find","person_id","$router","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","person","names","latestName","given_name","family_name","items","i","path","toYesNoOption","values","mapOptions","option","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","e","_resolveDynamicComponent","formType","activeField","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","String","formData","$emit","isCondition","ignored","undefined","prop","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","description","text","info","PatientProgramService","enrollProgram","setStateDate","date","setStateId","updateState","lnmpDate","theDate","Date","setDate","getDate","today","s","Math","floor","period","dayjs","subtract","endOf","format","setMonth","getMonth","month","AppendleadingZero","day","getFullYear"],"mappings":"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","file":"js/chunk-61f9fc74.c99171df.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { AncCurrentPregnancyService } from \"@/apps/ANC/Services/anc_current_pregnancy\";\n\nexport const FUNDAL_CM_TO_WEEKS: Record<string, number> = {\n  '12' : 13,\n  '13' : 14,\n  '14' : 16,\n  '15' : 17,\n  '16' : 18,\n  '17' : 19,\n  '18' : 20,\n  '19' : 21,\n  '20' : 22,\n  '21' : 24,\n  '22' : 25,\n  '23' : 25, // Not in the actual CM to Weeks chart reference documentation in clinics..\n  '24' : 27,\n  '25' : 28,\n  '26' : 29,\n  '27' : 30,\n  '28' : 32,\n  '29' : 33,\n  '30' : 34,\n  '31' : 35,\n  '32' : 36,\n  '33' : 37,\n  '34' : 38,\n  '35' : 39,\n  '36' : 40,\n  '37' : 42\n}\n\nexport class AncExaminationService extends AppEncounterService {\n  gestationWeeks: number;\n  constructor(patientID: number, providerID: number){\n    super(patientID, 98, providerID)\n    this.gestationWeeks = 0\n  }\n\n  expectedFundalHeightForGestationWeeks() {\n    return this.getEquivalentFundalHeight(this.gestationWeeks)\n  }\n\n  async loadPregnancyStatus() {\n    const res = await AppEncounterService.getJson(`programs/${this.programID}/patients/${this.patientID}`)\n    if (res) {\n      const dateofLmp = res['date_of_lnmp']\n      if (dateofLmp) {\n        const p = new AncCurrentPregnancyService(this.patientID, this.providerID)\n        this.gestationWeeks = parseInt(p.calculateWeekOfFirstVisit(res['date_of_lnmp']))\n      }\n    }\n  }\n\n  getEquivalentFundalWeeks(fundalHeight: number): number {\n    if (fundalHeight < 12) {\n      return FUNDAL_CM_TO_WEEKS['12']\n    }\n    if (fundalHeight > 37) {\n      return FUNDAL_CM_TO_WEEKS['37']\n    }\n    return FUNDAL_CM_TO_WEEKS[fundalHeight]\n  }\n\n  getEquivalentFundalHeight(gestationWeeks: number) {\n    for (const cm in FUNDAL_CM_TO_WEEKS) {\n      const weeks = FUNDAL_CM_TO_WEEKS[cm]\n      if (gestationWeeks <= weeks) { \n        return parseInt(cm)\n      }\n    }\n    return gestationWeeks > 42 ? 37 : gestationWeeks < 13 ? 12 : 0\n  }\n}\n","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { AncExaminationService } from \"@/apps/ANC/Services/anc_examination_service\"\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { ConceptService } from '@/services/concept_service'\nimport { isEmpty } from 'lodash'\nimport { alertConfirmation } from '@/utils/Alerts'\nimport { NUMBERS_WITH_UNKNOWN } from \"@/components/Keyboard/HisKbConfigurations\"\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    service: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n            this.service = new AncExaminationService(this.patientID, this.providerID)\n            await this.service.loadPregnancyStatus()\n            this.fields = this.getFields() as Field[]\n        } \n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      await this.service.createEncounter()\n      await this.service.saveObservationList((await this.resolveObs(computedData)))\n      this.nextTask()\n    },\n    diagnosisOptions(onMap: (item: Option) => Option) {\n        return [...ConceptService.getConceptsByCategory('anc_diagnosis'),{ name: 'None'}]\n            .map((c: any) => (onMap({\n                ...this.toOption(c.name), isChecked: false \n            })))\n    },\n    getFields() {\n      return [\n        {\n          id: 'ultrasound',\n          helpText: 'Ultrasound scan results available',\n          type: FieldType.TT_SELECT,\n          validation: (v: Option) => Validation.required(v),\n          computedValue: (v: Option) => this.service.buildValueCoded(\n            'Ultrasound', v.value\n          ),\n          options: () => this.yesNoOptions()\n        },\n        {\n            id: 'multiple_gestation',\n            helpText: 'Number of fetuses',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Multiple gestation', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => [\n                { label: 'One', value: 1 },\n                { label: 'Two', value: 2 },\n                { label: 'Three', value: 3 },\n                { label: 'Four', value: 4 },\n                { label: 'Unknown', value: 'Unknown' }\n            ]\n        },\n        {\n            id: 'liquor',\n            helpText: 'Liquor',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'LIQUOR', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.mapStrToOptions([\n                'Adequate',\n                'Not adequate',\n                'Unknown'\n            ])\n        },\n        {\n            id: 'lie',\n            helpText: 'Lie',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Lie', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.mapStrToOptions([\n                'Longitudinal',\n                'Transverse',\n                'Unknown'\n            ])\n        },\n        {\n            id: 'fetal_heart_movement_seen',\n            helpText: 'Fetal heart movement seen',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueCoded(\n                'Fetal heart movement seen', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'presentation',\n            helpText: 'Presentation',\n            type: FieldType.TT_GROUP_SELECTOR,\n            validation: (v: Option) => this.validateSeries([\n                () => Validation.required(v),\n                () => {\n                    /**\n                     * Validate if Presentation's value is selected\n                     */\n                    if (v && !v.value) {\n                        return [`Presentation cannot be Empty!`]\n                    } \n                    return null\n                },\n                () => {\n                    /**\n                     * Validate if option has subgroup options but value is not selected\n                     */\n                    if (v && v?.other?.subGroupOptions && isEmpty(v?.other?.subGroupOptionValue)) {\n                        return [`${v?.other?.subgroupTitle || 'Subgroup'} has no value selected`]\n                    }\n                    return null\n                },\n                () => {\n                    /**\n                     * Validate if the subgroup with Options has selected items\n                     */\n                    if (v && !isEmpty(v?.other?.subGroupOptionValue) \n                        && !isEmpty(v?.other?.subGroupOptionValue?.other?.options)\n                        && !v?.other?.subGroupOptionValue?.value) {\n                            return [`${v?.other?.subGroupOptionValue?.label}'s value isnt selected`]\n                        }\n                    return null\n                }\n            ]),\n            computedValue: (v: Option) => {\n                const obs = [this.service.buildValueText('Presentation', v.label)]\n                if (v?.other?.subGroupOptionValue?.value) {\n                    obs.push(this.service.buildValueText(\n                        'Position', v?.other?.subGroupOptionValue?.value\n                    ))\n                }\n                return obs\n            },\n            options: (f: any) => {\n                const toOption = (label: string, value='',other={}) => ({\n                    label, value, other\n                })\n                const subGroupOptions = [\n                    toOption('Vertex', '', {\n                        options: this.mapStrToOptions([\n                            'Left Occipito Anterior',\n                            'Left Occipito Transverse',\n                            'Left Occipito Posterior',\n                            'Right Occipito Anterior',\n                            'Right Occipito Transverse',\n                            'Right Occipito Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    this.toOption('Oblique'),\n                    this.toOption('Transverse'),\n                    this.toOption('Breech',{\n                        options: this.mapStrToOptions([\n                            'Left Sacro Anterior',\n                            'Left Sacro Transverse',\n                            'Left Sacro Posterior',\n                            'Right Sacro Anterior',\n                            'Right Sacro Transverse',\n                            'Right Sacro Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Face', '', {\n                        concept: 'Position',\n                        options: this.mapStrToOptions([\n                            'Left Mento Anterior',\n                            'Left Mento Transverse',\n                            'Left Mento Posterior',\n                            'Right Mento Anterior',\n                            'Right Mento Transverse',\n                            'Right Mento Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Shoulder', '', {\n                        options: this.mapStrToOptions([\n                            'Left Acromion Dorsal Anterior',\n                            'Left Acromion Dorsal Transverse',\n                            'Left Acromion Dorsal Posterior',\n                            'Right Acromion Dorsal Anterior',\n                            'Right Acromion Dorsal Transverse',\n                            'Right Acromion Dorsal Posterior',\n                            'Unknown'\n                        ])\n                    })\n                ]\n                return f.presentation  ? f.presentation : [\n                    toOption('Cephalic', '', {\n                        subGroupOptions,\n                        subgroupTitle: 'Cephalic Position',\n                        options: this.mapStrToOptions([\n                            'Right Occipito Anterior',\n                            'Left Occipito Anterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Breech', '', {\n                        subGroupOptions,\n                        subgroupTitle: 'Breech Position',\n                        options: this.mapStrToOptions([\n                            'Right Sacro Anterior',\n                            'Left Sacro Anterior',\n                            'Unknown'\n                        ]),\n                    }),\n                    this.toOption('Ball'),\n                    this.toOption('Nil palpable')\n                ] as Option[]\n            }\n        },\n        {\n            id: 'enter_fundal_height',\n            helpText: 'Fundal height (cm)',\n            type: FieldType.TT_NUMBER,\n            dynamicHelpText: () => {\n                const title = 'Fundal height (cm)'\n                if (this.service.gestationWeeks) {\n                    return `${title} (${this.service.gestationWeeks}wks/${this.service.getEquivalentFundalHeight(this.service.gestationWeeks)} cm)`\n                }\n                return title\n            },\n            beforeNext: async (v: Option, f: any) => {\n                if (v && `${v.value}`.match(/unknown/i) && !['Nil palpable', 'Ball'].includes(f.presentation.value)) {\n                    return (await alertConfirmation(`Do you want to proceed with Unknown Fundal height?`)) ? true : false\n                }\n                const expectedFundalHeight = this.service.expectedFundalHeightForGestationWeeks()\n                const val: string | number = v ? parseInt(v.value as string) : -1\n                if (this.service.gestationWeeks && (v && typeof val === 'number') \n                    && (val < expectedFundalHeight || val > expectedFundalHeight)) {\n                    return (await alertConfirmation(`\n                        Fundal height is not equal to expected ${expectedFundalHeight} cm from gestation weeks of ${this.service.gestationWeeks} .\n                        Are you sure about this value?`\n                    )) ? true : false\n                }\n                return true\n            },\n            validation: (v: Option) => this.validateSeries([\n                () => Validation.required(v),\n                () => v && !`${v.value}`.match(/unknown/i) \n                    ? Validation.rangeOf(v, 10, 45) \n                    : null\n            ]),\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown' \n                    ? this.service.buildValueNumber('Fundus', v.value as number)\n                    : this.service.buildObs('Fundus', {\n                        'value_coded': v.value,\n                        'value_numeric': 0\n                    })\n            },\n            config: {\n                keypad: NUMBERS_WITH_UNKNOWN\n            }\n        },\n        {\n            id: 'fetal_heart_beat',\n            helpText: 'Fetal heart beat',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Fetal Heart Beat', v.value),\n            options: () => this.mapStrToOptions([\n                'Heard',\n                'Not heard'\n            ])\n        },\n        {\n            id: 'fetal_heart_rate',\n            helpText: 'Fetal heart rate',\n            type: FieldType.TT_NUMBER,\n            validation: (v: Option) => Validation.required(v),\n            beforeNext: async (v: Option) => {\n                const min = 120\n                const max = 140\n                const val: string | number = v ? parseInt(v.value as string) : -1\n                if (v && typeof val === 'number') {\n                    if (val < min || val > max) {\n                        const ok = await alertConfirmation(`\n                            The value is out of Range of ${min} - ${max}.\n                            Are you sure about this value?`\n                        )\n                        return ok ? true : false\n                    }\n                }\n                return true\n            },\n            condition: (f: any) => f.fetal_heart_beat.value === 'Heard',\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown'\n                    ? this.service.buildValueNumber('Fetal heart movement seen', `${v.value}`)\n                    : this.service.buildObs('Fetal heart movement seen', {\n                        'value_numeric': 0, 'value_coded': v.value\n                    })\n            },\n            config: {\n                keypad: NUMBERS_WITH_UNKNOWN\n            }\n        },\n        {\n            id: 'enter_fetal_movement',\n            helpText: 'Fetal movement heard',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueCoded(\n                'Fetal movement heard', `${v.value}`),\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'fetal_movement_felt',\n            helpText: 'Fetal movement felt',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            condition: (f: any) => !['Ball', 'Nil palpable'].includes(f.presentation.label),\n            computedValue: (v: Option) => this.service.buildValueCoded('Fetal movement felt', `${v.value}`),\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'last_fmf',\n            helpText: 'Last fetal movement felt (in Weeks)',\n            type: FieldType.TT_NUMBER,\n            validation: (v: Option) => Validation.required(v),\n            condition: (f: any) => f.fetal_movement_felt.value != 'Unknown',\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown'\n                    ? this.service.buildValueNumber('Last Fetal movement felt', v.value as number)\n                    : this.service.buildObs('Last Fetal movement felt', {\n                        'value_numeric': 0, 'value_coded': v.value\n                    })\n            },\n            options: () => this.yesNoUnknownOptions()\n        },\n        {\n            id: 'diagnosis',\n            helpText: 'Diagnosis',\n            type: FieldType.TT_MULTIPLE_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option[]) => {\n                if (v && v.map(d => d.value).includes('None')) {\n                    return []\n                }\n                return v.map(d => this.service.buildValueCoded(d.label, 'Yes'))\n            },\n            onValueUpdate(listData: Option[], value: Option) {\n                return listData.map(l => {\n                    if (value.value === 'None' && l.value !='None') {\n                        l.isChecked = false\n                    }\n                    if (value.value != 'None' && value.isChecked && l.value === 'None') {\n                        l.isChecked = false\n                    }\n                    return l\n                })\n            },\n            options: () => this.diagnosisOptions(o => o),\n            config: {\n                footerBtns: [\n                    {\n                        name: \"None\",\n                        slot: \"end\",\n                        onClickComponentEvents: {\n                            refreshOptions: () => {\n                                return this.diagnosisOptions(o => {\n                                    o.isChecked = o.label === 'None'\n                                    return o\n                                })\n                            }\n                        },\n                        onClick: () => 'None'\n                    }\n                ]\n            }\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Examination.vue?vue&type=template&id=64dbe1c6&ts=true\"\nimport script from \"./Examination.vue?vue&type=script&lang=ts\"\nexport * from \"./Examination.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","/**\n * Default keyboard configurations.\n * \n * Configuration consists of one or two keyboard layouts\n * to be displayed at once.\n */\n\nimport {\n    NUMBER_PAD_LO,\n    MONTHLY_DAYS_LO,\n    ALPHABETICAL_LO,\n    QWERTY_LO,\n    SYMBOLS,\n} from \"@/components/Keyboard/KbLayouts\";\n\nexport const SYMBOLS_CONFIG = [\n    SYMBOLS,\n    [\n        ['', 'Delete']\n    ]\n]\n\nexport const NUMBERS_ONLY = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS_WITH_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITH_ESTIMATE = [\n    NUMBER_PAD_LO,\n    [\n        ['N/A'],\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITHOUT_NA_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS = [\n    NUMBER_PAD_LO,\n    [\n        ['Unknown', 'Delete'],\n        ['Qwerty', 'A-Z'],\n    ]\n]\n\nexport const MONTHLY_DAYS = [\n    MONTHLY_DAYS_LO,\n    [\n        ['Unknown']\n    ]\n]\n\nexport const A_TO_Z = [\n    ALPHABETICAL_LO,\n    [\n        ['0-9', 'Delete'],\n        ['Qwerty', 'Unknown'],\n        ['', 'Space']\n    ]\n]\n\nexport const QWERTY = [\n    QWERTY_LO,\n    [\n        ['', 'Delete'],\n        ['?123', '0-9'],\n        ['Space', 'Unknown']\n    ]\n]\n\n/**\n * Navigation map for switching between different keyboard layouts\n */\nexport const KEY_BTN_NAV = [\n    {\n        btn: '0-9',\n        keyboard: NUMBERS\n    },\n    {\n        btn: '?123',\n        keyboard: SYMBOLS_CONFIG\n    },\n    {   \n        btn: 'A-Z',\n        keyboard: A_TO_Z \n    },\n    {\n        btn: 'Qwerty',\n        keyboard: QWERTY\n    }\n]\n","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { PatientProgramService } from \"@/services/patient_program_service\"\nimport dayjs from \"dayjs\";\nimport { AppendleadingZero } from \"@/utils/Strs\";\n\nexport class AncCurrentPregnancyService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 81, providerID)\n    }\n\n    async enrollPatient() {\n        const program = new PatientProgramService(this.patientID)\n        /**\n         * TODO: Check if patient is already enrolled first\n        */\n        await program.enrollProgram()\n        program.setStateDate(this.date)\n        program.setStateId(118) //Currently on treatment state... Please remove this ID hack if you can\n        await program.updateState()\n    }\n\n    calculateWeekOfFirstVisit(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        const today: any = new Date(this.getDate());\n        const s = today - theDate;\n        return String(Math.floor(s / (24 * 60 * 60 * 7 * 1000)));\n    }\n\n    calculateGestationDateFromPeriod(period: number) {\n        return dayjs(this.date).subtract(period, 'months').endOf('month').format('YYYY-MM-DD')\n    }\n\n    estimateDelieveryDate(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        theDate.setMonth(theDate.getMonth() + 9);\n        const month = AppendleadingZero(theDate.getMonth()+1)\n        const day = AppendleadingZero(theDate.getDate())\n        return `${theDate.getFullYear()}-${month}-${day}`\n    }\n}\n"],"sourceRoot":""}