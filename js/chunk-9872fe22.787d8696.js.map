{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/Treatment.vue?4aee","webpack:///./src/apps/ANC/Views/Encounters/Treatment.vue?4548","webpack:///./src/apps/ANC/Views/Encounters/Treatment.vue","webpack:///./src/apps/ANC/Views/Encounters/Treatment.vue?d01c","webpack:///./src/services/drug_order_service.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?f5b0","webpack:///./src/services/drug_service.ts","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/apps/ANC/Services/anc_treatment_service.ts","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/apps/ANC/Services/anc_drug_set.ts","webpack:///./src/components/Forms/SIngleTouchField.vue?a3f9","webpack:///./src/components/Forms/SIngleTouchField.vue","webpack:///./src/components/Forms/SIngleTouchField.vue?5786"],"names":["_withId","_withScopeId","_pushScopeId","_hoisted_1","_createTextVNode","_hoisted_2","_createVNode","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_popScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_input","_component_ion_icon","_component_ion_button","_component_ion_col","_component_ion_row","_component_ion_grid","_component_ion_label","_component_ion_item","_component_ion_list","_component_ion_content","_component_ion_footer","_component_ion_page","_openBlock","_createBlock","default","_","style","_Fragment","_renderList","activeDrugs","drug","drugIndex","key","readonly","onClick","$event","editDrugName","value","drug_name","placeholder","editDrugFrequency","frequency","editDrugDuration","duration","length","size","disabled","id","push","defaultDrugObj","color","icon","add","_createCommentVNode","splice","trashBin","drugSets","dset","dindex","detail","appendDrugSetValues","button","_toDisplayString","label","cancelDestination","slot","clear","isSubmitting","onFinish","defineComponent","components","IonHeader","IonIcon","IonRow","IonLabel","IonGrid","IonCol","IonPage","IonContent","IonTitle","IonInput","IonButton","IonFooter","IonToolbar","mixins","EncounterMixinVue","setup","data","defaultDrugs","service","computed","selectedDrugNames","this","map","d","watch","ready","handler","AncTreatmentService","patientID","providerID","AncDrugSetService","getDrugSets","name","description","other","drugs","DrugService","getDrugs","immediate","methods","formIsEmpty","alertConfirmation","createEncounter","saveValueCodedObs","nextTask","formIsComplete","toastWarning","submitTreatment","PatientPrintoutService","printVisitSummaryLbl","console","error","every","drugSet","reduce","a","c","concat","filter","includes","drugItem","launchEditor","helpText","type","FieldType","TT_SELECT","defaultValue","validation","v","validateSeries","Validation","required","options","drug_id","dose","units","config","showKeyboard","isFilterDataViaApi","mapStrToOptions","Object","keys","DRUG_FREQUENCIES","TT_NUMBER","ok","field","callback","modalController","create","component","TouchField","backdropDismiss","cssClass","componentProps","dismissType","currentField","modal","present","__exports__","DrugOrderService","orders","postJson","getProgramID","dispensations","order","getSessionDate","getJson","pageSize","Service","drugID","date","params","patientId","FlowState","dformat","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","flowState","SET_PROVIDER","isBdeMode","isBDE","HisStandardForm","patient","fields","facts","route","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","deep","patientDashboardUrl","runflowState","state","states","split","username","provider","find","person_id","$router","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","toastDanger","ProgramService","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","b","usernameA","usernameB","p","isEmpty","person","names","latestName","given_name","family_name","toOption","items","i","path","yesNoOptions","toYesNoOption","values","mapOptions","option","yesNoUnknownOptions","resolveObs","obs","tag","accum","cur","Array","isArray","Promise","all","inArray","arr","expression","e","condition","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","String","formData","computedData","$emit","dispenseTTV","dispensed","orderID","order_id","updateDispensationOrders","createOrders","ttvDrugObj","getEncounterID","o","buildDrugOrderObj","dispensation","AppEncounterService","forEach","quantity","drug_inventory_id","Date","expiryDate","setDate","getDate","dailyEquivalentDose","parseFloat","toStandardHisFormat","isCondition","ignored","undefined","prop","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","text","info","setID","void","sets","setKey","k","_withCtx","_KeepAlive","currentFieldig","preset","valueClearIndex","fdata","cdata","computedFormData","activationState","onValue","onValueUpdate","onOnValue","onFieldValue","disableBtn","onClose","onClear","onDone","buildAsyncComponents","COMPONENT_REFS","defineAsyncComponent","dismiss","back","errors","join"],"mappings":"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","file":"js/chunk-9872fe22.787d8696.js","sourcesContent":["export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Treatment.vue?vue&type=style&index=0&id=257a2a3f&scoped=true&lang=css\"","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-257a2a3f\")\n\n_pushScopeId(\"data-v-257a2a3f\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Treatment\")\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"thead\", null, [\n  /*#__PURE__*/_createVNode(\"tr\", { class: \"his-sm-text\" }, [\n    /*#__PURE__*/_createVNode(\"th\", null, \"Drug\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Frequency\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Duration (Days)\"),\n    /*#__PURE__*/_createVNode(\"th\")\n  ])\n], -1)\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Add \")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Cancel \")\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Clear \")\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" Finish \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_input = _resolveComponent(\"ion-input\")\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_ion_label = _resolveComponent(\"ion-label\")\n  const _component_ion_item = _resolveComponent(\"ion-item\")\n  const _component_ion_list = _resolveComponent(\"ion-list\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withId(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withId(() => [\n              _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n                default: _withId(() => [\n                  _hoisted_1\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_grid, null, {\n            default: _withId(() => [\n              _createVNode(_component_ion_row, {\n                style: {\"height\":\"50vh\"},\n                class: \"his-card section drug-section-style\"\n              }, {\n                default: _withId(() => [\n                  _createVNode(_component_ion_col, null, {\n                    default: _withId(() => [\n                      _createVNode(\"table\", null, [\n                        _hoisted_2,\n                        _createVNode(\"tbody\", null, [\n                          (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.activeDrugs, (drug, drugIndex) => {\n                            return (_openBlock(), _createBlock(\"tr\", { key: drugIndex }, [\n                              _createVNode(\"td\", null, [\n                                _createVNode(_component_ion_input, {\n                                  readonly: \"\",\n                                  onClick: $event => (_ctx.editDrugName(drug)),\n                                  value: drug.drug_name,\n                                  placeholder: \"Add drug\",\n                                  class: \"his-sm-text dosage-input\"\n                                }, null, 8, [\"onClick\", \"value\"])\n                              ]),\n                              _createVNode(\"td\", null, [\n                                _createVNode(_component_ion_input, {\n                                  readonly: \"\",\n                                  onClick: $event => (_ctx.editDrugFrequency(drug)),\n                                  value: drug.frequency,\n                                  class: \"his-sm-text dosage-input\",\n                                  placeholder: \"Add frequency..\"\n                                }, null, 8, [\"onClick\", \"value\"])\n                              ]),\n                              _createVNode(\"td\", null, [\n                                _createVNode(_component_ion_input, {\n                                  readonly: \"\",\n                                  onClick: $event => (_ctx.editDrugDuration(drug)),\n                                  value: drug.duration,\n                                  placeholder: \"Add duration..\",\n                                  class: \"dosage-input his-sm-text\"\n                                }, null, 8, [\"onClick\", \"value\"])\n                              ]),\n                              _createVNode(\"td\", null, [\n                                _createVNode(_component_ion_row, null, {\n                                  default: _withId(() => [\n                                    (drugIndex + 1 >= _ctx.activeDrugs.length)\n                                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                                          key: 0,\n                                          size: \"6\"\n                                        }, {\n                                          default: _withId(() => [\n                                            _createVNode(_component_ion_button, {\n                                              disabled: !(drug.id && drug.frequency && drug.duration),\n                                              onClick: _cache[1] || (_cache[1] = $event => (_ctx.activeDrugs.push(_ctx.defaultDrugObj()))),\n                                              class: \"his-md-text\",\n                                              style: {\"width\":\"100%\"},\n                                              color: \"success\"\n                                            }, {\n                                              default: _withId(() => [\n                                                _createVNode(_component_ion_icon, { icon: _ctx.add }, null, 8, [\"icon\"]),\n                                                _hoisted_3\n                                              ]),\n                                              _: 2\n                                            }, 1032, [\"disabled\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      : _createCommentVNode(\"\", true),\n                                    (drugIndex + 1 < _ctx.activeDrugs.length || (drugIndex !=0 && drugIndex +1 >= _ctx.activeDrugs.length))\n                                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                                          key: 1,\n                                          size: \"6\"\n                                        }, {\n                                          default: _withId(() => [\n                                            _createVNode(_component_ion_button, {\n                                              onClick: $event => (_ctx.activeDrugs.splice(drugIndex, 1)),\n                                              class: \"his-lg-text\",\n                                              style: {\"width\":\"100%\"},\n                                              color: \"danger\"\n                                            }, {\n                                              default: _withId(() => [\n                                                _createVNode(_component_ion_icon, { icon: _ctx.trashBin }, null, 8, [\"icon\"])\n                                              ]),\n                                              _: 1\n                                            }, 8, [\"onClick\"])\n                                          ]),\n                                          _: 1\n                                        }))\n                                      : _createCommentVNode(\"\", true)\n                                  ]),\n                                  _: 2\n                                }, 1024)\n                              ])\n                            ]))\n                          }), 128 /* KEYED_FRAGMENT */))\n                        ])\n                      ])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_list, {\n            style: {\"height\":\"29vh\"},\n            class: \"his-card section\"\n          }, {\n            default: _withId(() => [\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.drugSets, (dset, dindex) => {\n                return (_openBlock(), _createBlock(_component_ion_item, {\n                  class: \"his-md-text\",\n                  detail: \"\",\n                  onClick: $event => (_ctx.appendDrugSetValues(dset)),\n                  button: \"\",\n                  key: dindex\n                }, {\n                  default: _withId(() => [\n                    _createVNode(_component_ion_label, null, {\n                      default: _withId(() => [\n                        _createTextVNode(_toDisplayString(dset.label) + \" (\" + _toDisplayString(dset.value) + \")\", 1 /* TEXT */)\n                      ]),\n                      _: 2\n                    }, 1024)\n                  ]),\n                  _: 2\n                }, 1032, [\"onClick\"]))\n              }), 128 /* KEYED_FRAGMENT */))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n            default: _withId(() => [\n              _createVNode(_component_ion_button, {\n                \"router-link\": _ctx.cancelDestination,\n                slot: \"start\",\n                size: \"large\",\n                color: \"danger\"\n              }, {\n                default: _withId(() => [\n                  _hoisted_4\n                ]),\n                _: 1\n              }, 8, [\"router-link\"]),\n              _createVNode(_component_ion_button, {\n                onClick: _ctx.clear,\n                slot: \"end\",\n                size: \"large\",\n                color: \"warning\"\n              }, {\n                default: _withId(() => [\n                  _hoisted_5\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                disabled: _ctx.isSubmitting,\n                onClick: _ctx.onFinish,\n                slot: \"end\",\n                size: \"large\",\n                color: \"success\"\n              }, {\n                default: _withId(() => [\n                  _hoisted_6\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n})","\nimport { defineComponent } from 'vue'\nimport {\n    IonHeader,\n    IonLabel,\n    IonPage,\n    IonContent,\n    IonTitle,\n    IonRow,\n    IonGrid,\n    IonIcon,\n    IonInput,\n    IonCol,\n    IonFooter,\n    IonToolbar,\n    IonButton,\n    modalController\n} from \"@ionic/vue\"\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport TouchField from \"@/components/Forms/SIngleTouchField.vue\"\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { AncTreatmentService, AncTreatmentDrugObject, DRUG_FREQUENCIES } from '../../Services/anc_treatment_service'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { DrugService } from '@/services/drug_service'\nimport { alertConfirmation, toastWarning } from '@/utils/Alerts'\nimport {\n    add,\n    trashBin\n} from \"ionicons/icons\";\nimport { PatientPrintoutService } from '@/services/patient_printout_service'\nimport { AncDrugSetService } from '../../Services/anc_drug_set'\n\nexport default defineComponent({\n    components: {\n        IonHeader,\n        IonIcon,\n        IonRow,\n        IonLabel,\n        IonGrid,\n        IonCol,\n        IonPage,\n        IonContent,\n        IonTitle,\n        IonInput,\n        IonButton,\n        IonFooter,\n        IonToolbar\n    },\n    mixins: [EncounterMixinVue],\n    setup() {\n        return {\n            add,\n            trashBin\n        }\n    },\n    data: () => ({\n        activeDrugs: [] as AncTreatmentDrugObject[],\n        drugSets: [] as any,\n        defaultDrugs: [] as any,\n        isSubmitting: false as boolean,\n        service: {} as any\n    }),\n    computed: {\n        selectedDrugNames(): string[] {\n            return this.activeDrugs.map((d: any) => d.drug_name || '')\n        }\n    },\n    watch: {\n        ready: {\n            async handler(ready: boolean) {\n                this.activeDrugs = [this.defaultDrugObj()]\n                if (ready) {\n                    this.service = new AncTreatmentService(this.patientID, this.providerID)\n                    this.drugSets = (await AncDrugSetService.getDrugSets())\n\t\t\t\t\t.map((d: any) => ({\n                        label: d.name,\n                        value: d.description,\n                        other: {\n                            drugs: d.drugs\n                        }\n                    }))\n                    this.defaultDrugs = await DrugService.getDrugs({'page_size': 50})\n                }\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        async onFinish() {\n            if (this.formIsEmpty()) {\n                if ((await alertConfirmation('Do you want to proceed without prescribing drugs?'))) {\n                    await this.service.createEncounter()\n                    await this.service.saveValueCodedObs('Medication received at vist', 'No')\n                    this.nextTask()\n                }\n                return\n            }\n            if (!this.formIsComplete()) {\n                return toastWarning('Please complete the form')\n            }\n            this.isSubmitting = true\n            try {\n                await this.service.submitTreatment(this.activeDrugs)\n                await new PatientPrintoutService(this.patientID).printVisitSummaryLbl()\n                return this.nextTask()\n            } catch (e) {\n                toastWarning(`${e}`)\n                console.error(e)\n            }\n            this.isSubmitting = false\n        },\n        defaultDrugObj() {\n            return {\n                'id': 0,\n                'drug_name': '',\n                'dose': '',\n                'duration': 0,\n                'frequency': '',\n                'units': ''\n            }\n        },\n        formIsComplete() {\n            return this.activeDrugs.every(d => d.id && d.duration && d.frequency)\n        },\n        formIsEmpty() {\n            return this.activeDrugs.length === 1 && this.activeDrugs[0].drug_name === ''\n                && this.activeDrugs[0].duration === 0 && this.activeDrugs[0].frequency === '' \n        },\n        appendDrugSetValues(drugSet: any) {\n            const drugs = drugSet.other.drugs.reduce((a: any, c: any) => a.concat(c), [])\n            if (this.activeDrugs.length === 1 && !this.activeDrugs[0].id){\n                this.activeDrugs = drugs\n            } else {\n                this.activeDrugs = this.activeDrugs.concat(\n                    drugs.filter((d: any) => !this.selectedDrugNames.includes(d.drug_name))\n                )\n            }\n        },\n        editDrugName(drugItem: any) {\n            this.launchEditor({\n                id: 'new_drug',\n                helpText: 'Add drug to prescribe',\n                type: FieldType.TT_SELECT,\n                defaultValue: () => drugItem.drug_name,\n                validation: (v: Option) => this.validateSeries([\n                    () => Validation.required(v),\n                    () => {\n                        if (this.selectedDrugNames.includes(v.label)) {\n                            return ['Drug already added']\n                        } else {\n                            return null\n                        }\n                    }\n                ]),\n                options: async (_: any, filter: string) => {\n                    let drugs: any = []\n                    if (filter) {\n                        drugs = await DrugService.getDrugs({\n                           'page_size': 50,\n                           'name': filter\n                       })\n                    } else {\n                        drugs = this.defaultDrugs\n                    }\n                    return drugs.map((d: any) => ({\n                        label: d.name,\n                        value: d.drug_id,\n                        other: {\n                            dose: d.dose,\n                            units: d.units\n                        }\n                    }))\n                },\n                config: {\n                    showKeyboard: true,\n                    isFilterDataViaApi: true\n                }\n            }, \n            (data: Option) => {\n                drugItem['id'] = data.value\n                drugItem['drug_name'] = data.label\n                drugItem['dose'] = data.other.dose\n                drugItem['units'] = data.other.units\n            })\n        },\n        editDrugFrequency(drug: AncTreatmentDrugObject) {\n            this.launchEditor({\n                id: 'frequency',\n                helpText: `Edit drug frequency for ${drug.drug_name}`,\n                type: FieldType.TT_SELECT,\n                defaultValue: () => drug.frequency,\n                validation: (v: Option) => Validation.required(v),\n                options: () =>  this.mapStrToOptions(Object.keys(DRUG_FREQUENCIES))\n            },\n            (v: Option) => {\n                drug.frequency = v.label as string\n            })\n        },\n        editDrugDuration(drug: AncTreatmentDrugObject) {\n            this.launchEditor({\n                id: 'duration',\n                helpText: `Edit duration of ${drug.drug_name} in days`,\n                type: FieldType.TT_NUMBER,\n                defaultValue: () => drug.duration,\n                validation: (v: Option) => Validation.required(v)\n            }, \n            (v: Option) => {\n                drug.duration = v.value as number\n            })\n        },\n        async clear() {\n            const ok = await alertConfirmation('Are you sure you want to clear all drugs?')\n            if (ok) {\n                this.activeDrugs = [this.defaultDrugObj()]\n            }\n        },\n        async launchEditor(field: Field, callback: Function) {\n            const modal = await modalController.create({\n                component: TouchField,\n                backdropDismiss: false,\n                cssClass: \"full-modal\",\n                componentProps: {\n                    dismissType: 'modal',\n                    currentField: field,\n                    onFinish: callback,\n                }\n            })\n            modal.present()\n        }\n    }\n})\n","import { render } from \"./Treatment.vue?vue&type=template&id=257a2a3f&scoped=true&ts=true\"\nimport script from \"./Treatment.vue?vue&type=script&lang=ts\"\nexport * from \"./Treatment.vue?vue&type=script&lang=ts\"\n\nimport \"./Treatment.vue?vue&type=style&index=0&id=257a2a3f&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-257a2a3f\"]])\n\nexport default __exports__","import { DrugOrderInterface } from \"@/interfaces/DrugOrder\";\nimport { Service } from \"./service\";\n\nexport class DrugOrderService extends Service {\n    constructor() {\n        super()\n    }\n\n    static create(orders: DrugOrderInterface) {\n        return this.postJson('drug_orders', orders)\n    }\n\n    static updateDispensationOrders(orders: any) {\n        return this.postJson('dispensations', {\n            'program_id': this.getProgramID(),\n            dispensations: orders.map((order: any) => ({\n                'date': this.getSessionDate(),\n                'drug_order_id': order['order_id'],\n                'quantity': order['quantity']\n            }))\n        })\n    }\n\n    static getDrugOrderHistory(patientID: number) {\n        return this.getJson('drug_orders', { 'patient_id': patientID })\n    }\n\n    static getDrugOrders(patientID: number) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getAllDrugOrders(patientID: number, pageSize=1000) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'program_id': Service.getProgramID(),\n            'page_size': pageSize\n        })\n    }\n\n    static getLastDrugsReceived(patientID: number) {\n        return this.getJson(`patients/${patientID}/last_drugs_received`, {\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getDrugDosages(patientID: number, drugID: number, date=this.getSessionDate()) {\n        const params = { 'drug_id': drugID, 'date': date }\n        return this.getJson(`programs/${this.getProgramID()}/patients/${patientID}/drug_doses`, params)\n    }\n\n    static getOrderByPatient(patientId: number, params: any) {\n        return this.getJson('/drug_orders', {\n            'patient_id': patientId,\n            'program_id': this.getProgramID(),\n            ...params\n        })\n    }\n\n}","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Service } from \"./service\";\n\nexport class DrugService extends Service {\n    constructor() {\n        super()\n    }\n\n    \n    static getDrugs(params={} as Record<string, string | number>) {\n        return super.getJson('/drugs', params)\n    }\n}","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { find, isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\"\n\nexport interface AncTreatmentDrugObject {\n    'id': number;\n    'drug_name': string;\n    'dose': string;\n    'duration': number;\n    'frequency': string;\n    'units': string;\n}\n\nexport const DRUG_FREQUENCIES: Record<string, number> = { \n    'Once a day (OD)' : 1,\n    'Twice a day (BD)': 2,\n    'Three a day (TDS)': 3,\n    'Four times a day (QID)' : 4,\n    'Five times a day (5X/D)' : 5,\n    'Six times a day (Q4HRS)' : 6,\n    'In the morning (QAM)' : 0.5,\n    'Once a week (QWK)' : 0.14,\n    'Once a month' : 0.03,\n    'Twice a month' : 0.071\n}\n\nexport class AncTreatmentService extends AppEncounterService {\n    constructor(patientID: number, providerID: number){\n        super(patientID, 25, providerID)\n    }\n\n    ttvDrugObj() {\n        return {\n            'drug_inventory_id': 609,\n            'dose': 0.5,\n            'equivalent_daily_dose': 0.5,\n            'frequency': \"Once a day (od)\",\n            'start_date': this.date,\n            'auto_expire_date': this.date,\n            'instructions': \"Once a day\",\n            'units': \"ml\"\n        }\n    }\n\n    async updateTTvOrder() {\n        const dispensed = await this.dispenseTTV()\n        if (!isEmpty(dispensed)) {\n            const orderID = dispensed[0].order_id\n            return DrugOrderService.updateDispensationOrders([{'order_id': orderID, 'quantity' : 1}])\n        }\n        throw 'Unable to dispense'\n    }\n\n    dispenseTTV() {\n        return this.createOrders([this.ttvDrugObj()])\n    }\n\n    createOrders(orders: any) {\n        return DrugOrderService.create({\n            'drug_orders': orders,\n            'encounter_id': this.getEncounterID(),\n        })\n    }\n\n    async submitTreatment(drugs: AncTreatmentDrugObject[]) {\n        await this.createEncounter()\n        const orders = await this.createOrders(drugs.map(o => this.buildDrugOrderObj(o)))\n        const dispensation = new AppEncounterService(this.patientID, 54, this.providerID)\n        await dispensation.createEncounter()\n        drugs.forEach(o => {\n            const quantity: number = DRUG_FREQUENCIES[o.frequency] * o.duration\n            orders.forEach((order: any) => { \n                if (order.drug_inventory_id === o.id) {\n                    order.quantity = quantity\n                }\n            })\n        })\n        await DrugOrderService.updateDispensationOrders(orders)\n    }\n\n    buildDrugOrderObj(drug: AncTreatmentDrugObject) {\n        const startDate = new Date(this.date)\n        const expiryDate = startDate.setDate(startDate.getDate() + parseInt(`${drug.duration}`))\n        const dose: any = drug.dose || DRUG_FREQUENCIES[drug.frequency]\n        const dailyEquivalentDose =  parseFloat(dose) * DRUG_FREQUENCIES[drug.frequency] \n        return {\n            'drug_inventory_id': drug.id,\n            'dose': dose,\n            'equivalent_daily_dose': dailyEquivalentDose,\n            'frequency': drug.frequency,\n            'start_date': this.date,\n            'auto_expire_date': HisDate.toStandardHisFormat(new Date(expiryDate)),\n            'instructions': drug.drug_name + ':' + drug.dose + ' ' + drug.units + ' ' + drug.frequency + 'days',\n            'units': drug.units\n        }\n    }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","import { Service } from \"@/services/service\";\n\nexport interface AncDrugSetDrugs {\n    drug: number;\n    drug_name?: string;\n    quantity: number;\n    duration?: number;\n    frequency: string;\n}\n\nexport interface NewDrugSet {\n    id?: number;\n    datetime?: string;\n    name: string;\n    description: string;\n    drugs: AncDrugSetDrugs[];\n}\n\nexport class AncDrugSetService extends Service {\n    static saveDrugSet(drugSet: NewDrugSet) {\n        const data  = {...drugSet}\n        data['datetime'] = Service.getSessionDate()\n        return this.postJson('/drug_sets', drugSet)\n    }\n\n    static voidDrugSet(setID: number) {\n        return this.void(`/drug_sets/${setID}`, { date: this.getSessionDate()})\n    }\n\n    static async getDrugSets() {\n        const data = await this.getJson('drug_sets')\n        if (data) {\n            return Object.keys(data['set_names'])\n                .reduce((sets: Array<any>, setKey: string) => {\n                    const name = data['set_names'][setKey]\n                    const description = data['set_descriptions'][setKey]\n                    const drugs = data['drug_sets'][setKey]\n                    sets.push({\n                        id: parseInt(setKey),\n                        name,\n                        description,\n                        drugs: Object.keys(drugs).reduce(\n                            (a: any, k: string) => [\n                                ...a, { \n                                    'id': parseInt(k), ...drugs[k],\n                                    'drug_name': drugs[k].drug_name,\n                                    'duration': parseInt(drugs[k].duration),\n                                    'frequency': drugs[k].frequency,\n                                    'units': drugs[k].units,\n                                }], []\n                        )\n                    })\n                    return sets\n                }, [])\n        }\n        return []\n    }\n}","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, KeepAlive as _KeepAlive } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Close \")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Clear \")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Done \")\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_title, { class: \"his-lg-text ion-text-center\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.currentField.helpText), 1 /* TEXT */)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withCtx(() => [\n          (_openBlock(), _createBlock(_KeepAlive, null, [\n            (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.currentField.type), {\n              key: _ctx.currentField.id,\n              currentFieldig: _ctx.currentField.currentFieldig,\n              options: _ctx.currentField.options,\n              preset: _ctx.currentField.preset,\n              clear: _ctx.valueClearIndex,\n              fdata: _ctx.formData,\n              config: _ctx.currentField.config,\n              cdata: _ctx.computedFormData,\n              activationState: _ctx.state,\n              onValue: _ctx.currentField.onValue,\n              defaultValue: _ctx.currentField.defaultValue,\n              onValueUpdate: _ctx.currentField.onValueUpdate,\n              onOnValue: _ctx.onFieldValue\n            }, null, 8, [\"currentFieldig\", \"options\", \"preset\", \"clear\", \"fdata\", \"config\", \"cdata\", \"activationState\", \"onValue\", \"defaultValue\", \"onValueUpdate\", \"onOnValue\"]))\n          ], 1024))\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, { color: \"light\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                disabled: _ctx.disableBtn,\n                onClick: _ctx.onClose,\n                slot: \"start\",\n                color: \"danger\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _hoisted_1\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"]),\n              _createVNode(_component_ion_button, {\n                disabled: _ctx.disableBtn,\n                onClick: _ctx.onClear,\n                slot: \"end\",\n                color: \"warning\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _hoisted_2\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"]),\n              _createVNode(_component_ion_button, {\n                disabled: _ctx.disableBtn,\n                onClick: _ctx.onDone,\n                slot: \"end\",\n                color: \"success\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _hoisted_3\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent, PropType, defineAsyncComponent } from 'vue'\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { toastDanger, toastWarning } from \"@/utils/Alerts\";\nimport { COMPONENT_REFS } from \"@/components/Forms/BaseFormElements\";\nimport {\n    IonToolbar,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonButton,\n    IonPage,\n    IonFooter,\n    modalController\n} from \"@ionic/vue\"\n\nfunction buildAsyncComponents() {\n  const components: any = {}\n  COMPONENT_REFS.forEach((name: string) => {\n    components[name] = defineAsyncComponent(() => import(\n      /* webpackChunkName: \"TouchFormElement\"*/`@/components/FormElements/${name}.vue`)\n    )\n  })\n  return components\n}\n\nexport default defineComponent({\n    name: 'SingleFieldTouchForm',\n    components: {\n        IonPage,\n        IonContent,\n        IonFooter,\n        IonToolbar,\n        IonButton,\n        IonHeader,\n        IonTitle,\n        ...buildAsyncComponents()\n    },\n    props: {\n        dismissType: {\n            type: String\n        },\n        onFinish: {\n           type: Function,\n           required: true\n        },\n        currentField: {\n            type: Object as PropType<Field>,\n            required: true\n        }\n    },\n    data: () => ({\n        valueClearIndex: 0 as number,\n        formData: {} as any,\n        computedFormData: {} as any,\n        state: \"\" as string,\n        value: null as Option | Option[] | null,\n        disableBtn: false as boolean,\n    }),\n    methods: {\n        onClose() {\n            if (this.dismissType === 'modal') {\n                modalController.dismiss()\n            } else {\n                this.$router.back()\n            }\n        },\n        onClear() {\n            this.valueClearIndex += 1\n            this.value = null\n        },\n        onFieldValue(value: any) {\n            this.value = value\n        },\n        onDone() {\n            this.disableBtn = true\n            if (this.currentField.validation) {\n                const errors = this.currentField.validation(this.value)\n                this.disableBtn = false\n                if (errors) return toastWarning(errors.join(\", \"), 60000);\n            } \n            try {\n                this.onFinish(this.value)\n            } catch(e) {\n                toastDanger(e)\n                console.error(e)\n            }\n            this.onClose()\n            this.disableBtn = false\n        }\n    }\n})\n","import { render } from \"./SIngleTouchField.vue?vue&type=template&id=78de1c7c&ts=true\"\nimport script from \"./SIngleTouchField.vue?vue&type=script&lang=ts\"\nexport * from \"./SIngleTouchField.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}