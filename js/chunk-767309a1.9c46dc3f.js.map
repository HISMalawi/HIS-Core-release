{"version":3,"sources":["webpack:///./src/apps/ART/services/htn_service.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?f5b0","webpack:///./src/components/DataViews/RiskFactorModal.vue?731e","webpack:///./src/apps/ART/services/medical_history.ts","webpack:///./src/components/DataViews/RiskFactorModal.vue","webpack:///./src/components/DataViews/RiskFactorModal.vue?88be","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/components/DataViews/RiskFactorModal.vue?0d11","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./node_modules/core-js/modules/es.array.find-index.js"],"names":["HTN_SESSION_KEY","BPManagementService","patientID","providerID","ObservationService","getFirstValueNumber","this","getFirstValueCoded","query","AppEncounterService","getJson","drugID","pills","postJson","state","HCZ","drugs","drugName","amount","current","selected","isChecked","dispensed","expectedRemaining","adherence","notes","Enalapril","remaining","Amlodipine","Atenolol","sbp","dbp","bpTrail","Object","values","sort","a","b","date","map","bp","getBpGrade","firstRecentGrade","secondRecentGrade","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","facts","ready","watch","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","states","split","username","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","usernameA","usernameB","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","e","validateSeries","condition","__exports__","_withId","_withScopeId","_pushScopeId","_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_popScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_checkbox","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_button","_component_ion_footer","_openBlock","_createBlock","_Fragment","_createVNode","default","_","style","overflowY","background","height","_renderList","riskFactors","key","_toDisplayString","modelValue","$event","size","onClick","exit","showManageBPButton","manageBP","_createCommentVNode","postActivities","MedicalHistoryService","props","factors","type","required","title","String","created","history","createEncounter","encounter","buildObs","saveObservationList","closeModal","modalController","dismiss","r","val","valConcept","ConceptService","getConceptID","con","concept","mounted","forEach","factor","ind","findIndex","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonLabel","IonList","IonItem","IonCheckbox","IonRow","IonFooter","IonGrid","IonCol","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","Function","Boolean","formData","computedData","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","description","text","info","$","$findIndex","addToUnscopables","arrayMethodUsesToLength","FIND_INDEX","SKIPS_HOLES","USES_TO_LENGTH","proto","forced","callbackfn","arguments"],"mappings":"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","file":"js/chunk-767309a1.9c46dc3f.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ObservationService } from \"@/services/observation_service\"\n\nexport enum HTN_SESSION_KEY {\n  Prescription = \"htnPrescription\"\n}\n\nexport class BPManagementService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n      super(patientID, 48, providerID) //TODO: Use encounter type reference name'\n    }\n\n    static getBpGrade(sbp: number, dbp: number) {\n      if ((sbp < 140) && (dbp < 90)) {\n        return \"normal\"\n      }\n      else if ((sbp >= 140 && sbp < 160) || (dbp >= 100 && dbp < 110)) {\n        return \"grade 1\"\n      }\n      else if ((sbp >= 180 && dbp > 110) || sbp >= 180) {\n        return \"grade 3\"\n      }\n      else if ((sbp >= 160 && sbp < 180) || (dbp >= 110)) {\n        return \"grade 2\"\n      }\n      return 'N/A'\n    }\n\n    /**\n     * BP is normointensive if two most recent consecutive tests are normal\n     * @param bpTrail \n     * @returns\n    */\n    static isBpNormotensive(bpTrail: any) {\n      const [ firstRecentGrade, secondRecentGrade ] = Object.values(bpTrail)\n        .sort((a: any, b: any) => a.date < b.date ? 1 : 0)\n        .map((bp: any) => this.getBpGrade(bp.sbp, bp.dbp))\n      return firstRecentGrade === 'normal' && secondRecentGrade === 'normal'\n    }\n\n    getSystolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Systolic blood pressure')\n    }\n\n    getDiastolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Diastolic blood pressure')\n    }\n\n    async onBpDrugs() {\n      const query = await ObservationService.getFirstValueCoded(this.patientID, 'Treatment status')\n      return query ? query === 'Yes' : false\n    }\n  \n    async getBPTrail() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/bp_trail`);\n    }\n    async getCurrentDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/current_bp_drugs`);\n    }\n    async getLastDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`);\n    }\n    async getAdherence(drugID: number, pills: number) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/remaining_bp_drugs`, {\n        'drug_id': drugID,\n        pills: pills\n      });\n    }\n    async enrollPatient(state: any) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/update_or_create_htn_state`, state);\n    }\n    static htnDrugReferences() {\n      return [\n        { \n          'drug_id': 275,\n          'drug_name': \"HCZ (25mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 942,\n          'drug_name': \"Enalapril (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 943,\n          'drug_name': \"Enalapril (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 558,\n          'drug_name': \"Amlodipine (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 559,\n          'drug_name': \"Amlodipine (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 117,\n          'drug_name': \"Atenolol (50mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 11,\n          'drug_name': \"Atenolol(100mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        }\n      ]\n    }\n    getDrugs() {\n        return {\n        HCZ: {\n          drugs: [\n            {\n              drugName: \"HCZ (25mg tablet)\",\n              drugID: 275,\n              amount: '25mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Enalapril: {\n          drugs: [\n            {\n              drugName: \"Enalapril (5mg tablet)\",\n              drugID: 942,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Enalapril (10mg tablet)\",\n              drugID: 943,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Amlodipine: {\n          drugs: [\n            {\n              drugName: \"Amlodipine (5mg tablet)\",\n              drugID: 558,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Amlodipine (10mg tablet)\",\n              drugID: 559,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Atenolol: {\n          drugs: [\n            {\n              drugName: \"Atenolol (50mg tablet)\",\n              drugID: 117,\n              amount: '50mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Atenolol(100mg tablet)\",\n              drugID: 11,\n              amount: '100mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n      }\n    }\n}","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-1b2b2db4\")\n\n_pushScopeId(\"data-v-1b2b2db4\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Risk Factors\")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Close \")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Manage BP \")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Save \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_label = _resolveComponent(\"ion-label\")\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")\n  const _component_ion_item = _resolveComponent(\"ion-item\")\n  const _component_ion_list = _resolveComponent(\"ion-list\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withId(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: { overflowY: 'hidden', background: 'grey' } }, {\n      default: _withId(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withId(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withId(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'78vh'} }, {\n                      default: _withId(() => [\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.riskFactors, (data) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, { key: data }, {\n                            default: _withId(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withId(() => [\n                                  _createTextVNode(_toDisplayString(data.name), 1 /* TEXT */)\n                                ]),\n                                _: 2\n                              }, 1024),\n                              _createVNode(_component_ion_checkbox, {\n                                modelValue: data.isChecked,\n                                \"onUpdate:modelValue\": $event => (data.isChecked = $event),\n                                slot: \"start\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                            ]),\n                            _: 2\n                          }, 1024))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_button, {\n              size: \"large\",\n              onClick: _ctx.exit,\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withId(() => [\n                _hoisted_2\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            (_ctx.showManageBPButton)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  size: \"large\",\n                  onClick: _ctx.manageBP,\n                  slot: \"start\"\n                }, {\n                  default: _withId(() => [\n                    _hoisted_3\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true),\n            _createVNode(_component_ion_button, {\n              size: \"large\",\n              color: \"success\",\n              onClick: _ctx.postActivities,\n              slot: \"end\"\n            }, {\n              default: _withId(() => [\n                _hoisted_4\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64 /* STABLE_FRAGMENT */))\n})","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class MedicalHistoryService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 30, providerID) //TODO: Use encounter type reference name'\n    }\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonCheckbox,\n  IonFooter,\n  IonRow,\n  IonCol,\n  IonGrid\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\nimport { MedicalHistoryService } from \"@/apps/ART/services/medical_history\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport { ObsValue } from \"@/services/observation_service\";\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    factors: {\n      type: Object,\n      required: true\n    },\n    title: {\n      type: String, \n      default: \"\"\n    },\n  },\n  computed: {\n    showManageBPButton(): boolean {\n      return this.$route.name != 'bp_management'\n    }\n  },\n  created() {\n    this.patientID = parseInt(`${this.$route.params.patient_id}`)\n  },\n  methods: {\n    async postActivities() {\n      const history = new MedicalHistoryService(this.patientID, -1)\n      const encounter = await history.createEncounter();\n\n      if(encounter) {\n        const obs: any = await this.buildObs();\n        await history.saveObservationList(obs);\n        await this.closeModal();\n      }\n    },\n    manageBP() {\n      this.$router.push(`/art/encounters/bp_management/${this.patientID}`)\n    },\n    exit() {\n      modalController.dismiss([])\n    },\n    async closeModal() {\n      await modalController.dismiss(this.riskFactors)\n    },\n    async buildObs() {\n      return this.riskFactors.map((r: any) => {\n        const val = r.isChecked === true ? 'Yes' : 'No';\n        const valConcept = ConceptService.getConceptID(val, true);\n        const con = ConceptService.getConceptID(r.concept, true)\n        return {\n          'concept_id': con,\n          'value_coded': valConcept\n        }\n      });\n    }\n  },\n  data() {\n    return {\n      patientID: -1 as number,\n      riskFactors: [\n        {name: 'Diabetes', isChecked: false, concept: 'Diabetes'},\n        {name: 'Cronic kidney disease', isChecked: false, concept: 'CKD'},\n        {name: 'Past history of IHD or CVD', isChecked: false, concept: 'history of CVD'},\n        {name: 'First degree relative with IHD or CVD <65', isChecked: false, concept: 'relative with CVD'},\n        {name: 'Patient currently smokes', isChecked: false, concept: 'patient smokes'}\n      ]\n    };\n  },\n  mounted() {\n    this.factors.forEach((factor: any) => {\n      if(factor.value === \"Yes\") {\n        const ind = this.riskFactors.findIndex(d => d.concept === factor.concept);\n        this.riskFactors[ind].isChecked = true;\n      }\n    });\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    IonCheckbox,\n    IonRow,\n    IonFooter,\n    IonGrid,\n    IonCol,\n  },\n});\n","import { render } from \"./RiskFactorModal.vue?vue&type=template&id=1b2b2db4&scoped=true&ts=true\"\nimport script from \"./RiskFactorModal.vue?vue&type=script&lang=ts\"\nexport * from \"./RiskFactorModal.vue?vue&type=script&lang=ts\"\n\nimport \"./RiskFactorModal.vue?vue&type=style&index=0&id=1b2b2db4&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b2b2db4\"]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RiskFactorModal.vue?vue&type=style&index=0&id=1b2b2db4&scoped=true&lang=css\"","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX);\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n"],"sourceRoot":""}