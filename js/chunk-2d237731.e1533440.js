(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d237731"],{fabb:function(e,t,i){"use strict";i.r(t);var a=i("7a23");function n(e,t,i,n,l,s){const o=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(o,{fields:e.fields,onFinishAction:e.onSubmit},null,8,["fields","onFinishAction"])}var l=i("d95e"),s=i("7365"),o=i("e86e"),c=i("2706"),r=i("9c73"),d=i("9b7c"),p=i("8158"),u=i("80b5"),m=Object(a["defineComponent"])({mixins:[s["a"]],data:()=>({patientID:-1,service:{},fields:[],activityType:""}),watch:{$route:{handler({query:e,params:t}){e&&t&&(this.patientID=t.patient_id,this.activityType=e.type,this.service=new r["a"](this.patientID),this.fields=[this.getClinianGivenNameField(),this.getClinianFamilyNameField(),this.getFacililityLocationField(),this.getReasonForTestField(),this.getTestSpecimensField(),this.getTestSelectionField(),this.getTestCombinationField()])},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const i=await this.service.placeOrder(t);i&&(await this.service.printSpecimenLabel(i[0].order_id),this.$router.push("/patient/dashboard/"+this.patientID))},getFacililityLocationField(){return{id:"target_lab",helpText:"Requesting location",type:l["b"].TT_SELECT,defaultValue:()=>r["a"].getLocationName(),validation:e=>c["a"].required(e),options:(e,t="")=>Object(o["b"])(t),computedValue:e=>e.label,config:{showKeyboard:!0,isFilterDataViaApi:!0}}},getClinianGivenNameField(){const e=u["a"].getGivenNameField();return e.helpText="Requesting clinician - First name",e.proxyID="requesting_clinician",e.condition=()=>"DRAW_SAMPLES"===this.activityType,e.appearInSummary=()=>!1,e},getClinianFamilyNameField(){const e=u["a"].getFamilyNameField();return e.helpText="Requesting clinician - Last name",e.proxyID="requesting_clinician",e.condition=()=>"DRAW_SAMPLES"===this.activityType,e.summaryMapValue=(e,t)=>({label:"Clinician name",value:`${t.given_name.value} ${e.value}`}),e.computedValue=(e,t)=>`${t.given_name.value} ${e.value}`,e},getReasonForTestField(){return{id:"reason_for_test_id",helpText:"Reason for test",type:l["b"].TT_SELECT,validation:e=>c["a"].required(e),computedValue:e=>p["a"].getCachedConceptID(e.value,!0),options:()=>[{label:"Routine",value:"Routine"},{label:"Targeted",value:"Targeted"},{label:"Confirmatory",value:"Confirmatory"},{label:"Repeat / Missing",value:"Repeat / Missing"},{label:"Stat",value:"Stat"}]}},getTestSpecimensField(){return{id:"specimen",helpText:"Select specimen",type:l["b"].TT_SELECT,condition:()=>"DRAW_SAMPLES"===this.activityType,validation:e=>c["a"].required(e),computedValue:e=>({concept_id:e.value}),options:async()=>{const e=await d["a"].getSpecimens("");return e.map(e=>({label:e.name,value:e.concept_id}))},config:{showKeyboard:!0}}},getTestSelectionField(){let e="";return{id:"tests",helpText:"Select tests",type:l["b"].TT_GRID_SELECTOR,validation:e=>c["a"].required(e),computedValue:e=>e.map(e=>({concept_id:e.value})),options:async(t,i,a)=>{if(t.specimen&&t.specimen.label!=e){e=t.specimen.label;const i=await d["a"].getTestTypesBySpecimen(t.specimen.label);return i.map(e=>({label:e.name,value:e.concept_id,isChecked:!1,other:e}))}return a}}},getTestCombinationField(){return{id:"combine_tests",helpText:"Combine test(s) in one order",type:l["b"].TT_SELECT,computedValue:e=>"Yes"===e.value,condition:e=>e.tests.length>1,validation:e=>c["a"].required(e),options:()=>this.yesNoOptions()}}}}),h=i("6b0d"),b=i.n(h);const T=b()(m,[["render",n]]);t["default"]=T}}]);
//# sourceMappingURL=chunk-2d237731.e1533440.js.map