{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.number.parse-int.js","webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/apps/ART/views/ARTStock/movement.vue?5c88","webpack:///./src/services/DHA_code_service.ts","webpack:///./src/apps/ART/views/ARTStock/movement.vue","webpack:///./src/apps/ART/views/ARTStock/movement.vue?7bdd","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./node_modules/core-js/internals/number-parse-int.js","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts"],"names":["$","parseInt","target","stat","forced","Number","DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","activeField","onFinishAction","onFinish","skipSummary","DHAVerificationService","BASE30_DIGITS_INDEX","this","BASE30_DIGITS","split","forEach","digit","decimalValue","number","toBase","result","Math","floor","code","decimalCode","convertToDecimal","toString","computedCheckDigit","calculateLuhnCheckDigit","exception","console","error","length","undefined","slice","digits","map","parity","sum","position","checksum","defineComponent","components","HisStandardForm","data","drugs","selectedDrugs","barcode","stockService","methods","formData","enter_batches","errors","index","d","value","packSize","StockService","getPackSize","drug_id","total","tins","extras","res","authorization","quantity","reason","reasons","task","relocation_location","relocateItems","id","f","push","getShortName","disposeItems","BadRequestError","isEmpty","concat","log","toastSuccess","$router","toastDanger","join","getFields","helpText","type","FieldType","TT_SELECT","validation","val","Validation","required","options","label","notTheSame","getLocationName","condition","_","filter","getFacilities","computedValue","config","showKeyboard","isFilterDataViaApi","dynamicHelpText","TT_FULL_DATE","TT_MULTIPLE_SELECT","requireNext","checked","getItems","items","i","isChecked","c","unload","TT_BATCH_MOVEMENT","beforeNext","currentFieldContext","drugsToStr","b","partialEntries","drug","entries","every","Boolean","partialDrugs","toastWarning","TT_TEXT","customKeyboard","v","validateSeries","dha","isValidDHACode","toUpperCase","formdata","getReasons","TT_TABLE_VIEWER","buildResults","hiddenFooterBtns","isRelocation","columns","rows","j","HisDate","toStandardHisDisplayFormat","expiry_date","other","prepDrugs","element","batchNumber","drugID","expiry","tabs","date","selectAll","listData","l","formatDrugs","mapVal","vals","batch_number","created","__exports__","_resolveDynamicComponent","formType","cancelDestinationPath","onOnFinish","onOnIndex","onIndex","name","TouchScreenForm","emits","props","Function","default","String","Object","computedData","$emit","global","trim","whitespaces","$parseInt","hex","FORCED","module","exports","string","radix","S","test","LocationService","facilities","facility","location_id","getLabFacilities","getLabs","getFacilityWards","tag","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","getVillagesByName","page","getLandmarks","landmarks","landmark"],"mappings":"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","file":"js/chunk-a7bd0066.a0a72613.js","sourcesContent":["var $ = require('../internals/export');\nvar parseInt = require('../internals/number-parse-int');\n\n// `Number.parseInt` method\n// https://tc39.github.io/ecma262/#sec-number.parseint\n$({ target: 'Number', stat: true, forced: Number.parseInt != parseInt }, {\n  parseInt: parseInt\n});\n","export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true\n  }, null, 8, [\"fields\", \"activeField\", \"onFinishAction\"]))\n}","\nexport class DHAVerificationService {\n\n\tBASE30_DIGITS_INDEX = {} as any;\n\tBASE30_DIGITS: any;\n\t// static BASE30_DIGITS: any;\n\tconstructor() {\n\n\t\tthis.BASE30_DIGITS = '0123456789ABCDEFGHJKLMNPRTVWXY'.split('');\n\t\tthis.BASE30_DIGITS.forEach((digit: any, decimalValue: any) => this.BASE30_DIGITS_INDEX[digit] = decimalValue);\n\t}\n\n\t//   BASE30_DIGITS.forEach((digit, decimalValue) => BASE30_DIGITS_INDEX[digit] = decimalValue);\n\tconvertFromDecimal(number: any, toBase = 30) {\n\t\tif (toBase < 2 || toBase > 30) throw (\"Invalid base ${toBase}\");\n\n\t\tlet result = '';\n\n\t\twhile (number > 0) {\n\t\t\tresult = this.BASE30_DIGITS[number % toBase] + result;\n\t\t\tnumber = Math.floor(number / toBase);\n\t\t}\n\n\t\treturn result;\n\t}\n\tstatic calculateLuhnCheckDigit(number: any) {\n\t\tconst digits = number.toString().split('').map((digit: string) => Number.parseInt(digit, 10));\n\t\tconst parity = digits.length % 2;\n\n\t\tlet sum = 0;\n\n\t\tdigits.forEach((digit: any, position: any) => {\n\t\t\tif (position % 2 === parity) digit *= 2;\n\t\t\tif (digit > 9) digit -= 9;\n\n\t\t\tsum += digit;\n\t\t});\n\n\t\tconst checksum = sum % 10;\n\t\treturn checksum === 0 ? 0 : 10 - checksum;\n\t}\n\n\t/**\n\t * @param code {String}\n\t *\n\t * @returns {Boolean}\n\t */\n\tisValidDHACode(code: any) {\n\t\ttry {\n\t\t\tconst decimalCode = this.convertToDecimal(code).toString();\n\t\t\tconst checkDigit = Number.parseInt(decimalCode[0], 10);\n\t\t\tconst computedCheckDigit = DHAVerificationService.calculateLuhnCheckDigit(Number.parseInt(decimalCode, 10) * 10);\n\t\t\treturn computedCheckDigit === 0;\n\t\t} catch (exception) {\n\t\t\tconsole.error(exception);\n\t\t\treturn false;\n\t\t}\n\t}\n\tconvertToDecimal(number: any): any {\n\t\tif (number.length == 0) return 0;\n\n\t\tconst decimalValue = this.BASE30_DIGITS_INDEX[number[0]];\n\n\t\tif (decimalValue === undefined || decimalValue === null)\n\t\t\tthrow (\"Invalid base ${fromBase} number: ${number}\");\n\n\t\treturn decimalValue * 30 ** (number.length - 1) + this.convertToDecimal(number.slice(1));\n\t}\n\n\t//   return {isValidDHACode};\n}\n// const DHACodes = (() => {\n\n//   /**\n//    * Converts any number in the DHA base 30 character set to a decimal value.\n//    * \n//    * @param number {String}\n//    * @param fromBase {Number}\n//    *\n//    * @returns Number\n//    */\n\n\n//   /**\n//    * Convert any decimal value to any base within DHA's base 30 character set.\n//    * \n//    * @param number {Number}\n//    * @param toBase {Number}\n//    *\n//    * @returns {String}\n//    */\n\n\n//   /**\n//    * Returns the Luhn checksum for given number.\n//    * \n//    * @param number {Number}\n//    * @returns {Number}\n//    */\n\n// })();\n","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { CHARACTERS_AND_NUMBERS_LO } from \"@/components/Keyboard/KbLayouts\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { DHAVerificationService } from \"@/services/DHA_code_service\"\nimport HisDate from \"@/utils/Date\";\nimport { StockService } from \"./stock_service\";\nimport { toastWarning, toastDanger, toastSuccess } from \"@/utils/Alerts\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { BadRequestError } from  \"@/services/service\"\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  data: () => ({\n    activeField: \"\",\n    fields: [] as any,\n    drugs: [] as any,\n    selectedDrugs: [] as any,\n    barcode: \"\",\n    stockService: {} as any,\n  }),\n\n  methods: {\n    async onFinish(formData: any) {\n      const data = formData.enter_batches;\n      let errors: string[] = [];\n      for (let index = 0; index < data.length; index++) {\n        const d = data[index].value;\n        const packSize = StockService.getPackSize(d.drug_id);\n        const total = packSize * d.tins;\n        const extras = {} as any;\n        const res = {\n          'reallocation_code': formData.authorization.value,\n          quantity: total,\n          reason: formData.reasons.value,\n        };\n        try {\n          if (formData.task.value === \"Relocations\") {\n            extras[\"location_id\"] = formData.relocation_location.value;\n            const f = await this.stockService.relocateItems(d.id, {\n              ...res,\n              ...extras,\n            });\n            if (!f) {\n              errors.push(\n                \"Could not save record for\" + StockService.getShortName(d.drug_id)\n              );\n            }\n          } else {\n            const f = await this.stockService.disposeItems(d.id, {\n              ...res,\n              ...extras,\n            });\n            if (!f) {\n              errors.push(\n                \"Could not save record for\" + StockService.getShortName(d.drug_id)\n              );\n            }\n          }\n        } catch (e) {\n          if (e instanceof BadRequestError && !isEmpty(e.errors)) {\n            errors = errors.concat(e.errors)\n          } else {\n            errors.push(e)\n          }\n          console.log(e)\n        }\n      }\n      if (errors.length === 0) {\n        toastSuccess(\"Stock succesfully moved\");\n        this.$router.push(\"/\");\n      } else {\n        toastDanger(`${errors.join(',')}`);\n      }\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"task\",\n          helpText: \"Select task\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => [\n            {\n              label: \"Relocations\",\n              value: \"Relocations\",\n            },\n            {\n              label: \"Disposal\",\n              value: \"Disposal\",\n            },\n          ],\n        },\n        {\n          id: \"relocation_location\",\n          helpText: \"Destination\",\n          type: FieldType.TT_SELECT,\n          validation: (val: Option) => Validation.required(val) || Validation.notTheSame(val.label, `${StockService.getLocationName()}`),\n          condition: (val: any) => val.task.value === \"Relocations\" ,\n          options: (_: any, filter = \"\") => getFacilities(filter),\n          computedValue: (val: Option) => val.label,\n          config: {\n            showKeyboard: true,\n            isFilterDataViaApi: true,\n          },\n        },\n        {\n          id: \"date\",\n          dynamicHelpText: (f) => `Date of ${f.task.label}`,\n          helpText: \"Set date\",\n          type: FieldType.TT_FULL_DATE,\n          validation: (val: any) => Validation.required(val),\n        },\n        {\n          id: \"select drugs\",\n          helpText: \"Select drugs\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          requireNext: true,\n          validation: (val: any) => Validation.required(val),\n          options: async (_: any, checked: Option[]) => {\n            const items: Option[] = await this.getItems()\n            return items.map((i: any) => {\n              i.isChecked = checked.filter(c => c.label === i.label).length >= 1 \n              return i\n            })\n          },\n          unload: (val: any) => (this.selectedDrugs = val),\n        },\n        {\n          id: \"enter_batches\",\n          helpText: \"Batch entry\",\n          type: FieldType.TT_BATCH_MOVEMENT,\n          beforeNext: (_: any, f: any, c: any, {currentFieldContext}: any) => {\n            const drugsToStr = (drugs: any) => drugs.map((b: any, i: number) => `${b.label}`).join(' & ')\n            const partialEntries = currentFieldContext.drugs.filter((drug: any) =>\n              drug.entries.map((d: any) => !(d.tins)).every(Boolean)\n            )\n            if (!isEmpty(partialEntries)) {\n              const partialDrugs = drugsToStr(partialEntries)\n              toastWarning(`Please fix partial batch entries for drugs: ${partialDrugs}`)\n              return false\n            }\n            return true\n          },\n          options: () => this.selectedDrugs,\n          validation: (val: any) => Validation.required(val),\n        },\n        {\n          id: \"authorization\",\n          helpText: \"Enter authorization code\",\n          type: FieldType.TT_TEXT,\n          config: {\n            customKeyboard: [CHARACTERS_AND_NUMBERS_LO, [['Delete']]]\n          },\n          validation: (v: Option) => Validation.validateSeries([\n            () => Validation.required(v),\n            () => {\n              const value = v.value as string\n              const dha = new DHAVerificationService()\n              return !dha.isValidDHACode(value.toUpperCase())\n                ? ['Invalid authorization code']\n                : null\n            }\n          ]), \n        },\n        {\n          id: \"reasons\",\n          helpText: \"Select reason\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: (formdata: any) => this.getReasons(formdata),\n        },\n        {\n          id: \"summary\",\n          helpText: \"Summary\",\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ];\n    },\n    buildResults(formData: any) {\n      const isRelocation = formData.task.value === 'Relocations'\n      const columns = [\n        \"Drug\",\n        \"Total Tins\",\n        \"Expiry date\",\n        \"Authorization code\",\n      ];\n\n      if (isRelocation) columns.push('Relocation')\n\n      const rows = formData.enter_batches.map((j: any) => {\n        const d = j.value;\n        const data = [\n          StockService.getShortName(d.drug_id),\n          d.tins,\n          HisDate.toStandardHisDisplayFormat(d.expiry_date),\n          formData.authorization.value.toUpperCase()\n        ]\n        if (isRelocation) data.push(formData.relocation_location.label)\n        return data\n      });\n      return [\n        {\n          label: \"Confirm entry\",\n          value: \"Table\",\n          other: { columns, rows },\n        },\n      ];\n    },\n    prepDrugs(formdata: any) {\n      const items: any[] = [];\n      const barcode = this.barcode;\n      formdata.enter_batches.value.forEach((element: any) => {\n        items.push({\n          'batch_number': element.batchNumber,\n          'items': [\n            {\n              'barcode': barcode,\n              'drug_id': element.drugID,\n              'expiry_date': element.expiry,\n              'quantity': parseInt(element.tabs) * parseInt(element.tins),\n              'delivery_date': formdata.date.value,\n            },\n          ],\n        });\n      });\n      return items;\n    },\n    selectAll(listData: Array<Option>) {\n      return listData.map((l) => {\n        l.isChecked = true;\n        return l;\n      });\n    },\n    async getItems() {\n      const f = await this.stockService.getItems();\n      return this.formatDrugs(f);\n    },\n    mapVal(vals: string[]) {\n      return vals.map((data) => {\n        return { label: data, value: data };\n      });\n    },\n    getReasons(formdata: any): any {\n      if (formdata.task.value === \"Relocations\") {\n        return this.mapVal([\n          \"Transfer to another facility/relocation\",\n          \"For trainings\",\n        ]);\n      } else {\n        return this.mapVal([\"Expired\", \"Damaged\", \"Phased out\", \"Banned\", \"Missing\"]);\n      }\n    },\n    formatDrugs(f: any) {\n      return f.map((drug: any) => {\n        return {\n          label: `${StockService.getShortName(\n            drug.drug_id\n          )} (${StockService.getPackSize(\n            drug.drug_id\n          )}) Expiry date: ${HisDate.toStandardHisDisplayFormat(\n            drug.expiry_date\n          )} \n          Batch (${drug.batch_number})\n          `,\n          value: drug,\n        };\n      });\n    },\n  },\n  created() {\n    this.stockService = new StockService();\n    this.fields = this.getFields();\n  },\n});\n","import { render } from \"./movement.vue?vue&type=template&id=5de4ec68&ts=true\"\nimport script from \"./movement.vue?vue&type=script&lang=ts\"\nexport * from \"./movement.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar $parseInt = global.parseInt;\nvar hex = /^[+-]?0[Xx]/;\nvar FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22;\n\n// `parseInt` method\n// https://tc39.github.io/ecma262/#sec-parseint-string-radix\nmodule.exports = FORCED ? function parseInt(string, radix) {\n  var S = trim(String(string));\n  return $parseInt(S, (radix >>> 0) || (hex.test(S) ? 16 : 10));\n} : $parseInt;\n","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport async function getVillagesByName(name='a', page=1): Promise<Option[]> {\n    const villages = await LocationService.getVillagesByName(name, page)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport function getLandmarks(): Option[] {\n    const landmarks = [\n        'Catholic Church',\n        'CCAP',\n        'Seventh Day',\n        'Mosque',\n        'Primary School',\n        'Borehole',\n        'Secondary School',\n        'College',\n        'Market',\n        'Football Ground',\n        'Other'\n    ]\n\n    return landmarks.map(landmark =>({\n        label: landmark,\n        value: landmark,\n        other: {\n            code: landmark\n        }\n    }))\n}\n"],"sourceRoot":""}