(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-ebc0ec76"],{"0f42":function(e,t,a){"use strict";a.r(t);var i=a("7a23");function n(e,t,a,n,o,r){const s=Object(i["resolveComponent"])("his-standard-form"),l=Object(i["resolveComponent"])("ion-page");return Object(i["openBlock"])(),Object(i["createBlock"])(l,null,{default:Object(i["withCtx"])(()=>[Object(i["createVNode"])(s,{formLabel:"Contact tracing",fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}a("14d9"),a("13d5");var o=a("7365"),r=a("d95e"),s=a("d867"),l=a("cc6f");class c extends l["a"]{constructor(e,t=-1){super(e,195,t)}}var u=a("80b5"),d=a("b446"),h=a("c731"),p=a("9283"),m=a("b5e4"),v=a("2ef0"),b=a("0011"),f=a("5a0c"),_=a.n(f),g=a("7f35"),T=Object(i["defineComponent"])({components:{IonPage:s["D"]},mixins:[o["a"]],data:()=>({service:{}}),watch:{ready:{handler(e){e&&(this.service=new c(this.patientID,this.providerID),this.fields.push(this.discussPartnerField()),this.fields.push(this.contactIndexPageField()))},immediate:!0}},methods:{onFinish(e,t){this.saveFormEncounterAndProceed({encounterTypeID:this.service.encounterTypeID,formData:e,computedData:t})},buildDateObs(e,t,a){let i={};return i=t.match(/unknown/i)?this.service.buildValueText(e,"Unknown"):a?this.service.buildValueDateEstimated(e,t):this.service.buildValueDate(e,t),i},discussPartnerField(){return{id:"discuss_partner",helpText:"Discuss Partner",type:r["b"].TT_YES_NO,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueCoded("Consent Confirmation",e)}),options:()=>[{label:"Does the client consent to discuss contact?",value:"",values:this.yesNoOptions()}]}},contactIndexPageField(){let e=null;return{id:"contact_index_page",helpText:"Registered contacts",type:r["b"].TT_TABLE_VIEWER,onload:t=>e=t,condition:e=>"Yes"===e.discuss_partner,isRequired:()=>!0,validation:e=>parseInt(""+e[0].value)<=0?["Contact list is empty!!. Please register some"]:null,options:async t=>{var a,i;let n={};null!=t.contact_index_page&&(n=t.contact_index_page[0]||{});const o=[...(null===(a=n)||void 0===a||null===(a=a.other)||void 0===a?void 0:a.rows)||[]],l={...(null===(i=n)||void 0===i||null===(i=i.other)||void 0===i?void 0:i.contacts)||{}},c=this.contactRegistrationWorflowForm(),u=await Object(h["a"])(c,{formLabel:"Contact Registration #"+(o.length+1),onFinish:async(t,a)=>{const i=o.length+1;o.push([i,`${a.given_name.val} ${a.family_name.val}`,a.relation_to_contact.val,a.birth_date.val+" years",{name:"View",type:"button",color:"primary",action:async()=>{Object(h["b"])({id:"summary_view",helpText:"More details",type:r["b"].TT_SUMMARY,options:()=>Object.keys(a).filter(e=>a[e].val).map(e=>{var t;return{value:a[e].val,label:a[e].valLabel||(null===(t=Object(v["find"])(c,{id:e}))||void 0===t?void 0:t.helpText)}})},()=>s["ab"].dismiss())}},{name:"Remove",type:"button",color:"danger",action:async()=>{await Object(m["a"])(" Are you sure you want to remove contact?")&&(delete e.data[0].other.contacts[i],e.data[0].label=""+(parseInt(""+e.data[0].label)-1),e.data[0].value=parseInt(e.data[0].label),e.data[0].other.rows.splice(e.data[0].other.rows.findIndex(e=>e[0]===i),1))}}]),l[i]={...await this.service.buildValueText("Patient contacts construct",`${a.given_name.val} ${a.family_name.val}`),child:await this.resolveObs(a)},s["ab"].dismiss()}});return await u.onDidDismiss(),[{label:""+o.length,value:""+o.length,other:{columns:["ID","Name","Relation","Age"],contacts:l,rows:o}}]},finalComputedValue:e=>({obs:Object.values(e[0].other.contacts).reduce((e,t)=>e.concat(t),[])}),config:{footerBtns:[{name:"Add New",slot:"end",color:"success",onClick:async()=>e.data=await e.options(e.fdata)}]}}},contactRegistrationWorflowForm(){return[(()=>{const e=u["a"].getGivenNameField();return e.finalComputedValue=e=>({val:e.value,obs:this.service.buildValueText("First name of contact",e.value)}),e})(),(()=>{const e=u["a"].getFamilyNameField();return e.finalComputedValue=e=>({val:e.value,obs:this.service.buildValueText("Last name of contact",e.value)}),e})(),{id:"relation_to_contact",helpText:"Contact is a ___",type:r["b"].TT_SELECT,finalComputedValue:e=>({val:e.value,obs:this.service.buildValueCoded("Relationships of contact",e.value)}),isRequired:()=>!0,options:()=>this.mapStrToOptions(["Sexual Partner","Biological Child","Biological Parent"]),validation:e=>{const t=p["b"].getAgeInYears(this.facts.birthDate);return"Biological Child"===e.value&&t<13?["Contact is too young to have a biological child"]:"Sexual Partner"===e.value&&t<13?["Contact is too young to have a sexual partner"]:null}},...(()=>{const e=u["a"].getDobConfig(!1),t=14;return e.helpText="Contact Birth",e.computeValue=e=>{const t=p["b"].getAgeInYears(e);return{valLabel:"Age",val:t,obs:this.service.buildValueNumber("Age of contact",t)}},e.minDate=e=>{let a="";return"Biological Child"===e.relation_to_contact.value&&(a=_()(this.facts.birthDate).add(t,"year").format("YYYY-MM-DD")),a},e.maxDate=e=>{let a="";return"Biological Parent"===e.relation_to_contact.value&&(a=_()(this.facts.birthDate).subtract(t,"year").format("YYYY-MM-DD")),a},Object(d["b"])(e)})(),(()=>{const e=u["a"].getGenderField([{label:"Male",value:"M"},{label:"Female",value:"F"}]);return e.helpText="Sex of contact",e.finalComputedValue=e=>({val:e.value,obs:this.service.buildValueText("Gender of contact",e.value)}),e})(),{id:"contact_pregnancy_status",helpText:"Pregnancy status of contact",type:r["b"].TT_SELECT,condition:e=>"F"===e.gender.value,options:()=>[{label:"Non-Pregnant",value:"FNP"},{label:"Pregnant",value:"FP"},{label:"Breastfeeding",value:"FBf"},{label:"Unknown",value:"Unknown"}],finalComputedValue:e=>({val:e.value,obs:this.service.buildValueText("Contact pregnancy status",e.value)})},(()=>{const e=u["a"].getCellNumberField();return e.finalComputedValue=e=>({val:e.value,obs:this.service.buildValueText("Contact phone number",e.value)}),e})(),{id:"contact_hiv_status",helpText:"HIV Status of the contact",type:r["b"].TT_SELECT,isRequired:()=>!0,finalComputedValue:e=>({val:e.value,obs:this.service.buildValueCoded("Contact HIV tested",e.value)}),options:()=>this.mapStrToOptions(["Positive","Negative","Unknown"])},{id:"last_time_hiv_tested",helpText:"When was Contact's Last HIV Test",type:r["b"].TT_SELECT,condition:e=>e.contact_hiv_status.value&&"Negative"==e.contact_hiv_status.value,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueText("Contact HIV test date",e.value+" ago")}),options:()=>this.mapStrToOptions(["A year or more ago","Less than a year ago"]),beforeNext:async e=>{if("Less than a year ago"==e.value){const e=await Object(g["a"])("Last HIV test","Last HIV test","The case will be closed because the contact was recently tested and does not need to be followed up on.",[{name:"OK",slot:"start",color:"success"}],"primary",!1);return"OK"==e}return!0}},{id:"ipv_status",helpText:"IPV Status",type:r["b"].TT_SELECT,isRequired:()=>!0,condition:e=>"Negative"==e.contact_hiv_status.value&&"A year or more ago"==e.last_time_hiv_tested.value||"Unknown"==e.contact_hiv_status.value,finalComputedValue:e=>({val:e.value,obs:this.service.buildValueText("IPV Status",e.value)}),options:()=>this.mapStrToOptions(["Risk","No Risk"]),beforeNext:async e=>{if("Risk"==e.value){const e=await Object(g["a"])("IPV Risk","IPV Risk","This contact is at risk of IPV, therefore the case will be closed.",[{name:"OK",slot:"start",color:"success"}],"primary",!1);return"OK"==e}return!0}},{id:"contact_consent",helpText:"Consent to reach out to the contact",type:r["b"].TT_YES_NO,isRequired:()=>!0,condition:e=>"No Risk"===e.ipv_status.value,finalComputedValue:e=>({val:e,obs:this.service.buildValueCoded("Consent to contact the contact",e)}),options:()=>[{label:"Does the client consent to reach out to the contact?",value:"",values:this.yesNoOptions()}]},{id:"notification_means",helpText:"Recommended mode of Notification",type:r["b"].TT_SELECT,isRequired:()=>!0,condition:e=>"Yes"===e.contact_consent,options:()=>this.mapStrToOptions(["Active","Passive"]),finalComputedValue:e=>({val:e.value,obs:this.service.buildValueCoded("Notification Means",e.value)})},{id:"referral_type",helpText:"Referral Type",type:r["b"].TT_SELECT,isRequired:()=>!0,condition:e=>"Active"===e.notification_means.value,finalComputedValue:e=>({val:e.value,obs:this.service.buildValueCoded("Referral type",e.value)}),options:()=>this.mapStrToOptions(["Provider referral","Contract referral","Dual referral"])},{id:"set_appointment",helpText:"Appointment Date (Within 2 weeks)",type:r["b"].TT_DATE_PICKER,isRequired:()=>!0,defaultValue:()=>this.service.date,condition:e=>"Active"===e.notification_means.value,finalComputedValue:e=>({val:Object(b["g"])(e.value),obs:this.service.buildValueDate("Contact appointment date",e.value)}),config:{minDate:()=>this.service.date,maxDate:()=>_()(this.service.date).add(15,"day").toDate(),infoItems:e=>[{label:"User set appointment",value:Object(b["g"])(e)}]}},{id:"testing_location",helpText:"Testing Location",type:r["b"].TT_SELECT,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueText("Contact Appointment location",e.value)}),options:()=>this.mapStrToOptions(["Facility","Home/Other Facility"]),condition:e=>"Active"===e.notification_means.value},{...u["a"].getCurrentRegionField(),helpText:"Contact's Current Region of Residence",config:{footerBtns:[{name:"Same as index",slot:"end",onClickComponentEvents:{setValue:()=>"Same as index"},onClick:()=>"Same as index"}]},condition:e=>"Active"===e.notification_means.value,computedValue:e=>({val:e.label,obs:this.service.buildValueText("Contact current region",e.label)})},{...u["a"].getCurrentDistrictField(),helpText:"Contact's Current District of Residence",defaultComputedOutput:void 0,condition:e=>!/same as index/i.test(e.current_region.label)&&"Active"===e.notification_means.value,defaultOutput:e=>{if(/Same as index/i.test(e.current_region.label))return this.toOption(this.facts.district)},computedValue:e=>({val:e.label,obs:this.service.buildValueText("Contact current district",e.label)})},{...u["a"].getCurrentTAfield(),helpText:"Contact's Current TA of Residence",defaultComputedOutput:void 0,condition:e=>!/foreign|same as index/i.test(""+e.current_region.label)&&"Active"===e.notification_means.value,defaultOutput:e=>{if(/Same as index/i.test(e.current_region.label))return this.toOption(this.facts.currentTA)},computedValue:e=>({val:e.label,obs:this.service.buildValueText("Contact current TA",e.label)})},{...u["a"].getCurrentVillageField(),helpText:"Contact's Current Village of Residence",defaultComputedOutput:void 0,condition:e=>!/foreign|same as index/i.test(""+e.current_region.label)&&"Active"===e.notification_means.value,defaultOutput:e=>{if(/Same as index/i.test(e.current_region.label))return this.toOption(this.facts.village)},computedValue:e=>({val:e.label,obs:this.service.buildValueText("Contact current village",e.label)})},{id:"contact_address",helpText:"Physical address",type:r["b"].TT_NOTE,isRequired:()=>!0,condition:e=>"Active"===e.notification_means.value,finalComputedValue:e=>({val:e.value,obs:this.service.buildValueText("Contact physical address",e.value)})},{id:"self_testkit_given",helpText:"Contact Self Test Kit Given",type:r["b"].TT_YES_NO,isRequired:()=>!0,condition:e=>"No"===e.contact_consent||"Passive"===e.notification_means.value,finalComputedValue:e=>({obs:this.service.buildValueCoded("Self-Test kit given",e)}),options:()=>[{label:"Was a self test kit given to the Index for their contact?",value:"",values:this.yesNoOptions()}]},{id:"reason_for_not_giving_self_testkit",helpText:"Reason for not providing a self test (Optional)",type:r["b"].TT_NOTE,condition:e=>"No"===e.self_testkit_given,finalComputedValue:e=>{if(e)return{val:e.value,obs:this.service.buildValueText("Reason for not giving self-test kit",e.value)}}},{id:"frs_given",helpText:"FRS Given",type:r["b"].TT_YES_NO,isRequired:()=>!1,condition:e=>"Passive"===e.notification_means.value,finalComputedValue:e=>({obs:this.service.buildValueCoded("FRS given",e)}),options:()=>[{label:"Was FRS given to the Index client for their contact?",value:"",values:this.yesNoOptions()}]},{id:"reason_for_not_giving_frs",helpText:"Reason for not providing FRS",type:r["b"].TT_TEXT,isRequired:()=>!0,condition:e=>"No"===e.frs_given,finalComputedValue:e=>({obs:this.service.buildValueText("Reason for not giving FRS",e.value)})},{id:"contact_on_art",helpText:"On ART",type:r["b"].TT_YES_NO,isRequired:()=>!1,condition:e=>e.contact_hiv_status.value&&"Positive"===e.contact_hiv_status.value,finalComputedValue:e=>({obs:this.service.buildValueCoded("Contact ever registered at ART clinic",e)}),options:()=>[{label:"Is the Contact on ART?",value:"",values:this.yesNoOptions()}]},{id:"index_contact",helpText:"Contact Indexing",type:r["b"].TT_YES_NO,isRequired:()=>!0,condition:e=>e.contact_on_art&&"No"===e.contact_on_art,options:()=>[{label:"Do you want to convert the contact to an index client?",value:"",values:this.yesNoOptions()}],finalComputedValue:e=>({obs:this.service.buildValueCoded("Index patient",e)})},{id:"art_start_location",helpText:"Contact ART start location?",type:r["b"].TT_SELECT,isRequired:()=>!1,finalComputedValue:e=>({obs:this.service.buildValueText("Contact location of ART initiation",e.value)}),options:()=>this.mapStrToOptions(["Same Health Facility","Other Health Facility","Unknown"]),condition:e=>e.contact_on_art&&"Yes"===e.contact_on_art},...Object(d["b"])({id:"date_started_art",helpText:"Contact Art Start",required:!1,condition:e=>e.contact_on_art&&"Yes"===e.contact_on_art,minDate:()=>this.facts.birthDate,maxDate:()=>this.service.getDate(),estimation:{allowUnknown:!0},computeValue:(e,t)=>({date:e,isEstimate:t,obs:this.buildDateObs("Contact Date ART started",e,t)})},this.service.getDate()),{id:"contact_art_number",helpText:"Contact ART number",type:r["b"].TT_TEXT,isRequired:()=>!1,condition:e=>e.contact_on_art&&"Yes"===e.contact_on_art,beforeNext:async e=>(null==e.value||""==e.value.trim()||"Unknown"==e.value?await Object(g["a"])("Contact ART number","Contact ART status","Since  an ART number has not been submitted for this HIV+ contact. The case will remian open, until the ART number is added.",[{name:"OK",slot:"start",color:"success"}],"primary",!1):await Object(g["a"])("Contact ART number","Contact ART status","The contact is already on ART, therefore does not need follow up. This contact case will be closed.",[{name:"OK",slot:"start",color:"success"}],"primary",!1),!0),computedValue:e=>({tag:"reg",obs:this.service.buildValueText("Contact ART number at previous location",e.value)})}]}}}),y=a("6b0d"),C=a.n(y);const O=C()(T,[["render",n]]);t["default"]=O},7365:function(e,t,a){"use strict";a("14d9"),a("13d5");var i,n=a("7a23"),o=a("ad60"),r=a("2ef0"),s=a("0fa1"),l=a("7f35"),c=a("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(i||(i={}));const u=e=>c["b"].toStandardHisDisplayFormat(e),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(l["a"])("Data Integrity Issue Found","Patient died on "+u(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?i.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?i.CHANGE_PATIENT_OUTCOME:i.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const a=await Object(l["a"])("Data integrity issue found","",`Session date ${u(t)} is less than birth date of ${u(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===a?i.CHANGE_SESSION_DATE:i.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:a,apiDate:n})=>{const o=await Object(l["c"])("Please select a provider for "+t,`BDE: ${u(a)} | Current: ${u(n)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:i.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:i.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}};var h=a("c21d"),p=a("7920"),m=a("b5e4"),v=a("8e8b"),b=a("b432"),f=a("5a0c"),_=a.n(f),g=a("cc6f"),T=a("2ed9"),y=Object(n["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],encounterStartTime:null,facts:{age:-1,gender:"",birthDate:"",sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:"",village:"",district:"",currentTA:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():v["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,Object(r["isEmpty"])(this.patient)||Object(b["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0,this.setStartTime()}).catch(e=>console.log(e))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{setStartTime(){this.encounterStartTime=(new Date).getTime()},goOffline(){return!b["c"].value||b["b"].value},isOnline(){return b["c"].value},isOfflineMode(){return b["b"].value},initOfflineData(){var e;const t=Object(b["a"])().findByID(this.offlineID),a=null===t||void 0===t||null===(e=t.personParams)||void 0===e?void 0:e.person;a&&(this.facts.birthDate=a.birthdate,this.facts.age=_()(o["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.district=a.current_district,this.facts.village=a.current_village,this.facts.currentTA=a.current_traditional_authority,this.facts.gender=a.gender,this.ready=!0,this.setStartTime())},async saveFormEncounterAndProceed(e={}){let t="Pending",a=!1,i=null;const n=(new Date).getTime(),o=(n-this.encounterStartTime)/1e3,r=o/60;try{const t=await g["a"].buildValueText("Device",Object(T["f"])()),a=await g["a"].buildValueNumber("Review Time",r);i=[...await this.resolveObs(e.computedData),t,a]}catch(s){return console.error(""+s),Object(m["e"])("Unable to resolve observations")}if(!this.isOfflineMode()){try{const n=new g["a"](this.patientID,e.encounterTypeID,this.providerID);await n.createEncounter()&&await n.saveObservationList(i)&&(t="Success"),"function"===typeof e.callback&&await e.callback(n),a=!0}catch(s){a=!1,/NetworkError|Failed to fetch/i.test(""+s)?t="NetworkError":(t="Exception",console.error("Exception while saving an encounter: "+s))}if("Exception"===t)return Object(m["c"])("An error has occured!")}Object(b["a"])().saveObsOffline({observations:i,id:this.offlineID,uploadStatus:t,encounterName:this.$route.name,encounterTypeID:e.encounterTypeID,meta:e.formData,labOrders:e.labOrders,created:a},a),e.skipNextTask||this.nextTask()},runflowState(e,t=null){const a={};if(a[i.SET_PROVIDER]=e=>{const[t]=e.split(" "),a=Object(r["find"])(this.providers,{username:t});return a&&(this.providerID=a.person_id),i.CONTINUE},a[i.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),i.EXIT),a[i.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),i.EXIT),a[i.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),i.EXIT),e in a)return a[e](t)},async checkEncounterGuidelines(){const e=Object(h["a"])(this.facts,d);for(const r in e){var t,a;const s=e[r];if(null!==s&&void 0!==s&&null!==(t=s.actions)&&void 0!==t&&t.alert){var n;const e=this.runflowState(await(null===s||void 0===s||null===(n=s.actions)||void 0===n?void 0:n.alert(this.facts)));if(e===i.EXIT)return}if(null!==s&&void 0!==s&&null!==(a=s.actions)&&void 0!==a&&a.selection){var o;const e=await(null===s||void 0===s||null===(o=s.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await v["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=e.programID===o["a"].getProgramID(),this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(m["c"])(""+e)}this.facts.currentTA=this.patient.getCurrentTA(),this.facts.district=this.patient.getCurrentDistrict(),this.facts.village=this.patient.getCurrentVillage(),this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await v["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const a=e.username.toUpperCase(),i=t.username.toUpperCase();return a<i?-1:a>i?1:0}).map(e=>{var t;let a=""+e.username;if(!Object(r["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var i;const[t]=(null===(i=e.person)||void 0===i?void 0:i.names)||[];a+=` (${t.given_name} ${t.family_name})`}return a}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>"string"===typeof e||"number"===typeof e?{label:e,value:e}:e)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){try{const e=this.offlineID||this.patientID;await Object(s["b"])(e,this.$router,this.$route)}catch(e){console.error("Workflow error "+e),this.gotoPatientDashboard()}},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},toConditionalOptions(e){const t=[];for(const a of e)("boolean"!==typeof a[1]||a[1])&&t.push(this.toOption(a[0]));return t},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const a=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const a=t.obs?t.obs:t;return Array.isArray(a)?e=e.concat(a):"function"===typeof a?e.push(a()):e.push(a),e},[]);return Promise.all(a)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(a){return!1}},validateSeries(e){try{for(const t in e){const a=e[t]();if(a)return a}}catch(t){return[t]}}}});const C=y;t["a"]=C},7920:function(e,t,a){"use strict";var i=a("7a23");function n(e,t,a,n,o,r){return Object(i["openBlock"])(),Object(i["createBlock"])(Object(i["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=a("9441"),r=Object(i["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),s=a("6b0d"),l=a.n(s);const c=l()(r,[["render",n]]);t["a"]=c},"80b5":function(e,t,a){"use strict";a("13d5");var i=a("e86e"),n=a("d95e"),o=a("2706"),r=a("d10e"),s=a("b446"),l=a("9283"),c=a("23e6"),u=a("2ef0"),d=a("b5e4"),h=a("5713"),p=a("1c74");function m(e){return e.map(e=>({label:e,value:e}))}t["a"]={resolvePerson(e){let t={};for(const a in e){const i=e[a];Object(u["isPlainObject"])(i)&&"person"in i&&(Object(u["isPlainObject"])(i.person)?t={...t,...i.person}:t[a]=i["person"])}return t},getGivenNameField(){return{id:"given_name",helpText:"First name",type:n["b"].TT_TEXT,computedValue:e=>({person:e.value}),validation:e=>o["a"].isName(e),options:async e=>{if(e.given_name){const t=await r["a"].searchGivenName(e.given_name.value);return m(t)}return[]}}},getFamilyNameField(){return{id:"family_name",helpText:"Last name",type:n["b"].TT_TEXT,computedValue:e=>({person:e.value}),validation:e=>o["a"].isName(e),options:async e=>{if(e.family_name){const t=await r["a"].searchFamilyName(e.family_name.value);return m(t)}return[]}}},getGenderField(e){return{id:"gender",helpText:"Sex",type:n["b"].TT_SELECT,computedValue:e=>({person:e.value}),validation:e=>o["a"].required(e),options:()=>Object(u["isEmpty"])(e)?[{label:"Female",value:"F"},{label:"Male",value:"M"}]:e}},getDobConfig(e=!0){return{id:"birth_date",summaryLabel:"Date of Birth",helpText:e?"Birth":"",required:!0,minDate:()=>l["b"].estimateDateFromAge(100),maxDate:()=>r["a"].getSessionDate(),estimation:{allowUnknown:!0,allowUnknownMonthDay:!0,estimationFieldType:s["a"].AGE_ESTIMATE_FIELD},computeValue:(e,t)=>({date:e,isEstimate:t,person:{birthdate:e,birthdate_estimated:t}})}},getHomeRegionField(){return{id:"home_region",helpText:"Region of origin",type:n["b"].TT_SELECT,group:"person",requireNext:!1,computedValue:e=>({person:e.label}),validation:e=>o["a"].required(e),options:()=>Object(i["e"])()}},getHomeDistrictField(){return{id:"home_district",helpText:"District of origin",type:n["b"].TT_SELECT,requireNext:!1,summaryMapValue:(e,t)=>{var a;return{label:/foreign/i.test(""+(null===t||void 0===t||null===(a=t.home_region)||void 0===a?void 0:a.label))?"Home Country":"District of origin",value:e.label}},dynamicHelpText:e=>{var t;return/foreign/i.test(""+(null===e||void 0===e||null===(t=e.home_region)||void 0===t?void 0:t.label))?"Home Country":"District of origin"},computedValue:e=>({person:e.label}),options:e=>Object(i["a"])(e.home_region.value)}},addCustomLocationBtnForTAorVillage(e,t){return{name:"Add "+e,slot:"end",color:"success",onClick:async(a,i,n)=>{if("string"!=typeof n.filter||n.filter.length<3)return Object(d["e"])("Please enter a valid "+e);if(!Object(u["isEmpty"])(n.filtered))return Object(d["e"])("Can't add existing "+e);const o=await Object(d["a"])(`Do you want to add ${e} ${n.filter}?`);if(!o)return;const r=await h["a"].createAddress(e,n.filter,a[t].value);if(!r)return Object(d["e"])("Unable to add "+e);n.filter=n.filter.toUpperCase()}}},getHomeTaField(){return{id:"home_traditional_authority",helpText:"TA of origin",type:n["b"].TT_SELECT,requireNext:!1,config:{showKeyboard:!0,isFilterDataViaApi:!0,footerBtns:[this.addCustomLocationBtnForTAorVillage("TA","home_district")]},defaultOutput:()=>({label:"N/A",value:"N/A"}),computedValue:e=>({person:e.label}),validation:e=>o["a"].required(e),options:(e,t)=>Object(i["g"])(e.home_district.value,t)}},getHomeVillageField(){return{id:"home_village",helpText:"Village of origin",type:n["b"].TT_SELECT,config:{showKeyboard:!0,isFilterDataViaApi:!0,footerBtns:[this.addCustomLocationBtnForTAorVillage("Village","home_traditional_authority")]},requireNext:!1,defaultOutput:()=>({label:"N/A",value:"N/A"}),computedValue:e=>({person:e.label}),validation:e=>o["a"].required(e),options:(e,t)=>Object(i["h"])(e.home_traditional_authority.value,t)}},getCurrentRegionField(){return{id:"current_region",helpText:"Region of current residence",requireNext:!1,type:n["b"].TT_SELECT,computedValue:(e,t)=>/use home/i.test(""+e.value)?{person:{current_region:t.home_region.label,current_district:t.home_district.label,current_traditional_authority:t.home_traditional_authority.label,current_village:t.home_village.label}}:{person:e.label},validation:e=>o["a"].required(e),options:()=>Object(i["e"])(),config:{footerBtns:[{name:"Same as origin",slot:"end",onClickComponentEvents:{setValue:()=>"Use Home Address"},onClick:()=>"Use Home Address"}]}}},getCurrentDistrictField(){return{id:"current_district",helpText:"District",requireNext:!1,type:n["b"].TT_SELECT,summaryMapValue:(e,t)=>{var a;return{label:/foreign/i.test(""+(null===t||void 0===t||null===(a=t.home_region)||void 0===a?void 0:a.label))?"Current Country":"District of current residence",value:e.label}},dynamicHelpText:e=>e.current_region&&e.current_region.label.match(/foreign/i)?"Current Country":"District of current residence",computedValue:e=>({person:e.label}),validation:e=>o["a"].required(e),options:e=>Object(i["a"])(e.current_region.value)}},getCurrentTAfield(){return{id:"current_traditional_authority",helpText:"TA of current residence",requireNext:!1,type:n["b"].TT_SELECT,config:{showKeyboard:!0,isFilterDataViaApi:!0,footerBtns:[this.addCustomLocationBtnForTAorVillage("TA","current_district")]},defaultOutput:e=>{var t;if(!/use home/i.test(""+(null===(t=e.current_region)||void 0===t?void 0:t.label)))return{label:"N/A",value:"N/A"}},computedValue:e=>({person:e.label}),validation:e=>o["a"].required(e),options:(e,t)=>Object(i["g"])(e.current_district.value,t)}},getCurrentVillageField(){return{id:"current_village",helpText:"Village of current residence",requireNext:!1,type:n["b"].TT_SELECT,config:{showKeyboard:!0,isFilterDataViaApi:!0,footerBtns:[this.addCustomLocationBtnForTAorVillage("Village","current_traditional_authority")]},defaultOutput:e=>{var t;if(!/use home/i.test(""+(null===(t=e.current_region)||void 0===t?void 0:t.label)))return{label:"N/A",value:"N/A"}},computedValue:e=>({person:e.label}),validation:e=>o["a"].required(e),options:(e,t)=>Object(i["h"])(e.current_traditional_authority.value,t)}},getCellNumberField(){return{id:"cell_phone_number",helpText:"Cell phone number",group:"person",type:n["b"].TT_TEXT,computedValue:e=>({person:e.label}),validation:e=>{if(e){if(e.value.match(/Unknown|n\/a/i))return null;for(const t of(""+e.value).split("/"))if(o["a"].isMWPhoneNumber({label:t,value:t}))return[`"${t}" is not a valid phone number`];return null}return["Phone number cannot be empty"]},config:{customKeyboard:[[["1","2","3"],["4","5","6"],["7","8","9"],["","0",""]],[["+265","/"],["Unknown","N/A"],["Delete"]]]}}},getLandmarkFields(){return[{id:"default_landmarks",proxyID:"landmark",helpText:"Closest Landmark or Plot Number",type:n["b"].TT_SELECT,appearInSummary:e=>"Other"!=e.default_landmarks.value,computedValue:e=>({person:e.value}),validation:e=>o["a"].required(e),options:()=>m(["Catholic Church","CCAP","Seventh Day","Mosque","Primary School","Borehole","Secondary School","College","Market","Football Ground","Other"])},{id:"other_landmark",proxyID:"landmark",helpText:"Closest Landmark or Plot Number",type:n["b"].TT_NOTE,appearInSummary:e=>"Other"===e.default_landmarks.value,condition:e=>"Other"===e.default_landmarks.value,computedValue:e=>({person:e.value}),validation:e=>o["a"].required(e)}]},getFacilityLocationField(){return{id:"location",helpText:"Please select facility name",type:n["b"].TT_SELECT,computedValue:e=>({person:e.label}),validation:e=>o["a"].required(e),options:(e,t="")=>Object(i["b"])(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}}},getPersonNameFromPersonObj(e,t){return e.names.length?e.names[0][t]:""},getAttrFromPersonObj(e,t){return Array.isArray(e.person_attributes)&&e.person_attributes.length?e.person_attributes.reduce((e,a)=>a.type.name===t?a.value:e,""):""},getAddressFromPersonObj(e,t){if(Array.isArray(e.addresses)&&e.addresses.length){const a=e.addresses[0],i={home_district:"address2",home_village:"neighborhood_cell",home_traditional_authority:"county_district",current_village:"city_village",current_traditional_authority:"township_division",current_district:"state_province"};return a[i[t]]}return""},mapPersonData(e){const t=this.getPersonNameFromPersonObj(e,"given_name"),a=this.getPersonNameFromPersonObj(e,"family_name"),i=this.getAddressFromPersonObj(e,"home_district"),n=this.getAddressFromPersonObj(e,"home_village"),o=this.getAddressFromPersonObj(e,"home_traditional_authority");return{id:e.person_id,name:`${t} ${a}`,given_name:t,family_name:a,gender:e.gender,birth_date:e.birthdate,birthdate_estimated:e.birthdate_estimated,home_district:i,home_village:n,home_traditional_authority:o,home_address:`${i} ${n}`,current_district:this.getAddressFromPersonObj(e,"current_district"),current_traditional_authority:this.getAddressFromPersonObj(e,"current_traditional_authority"),cell_phone_number:this.getAttrFromPersonObj(e,"Cell Phone Number"),landmark:this.getAttrFromPersonObj(e,"Landmark Or Plot Number")}},getPersonAttributeOptions(e){const t=new c["a"](e),a=(e,t)=>t in e?e[t]():"-";return{label:t.getPatientInfoString(),value:t.getID()||t.getNationalID(),other:{patientID:t.getID(),npid:t.getNationalID(),person:e,options:[{label:"National ID",value:a(t,"getNationalID")},{label:"ARV Number",value:a(t,"getArvNumber"),other:{show:()=>"ART"===p["e"].getProgramName()}},{label:"Name",value:a(t,"getFullName")},{label:"Sex",value:a(t,"getGender")},{label:"Birthdate",value:a(t,"getBirthdate")},{label:"Home District",value:a(t,"getHomeDistrict")},{label:"Home Village",value:a(t,"getHomeVillage")},{label:"Current District",value:a(t,"getCurrentDistrict")},{label:"Current T/A",value:a(t,"getCurrentTA")},{label:"Cellphone",value:a(t,"getPhoneNumber")}]}}}}},c21d:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));a("14d9");function i(e,t){const a=[],i=[-1,"",null,void 0];for(const n in t){if(!(n in e))continue;const o=e[n];i.includes(o)?a.push(!1):a.push(t[n](o,e))}return a.every(Boolean)}function n(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function o(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function r(e,t,a="",r="",s="priority"){const l=[];for(const n in t){const o=t[n],s=[o.target&&a&&o.target!=a,o.targetEvent&&r&&o.targetEvent!=r];s.some(Boolean)||i(e,o.conditions)&&(o.title=n,o.description&&(o.description.text=o.description.info(e)),l.push(o))}return"priority"===s?n(l):o(l)}},e86e:function(e,t,a){"use strict";a.d(t,"b",(function(){return o})),a.d(t,"d",(function(){return r})),a.d(t,"c",(function(){return s})),a.d(t,"f",(function(){return l})),a.d(t,"e",(function(){return c})),a.d(t,"a",(function(){return u})),a.d(t,"g",(function(){return d})),a.d(t,"h",(function(){return h}));var i=a("5713"),n=a("2ef0");async function o(e=""){const t=await i["a"].getFacilities({name:e});return t.filter(e=>!Object(n["isEmpty"])(e)&&""!=e.name.trim()).map(e=>({label:e.name,value:e.location_id,other:e}))}async function r(e=""){const t=await i["a"].getLabs({search_name:e});return t.map(e=>({label:e,value:e}))}async function s(e=""){const t=await i["a"].getFacilities({name:e,tag:"Facility adult sections"});return t.map(e=>({label:e.name,value:e.name,other:e}))}async function l(){const e=await i["a"].getSpecialistClinics();return e.map(e=>({label:e.name,value:e.name,other:e}))}async function c(){const e=await i["a"].getRegions();return e.map(e=>({label:e.name,value:e.region_id,other:e}))}async function u(e){const t=await i["a"].getDistricts(e);return t.map(e=>({label:e.name,value:e.district_id,other:e}))}async function d(e,t=""){const a=await i["a"].getTraditionalAuthorities(e,t);return a.map(e=>({label:e.name,value:e.traditional_authority_id,other:e}))}async function h(e,t=""){const a=await i["a"].getVillages(e,t);return a.map(e=>({label:e.name,value:e.village_id,other:e}))}}}]);
//# sourceMappingURL=chunk-ebc0ec76.4aebf1da.js.map