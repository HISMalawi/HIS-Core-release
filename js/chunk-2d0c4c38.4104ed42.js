(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c4c38"],{"3be8":function(e,t,i){"use strict";i.r(t);var n=i("7a23");function a(e,t,i,a,s,c){const r=Object(n["resolveComponent"])("his-standard-form");return Object(n["openBlock"])(),Object(n["createBlock"])(r,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}var s=i("9441"),c=i("7365"),r=i("cc6f");class o extends r["a"]{constructor(e,t){super(e,5,t)}}var d=i("2706"),l=i("d95e"),p=i("b5e4"),u=Object(n["defineComponent"])({components:{HisStandardForm:s["a"]},mixins:[c["a"]],data:()=>({patientServicesService:{}}),watch:{ready:{async handler(e){e&&(this.patientServicesService=new o(this.patient.getID(),this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const i=await this.patientServicesService.createEncounter();if(!i)return Object(p["e"])("Unable to create registration encounter");const n=await this.resolveObs({...t}),a=await this.patientServicesService.saveObservationList(n);if(!a)return Object(p["e"])("Unable to save observations");this.nextTask()},getFields(){return[{id:"referral",helpText:"Select service",type:l["b"].TT_SELECT,validation:e=>d["a"].required(e),computedValue:e=>({obs:this.patientServicesService.buildValueText("Services ordered",e.value)}),options:()=>this.mapOptions(["Casualty","Dental","Eye","Family Planing","Medical","OB/Gyn","Orthopedics","Pediatrics","Skin","STI Clinic","Surgical","Other"])}]}}}),h=i("6b0d"),v=i.n(h);const b=v()(u,[["render",a]]);t["default"]=b}}]);
//# sourceMappingURL=chunk-2d0c4c38.4104ed42.js.map