{"version":3,"sources":["webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/apps/ART/views/encounters/StagingMixin.vue"],"names":["FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","patientID","providerID","facts","isEnrolledInProgam","formLabel","ready","watch","handler","route","params","patient_id","toUpperCase","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","programID","ProgramService","getProgramID","e","console","error","toastDanger","getSessionDate","getCachedApiDate","getBirthdate","this","$route","toString","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","loadingController","create","backdropDismiss","message","present","nextTask","getTop","v","dismiss","yesNoOptions","toYesNoOption","values","mapOptions","options","option","toConditionalOptions","final","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","ADULT_WHO_STAGE_CRITERIA","concept","stage","reasonForArt","reason","CHILD_WHO_STAGE_CRITERIA","CONTRADICTING_STAGE_DEFINITIONS_ALERTS","alertConfirmation","bmi","confirmBtnLabel","cancelBtnLabel","selectedCondition","keepAsymptomatic","selectedConditions","stageThreeConditions","stageFourConditions","stageTwoConditions","RECOMMENDED_CHILD_STAGING_CONDITIONS","isChecked","show","weightPercentile","disabled","RECOMMENDED_ADULT_STAGING_CONDITIONS","CHILD_ART_ELIGIBILITY","ageInMonths","age","pshdConditions","ConceptService","getConceptsByCategory","pshdCondition","testType","cd4","cd4Modifier","modifier","date","ADULT_ART_ELIGIBILITY","severeSymp","found","total","symp","gender","breastFeeding","answer","pregnant","StagingCategory","StagingService","AppEncounterService","constructor","confirmatoryTest","isAdult","isPedaid","setAge","getFacilities","LocationService","getConfirmatoryTestType","cd4CountIsValid","match","getAlertGuidelines","getWhoStageGuidelines","getProgramEligibilityGuidelines","getRecommendedConditionGuidelines","getStagingConditions","category","getStagingCategoryByNum","buildWhoStageObs","buildValueCoded","buildWhoCriteriaObs","buildReasonForArtObs","stageNumber","ADULT_STAGE_1","PEDAID_STAGE_1","ADULT_STAGE_2","PEDAID_STAGE_2","ADULT_STAGE_3","PEDAID_STAGE_3","ADULT_STAGE_4","PEDAID_STAGE_4","test","getFirstValueCoded","mixins","EncounterMixinVue","staging","showStagingWeightChart","canShowStagingFields","bmiObj","stagingFacts","isChildBearing","stageOneConditions","whoStage","getID","getAge","loadHivConfirmatoryTestType","getBMI","isMale","getAgeInMonths","calculateWeightPercentile","computedValues","encounter","createEncounter","stagingObservations","derivedObservations","saveObservationList","ok","updateStagingFacts","curIndex","buildStagingOptions","previouslySelected","conceptFinding","concept_id","setWhoStage","setReasonForArt","notAsymptomatic","f","stageOneC","stage_1_conditions","asymptomatics","hasTransferLater","has_transfer_letter","hasStaging","getStagingSummaryField","helpText","id","FieldType","TT_ART_STAGING_SUMMARY","onload","config","hiddenFooterBtns","isANCclient","getSuspendedProgram","getStagingFields","TT_MULTIPLE_YES_NO","validation","Validation","anyEmpty","summaryMapValue","computedValue","factID","pregnancy_status","TT_WEIGHT_CHART","async","getWeightHistory","x","y","TT_MULTIPLE_SELECT","onValue","onStagingCondition","unload","onConditionFalse","val","TT_SELECT","TT_TEXT","charAt","count","substring","buildValueNumber","s","isCd4","customKeyboard","CD4_COUNT_PAD_LO","cd4_available","generateDateFields","minDate","maxDate","getDate","estimation","allowUnknown","computeValue","isEstimate","buildValueDate","defaultValue","getLocationName","buildValueText","_","showKeyboard","isFilterDataViaApi","facilities","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id"],"mappings":"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","file":"js/chunk-089a5b7a.f62503d5.js","sourcesContent":["import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n","\nimport { defineComponent } from 'vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { StagingService } from \"@/apps/ART/services/staging_service\"\nimport EncounterMixinVue from '../../../../views/EncounterMixin.vue'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport HisDate from \"@/utils/Date\"\nimport { isEmpty } from \"lodash\"\nimport { CD4_COUNT_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport {\n    getFacilities\n} from '@/utils/HisFormHelpers/LocationFieldOptions'\n\nexport default defineComponent({\n    mixins: [EncounterMixinVue],\n    data: () => ({\n        staging: {} as any,\n        showStagingWeightChart: true,\n        canShowStagingFields: true as boolean,\n        bmiObj: {} as any, \n        stagingFacts : {\n            age: -1 as number,\n            bmi: -1 as number,\n            gender: '' as 'M' | 'F',\n            stage: -1 as number,\n            cd4: -1 as number,\n            date: '' as string,\n            isChildBearing: false as boolean,\n            stageOneConditions: [] as Array<string>,\n            stageTwoConditions: [] as Array<string>,\n            stageThreeConditions: [] as Array<string>,\n            stageFourConditions: [] as Array<string>,\n            reasonForArt: '' as string,\n            testType: '' as string,\n            pregnant: '' as 'Yes' | 'No',\n            breastFeeding: '' as 'Yes' | 'No',\n            selectedCondition: '' as string,\n            selectedConditions: [] as Array<string>,\n            weightPercentile: -1 as number,\n            ageInMonths: -1 as number,\n            cd4Modifier: '' as string,\n            whoStage: '' as string\n        }\n    }),\n    watch: {\n        ready : {\n            handler(v) {\n                if (v) {\n                    this.staging = new StagingService(this.patient.getID(), this.patient.getAge(), this.providerID)\n                }\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        async initStaging(patient: any) {\n            await this.staging.loadHivConfirmatoryTestType()\n            this.bmiObj = await patient.getBMI()\n            this.stagingFacts.age = patient.getAge()\n            this.stagingFacts.bmi = this.bmiObj['index']\n            this.stagingFacts.date = StagingService.getSessionDate()\n            this.stagingFacts.gender = patient.isMale() ? 'M' : 'F' \n            this.stagingFacts.testType = this.staging.getConfirmatoryTestType()\n            this.stagingFacts.ageInMonths = patient.getAgeInMonths()\n            this.stagingFacts.isChildBearing = patient.isChildBearing()\n\n            if (this.staging.isPedaid()) {\n                this.stagingFacts.weightPercentile = await patient.calculateWeightPercentile()\n            }\n        },\n        async submitStaging(computedValues: any) {\n            const encounter = await this.staging.createEncounter()\n\n            if (!encounter) throw 'Unable to create staging encounter'\n\n            const stagingObservations = await this.resolveObs(computedValues, 'staging')\n            const derivedObservations = await Promise.all([\n                this.buildReasonForArtObs(), this.buildWhoStageObs()\n            ])\n\n            const obs = await this.staging.saveObservationList([\n                ...stagingObservations, ...derivedObservations\n            ])\n\n            if (!obs) throw 'Unable to save patient observations'\n        },\n        async onStagingCondition({ label }: Option) {\n            this.stagingFacts.selectedCondition = label\n \n            const guidelines =  this.staging.getAlertGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n\n            if (isEmpty(findings)) \n                return true\n\n            if (findings[0]?.actions && findings[0]?.actions.alert) {\n                const ok = await findings[0]?.actions.alert(this.stagingFacts)\n                return ok ? true : false\n            }\n            return true\n        },\n        getFacilities(filter='') {\n            return getFacilities(filter)\n        },\n        updateStagingFacts() {\n            const conditions = [\n                this.stagingFacts.stageOneConditions,\n                this.stagingFacts.stageTwoConditions,\n                this.stagingFacts.stageThreeConditions,\n                this.stagingFacts.stageFourConditions, \n            ]\n            this.stagingFacts.stage = conditions.reduce(\n                (stage, conditions: string[], curIndex) =>\n                    isEmpty(conditions) ? stage : curIndex + 1\n                , 0)\n            this.stagingFacts.selectedConditions = conditions.reduce(\n                (accum, cur) => accum.concat(cur), []\n            )\n        },\n        buildReasonForArtObs() {\n            return this.staging.buildReasonForArtObs(this.stagingFacts.reasonForArt)\n        },\n        buildWhoStageObs() {\n            return this.staging.buildWhoStageObs(this.stagingFacts.whoStage)\n        },\n        buildStagingOptions(stage: number, previouslySelected=[] as Array<string>) {\n            const guidelines = this.staging.getRecommendedConditionGuidelines()\n\n            return this.staging.getStagingConditions(stage).map((concept: any) => {\n                let disabled = false\n                let description: unknown\n                let isChecked = previouslySelected.includes(concept.name)\n                this.stagingFacts.selectedCondition = concept.name\n\n                const findings = matchToGuidelines(this.stagingFacts, guidelines)\n\n                if (!isEmpty(findings)) {\n                    const conceptFinding = findings[0] //get the first item only\n                    if (conceptFinding?.actions?.isChecked) {\n                        isChecked = true\n                    }\n                    if (conceptFinding?.actions?.disabled) {\n                        disabled = true\n                    }\n                    description = conceptFinding.description\n                }\n                return {\n                    label: concept.name,\n                    value: concept.concept_id,\n                    isChecked,\n                    disabled,\n                    description\n                }\n            })\n        },\n        setWhoStage() {\n            const guidelines = this.staging.getWhoStageGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n            this.stagingFacts.whoStage = findings[0]?.concept || ''\n        },\n        setReasonForArt() {\n            const guidelines = this.staging.getProgramEligibilityGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n            this.stagingFacts.reasonForArt = findings[0]?.concept || ''\n        },\n        notAsymptomatic(f: any) {\n            const stageOneC = f.stage_1_conditions\n            if (stageOneC) {\n                const asymptomatics = stageOneC.filter((i: Option) => {\n                    return i.label.match(/asymptomatic/i) && i.isChecked\n                })\n                return isEmpty(asymptomatics)\n            }\n            return true\n        },\n        hasTransferLater(f: Record<string, any>): boolean {\n            if ('has_transfer_letter' in f) {\n                return f.has_transfer_letter && f.has_transfer_letter.value === 'Yes'\n            }\n            return false\n        },\n        hasStaging(f: Record<string, any>) {\n            // For components that have Optional staging\n            if (this.hasTransferLater(f)) {\n                return true\n            }\n            return this.canShowStagingFields\n        },\n        getStagingSummaryField(helpText=\"Summary\" as string) {\n            return {\n                id: 'summary',\n                helpText,\n                type: FieldType.TT_ART_STAGING_SUMMARY,\n                condition: (f: any) => this.hasStaging(f),\n                onload: () => {\n                    this.setReasonForArt()\n                    this.setWhoStage()\n                },\n                options: () => [\n                    { \n                        label: 'WHO Stage', \n                        value: this.stagingFacts.whoStage,\n                        other: {\n                            type: 'title-section'\n                        }\n                    },\n                    { \n                        label: 'Condition on starting ART', \n                        value: this.stagingFacts.reasonForArt,\n                        other: {\n                            type: 'title-section'\n                        } \n                    },\n                    ...this.stagingFacts.selectedConditions.map((i: string) => ({ label: i, value: i }))\n                ],\n                config: {\n                    title: 'Selected stage defining conditions',\n                    hiddenFooterBtns: [\n                        'Clear'\n                    ]\n                }\n            }\n        },\n        isANCclient() {\n            return StagingService.getSuspendedProgram() === 'ANC'\n        },\n        getStagingFields(): Array<Field> {\n            return [\n                {\n                    id: 'pregnancy_status',\n                    helpText: 'Pregnant / Breastfeeding',\n                    type: FieldType.TT_MULTIPLE_YES_NO,\n                    validation: (v: any) => Validation.anyEmpty(v),\n                    summaryMapValue: (d: Option) => ({ \n                        label: d.label, \n                        value: d.value \n                    }),\n                    computedValue: (data: Array<Option>, f: Record<string, any>) => {\n                        let obs = []\n                        // For ANC clients, mark pregnancy status as 'Yes' always!!\n                        // The assumption here is also that the pregnancy option is not available for selection\n                        if (this.isANCclient() && !this.hasTransferLater(f)) {\n                            this.stagingFacts['pregnant'] = 'Yes' \n                            obs.push(this.staging.buildValueCoded('Is patient pregnant', 'Yes'))\n                        }\n                        obs = obs.concat(data.map(d => {\n                            const  { value, other } = d\n\n                            const factID: 'pregnant' | 'breastFeeding' = other.factID\n\n                            this.stagingFacts[factID] = `${value}`.match(/Yes/i) ? 'Yes' : 'No'\n\n                            return this.staging.buildValueCoded(other.concept, value)\n                        }))\n                        return {\n                            obs,\n                            tag: 'staging'\n                        }\n                    },\n                    options: (f: any) => {\n                        if (!isEmpty(f.pregnancy_status)) {\n                            return f.pregnancy_status\n                        } else {\n                            const options = []\n                            // Hide pregnancy option for ANC clients who are not transferr in\n                            if (!this.isANCclient() || this.hasTransferLater(f)) {\n                                options.push({\n                                    label: 'Pregnant?',\n                                    value: '',\n                                    other: {\n                                        values: this.yesNoOptions(),\n                                        concept: 'Is patient pregnant',\n                                        factID: 'pregnant'\n                                    }\n                                })\n                            }\n                            options.push({\n                                label: 'Breastfeeding?',\n                                value: '',\n                                other: {\n                                    values: this.yesNoOptions(),\n                                    concept: 'Is patient breast feeding',\n                                    factID: 'breastFeeding'\n                                }\n                            })\n                            return options\n                        }\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.stagingFacts.isChildBearing,\n                },\n                {\n                    id: 'patient_weight_chart',\n                    helpText: 'Weight history',\n                    type: FieldType.TT_WEIGHT_CHART,\n                    options: async () => {\n                        let values = await this.patient.getWeightHistory()\n                        values = values.map((d: any) => ({ \n                            x: HisDate.toStandardHisDisplayFormat(d.date), \n                            y: d.weight\n                        }))\n                        return [\n                            {\n                                label: \"Weight for patient\",\n                                value: \"Weight trail\",\n                                other: {\n                                    values,\n                                    age: this.patient.getAge(),\n                                    bmi: this.bmiObj\n                                }\n                            }\n                        ]\n                    },\n                    config: {\n                        hiddenFooterBtns: [\n                            'Clear'\n                        ]\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.showStagingWeightChart\n                },\n                {\n                    id: 'stage_4_conditions',\n                    helpText: 'Stage 4 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(4, this.stagingFacts.stageFourConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageFourConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageFourConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_3_conditions',\n                    helpText: 'Stage 3 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(3, this.stagingFacts.stageThreeConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageThreeConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageThreeConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_2_conditions',\n                    helpText: 'Stage 2 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(2, this.stagingFacts.stageTwoConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Option[]) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageTwoConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageTwoConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_1_conditions',\n                    helpText: 'Stage 1 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    validation: (val: any) => {\n                        if (isEmpty(val) && isEmpty(this.stagingFacts.selectedConditions))\n                            return ['Please provide atleast one staging condition']\n                    },\n                    options: () => this.buildStagingOptions(1, this.stagingFacts.stageOneConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        const data = d.map(i => i.label)\n                        this.stagingFacts.stageOneConditions = data\n                        this.updateStagingFacts()\n                        return {\n                            tag: 'staging',\n                            obs: data.map(i => this.staging.buildWhoCriteriaObs(i))\n                        }\n                    },\n                    condition: (f: any) => this.hasStaging(f),\n                },\n                {\n                    id: 'cd4_available',\n                    helpText: 'Recent CD4 count results available?',\n                    type: FieldType.TT_SELECT,\n                    condition: (f: any) => this.hasStaging(f),\n                    validation: (val: any) => Validation.required(val),\n                    options: () => this.yesNoOptions()\n                },\n                {\n                    id: 'cd4_count',\n                    helpText: 'CD4 Count',\n                    type: FieldType.TT_TEXT,\n                    computedValue: (d: Option) => {\n                        const value = d.value.toString()\n                        const modifier = value.charAt(0)\n                        const count = parseInt(value.substring(1))\n                        return {\n                            tag: 'staging',\n                            modifier,\n                            count,\n                            obs: this.staging.buildValueNumber(\n                                'CD4 count', count, modifier\n                            )\n                        }\n                    },\n                    unload: (d: any, s: any, f: any, computedData: any) => {\n                        const { count, modifier } = computedData['cd4_count']\n                        this.stagingFacts.cd4 = count\n                        this.stagingFacts.cd4Modifier = modifier\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.cd4 = -1\n                        this.stagingFacts.cd4Modifier = ''\n                    },\n                    validation: (val: any) => {\n                        const isCd4 = () => this.staging.cd4CountIsValid(val.value)\n                        return this.validateSeries([\n                            () => Validation.required(val),\n                            () => !isCd4() ? ['Please start with either modifier first: >, <, or ='] : null\n                        ])\n                    },\n                    config: {\n                        customKeyboard: [\n                            CD4_COUNT_PAD_LO,\n                            [\n                                ['Unknown', 'Delete']\n                            ]\n                        ]\n                    },\n                    condition: (f: any) => this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                },\n                ...generateDateFields({\n                    id: 'cd4_result_date',\n                    helpText: 'Cd4 Results',\n                    required: true,\n                    minDate: () => this.patient.getBirthdate(),\n                    maxDate: () => this.staging.getDate(),\n                    condition: (f: any) =>  this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string, isEstimate: boolean) => {\n                        return {\n                            date,\n                            tag: 'staging',\n                            isEstimate,\n                            obs: this.staging.buildValueDate('Cd4 count datetime', date) \n                        }\n                    }\n                }, this.staging.getDate()),\n                {\n                    id: 'location',\n                    helpText: 'CD4 Location',\n                    type: FieldType.TT_SELECT,\n                    defaultValue: () => StagingService.getLocationName(),\n                    computedValue: ({ label }: Option) => ({\n                        tag: 'staging',\n                        obs: this.staging.buildValueText('Cd4 count location', label)\n                    }),\n                    validation: (val: any) => Validation.required(val),\n                    options: (_, filter='') => this.getFacilities(filter),\n                    config: {\n                        showKeyboard: true,\n                        isFilterDataViaApi: true\n                    },\n                    condition: (f: any) => this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                }\n            ]\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./StagingMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./StagingMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}