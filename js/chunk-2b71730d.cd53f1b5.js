(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2b71730d"],{"01bd":function(e,t,n){"use strict";n.r(t);var a=n("7a23");function i(e,t,n,i,o,s){const r=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(r,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}n("14d9");var o=n("d95e"),s=n("7920"),r=n("2706"),c=n("7365"),l=n("b5e4"),u=n("ad60"),d=n("cc6f");class h extends d["a"]{constructor(e,t){super(e,184,t)}}var p=Object(a["defineComponent"])({mixins:[c["a"]],components:{HisStandardForm:s["a"]},data:()=>({outcome:{}}),watch:{patient:{async handler(){this.outcome=new h(this.patientID,this.providerID),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(e){const t=await this.outcome.createEncounter();if(!t)return Object(l["e"])("Unable to create encounter");const n=u["a"].getProgramID(),a=await u["a"].getProgramWorkflows(u["a"].getProgramID()),i=e.select_referral_outcome.value,o={};a.forEach(e=>{e.states.forEach(e=>{const t=e.program_workflow_state_id,n=e.concept.concept_names[0].name;o[n]=t})});const s={location_id:u["a"].getLocationName(),state:o[i],date:u["a"].getSessionDate()},r=await u["a"].createState(this.patientID,n,s);if(!r)return Object(l["e"])("Unable to update state");const c=e.select_referral_outcome.value,d=e.select_cancer_treatment.value,h=await this.outcome.buildValueCoded("Outcome",c),p=[h];if(d.match(/cancer/)){const e=await this.outcome.buildValueCoded("Cancer treatment",d);p.push(e)}await this.outcome.saveObservationList(p);Object(l["d"])("Observations and encounter created!"),this.nextTask()},getFields(){return[{id:"select_referral_outcome",helpText:"Referral outcome",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>[{label:"Cancer of cervix",value:"Cancer of cervix"},{label:"Continue follow-up",value:"Continue follow-up"},{label:"Discharged uninfected",value:"Discharged uninfected"},{label:"Treatment complete",value:"Treatment complete"}]},{id:"select_cancer_treatment",helpText:"Select cancer treatment",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>[{label:"Surgery",value:"Surgery"},{label:"Palliative Care",value:"Palliative Care"},{label:"Discharged",value:"Discharged"},{label:"Other",value:"Other"}]}]}}}),f=n("d959"),m=n.n(f);const D=m()(p,[["render",i]]);t["default"]=D},7365:function(e,t,n){"use strict";n("d9e2"),n("14d9"),n("13d5");var a,i=n("7a23"),o=n("ad60"),s=n("2ef0"),r=n("0fa1"),c=n("7f35"),l=n("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(a||(a={}));const u=e=>l["b"].toStandardHisDisplayFormat(e),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(c["a"])("Data Integrity Issue Found","Patient died on "+u(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?a.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?a.CHANGE_PATIENT_OUTCOME:a.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const n=await Object(c["a"])("Data integrity issue found","",`Session date ${u(t)} is less than birth date of ${u(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===n?a.CHANGE_SESSION_DATE:a.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:n,apiDate:i})=>{const o=await Object(c["c"])("Please select a provider for "+t,`BDE: ${u(n)} | Current: ${u(i)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:a.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:a.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}};var h=n("c21d"),p=n("7920"),f=n("b5e4"),m=n("8e8b"),D=n("fe70"),b=n("b432"),v=n("5a0c"),O=n.n(v),g=n("cc6f"),y=Object(i["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{age:-1,gender:"",birthDate:"",sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():m["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,Object(s["isEmpty"])(this.patient)||Object(b["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0}).catch(e=>console.log(e))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{goOffline(){return!b["c"].value||b["b"].value},isOnline(){return b["c"].value},isOfflineMode(){return b["b"].value},initOfflineData(){const{getOfflinePerson:e}=Object(b["a"])(),t=e(this.offlineID);t&&(this.facts.birthDate=t.birthdate,this.facts.age=O()(o["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.gender=t.gender,this.ready=!0)},saveObsOffline(e,t,n,a,i="Pending"){Object(b["a"])().saveObsOffline({observations:n,id:this.offlineID,uploadStatus:i,encounterName:this.$route.name,encounterTypeID:e,meta:t,labOrders:a})},async saveFormEncounterAndProceed(e={}){const t=await this.resolveObs(e.computedData);let n="Pending";try{const a=new g["a"](this.patientID,e.encounterTypeID,this.providerID);await a.createEncounter()&&await a.saveObservationList(t)&&(n="Success"),"function"===typeof e.callback&&await e.callback(a)}catch(a){n=/NetworkError|Failed to fetch/i.test(""+a)?"NetworkError":"Exception",console.error(""+a)}if("Exception"===n)throw new Error("Unable to proceed!");this.saveObsOffline(e.encounterTypeID,e.formData,t,e.labOrders,n),e.skipNextTask||this.nextTask()},runflowState(e,t=null){const n={};if(n[a.SET_PROVIDER]=e=>{const[t]=e.split(" "),n=Object(s["find"])(this.providers,{username:t});return n&&(this.providerID=n.person_id),a.CONTINUE},n[a.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),a.EXIT),n[a.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),a.EXIT),n[a.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),a.EXIT),e in n)return n[e](t)},async checkEncounterGuidelines(){const e=Object(h["a"])(this.facts,d);for(const s in e){var t,n;const r=e[s];if(null!==r&&void 0!==r&&null!==(t=r.actions)&&void 0!==t&&t.alert){var i;const e=this.runflowState(await(null===r||void 0===r||null===(i=r.actions)||void 0===i?void 0:i.alert(this.facts)));if(e===a.EXIT)return}if(null!==r&&void 0!==r&&null!==(n=r.actions)&&void 0!==n&&n.selection){var o;const e=await(null===r||void 0===r||null===(o=r.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await m["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=e.programID===o["a"].getProgramID(),this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(f["c"])(""+e)}this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await m["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const n=e.username.toUpperCase(),a=t.username.toUpperCase();return n<a?-1:n>a?1:0}).map(e=>{var t;let n=""+e.username;if(!Object(s["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var a;const[t]=(null===(a=e.person)||void 0===a?void 0:a.names)||[];n+=` (${t.given_name} ${t.family_name})`}return n}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>"string"===typeof e||"number"===typeof e?{label:e,value:e}:e)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){(await D["h"].create({backdropDismiss:!1,message:"Checking Next task.."})).present();try{const e=this.offlineID||this.patientID;await Object(r["b"])(e,this.$router,this.$route)}catch(e){console.error(e)}D["h"].getTop().then(e=>e&&D["h"].dismiss())},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},toConditionalOptions(e){const t=[];for(const n of e)("boolean"!==typeof n[1]||n[1])&&t.push(this.toOption(n[0]));return t},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const n=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const n=t.obs?t.obs:t;return Array.isArray(n)?e=e.concat(n):"function"===typeof n?e.push(n()):e.push(n),e},[]);return Promise.all(n)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(n){return!1}},validateSeries(e){try{for(const t in e){const n=e[t]();if(n)return n}}catch(t){return[t]}}}});const E=y;t["a"]=E},7920:function(e,t,n){"use strict";var a=n("7a23");function i(e,t,n,i,o,s){return Object(a["openBlock"])(),Object(a["createBlock"])(Object(a["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=n("9441"),s=Object(a["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),r=n("d959"),c=n.n(r);const l=c()(s,[["render",i]]);t["a"]=l},c21d:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));n("14d9");function a(e,t){const n=[],a=[-1,"",null,void 0];for(const i in t){if(!(i in e))continue;const o=e[i];a.includes(o)?n.push(!1):n.push(t[i](o,e))}return n.every(Boolean)}function i(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function o(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function s(e,t,n="",s="",r="priority"){const c=[];for(const i in t){const o=t[i],r=[o.target&&n&&o.target!=n,o.targetEvent&&s&&o.targetEvent!=s];r.some(Boolean)||a(e,o.conditions)&&(o.title=i,o.description&&(o.description.text=o.description.info(e)),c.push(o))}return"priority"===r?i(c):o(c)}}}]);
//# sourceMappingURL=chunk-2b71730d.cd53f1b5.js.map