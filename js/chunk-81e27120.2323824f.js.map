{"version":3,"sources":["webpack:///./src/apps/HTS/views/NewKits.vue?3701","webpack:///./src/apps/HTS/views/NewKits.vue?d7cc","webpack:///./src/apps/HTS/views/NewKits.vue","webpack:///./src/apps/HTS/views/NewKits.vue?86d5","webpack:///./src/apps/HTS/composables/testKits.ts"],"names":["_hoisted_1","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_barcode_input","_component_ion_header","_component_ion_label","_component_ion_item","_component_ion_col","_component_ion_text","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_button","_component_ion_footer","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","color","_ctx$kits$_ctx$active","_createElementVNode","_toDisplayString","kits","activeIndex","kitName","_","style","onOnScan","onScan","_createElementBlock","_Fragment","_renderList","kit","index","onClick","_normalizeClass","key","size","lines","_createTextVNode","slot","expiryDate","lotNo","$event","updateLot","updateExpiryDate","expiryDateError","_createCommentVNode","clear","save","disabled","canFinish","hasErrors","defineComponent","components","IonGrid","IonCol","IonRow","IonPage","IonTitle","IonHeader","IonToolbar","IonContent","IonFooter","IonButton","BarcodeInput","IonItem","IonLabel","IonText","setup","initKits","saveKits","TestKit","ref","computed","value","some","checkExpiryDates","forEach","Date","Service","getSessionDate","HiSForm","id","helpText","type","FieldType","TT_TEXT","defaultValue","val","TT_FULL_DATE","text","async","alertConfirmation","toastWarning","every","k","toastSuccess","router","back","e","console","error","toastDanger","onMounted","then","__exports__","KitProp","getUserProp","setUserProp","UserProp","getSelectedTests","req","split","map","prop","trim","defaultKits","UNIGOLD","testGroup","visible","userProp","DETERMINE","BIOLINE","HIV_SELF_KIT","SYPHILIS","HEPATITIS","selectedKits","TEST_KIT_USER_PROPERTY","prevKits","JSON","parse","isEmpty","includes","preset","find","filter","getLotNo","data","getExpiryDate","date","stringify"],"mappings":"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","file":"js/chunk-81e27120.2323824f.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./NewKits.vue?vue&type=style&index=0&id=432125f4&scoped=true&lang=css\"","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-432125f4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"his-card\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_barcode_input = _resolveComponent(\"barcode-input\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_text = _resolveComponent(\"ion-text\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, { color: \"light\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_title, { class: \"ion-text-center his-md-text\" }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"b\", null, _toDisplayString(_ctx.kits[_ctx.activeIndex]?.kitName || '-'), 1)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_barcode_input, {\n                style: {\"margin\":\"0px auto\",\"width\":\"90%\"},\n                onOnScan: _ctx.onScan\n              }, null, 8, [\"onOnScan\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_grid, null, {\n            default: _withCtx(() => [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.kits, (kit, index) => {\n                return (_openBlock(), _createBlock(_component_ion_row, {\n                  onClick: () => _ctx.activeIndex = index,\n                  class: _normalizeClass(_ctx.activeIndex === index ? 'his-card active' : ''),\n                  key: index\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_col, { size: \"4\" }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", _hoisted_1, [\n                          _createVNode(_component_ion_item, { lines: \"none\" }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(\" Kit name \")\n                                ]),\n                                _: 1\n                              }),\n                              _createVNode(_component_ion_label, { slot: \"end\" }, {\n                                default: _withCtx(() => [\n                                  _createElementVNode(\"b\", null, _toDisplayString(kit.kitName), 1)\n                                ]),\n                                _: 2\n                              }, 1024)\n                            ]),\n                            _: 2\n                          }, 1024)\n                        ])\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_ion_col, { size: \"4\" }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", {\n                          class: _normalizeClass([\"his-card\", kit.expiryDate && !kit.lotNo ? 'error' : ''])\n                        }, [\n                          _createVNode(_component_ion_item, {\n                            onClick: ($event: any) => (_ctx.updateLot(index)),\n                            lines: \"none\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(\" Lot No. \")\n                                ]),\n                                _: 1\n                              }),\n                              _createVNode(_component_ion_label, { slot: \"end\" }, {\n                                default: _withCtx(() => [\n                                  _createElementVNode(\"b\", null, _toDisplayString(kit.lotNo), 1)\n                                ]),\n                                _: 2\n                              }, 1024)\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ], 2)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_ion_col, { size: \"4\" }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", {\n                          class: _normalizeClass([\"his-card\", !kit.expiryDate && kit.lotNo ? 'error' : ''])\n                        }, [\n                          _createVNode(_component_ion_item, {\n                            onClick: ($event: any) => (_ctx.updateExpiryDate(index)),\n                            lines: \"none\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(\" Expiry Date \")\n                                ]),\n                                _: 1\n                              }),\n                              _createVNode(_component_ion_label, {\n                                color: kit.expiryDateError ? 'danger' : '',\n                                slot: \"end\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createElementVNode(\"b\", null, _toDisplayString(kit.expiryDate), 1)\n                                ]),\n                                _: 2\n                              }, 1032, [\"color\"])\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"]),\n                          (kit.expiryDateError)\n                            ? (_openBlock(), _createBlock(_component_ion_text, {\n                                key: 0,\n                                color: \"danger\",\n                                class: \"ion-text-center\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(kit.expiryDateError), 1)\n                                ]),\n                                _: 2\n                              }, 1024))\n                            : _createCommentVNode(\"\", true)\n                        ], 2)\n                      ]),\n                      _: 2\n                    }, 1024)\n                  ]),\n                  _: 2\n                }, 1032, [\"onClick\", \"class\"]))\n              }), 128))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, { color: \"light\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                onClick: _ctx.clear,\n                slot: \"end\",\n                color: \"warning\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" Clear \")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                onClick: _ctx.save,\n                disabled: !_ctx.canFinish || _ctx.hasErrors,\n                slot: \"end\",\n                color: \"success\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" Finish \")\n                ]),\n                _: 1\n              }, 8, [\"onClick\", \"disabled\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { \n    computed, \n    defineComponent, \n    onMounted, \n    ref \n} from 'vue';\nimport {\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonPage,\n    IonTitle,\n    IonHeader,\n    IonToolbar,\n    IonContent,\n    IonFooter,\n    IonButton,\n    IonItem,\n    IonLabel,\n    IonText\n} from \"@ionic/vue\"\nimport BarcodeInput from '@/components/BarcodeInput.vue';\nimport HiSForm from \"@/utils/PopupKeyboard\"\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { alertConfirmation, toastDanger, toastSuccess, toastWarning } from '@/utils/Alerts';\nimport router from '@/router';\nimport { TestKit } from \"@/apps/HTS/composables/testKits\"\nimport { Service } from '@/services/service';\n\nexport default defineComponent({\n    components: {\n        IonGrid,\n        IonCol,\n        IonRow,\n        IonPage,\n        IonTitle,\n        IonHeader,\n        IonToolbar,\n        IonContent,\n        IonFooter,\n        IonButton,\n        BarcodeInput,\n        IonItem,\n        IonLabel,\n        IonText\n    },\n    setup() {\n        const { \n            kits, \n            initKits, \n            saveKits \n        } = TestKit()\n        \n        const activeIndex = ref()\n\n        const canFinish = ref(false)\n\n        const hasErrors = computed(() => kits.value.some((kit: any) => \n            (!kit.lotNo && kit.expiryDate || !kit.expiryDate && kit.lotNo) ||\n            kits.value.some((kit: any) => kit.expiryDateError)\n        ))\n\n        const checkExpiryDates = () => {\n            kits.value.forEach((kit: any) => {\n                if (kit.expiryDate && new Date(kit.expiryDate) <= new Date(Service.getSessionDate())) {\n                    kit.expiryDateError = \"Kit has expired!!\"                    \n                } else {\n                    kit.expiryDateError = ''\n                }\n                return kit\n            })\n        }\n\n        function updateLot(index: number) {\n            HiSForm({\n                id: 'lot',\n                helpText: kits.value[index].kitName + \" Lot No.\",\n                type: FieldType.TT_TEXT,\n                defaultValue: () => kits.value[index].lotNo\n            }, \n            (val: Option) => {\n                const value = val?.value || ''\n                kits.value[index].lotNo = value\n            })\n        }\n\n        function updateExpiryDate(index: number) {\n            HiSForm({\n                id: 'expiry',\n                helpText: kits.value[index].kitName + \" Expiry Date\",\n                type: FieldType.TT_FULL_DATE,\n                defaultValue: () => kits.value[index].expiryDate\n            }, \n            (val: Option) => {\n                const value = val?.value || ''\n                kits.value[index].expiryDate = value\n                checkExpiryDates()\n            })\n        }\n        \n        function onScan(text: string) {\n            kits.value[activeIndex.value].lotNo = text\n            if (!kits.value[activeIndex.value].expiryDate) {\n                updateExpiryDate(activeIndex.value)\n            }\n        }\n        \n        async function clear() {\n            if ((await alertConfirmation('Are you sure you want to clear everything?'))) {\n                kits.value.forEach((kits: any) => {\n                    kits.expiryDate = ''\n                    kits.lotNo = ''\n                    kits.expiryDateError = ''\n                })\n                activeIndex.value = null\n            }\n        }\n\n        async function save() {\n            checkExpiryDates()\n            if (hasErrors.value) {\n                return toastWarning('Some kits have errors! please fix them below')\n            }\n            if (kits.value.every((k: any) => !(k.lotNo && k.expiryDate))) {\n                if (!(await alertConfirmation(\"Do you want to continue without updating test kits?\")))\n                    return\n            }\n            canFinish.value = false\n            try {\n                await saveKits()\n                toastSuccess('Testkits updated!')\n                return router.back()\n            } catch (e) {\n                console.error(`${e}`)\n                toastDanger('General error has occured!')\n            }\n            canFinish.value = true\n        }\n\n        onMounted(() => initKits().then(() => { checkExpiryDates(); canFinish.value = true }))\n\n        return {\n            kits,\n            activeIndex,\n            hasErrors,\n            canFinish,\n            save,\n            onScan,\n            updateLot,\n            updateExpiryDate,\n            clear\n        }\n    }\n})\n","import { render } from \"./NewKits.vue?vue&type=template&id=432125f4&scoped=true&ts=true\"\nimport script from \"./NewKits.vue?vue&type=script&lang=ts\"\nexport * from \"./NewKits.vue?vue&type=script&lang=ts\"\n\nimport \"./NewKits.vue?vue&type=style&index=0&id=432125f4&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-432125f4\"]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport { find, isEmpty } from \"lodash\";\nimport { ref } from \"vue\";\nimport UserProp from \"@/composables/userproperty\"\n\nexport enum KitProp {\n    TEST_KIT_USER_PROPERTY = 'hts_user_assigned_kits',\n    HIV_SELF_KIT = 'HIV self-kit',\n    SYPHILIS = 'Syphilis',\n    HEPATITIS = 'Hepatitis B',\n    BIOLINE = 'Bioline',\n    DETERMINE = 'Determine',\n    UNIGOLD = 'Unigold'\n}\n\nexport function TestKit() {\n    const kits = ref<any>([])\n    const { getUserProp, setUserProp } = UserProp()\n\n    const getSelectedTests = async () => {\n        try {\n            const req = await getUserProp('HTS_PROGRAMS')\n            return `${req||''}`.split(',').map((prop: string) => prop.trim())\n        } catch (e) {\n            console.error(`${e}`)\n        }\n        return []\n    }\n\n    const initKits = async () => {\n        const defaultKits = [\n            {\n                kitName: KitProp.UNIGOLD,\n                lotNo: '',\n                expiryDate: '',\n                testGroup: 'profession_hiv_kit',\n                visible: true,\n                userProp: \"HIV Test\"\n            },\n            {\n                kitName: KitProp.DETERMINE,\n                lotNo: '',\n                expiryDate: '',\n                testGroup: 'profession_hiv_kit',\n                visible: true,\n                userProp: \"HIV Test\"\n            },\n            {\n                kitName: KitProp.BIOLINE,\n                lotNo: '',\n                expiryDate: '',\n                testGroup: 'profession_hiv_kit',\n                visible: true,\n                userProp: \"HIV Test\"\n            },\n            {\n                kitName: KitProp.HIV_SELF_KIT,\n                lotNo: '',\n                expiryDate: '',\n                visible: true\n            },\n            {\n                kitName: KitProp.SYPHILIS,\n                lotNo: '',\n                expiryDate: '',\n                visible: true,\n                userProp: \"Syphilis Test\"\n            },\n            {\n                kitName: KitProp.HEPATITIS,\n                lotNo: '',\n                expiryDate: '',\n                visible: true,\n                userProp: \"Hepatitis B Test\"\n            }\n        ]\n        try {\n            const selectedKits = await getSelectedTests()\n            const req: any = await getUserProp(KitProp.TEST_KIT_USER_PROPERTY)\n            const prevKits = JSON.parse(req||'')\n\n            defaultKits.forEach((kit: any) => {\n                if (kit.userProp && !isEmpty(selectedKits)) {\n                    kit.visible = selectedKits.includes(kit.userProp)\n                }\n                const preset = find(prevKits, { kitName: kit.kitName })\n                if (preset) {\n                    kit.lotNo = preset.lotNo\n                    kit.expiryDate = preset.expiryDate\n                }\n            })\n            kits.value = defaultKits.filter((k: any) => k.visible)\n        } catch (e) {\n            kits.value = defaultKits\n            console.error(`${e}`)\n        }\n        \n    }\n\n    const getLotNo = (kitName: KitProp) => {\n        const data = find(kits.value, { kitName })\n        if (data) {\n            if(new Date(data.expiryDate) <= new Date(Service.getSessionDate())) {\n                return ''\n            }\n            return data.lotNo\n        } \n        return ''\n    }\n\n    const getExpiryDate = (kitName: KitProp) => {\n        const date = find(kits.value, { kitName })\n        if (date) {\n            if (new Date(date.expiryDate) <= new Date(Service.getSessionDate())) {\n                return ''\n            }\n            return date.expiryDate\n        }\n        return ''\n    }\n\n    const saveKits = () => setUserProp(KitProp.TEST_KIT_USER_PROPERTY, JSON.stringify(kits.value))\n\n    return {\n        kits,\n        initKits,\n        saveKits,\n        getLotNo,\n        getExpiryDate\n    }\n}\n"],"sourceRoot":""}