{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/ART/views/encounters/PatientType.vue"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","patientType","watch","ready","this","PatientTypeService","patientID","providerID","loadPatientType","getFields","immediate","methods","formData","encounter","createEncounter","toastWarning","setLocationName","location","label","setPatientType","patient_type","value","save","toastSuccess","nextTask","facilityLocationField","facility","PersonField","getFacilityLocationField","condition","form","includes","id","helpText","getType","type","FieldType","TT_SELECT","validation","val","Validation","required","notTheSame","options","getPatientTypes","__exports__"],"mappings":"uIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMC,EAA+BC,8BAAkB,qBAEvD,OAAQC,yBAAcC,yBAAaH,EAA8B,CAC/DI,OAAQV,EAAKU,OACbC,eAAgBX,EAAKY,SACrBC,aAAa,EACbC,sBAAuBd,EAAKe,mBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,0B,kGCC5BC,+BAAgB,CAC7BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,wBACdC,KAAM,KAAM,CACVC,YAAa,KAEfC,MAAO,CACLC,MAAO,CACL,cAAcA,GACRA,IACFC,KAAKH,YAAc,IAAII,OAAmBD,KAAKE,UAAWF,KAAKG,kBACzDH,KAAKH,YAAYO,kBACvBJ,KAAKf,OAASe,KAAKK,cAGvBC,WAAW,IAGfC,QAAS,CACP,eAAeC,GAAa,QAC1B,MAAMC,QAAkBT,KAAKH,YAAYa,kBAEzC,IAAKD,EAAW,OAAOE,eAAa,8BAEpCX,KAAKH,YAAYe,gBAAjB,OAAiCJ,QAAjC,IAAiCA,GAAjC,UAAiCA,EAAUK,gBAA3C,aAAiC,EAAoBC,OACrDd,KAAKH,YAAYkB,eAAjB,OAAgCP,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAUQ,oBAA1C,aAAgC,EAAwBC,aAElDjB,KAAKH,YAAYqB,OACvBC,eAAa,uCACbnB,KAAKoB,YAEPC,wBACG,MAAMC,EAAkBC,OAAYC,2BAKpC,OAJAF,EAASG,UAAaC,GAAc,CAChC,cACA,yBACFC,SAASD,EAAKV,aAAaC,OACtBK,GAEVjB,YACE,MAAO,CACL,CACEuB,GAAI,eACJC,SAAU,iBAAiB7B,KAAKH,YAAYiC,UAC5CC,KAAMC,OAAUC,UAChBC,WAAaC,GACXC,OAAWC,SAASF,IACpBC,OAAWE,WAAWH,EAAIlB,MAAOjB,KAAKH,YAAYiC,WACpDS,QAAS,IAAMtC,OAAmBuC,mBAEpCxC,KAAKqB,6B,qBCxDb,MAAMoB,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASnE,KAErD","file":"js/chunk-2d225dd6.a2ab06f1.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { toastSuccess, toastWarning } from \"@/utils/Alerts\";\nimport PersonField from \"@/utils/HisFormHelpers/PersonFieldHelper\"\nimport { Field } from \"@/components/Forms/FieldInterface\"\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    patientType: {} as any,\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n          this.patientType = new PatientTypeService(this.patientID, this.providerID);\n          await this.patientType.loadPatientType()\n          this.fields = this.getFields();\n        }\n      },\n      immediate: true\n    },\n  },\n  methods: {\n    async onFinish(formData: any) {\n      const encounter = await this.patientType.createEncounter();\n\n      if (!encounter) return toastWarning(\"Unable to create encounter\")\n\n      this.patientType.setLocationName(formData?.location?.label)\n      this.patientType.setPatientType(formData?.patient_type?.value)\n\n      await this.patientType.save()\n      toastSuccess(\"Observations and encounter created!\")\n      this.nextTask()\n    },\n    facilityLocationField(): Field {\n       const facility: Field = PersonField.getFacilityLocationField()\n       facility.condition = (form: any) => [\n           'Drug Refill',\n           'External consultation'\n       ].includes(form.patient_type.value)\n       return facility\n    },\n    getFields(): any {\n      return [\n        {\n          id: \"patient_type\",\n          helpText: `Current type: ${this.patientType.getType()}`,\n          type: FieldType.TT_SELECT,\n          validation: (val: any) =>\n            Validation.required(val) ||\n            Validation.notTheSame(val.value, this.patientType.getType()),\n          options: () => PatientTypeService.getPatientTypes()\n        },\n        this.facilityLocationField()\n      ]\n    }\n  }\n});\n","import { render } from \"./PatientType.vue?vue&type=template&id=54903e1a&ts=true\"\nimport script from \"./PatientType.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientType.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}