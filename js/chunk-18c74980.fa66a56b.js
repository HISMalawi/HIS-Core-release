(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-18c74980"],{2819:function(e,t,i){"use strict";i.r(t);var n=i("7a23");function a(e,t,i,a,o,s){const r=Object(n["resolveComponent"])("his-standard-form"),l=Object(n["resolveComponent"])("ion-page");return Object(n["openBlock"])(),Object(n["createBlock"])(l,null,{default:Object(n["withCtx"])(()=>[Object(n["createVNode"])(r,{fields:e.fields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}i("14d9");var o=i("7365"),s=i("d95e"),r=i("ade3"),l=i("cc6f"),u=i("ff01");const c={12:13,13:14,14:16,15:17,16:18,17:19,18:20,19:21,20:22,21:24,22:25,23:25,24:27,25:28,26:29,27:30,28:32,29:33,30:34,31:35,32:36,33:37,34:38,35:39,36:40,37:42};class d extends l["a"]{constructor(e,t){super(e,98,t),Object(r["a"])(this,"gestationWeeks",void 0),this.gestationWeeks=0}expectedFundalHeightForGestationWeeks(){return this.getEquivalentFundalHeight(this.gestationWeeks)}async loadPregnancyStatus(){const e=await l["a"].getJson(`programs/${this.programID}/patients/${this.patientID}`);if(e){const t=e["date_of_lnmp"];if(t){const t=new u["a"](this.patientID,this.providerID);this.gestationWeeks=parseInt(t.calculateWeekOfFirstVisit(e["date_of_lnmp"]))}}}getEquivalentFundalWeeks(e){return e<12?c["12"]:e>37?c["37"]:c[e]}getEquivalentFundalHeight(e){for(const t in c){const i=c[t];if(e<=i)return parseInt(t)}return e>42?37:e<13?12:0}}var h=i("2706"),p=i("d867"),v=i("8158"),m=i("2ef0"),f=i("b5e4"),b=i("6be2"),O=Object(n["defineComponent"])({components:{IonPage:p["D"]},mixins:[o["a"]],data:()=>({service:{}}),watch:{ready:{async handler(e){e&&(this.service=new d(this.patientID,this.providerID),await this.service.loadPregnancyStatus(),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){await this.service.createEncounter(),await this.service.saveObservationList(await this.resolveObs(t)),this.nextTask()},diagnosisOptions(e){return[...v["a"].getConceptsByCategory("anc_diagnosis"),{name:"None"}].map(t=>e({...this.toOption(t.name),isChecked:!1}))},getFields(){return[{id:"ultrasound",helpText:"Ultrasound scan results available",type:s["b"].TT_SELECT,validation:e=>h["a"].required(e),computedValue:e=>this.service.buildValueCoded("Ultrasound",e.value),options:()=>this.yesNoOptions()},{id:"multiple_gestation",helpText:"Number of fetuses",type:s["b"].TT_SELECT,validation:e=>h["a"].required(e),computedValue:e=>this.service.buildValueText("Multiple gestation",e.value),condition:e=>"Yes"===e.ultrasound.value,options:()=>[{label:"One",value:1},{label:"Two",value:2},{label:"Three",value:3},{label:"Four",value:4},{label:"Unknown",value:"Unknown"}]},{id:"liquor",helpText:"Liquor",type:s["b"].TT_SELECT,validation:e=>h["a"].required(e),computedValue:e=>this.service.buildValueText("LIQUOR",e.value),condition:e=>"Yes"===e.ultrasound.value,options:()=>this.mapStrToOptions(["Adequate","Not adequate","Unknown"])},{id:"lie",helpText:"Lie",type:s["b"].TT_SELECT,validation:e=>h["a"].required(e),computedValue:e=>this.service.buildValueText("Lie",e.value),condition:e=>"Yes"===e.ultrasound.value,options:()=>this.mapStrToOptions(["Longitudinal","Transverse","Unknown"])},{id:"fetal_heart_movement_seen",helpText:"Fetal heart movement seen",type:s["b"].TT_SELECT,validation:e=>h["a"].required(e),computedValue:e=>this.service.buildValueCoded("Fetal heart movement seen",e.value),condition:e=>"Yes"===e.ultrasound.value,options:()=>this.yesNoOptions()},{id:"presentation",helpText:"Presentation",type:s["b"].TT_GROUP_SELECTOR,validation:e=>this.validateSeries([()=>h["a"].required(e),()=>e&&!e.value?["Presentation cannot be Empty!"]:null,()=>{var t,i,n;return e&&null!==e&&void 0!==e&&null!==(t=e.other)&&void 0!==t&&t.subGroupOptions&&Object(m["isEmpty"])(null===e||void 0===e||null===(i=e.other)||void 0===i?void 0:i.subGroupOptionValue)?[((null===e||void 0===e||null===(n=e.other)||void 0===n?void 0:n.subgroupTitle)||"Subgroup")+" has no value selected"]:null},()=>{var t,i,n,a;return!e||Object(m["isEmpty"])(null===e||void 0===e||null===(t=e.other)||void 0===t?void 0:t.subGroupOptionValue)||Object(m["isEmpty"])(null===e||void 0===e||null===(i=e.other)||void 0===i||null===(i=i.subGroupOptionValue)||void 0===i||null===(i=i.other)||void 0===i?void 0:i.options)||null!==e&&void 0!==e&&null!==(n=e.other)&&void 0!==n&&null!==(n=n.subGroupOptionValue)&&void 0!==n&&n.value?null:[(null===e||void 0===e||null===(a=e.other)||void 0===a||null===(a=a.subGroupOptionValue)||void 0===a?void 0:a.label)+"'s value isnt selected"]}]),computedValue:e=>{var t;const i=[this.service.buildValueText("Presentation",e.label)];var n;null!==e&&void 0!==e&&null!==(t=e.other)&&void 0!==t&&null!==(t=t.subGroupOptionValue)&&void 0!==t&&t.value&&i.push(this.service.buildValueText("Position",null===e||void 0===e||null===(n=e.other)||void 0===n||null===(n=n.subGroupOptionValue)||void 0===n?void 0:n.value));return i},options:e=>{const t=(e,t="",i={})=>({label:e,value:t,other:i}),i=[t("Vertex","",{options:this.mapStrToOptions(["Left Occipito Anterior","Left Occipito Transverse","Left Occipito Posterior","Right Occipito Anterior","Right Occipito Transverse","Right Occipito Posterior","Unknown"])}),this.toOption("Oblique"),this.toOption("Transverse"),this.toOption("Breech",{options:this.mapStrToOptions(["Left Sacro Anterior","Left Sacro Transverse","Left Sacro Posterior","Right Sacro Anterior","Right Sacro Transverse","Right Sacro Posterior","Unknown"])}),t("Face","",{concept:"Position",options:this.mapStrToOptions(["Left Mento Anterior","Left Mento Transverse","Left Mento Posterior","Right Mento Anterior","Right Mento Transverse","Right Mento Posterior","Unknown"])}),t("Shoulder","",{options:this.mapStrToOptions(["Left Acromion Dorsal Anterior","Left Acromion Dorsal Transverse","Left Acromion Dorsal Posterior","Right Acromion Dorsal Anterior","Right Acromion Dorsal Transverse","Right Acromion Dorsal Posterior","Unknown"])})];return e.presentation?e.presentation:[t("Cephalic","",{subGroupOptions:i,subgroupTitle:"Cephalic Position",options:this.mapStrToOptions(["Right Occipito Anterior","Left Occipito Anterior","Unknown"])}),t("Breech","",{subGroupOptions:i,subgroupTitle:"Breech Position",options:this.mapStrToOptions(["Right Sacro Anterior","Left Sacro Anterior","Unknown"])}),this.toOption("Ball"),this.toOption("Nil palpable")]}},{id:"enter_fundal_height",helpText:"Fundal height (cm)",type:s["b"].TT_NUMBER,dynamicHelpText:()=>{const e="Fundal height (cm)";return this.service.gestationWeeks?`${e} (${this.service.gestationWeeks}wks/${this.service.getEquivalentFundalHeight(this.service.gestationWeeks)} cm)`:e},beforeNext:async(e,t)=>{if(e&&(""+e.value).match(/unknown/i)&&!["Nil palpable","Ball"].includes(t.presentation.value))return!!await Object(f["a"])("Do you want to proceed with Unknown Fundal height?");const i=this.service.expectedFundalHeightForGestationWeeks(),n=e?parseInt(e.value):-1;return!(this.service.gestationWeeks&&e&&"number"===typeof n&&(n<i||n>i))||!!await Object(f["a"])(`\n                        Fundal height is not equal to expected ${i} cm from gestation weeks of ${this.service.gestationWeeks} .\n                        Are you sure about this value?`)},validation:e=>this.validateSeries([()=>h["a"].required(e),()=>e&&!(""+e.value).match(/unknown/i)?h["a"].rangeOf(e,10,45):null]),computedValue:e=>"Unknown"!=e.value?this.service.buildValueNumber("Fundus",e.value):this.service.buildObs("Fundus",{value_coded:e.value,value_numeric:0}),config:{keypad:b["g"]}},{id:"fetal_heart_beat",helpText:"Fetal heart beat",type:s["b"].TT_SELECT,validation:e=>h["a"].required(e),computedValue:e=>this.service.buildValueText("Fetal Heart Beat",e.value),options:()=>this.mapStrToOptions(["Heard","Not heard"])},{id:"fetal_heart_rate",helpText:"Fetal heart rate",type:s["b"].TT_NUMBER,validation:e=>h["a"].required(e),beforeNext:async e=>{const t=120,i=140,n=e?parseInt(e.value):-1;if(e&&"number"===typeof n&&(n<t||n>i)){const e=await Object(f["a"])(`\n                            The value is out of Range of ${t} - ${i}.\n                            Are you sure about this value?`);return!!e}return!0},condition:e=>"Heard"===e.fetal_heart_beat.value,computedValue:e=>"Unknown"!=e.value?this.service.buildValueNumber("Fetal heart movement seen",""+e.value):this.service.buildObs("Fetal heart movement seen",{value_numeric:0,value_coded:e.value}),config:{keypad:b["g"]}},{id:"enter_fetal_movement",helpText:"Fetal movement heard",type:s["b"].TT_SELECT,validation:e=>h["a"].required(e),computedValue:e=>this.service.buildValueCoded("Fetal movement heard",""+e.value),options:()=>this.yesNoOptions()},{id:"fetal_movement_felt",helpText:"Fetal movement felt",type:s["b"].TT_SELECT,validation:e=>h["a"].required(e),condition:e=>!["Ball","Nil palpable"].includes(e.presentation.label),computedValue:e=>this.service.buildValueCoded("Fetal movement felt",""+e.value),options:()=>this.yesNoOptions()},{id:"last_fmf",helpText:"Last fetal movement felt (in Weeks)",type:s["b"].TT_NUMBER,validation:e=>h["a"].required(e),condition:e=>"Unknown"!=e.fetal_movement_felt.value,computedValue:e=>"Unknown"!=e.value?this.service.buildValueNumber("Last Fetal movement felt",e.value):this.service.buildObs("Last Fetal movement felt",{value_numeric:0,value_coded:e.value}),options:()=>this.yesNoUnknownOptions()},{id:"diagnosis",helpText:"Diagnosis",type:s["b"].TT_MULTIPLE_SELECT,validation:e=>h["a"].required(e),computedValue:e=>e&&e.map(e=>e.value).includes("None")?[]:e.map(e=>this.service.buildValueCoded(e.label,"Yes")),onValueUpdate(e,t){return e.map(e=>("None"===t.value&&"None"!=e.value&&(e.isChecked=!1),"None"!=t.value&&t.isChecked&&"None"===e.value&&(e.isChecked=!1),e))},options:()=>this.diagnosisOptions(e=>e),config:{footerBtns:[{name:"None",slot:"end",onClickComponentEvents:{refreshOptions:()=>this.diagnosisOptions(e=>(e.isChecked="None"===e.label,e))},onClick:()=>"None"}]}}]}}}),T=i("6b0d"),g=i.n(T);const D=g()(O,[["render",a]]);t["default"]=D},7365:function(e,t,i){"use strict";i("14d9"),i("13d5");var n,a=i("7a23"),o=i("ad60"),s=i("2ef0"),r=i("0fa1"),l=i("7f35"),u=i("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(n||(n={}));const c=e=>u["b"].toStandardHisDisplayFormat(e),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(l["a"])("Data Integrity Issue Found","Patient died on "+c(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?n.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?n.CHANGE_PATIENT_OUTCOME:n.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const i=await Object(l["a"])("Data integrity issue found","",`Session date ${c(t)} is less than birth date of ${c(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===i?n.CHANGE_SESSION_DATE:n.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:i,apiDate:a})=>{const o=await Object(l["c"])("Please select a provider for "+t,`BDE: ${c(i)} | Current: ${c(a)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:n.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:n.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}};var h=i("c21d"),p=i("7920"),v=i("b5e4"),m=i("8e8b"),f=i("b432"),b=i("5a0c"),O=i.n(b),T=i("cc6f"),g=i("2ed9"),D=Object(a["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],encounterStartTime:null,facts:{age:-1,gender:"",birthDate:"",sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:"",village:"",district:"",currentTA:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():m["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,Object(s["isEmpty"])(this.patient)||Object(f["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0,this.setStartTime()}).catch(e=>console.log(e))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{setStartTime(){this.encounterStartTime=(new Date).getTime()},goOffline(){return!f["c"].value||f["b"].value},isOnline(){return f["c"].value},isOfflineMode(){return f["b"].value},initOfflineData(){var e;const t=Object(f["a"])().findByID(this.offlineID),i=null===t||void 0===t||null===(e=t.personParams)||void 0===e?void 0:e.person;i&&(this.facts.birthDate=i.birthdate,this.facts.age=O()(o["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.district=i.current_district,this.facts.village=i.current_village,this.facts.currentTA=i.current_traditional_authority,this.facts.gender=i.gender,this.ready=!0,this.setStartTime())},async saveFormEncounterAndProceed(e={}){let t="Pending",i=!1,n=null;const a=(new Date).getTime(),o=(a-this.encounterStartTime)/1e3,s=o/60;try{const t=await T["a"].buildValueText("Device",Object(g["f"])()),i=await T["a"].buildValueNumber("Review Time",s);n=[...await this.resolveObs(e.computedData),t,i]}catch(r){return console.error(""+r),Object(v["e"])("Unable to resolve observations")}if(!this.isOfflineMode()){try{const a=new T["a"](this.patientID,e.encounterTypeID,this.providerID);await a.createEncounter()&&await a.saveObservationList(n)&&(t="Success"),"function"===typeof e.callback&&await e.callback(a),i=!0}catch(r){i=!1,/NetworkError|Failed to fetch/i.test(""+r)?t="NetworkError":(t="Exception",console.error("Exception while saving an encounter: "+r))}if("Exception"===t)return Object(v["c"])("An error has occured!")}Object(f["a"])().saveObsOffline({observations:n,id:this.offlineID,uploadStatus:t,encounterName:this.$route.name,encounterTypeID:e.encounterTypeID,meta:e.formData,labOrders:e.labOrders,created:i},i),e.skipNextTask||this.nextTask()},runflowState(e,t=null){const i={};if(i[n.SET_PROVIDER]=e=>{const[t]=e.split(" "),i=Object(s["find"])(this.providers,{username:t});return i&&(this.providerID=i.person_id),n.CONTINUE},i[n.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),n.EXIT),i[n.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),n.EXIT),i[n.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),n.EXIT),e in i)return i[e](t)},async checkEncounterGuidelines(){const e=Object(h["a"])(this.facts,d);for(const s in e){var t,i;const r=e[s];if(null!==r&&void 0!==r&&null!==(t=r.actions)&&void 0!==t&&t.alert){var a;const e=this.runflowState(await(null===r||void 0===r||null===(a=r.actions)||void 0===a?void 0:a.alert(this.facts)));if(e===n.EXIT)return}if(null!==r&&void 0!==r&&null!==(i=r.actions)&&void 0!==i&&i.selection){var o;const e=await(null===r||void 0===r||null===(o=r.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await m["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=e.programID===o["a"].getProgramID(),this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(v["c"])(""+e)}this.facts.currentTA=this.patient.getCurrentTA(),this.facts.district=this.patient.getCurrentDistrict(),this.facts.village=this.patient.getCurrentVillage(),this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await m["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const i=e.username.toUpperCase(),n=t.username.toUpperCase();return i<n?-1:i>n?1:0}).map(e=>{var t;let i=""+e.username;if(!Object(s["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var n;const[t]=(null===(n=e.person)||void 0===n?void 0:n.names)||[];i+=` (${t.given_name} ${t.family_name})`}return i}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>"string"===typeof e||"number"===typeof e?{label:e,value:e}:e)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){try{const e=this.offlineID||this.patientID;await Object(r["b"])(e,this.$router,this.$route)}catch(e){console.error("Workflow error "+e),this.gotoPatientDashboard()}},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},toConditionalOptions(e){const t=[];for(const i of e)("boolean"!==typeof i[1]||i[1])&&t.push(this.toOption(i[0]));return t},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const i=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const i=t.obs?t.obs:t;return Array.isArray(i)?e=e.concat(i):"function"===typeof i?e.push(i()):e.push(i),e},[]);return Promise.all(i)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(i){return!1}},validateSeries(e){try{for(const t in e){const i=e[t]();if(i)return i}}catch(t){return[t]}}}});const y=D;t["a"]=y},7920:function(e,t,i){"use strict";var n=i("7a23");function a(e,t,i,a,o,s){return Object(n["openBlock"])(),Object(n["createBlock"])(Object(n["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=i("9441"),s=Object(n["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),r=i("6b0d"),l=i.n(r);const u=l()(s,[["render",a]]);t["a"]=u},c21d:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));i("14d9");function n(e,t){const i=[],n=[-1,"",null,void 0];for(const a in t){if(!(a in e))continue;const o=e[a];n.includes(o)?i.push(!1):i.push(t[a](o,e))}return i.every(Boolean)}function a(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function o(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function s(e,t,i="",s="",r="priority"){const l=[];for(const a in t){const o=t[a],r=[o.target&&i&&o.target!=i,o.targetEvent&&s&&o.targetEvent!=s];r.some(Boolean)||n(e,o.conditions)&&(o.title=a,o.description&&(o.description.text=o.description.info(e)),l.push(o))}return"priority"===r?a(l):o(l)}},ff01:function(e,t,i){"use strict";i.d(t,"a",(function(){return l}));var n=i("cc6f"),a=i("74f4"),o=i("5a0c"),s=i.n(o),r=i("0011");class l extends n["a"]{constructor(e,t){super(e,81,t)}async enrollPatient(){const e=new a["a"](this.patientID);await e.enrollProgram(),e.setStateDate(this.date),e.setStateId(118),await e.updateState()}calculateWeekOfFirstVisit(e){const t=new Date(e);t.setDate(t.getDate()+7);const i=new Date(this.getDate()),n=i-t;return String(Math.floor(n/6048e5))}calculateGestationDateFromPeriod(e){return s()(this.date).subtract(e,"months").endOf("month").format("YYYY-MM-DD")}estimateDelieveryDate(e){const t=new Date(e);t.setDate(t.getDate()+7),t.setMonth(t.getMonth()+9);const i=Object(r["a"])(t.getMonth()+1),n=Object(r["a"])(t.getDate());return`${t.getFullYear()}-${i}-${n}`}}}}]);
//# sourceMappingURL=chunk-18c74980.fa66a56b.js.map