{"version":3,"sources":["webpack:///./src/apps/ART/views/encounters/BPDrug_management.vue?6e20","webpack:///./src/apps/ART/views/encounters/BPDrug_management.vue","webpack:///./src/apps/ART/views/encounters/BPDrug_management.vue?0b2b","webpack:///./src/apps/ART/services/htn_service.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?f5b0","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/apps/ART/views/encounters/BPDrug_management.vue?cab1","webpack:///./src/components/Forms/SIngleTouchField.vue?a3f9","webpack:///./src/components/Forms/SIngleTouchField.vue","webpack:///./src/components/Forms/SIngleTouchField.vue?5786"],"names":["_withId","_withScopeId","_pushScopeId","_hoisted_1","_createVNode","class","_hoisted_2","key","_hoisted_3","id","style","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createTextVNode","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_popScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_col","_resolveComponent","_component_ion_row","_component_ion_toolbar","_component_ion_header","_component_ion_checkbox","_component_ion_button","_component_view_port","_component_ion_content","_component_ion_footer","_component_ion_page","_openBlock","_createBlock","default","_","drugs","_Fragment","_renderList","item","itemIndex","_toDisplayString","drug","drugIndex","amount","i","checked","selected","onIonChange","$event","selectDrug","Object","keys","ind","onClick","launchNotePad","color","d","valign","notes","note","date","description","isNewNote","removeNote","_createCommentVNode","size","slot","gotoPatientDashboard","canClearHtnSessionPrescription","clearPrescriptionInSession","selectedDrugs","length","onFinish","defineComponent","mixins","EncounterMixinVue","components","ViewPort","IonToolbar","IonHeader","IonContent","IonRow","IonButton","IonCol","IonFooter","IonPage","IonCheckbox","watch","ready","handler","HTN","BPManagementService","patientID","providerID","getDrugs","getCurrentDrugs","setPreviousBpDrugs","setPreviousBpNotes","patientHasHtnSessionKey","immediate","data","methods","sessionStorage","removeItem","HTN_SESSION_KEY","Prescription","this","sessionData","getItem","JSON","parse","e","console","warn","splice","showModal","helpText","type","FieldType","TT_TEXT","push","ProgramService","getSessionDate","value","drugID","drugNotes","values","filter","isEmpty","map","reduce","accum","cur","concat","n","buildObs","createEncounter","Promise","all","saveObservationList","toastWarning","gotoTreatment","htnDrugs","find","htnDrugReferences","setItem","stringify","$router","currentField","modalController","create","component","TouchField","backdropDismiss","cssClass","componentProps","dismissType","modal","present","forEach","element","index","drug_id","current","event","detail","computed","__exports__","ObservationService","getFirstValueNumber","getFirstValueCoded","query","AppEncounterService","getJson","pills","postJson","state","HCZ","drugName","isChecked","dispensed","expectedRemaining","adherence","Enalapril","remaining","Amlodipine","Atenolol","sbp","dbp","bpTrail","sort","a","b","bp","getBpGrade","firstRecentGrade","secondRecentGrade","FlowState","dformat","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","flowState","SET_PROVIDER","isBdeMode","isBDE","HisStandardForm","patient","fields","facts","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","deep","cancelDestination","patientDashboardUrl","runflowState","states","split","username","provider","person_id","EXIT","findings","matchToGuidelines","finding","status","program","error","toastDanger","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","usernameA","usernameB","p","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","path","nextTask","yesNoOptions","toYesNoOption","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Array","isArray","inArray","arr","expression","validateSeries","condition","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","String","required","formData","computedData","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","text","info","_component_ion_title","_withCtx","_KeepAlive","currentFieldig","preset","clear","valueClearIndex","fdata","config","cdata","computedFormData","activationState","onValue","defaultValue","onValueUpdate","onOnValue","onFieldValue","disabled","disableBtn","onClose","onClear","onDone","buildAsyncComponents","COMPONENT_REFS","defineAsyncComponent","IonTitle","dismiss","back","validation","errors","join"],"mappings":"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","file":"js/chunk-f50947e2.0a402af6.js","sourcesContent":["import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-7217b18a\")\n\n_pushScopeId(\"data-v-7217b18a\")\nconst _hoisted_1 = /*#__PURE__*/_createVNode(\"label\", { class: \"his-title\" }, \" Prescribe BP drugs \", -1)\nconst _hoisted_2 = {\n  key: 0,\n  class: \"view-port-content\"\n}\nconst _hoisted_3 = {\n  id: \"main-table\",\n  style: {\"width\":\"100%\"}\n}\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"th\", null, \" \", -1)\nconst _hoisted_5 = /*#__PURE__*/_createVNode(\"td\", { class: \"td-remaining td-title\" }, [\n  /*#__PURE__*/_createVNode(\"span\", null, \"New/Current\")\n], -1)\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"td\", { class: \"td-remaining td-title\" }, [\n  /*#__PURE__*/_createVNode(\"span\", null, \" \")\n], -1)\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\" Add notes \")\nconst _hoisted_8 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_9 = {\n  id: \"table-notes\",\n  style: {\"width\":\"100%\"}\n}\nconst _hoisted_10 = /*#__PURE__*/_createVNode(\"caption\", { style: {\"font-size\":\"1.2em\"} }, \" Notes \", -1)\nconst _hoisted_11 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_12 = {\n  class: \"table-inner-notes\",\n  id: \"notes-HCZ\"\n}\nconst _hoisted_13 = { class: \"date-td today-td\" }\nconst _hoisted_14 = { class: \"date-td today-td\" }\nconst _hoisted_15 = /*#__PURE__*/_createTextVNode(\" X \")\nconst _hoisted_16 = /*#__PURE__*/_createTextVNode(\" cancel \")\nconst _hoisted_17 = /*#__PURE__*/_createTextVNode(\" Clear Session Prescription \")\nconst _hoisted_18 = /*#__PURE__*/_createTextVNode(\" Continue \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_view_port = _resolveComponent(\"view-port\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withId(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withId(() => [\n              _createVNode(_component_ion_row, null, {\n                default: _withId(() => [\n                  _createVNode(_component_ion_col, null, {\n                    default: _withId(() => [\n                      _hoisted_1\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withId(() => [\n          _createVNode(_component_view_port, null, {\n            default: _withId(() => [\n              (_ctx.drugs)\n                ? (_openBlock(), _createBlock(\"div\", _hoisted_2, [\n                    _createVNode(\"table\", _hoisted_3, [\n                      _createVNode(\"tr\", null, [\n                        _hoisted_4,\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.drugs, (item, itemIndex) => {\n                          return (_openBlock(), _createBlock(\"th\", { key: itemIndex }, [\n                            _createTextVNode(_toDisplayString(itemIndex) + \" \", 1 /* TEXT */),\n                            _createVNode(_component_ion_row, null, {\n                              default: _withId(() => [\n                                (_openBlock(true), _createBlock(_Fragment, null, _renderList(item.drugs, (drug, drugIndex) => {\n                                  return (_openBlock(), _createBlock(_component_ion_col, {\n                                    class: \"col-borders\",\n                                    key: drugIndex\n                                  }, {\n                                    default: _withId(() => [\n                                      _createTextVNode(_toDisplayString(drug.amount || '0mg'), 1 /* TEXT */)\n                                    ]),\n                                    _: 2\n                                  }, 1024))\n                                }), 128 /* KEYED_FRAGMENT */))\n                              ]),\n                              _: 2\n                            }, 1024)\n                          ]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _createVNode(\"tr\", null, [\n                        _hoisted_5,\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.drugs, (item, itemIndex) => {\n                          return (_openBlock(), _createBlock(\"td\", {\n                            key: itemIndex,\n                            class: \"td-current td-value\"\n                          }, [\n                            _createVNode(_component_ion_row, null, {\n                              default: _withId(() => [\n                                (_openBlock(true), _createBlock(_Fragment, null, _renderList(item.drugs, (drug, i) => {\n                                  return (_openBlock(), _createBlock(_component_ion_col, { key: i }, {\n                                    default: _withId(() => [\n                                      _createVNode(_component_ion_checkbox, {\n                                        checked: drug.selected,\n                                        onIonChange: $event => (_ctx.selectDrug(itemIndex, i, $event))\n                                      }, null, 8, [\"checked\", \"onIonChange\"])\n                                    ]),\n                                    _: 2\n                                  }, 1024))\n                                }), 128 /* KEYED_FRAGMENT */))\n                              ]),\n                              _: 2\n                            }, 1024)\n                          ]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _createVNode(\"tr\", null, [\n                        _hoisted_6,\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(Object.keys(_ctx.drugs), (drug, ind) => {\n                          return (_openBlock(), _createBlock(\"td\", {\n                            class: \"td-remaining td-value\",\n                            key: ind\n                          }, [\n                            _createVNode(_component_ion_row, null, {\n                              default: _withId(() => [\n                                _createVNode(_component_ion_col, null, {\n                                  default: _withId(() => [\n                                    _createVNode(_component_ion_button, {\n                                      onClick: $event => (_ctx.launchNotePad(drug)),\n                                      color: \"warning\"\n                                    }, {\n                                      default: _withId(() => [\n                                        _hoisted_7\n                                      ]),\n                                      _: 1\n                                    }, 8, [\"onClick\"])\n                                  ]),\n                                  _: 1\n                                })\n                              ]),\n                              _: 1\n                            })\n                          ]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ])\n                    ]),\n                    _hoisted_8,\n                    _createVNode(\"table\", _hoisted_9, [\n                      _hoisted_10,\n                      _hoisted_11,\n                      _createVNode(\"tr\", null, [\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.drugs, (d, drugIndex) => {\n                          return (_openBlock(), _createBlock(\"th\", {\n                            style: {\"width\":\"25%\"},\n                            key: drugIndex\n                          }, [\n                            _createVNode(\"span\", null, _toDisplayString(drugIndex), 1)\n                          ]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _createVNode(\"tr\", null, [\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(Object.keys(_ctx.drugs), (drug, ind) => {\n                          return (_openBlock(), _createBlock(\"td\", {\n                            id: \"HCZ\",\n                            style: {\"padding-top\":\"2px !important\"},\n                            valign: \"top\",\n                            key: ind\n                          }, [\n                            _createVNode(\"table\", _hoisted_12, [\n                              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.drugs[drug].notes, (note, i) => {\n                                return (_openBlock(), _createBlock(\"tr\", { key: i }, [\n                                  _createVNode(\"td\", _hoisted_13, _toDisplayString(note.date), 1),\n                                  _createVNode(\"td\", _hoisted_14, _toDisplayString(note.description), 1),\n                                  _createVNode(\"td\", null, [\n                                    (note.isNewNote)\n                                      ? (_openBlock(), _createBlock(_component_ion_button, {\n                                          key: 0,\n                                          color: \"danger\",\n                                          onClick: $event => (_ctx.removeNote(drug, i))\n                                        }, {\n                                          default: _withId(() => [\n                                            _hoisted_15\n                                          ]),\n                                          _: 1\n                                        }, 8, [\"onClick\"]))\n                                      : _createCommentVNode(\"\", true)\n                                  ])\n                                ]))\n                              }), 128 /* KEYED_FRAGMENT */))\n                            ])\n                          ]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ])\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n            default: _withId(() => [\n              _createVNode(_component_ion_button, {\n                size: \"large\",\n                color: \"danger\",\n                slot: \"start\",\n                onClick: _ctx.gotoPatientDashboard\n              }, {\n                default: _withId(() => [\n                  _hoisted_16\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              (_ctx.canClearHtnSessionPrescription)\n                ? (_openBlock(), _createBlock(_component_ion_button, {\n                    key: 0,\n                    size: \"large\",\n                    color: \"warning\",\n                    slot: \"end\",\n                    onClick: _ctx.clearPrescriptionInSession\n                  }, {\n                    default: _withId(() => [\n                      _hoisted_17\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]))\n                : _createCommentVNode(\"\", true),\n              (_ctx.selectedDrugs && _ctx.selectedDrugs.length > 0)\n                ? (_openBlock(), _createBlock(_component_ion_button, {\n                    key: 1,\n                    size: \"large\",\n                    color: \"success\",\n                    slot: \"end\",\n                    onClick: _ctx.onFinish\n                  }, {\n                    default: _withId(() => [\n                      _hoisted_18\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n})","\nimport { defineComponent } from \"vue\";\nimport ViewPort from \"@/components/DataViews/ViewPort.vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field } from '@/components/Forms/FieldInterface'\nimport TouchField from \"@/components/Forms/SIngleTouchField.vue\"\n\nimport {\n  IonToolbar,\n  IonHeader,\n  IonContent,\n  IonRow,\n  IonCol,\n  IonButton,\n  modalController,\n  IonFooter,\n  IonPage,\n  IonCheckbox,\n} from \"@ionic/vue\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { BPManagementService, HTN_SESSION_KEY } from \"../../services/htn_service\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { toastWarning } from \"@/utils/Alerts\";\nimport { isEmpty, find } from \"lodash\"\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: {\n    ViewPort,\n    IonToolbar,\n    IonHeader,\n    IonContent,\n    IonRow,\n    IonButton,\n    IonCol,\n    IonFooter,\n    IonPage,\n    IonCheckbox\n  },\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n          this.HTN = new BPManagementService(this.patientID, this.providerID);\n          this.drugs = this.HTN.getDrugs();\n          const { drugs, notes} = await this.HTN.getCurrentDrugs();\n          this.setPreviousBpDrugs(drugs)\n          this.setPreviousBpNotes(notes)\n          this.canClearHtnSessionPrescription = this.patientHasHtnSessionKey()\n        }\n      },\n      immediate: true\n    },\n  },\n  data: () => {\n    return {\n      HTN: {} as any,\n      drugs: null as any,\n      canClearHtnSessionPrescription: false\n    };\n  },\n  methods: {\n    clearPrescriptionInSession() {\n      sessionStorage.removeItem(HTN_SESSION_KEY.Prescription)\n      this.canClearHtnSessionPrescription = false\n    },\n    patientHasHtnSessionKey() {\n      try {\n        const sessionData = sessionStorage.getItem(HTN_SESSION_KEY.Prescription)\n        if (sessionData) {\n          const data = JSON.parse(sessionData)\n          return data[this.patientID]\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n      return false\n    },\n    removeNote(d: any, i: any, ind: any) {\n      this.drugs[d].notes.splice(ind, 1);\n    },\n    launchNotePad(drugIndex: any) {\n      this.showModal({\n        id: 'note',\n        helpText: `Add notes for ${drugIndex}`,\n        type: FieldType.TT_TEXT\n      }, \n      (data: any) => {\n        if (data) this.drugs[drugIndex].notes.push({\n          date: ProgramService.getSessionDate(),\n          description: data.value || '',\n          drugID: this.drugs[drugIndex].drugs[0].drugID,\n          isNewNote: true\n        })\n      })\n    },\n    async onFinish() {\n      const drugNotes = Object.values(this.drugs)\n        .filter((d: any) => !isEmpty(d.notes))\n        .map((d: any) => d.notes)\n        .reduce((accum: any, cur: any) => accum.concat(cur), [])\n        .filter((n: any) => n.isNewNote)\n        .map((note: any) => this.HTN.buildObs('Clinician notes', {\n          'value_text': note.description, \n          'value_drug': note.drugID\n        }))\n      if (!isEmpty(drugNotes)) {\n        try {\n          await this.HTN.createEncounter()\n          await this.HTN.saveObservationList(await (Promise.all(drugNotes)))\n        } catch (e) {\n          return toastWarning(`Unable to save notes ${e}`)\n        }\n      }\n      this.gotoTreatment()\n    },\n    gotoTreatment() {\n      const htnDrugs = this.selectedDrugs.map((selected: any) =>  \n        find( BPManagementService.htnDrugReferences(), { \n          'drug_id': selected.drugID\n        }))\n      const data: any = {}\n      data[this.patientID] = htnDrugs\n      sessionStorage.setItem(HTN_SESSION_KEY.Prescription, JSON.stringify(data))\n      this.$router.push(`/art/encounters/prescriptions/${this.patientID}`)\n    },\n    async showModal(currentField: Field, onFinish: Function) {\n      const modal = await modalController.create({\n        component: TouchField,\n        backdropDismiss: false,\n        cssClass: \"full-modal\",\n        componentProps: {\n          dismissType: 'modal',\n          currentField,\n          onFinish\n        }\n      })\n      modal.present();\n    },\n    setPreviousBpNotes(notes: Record<string, any>) {\n      for (const drugIndex in notes) {\n        this.drugs[drugIndex].notes = Object.keys(notes[drugIndex])\n          .map((date: string) => notes[drugIndex][date].map(\n            (description: string) => ({ date, description, isNewNote: false }))\n          ).reduce(\n            (accum: any[], cur: any[]) => accum.concat(cur), []\n          )\n      }\n    },\n    setPreviousBpDrugs(drugs: any) {\n      drugs.forEach((drug: any) => {\n        for (const key in this.drugs) {\n          this.drugs[key].drugs.forEach((element: any, index: any) => {\n            if (drug.drug_id === element.drugID) {\n              this.drugs[key].drugs[index].current = true;\n              this.drugs[key].drugs[index].selected = true;\n              this.drugs[key].selected = drug.drug_id;\n            }\n          });\n        }\n      });\n    },\n    selectDrug(key: any, index: any, event: any) {\n      this.drugs[key].drugs.forEach((d: any, i: any) => {\n        this.drugs[key].drugs[i].selected = false;\n      });\n      this.drugs[key].drugs[index].selected = event.detail.checked;\n    }\n  },\n  computed: {\n    selectedDrugs(): any {\n      if (this.drugs) return Object.values(this.drugs)\n        .map((d: any) => d.drugs)\n        .reduce((accum: any, cur: any) => accum.concat(cur), [])\n        .filter((d: any) => d.selected)\n      return []\n    }\n  },\n});\n","import { render } from \"./BPDrug_management.vue?vue&type=template&id=7217b18a&scoped=true&ts=true\"\nimport script from \"./BPDrug_management.vue?vue&type=script&lang=ts\"\nexport * from \"./BPDrug_management.vue?vue&type=script&lang=ts\"\n\nimport \"./BPDrug_management.vue?vue&type=style&index=0&id=7217b18a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7217b18a\"]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ObservationService } from \"@/services/observation_service\"\n\nexport enum HTN_SESSION_KEY {\n  Prescription = \"htnPrescription\"\n}\n\nexport class BPManagementService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n      super(patientID, 48, providerID) //TODO: Use encounter type reference name'\n    }\n\n    static getBpGrade(sbp: number, dbp: number) {\n      if ((sbp < 140) && (dbp < 90)) {\n        return \"normal\"\n      }\n      else if ((sbp >= 140 && sbp < 160) || (dbp >= 100 && dbp < 110)) {\n        return \"grade 1\"\n      }\n      else if ((sbp >= 180 && dbp > 110) || sbp >= 180) {\n        return \"grade 3\"\n      }\n      else if ((sbp >= 160 && sbp < 180) || (dbp >= 110)) {\n        return \"grade 2\"\n      }\n      return 'N/A'\n    }\n\n    /**\n     * BP is normointensive if two most recent consecutive tests are normal\n     * @param bpTrail \n     * @returns\n    */\n    static isBpNormotensive(bpTrail: any) {\n      const [ firstRecentGrade, secondRecentGrade ] = Object.values(bpTrail)\n        .sort((a: any, b: any) => a.date < b.date ? 1 : 0)\n        .map((bp: any) => this.getBpGrade(bp.sbp, bp.dbp))\n      return firstRecentGrade === 'normal' && secondRecentGrade === 'normal'\n    }\n\n    getSystolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Systolic blood pressure')\n    }\n\n    getDiastolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Diastolic blood pressure')\n    }\n\n    async onBpDrugs() {\n      const query = await ObservationService.getFirstValueCoded(this.patientID, 'Treatment status')\n      return query ? query === 'Yes' : false\n    }\n  \n    async getBPTrail() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/bp_trail`);\n    }\n    async getCurrentDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/current_bp_drugs`);\n    }\n    async getLastDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`);\n    }\n    async getAdherence(drugID: number, pills: number) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/remaining_bp_drugs`, {\n        'drug_id': drugID,\n        pills: pills\n      });\n    }\n    async enrollPatient(state: any) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/update_or_create_htn_state`, state);\n    }\n    static htnDrugReferences() {\n      return [\n        { \n          'drug_id': 275,\n          'drug_name': \"HCZ (25mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 942,\n          'drug_name': \"Enalapril (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 943,\n          'drug_name': \"Enalapril (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 558,\n          'drug_name': \"Amlodipine (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 559,\n          'drug_name': \"Amlodipine (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 117,\n          'drug_name': \"Atenolol (50mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 11,\n          'drug_name': \"Atenolol(100mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        }\n      ]\n    }\n    getDrugs() {\n        return {\n        HCZ: {\n          drugs: [\n            {\n              drugName: \"HCZ (25mg tablet)\",\n              drugID: 275,\n              amount: '25mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Enalapril: {\n          drugs: [\n            {\n              drugName: \"Enalapril (5mg tablet)\",\n              drugID: 942,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Enalapril (10mg tablet)\",\n              drugID: 943,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Amlodipine: {\n          drugs: [\n            {\n              drugName: \"Amlodipine (5mg tablet)\",\n              drugID: 558,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Amlodipine (10mg tablet)\",\n              drugID: 559,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Atenolol: {\n          drugs: [\n            {\n              drugName: \"Atenolol (50mg tablet)\",\n              drugID: 117,\n              amount: '50mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Atenolol(100mg tablet)\",\n              drugID: 11,\n              amount: '100mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n      }\n    }\n}","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BPDrug_management.vue?vue&type=style&index=0&id=7217b18a&scoped=true&lang=css\"","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, KeepAlive as _KeepAlive } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Close \")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Clear \")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Done \")\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_title, { class: \"his-lg-text ion-text-center\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.currentField.helpText), 1 /* TEXT */)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withCtx(() => [\n          (_openBlock(), _createBlock(_KeepAlive, null, [\n            (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.currentField.type), {\n              key: _ctx.currentField.id,\n              currentFieldig: _ctx.currentField.currentFieldig,\n              options: _ctx.currentField.options,\n              preset: _ctx.currentField.preset,\n              clear: _ctx.valueClearIndex,\n              fdata: _ctx.formData,\n              config: _ctx.currentField.config,\n              cdata: _ctx.computedFormData,\n              activationState: _ctx.state,\n              onValue: _ctx.currentField.onValue,\n              defaultValue: _ctx.currentField.defaultValue,\n              onValueUpdate: _ctx.currentField.onValueUpdate,\n              onOnValue: _ctx.onFieldValue\n            }, null, 8, [\"currentFieldig\", \"options\", \"preset\", \"clear\", \"fdata\", \"config\", \"cdata\", \"activationState\", \"onValue\", \"defaultValue\", \"onValueUpdate\", \"onOnValue\"]))\n          ], 1024))\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, { color: \"light\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                disabled: _ctx.disableBtn,\n                onClick: _ctx.onClose,\n                slot: \"start\",\n                color: \"danger\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _hoisted_1\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"]),\n              _createVNode(_component_ion_button, {\n                disabled: _ctx.disableBtn,\n                onClick: _ctx.onClear,\n                slot: \"end\",\n                color: \"warning\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _hoisted_2\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"]),\n              _createVNode(_component_ion_button, {\n                disabled: _ctx.disableBtn,\n                onClick: _ctx.onDone,\n                slot: \"end\",\n                color: \"success\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _hoisted_3\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent, PropType, defineAsyncComponent } from 'vue'\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { toastDanger, toastWarning } from \"@/utils/Alerts\";\nimport { COMPONENT_REFS } from \"@/components/Forms/BaseFormElements\";\nimport {\n    IonToolbar,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonButton,\n    IonPage,\n    IonFooter,\n    modalController\n} from \"@ionic/vue\"\n\nfunction buildAsyncComponents() {\n  const components: any = {}\n  COMPONENT_REFS.forEach((name: string) => {\n    components[name] = defineAsyncComponent(() => import(\n      /* webpackChunkName: \"TouchFormElement\"*/`@/components/FormElements/${name}.vue`)\n    )\n  })\n  return components\n}\n\nexport default defineComponent({\n    name: 'SingleFieldTouchForm',\n    components: {\n        IonPage,\n        IonContent,\n        IonFooter,\n        IonToolbar,\n        IonButton,\n        IonHeader,\n        IonTitle,\n        ...buildAsyncComponents()\n    },\n    props: {\n        dismissType: {\n            type: String\n        },\n        onFinish: {\n           type: Function,\n           required: true\n        },\n        currentField: {\n            type: Object as PropType<Field>,\n            required: true\n        }\n    },\n    data: () => ({\n        valueClearIndex: 0 as number,\n        formData: {} as any,\n        computedFormData: {} as any,\n        state: \"\" as string,\n        value: null as Option | Option[] | null,\n        disableBtn: false as boolean,\n    }),\n    methods: {\n        onClose() {\n            if (this.dismissType === 'modal') {\n                modalController.dismiss()\n            } else {\n                this.$router.back()\n            }\n        },\n        onClear() {\n            this.valueClearIndex += 1\n            this.value = null\n        },\n        onFieldValue(value: any) {\n            this.value = value\n        },\n        onDone() {\n            this.disableBtn = true\n            if (this.currentField.validation) {\n                const errors = this.currentField.validation(this.value)\n                this.disableBtn = false\n                if (errors) return toastWarning(errors.join(\", \"), 60000);\n            } \n            try {\n                this.onFinish(this.value)\n            } catch(e) {\n                toastDanger(e)\n                console.error(e)\n            }\n            this.onClose()\n            this.disableBtn = false\n        }\n    }\n})\n","import { render } from \"./SIngleTouchField.vue?vue&type=template&id=78de1c7c&ts=true\"\nimport script from \"./SIngleTouchField.vue?vue&type=script&lang=ts\"\nexport * from \"./SIngleTouchField.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}