{"version":3,"sources":["webpack:///./src/apps/OPD/services/patient_complaints_service.ts","webpack:///./src/components/DataViews/LabOrderModal.vue?fbb9","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?37b1","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?9af6","webpack:///./src/components/DataViews/LabOrderModal.vue?6b70","webpack:///./src/components/DataViews/LabOrderModal.vue","webpack:///./src/components/DataViews/LabOrderModal.vue?ba1e","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?f38f","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?28e7","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?b251","webpack:///./src/apps/OPD/views/encounters/Complaints.vue","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?67d0"],"names":["PatientComplaintsService","AppEncounterService","constructor","patientID","providerID","super","complaintType","filter","ConceptService","getConceptSet","getObs","getConceptID","this","date","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","async","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","offlineID","patient","fields","facts","age","gender","isEnrolledInProgam","formLabel","ready","created","$route","params","patient_id","parseInt","goOffline","initOfflineData","Store","get","then","patientData","isEmpty","Offline","cachePatient","setEncounterFacts","checkEncounterGuidelines","catch","e","console","log","computed","cancelDestination","patientDashboardUrl","methods","isOnline","isOfflineMode","getOfflinePerson","person","birthdate","dayjs","ProgramService","getSessionDate","diff","saveObsOffline","encounterTypeID","formdata","obs","labOrders","status","observations","id","uploadStatus","meta","resolveObs","computedData","enc","createEncounter","saveObservationList","callback","test","error","Error","formData","skipNextTask","nextTask","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","program","programID","getProgramID","toastDanger","getCachedApiDate","getBirthdate","getAge","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","loadingController","create","backdropDismiss","message","present","getTop","v","dismiss","yesNoOptions","toYesNoOption","values","mapOptions","options","option","toConditionalOptions","final","yesNoUnknownOptions","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","style","background","height","_hoisted_5","_hoisted_6","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_checkbox","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_radio","_component_ion_radio_group","_component_ion_button","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_footer","_createElementBlock","_Fragment","_createVNode","_withCtx","_createTextVNode","_","size","overflowY","_renderList","testTypes","key","disabled","activeIndex","isOrderComplete","detail","_toDisplayString","modelValue","isChecked","$event","onIonChange","onSelectTest","selectedOrders","extendedLabsEnabled","_createCommentVNode","specimens","onClick","addSpecimen","reasons","finalOrders","specimen","reason","removeOrder","currentIndex","postActivities","closeModal","activities","testFilters","watch","handler","appActivities","getActivities","immediate","ART_GLOBAL_PROP","extendedLabEnabled","testName","event","$nextTick","checked","OrderService","getSpecimens","tests","getTestTypes","t","concept_id","orders","LabOrderService","encounter","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","toastWarning","invalidate","canPrintOrders","alertConfirmation","confirmBtnLabel","cancelBtnLabel","printOrders","modalController","PrintoutService","forEach","url","element","order_id","printLbl","mounted","content","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonLabel","IonList","IonItem","IonCheckbox","IonRadioGroup","IonRow","_component_his_standard_form","_component_ion_page","onSubmit","_component_his_radiology_picker","onOnValue","onValue","emitedSelectedOptions","IonFooter","HisRadiologyPicker","mixins","EncounterMixinVue","radiologyService","isPacsEnabled","isReady","PatientRadiologyService","OPD_GLOBAL_PROP","isPACsEnabled","deep","selected","buildValueCoded","parent","child","buildValueCodedFromConceptId","getSelected","obsObj","savedObsData","submitToPacs","IonPage","complaintsService","todaysDate","ObservationService","presentingComplaints","radiologyBtnName","hasTriageComplaints","getTriagePresentingComplaints","getFields","complaints","component","LabOrderModal","cssClass","onDidDismiss","radiology","fetchLatestTriageEncounter","encounters","EncounterService","getEncounters","todayPresentingComplaints","el","toStandardHisFormat","encounter_datetime","buildResults","columns","group","rows","item","obs_group_id","value_text","helpText","FieldType","TT_TABLE_VIEWER","config","hiddenFooterBtns","TT_COMPLAINTS_PICKER","validation","Validation","computedValue","showRadiologyOdersBtn","disableBackBtn","footerBtns","visible","launchOrderSelection","visibleOnStateChange","launchRadiologyOrderSelection","TT_SUMMARY","buildSummaryResults","OPDComplaint","triageComplaint"],"mappings":"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","file":"js/chunk-0fd5c64e.b80e841c.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\n\nexport class PatientComplaintsService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 122, providerID) \n  }\n\n  static async getComplaintsList(complaintType: string, filter = '') {\n    return ConceptService.getConceptSet(complaintType, filter) \n  }\n  async fetchLatestTriageEncounter() { \n   return await PatientComplaintsService.getObs({\n        'concept_id': ConceptService.getConceptID(\"History of COVID-19 contact\") ,\n        'start_date': this.date,\n        'end_date': this.date,\n        'person_id': this.patientID,\n    })\n  }\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LabOrderModal.vue?vue&type=style&index=0&id=9adaf5e2&scoped=true&lang=css\"","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\nimport { loadingController } from '@ionic/core'\nimport { Offline, isOfflineMode, isOnline } from '@/composables/offline'\nimport dayjs from 'dayjs'\nimport { AppEncounterService } from '@/services/app_encounter_service'\nimport { ObsValue } from '@/services/observation_service'\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        offlineID: null as any,\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            age: -1 as number,\n            gender: '' as string,\n            birthDate: '' as string,\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            isEnrolledInProgam: false as boolean,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        formLabel: '' as string,\n        ready: false\n    }),\n    created() {\n        if (this.$route.params.patient_id) {\n            this.offlineID = this.$route.params.patient_id\n            this.patientID = parseInt(`${this.$route.params.patient_id}`);\n            if (this.goOffline()) {\n                this.initOfflineData()\n            } else {\n                Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                    .then(patientData => {\n                        this.patient = patientData\n                        if (!isEmpty(this.patient)) {\n                            Offline().cachePatient(this.patient)\n                        }\n                        this.setEncounterFacts().then(() => {\n                            this.checkEncounterGuidelines().then(() => {\n                                this.ready = true\n                            }).catch((e) => console.log(e))\n                        }).catch(() => {\n                            if (this.goOffline()) {\n                                this.initOfflineData()\n                            }\n                        })\n                    })\n            }\n        }\n    },\n    computed: {\n        cancelDestination(): string { return this.patientDashboardUrl() }\n    },\n    methods: {\n        goOffline(){\n            return !isOnline.value || isOfflineMode.value\n        },\n        isOnline() {\n            return isOnline.value\n        },\n        isOfflineMode() {\n            return isOfflineMode.value\n        },\n        initOfflineData() {\n            const { getOfflinePerson } = Offline()\n            const person = getOfflinePerson(this.offlineID)\n            if (!person) return\n            this.facts.birthDate = person.birthdate\n            this.facts.age = dayjs(ProgramService.getSessionDate()).diff(\n                this.facts.birthDate, 'years'\n            )\n            this.facts.gender = person.gender\n            this.ready = true\n        },\n        saveObsOffline(encounterTypeID: number, formdata: any, obs: any, labOrders=undefined as any, status='Pending') {\n            Offline().saveObsOffline({\n                observations: obs,\n                id: this.offlineID,\n                uploadStatus: status,\n                encounterName: this.$route.name,\n                encounterTypeID: encounterTypeID,\n                meta: formdata,\n                labOrders\n            })\n        },\n        async saveFormEncounterAndProceed(params={} as any) {\n            const obs = await this.resolveObs(params.computedData)\n            let status = 'Pending'\n            try {\n                const enc = new AppEncounterService(\n                    this.patientID,\n                    params.encounterTypeID, \n                    this.providerID\n                )\n                if ((await enc.createEncounter())) {\n                    if ((await enc.saveObservationList(obs as ObsValue[]))) {\n                        status = 'Success'\n                    }\n                }\n                if (typeof params.callback === 'function') {\n                    await params.callback(enc)\n                }\n            } catch (e) {\n                if (/NetworkError|Failed to fetch/i.test(`${e}`)) {\n                    status = 'NetworkError'\n                } else {\n                    status = 'Exception'\n                }\n                console.error(`${e}`)\n            }\n            if (status === 'Exception') {\n                throw new Error('Unable to proceed!')\n            }\n            this.saveObsOffline(\n                params.encounterTypeID, \n                params.formData,\n                obs,\n                params.labOrders,\n                status\n            )\n            if (!params.skipNextTask) this.nextTask()\n        },\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.isEnrolledInProgam = program.programID === ProgramService.getProgramID()\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.age = this.patient.getAge()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: Array<string | Option>) {\n            return items.map(i => typeof i === 'string' || typeof i === 'number'  \n                ?  { label: i, value: i } : i \n            )\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.$route.params.patient_id}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        async nextTask() {\n            (await loadingController.create({\n                backdropDismiss: false,\n                message: 'Checking Next task..'\n            })).present()\n            try {\n                const id = this.offlineID || this.patientID\n                await nextTask(id, this.$router, this.$route)\n            } catch (e) {\n                console.error(e)\n            }\n            loadingController.getTop().then(v => v && loadingController.dismiss())\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });        \n        },\n        toConditionalOptions(options: Array<Array<string | boolean | undefined>>) {\n            const final: Option[] = []\n            for(const option of options) {\n                if (typeof option[1] === 'boolean') {\n                    if (option[1]) final.push(this.toOption(option[0] as string))\n                    continue\n                }\n                final.push(this.toOption(option[0] as string))\n            }\n            return final\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Complaints.vue?vue&type=style&index=0&id=14155b15&lang=css\"","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9adaf5e2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"ion-margin-bottom\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Select specimen \", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Main test(s) reason \", -1))\nconst _hoisted_4 = { style: {background: 'lightyellow', height: '34vh'} }\nconst _hoisted_5 = { class: \"his-sm-text\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Test\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Specimen\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Reason\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\")\n  ])\n], -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")!\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Lab orders\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"6\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'75vh'} }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testTypes, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            class: \"his-sm-text\",\n                            key: data,\n                            disabled: _ctx.activeIndex !== null && _ctx.activeIndex !== index && !_ctx.isOrderComplete,\n                            detail: \"\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, { \"text-wrap\": \"\" }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(data.name), 1)\n                                ]),\n                                _: 2\n                              }, 1024),\n                              _createVNode(_component_ion_checkbox, {\n                                modelValue: data.isChecked,\n                                \"onUpdate:modelValue\": ($event: any) => ((data.isChecked) = $event),\n                                slot: \"start\",\n                                onIonChange: (e) => _ctx.onSelectTest(data.name, index, e)\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\"])\n                            ]),\n                            _: 2\n                          }, 1032, [\"disabled\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.activeIndex != null && _ctx.selectedOrders.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'79vh'}\n                    }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", _hoisted_1, [\n                          (!_ctx.extendedLabsEnabled)\n                            ? (_openBlock(), _createBlock(_component_ion_list, { key: 0 }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_radio_group, {\n                                    modelValue: _ctx.testTypes[_ctx.activeIndex]['specimen'],\n                                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['specimen']) = $event))\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _hoisted_2,\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.specimens, (data) => {\n                                        return (_openBlock(), _createBlock(_component_ion_item, { key: data }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_component_ion_label, null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(data.name), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024),\n                                            _createVNode(_component_ion_radio, {\n                                              slot: \"start\",\n                                              value: data.name,\n                                              onClick: ($event: any) => (_ctx.addSpecimen(data))\n                                            }, null, 8, [\"value\", \"onClick\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      }), 128))\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"modelValue\"])\n                                ]),\n                                _: 1\n                              }))\n                            : _createCommentVNode(\"\", true),\n                          _createVNode(_component_ion_radio_group, {\n                            modelValue: _ctx.testTypes[_ctx.activeIndex]['reason'],\n                            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['reason']) = $event))\n                          }, {\n                            default: _withCtx(() => [\n                              _hoisted_3,\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.reasons, (data) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  class: \"his-sm-text\",\n                                  key: data\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(data), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_radio, {\n                                      slot: \"start\",\n                                      value: data\n                                    }, null, 8, [\"value\"])\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              }), 128))\n                            ]),\n                            _: 1\n                          }, 8, [\"modelValue\"])\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_4, [\n                          _createElementVNode(\"table\", _hoisted_5, [\n                            _hoisted_6,\n                            _createElementVNode(\"tbody\", null, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.finalOrders, (data, index) => {\n                                return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.name), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.specimen || 'N/A'), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.reason), 1),\n                                  _createElementVNode(\"td\", null, [\n                                    _createVNode(_component_ion_button, {\n                                      onClick: ($event: any) => (_ctx.removeOrder(data.currentIndex)),\n                                      slot: \"end\",\n                                      color: \"danger\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"X\")\n                                      ]),\n                                      _: 2\n                                    }, 1032, [\"onClick\"])\n                                  ])\n                                ]))\n                              }), 128))\n                            ])\n                          ])\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postActivities,\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.finalOrders.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.closeModal([]))),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonCheckbox,\n  IonRadioGroup,\n  IonRow,\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { alertConfirmation, toastWarning } from \"@/utils/Alerts\"\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport ART_GLOBAL_PROP from \"@/apps/ART/art_global_props\"\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    activities: {\n      type: Object as PropType<ActivityInterface[]>,\n      required: true\n    },\n    testFilters: {\n      type: Array    \n    },\n    title: {\n      type: String, \n      default: \"\"\n    },\n  },\n  watch: {\n    activities: {\n      handler(activities: Array<ActivityInterface>){\n        if (activities) {\n          this.appActivities = [...activities]\n          this.getActivities();\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    this.extendedLabsEnabled = await ART_GLOBAL_PROP.extendedLabEnabled()\n  },\n  methods: {\n    async onSelectTest(testName: string, index: number, event: any) {\n      this.$nextTick(async () => {\n        this.testTypes[index]['isChecked'] = event.target.checked;\n        if(this.testTypes[index]['isChecked']){\n          this.specimens = await OrderService.getSpecimens(testName);\n          this.testTypes[index]['currentIndex'] = index;\n          this.activeIndex = index;\n        } else {\n          this.removeOrder(index)\n        }\n      })\n    },\n    async getActivities() {\n     const tests = await OrderService.getTestTypes();\n     this.testTypes = tests.map((t: any, i: any) => {\n        t.index = t.name === 'HIV viral load' ? (t.index = 0) : (t.index = i + 1)\n        return t\n     })\n     .sort((a: any, b: any) => a.index < b.index ? 0 : 1)\n     .filter((t: any) => Array.isArray(this.testFilters) ? this.testFilters.includes(t.name) : true)\n    },\n    removeOrder(index: number) {\n      this.testTypes[index]['isChecked'] = false;\n      this.testTypes[index]['reason'] = null;\n      this.testTypes[index]['specimen'] = null;\n      this.testTypes[index]['specimenConcept'] = null\n      this.activeIndex = null\n      this.specimens = []\n    },\n    addSpecimen(data: any) {\n      this.testTypes[this.activeIndex]['specimenConcept'] = data.concept_id;\n    },\n    async postActivities() {\n      const patientID= `${this.$route.params.patient_id}`;\n      const orders = new LabOrderService(parseInt(patientID), -1); //TODO: get selected provider for this encounter\n      const encounter = await orders.createEncounter();\n\n      if(encounter) {\n        const formattedOrders = await OrderService.buildLabOrders(encounter, this.finalOrders);\n        const d =await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n        \n        if(!d) return toastWarning('Unable to save lab orders')\n\n        Store.invalidate('PATIENT_LAB_ORDERS')\n        const canPrintOrders = await alertConfirmation('Lab orders and encounter created!, print out your last orders?', { \n          confirmBtnLabel: 'Yes',\n          cancelBtnLabel: 'No'\n        })\n        if(canPrintOrders) await this.printOrders(d)\n        else await this.closeModal(d)\n      }\n    },\n    async closeModal(orders: []) {\n      await modalController.dismiss(orders)\n    },\n    async printOrders(orders: any) {\n      const p = new PrintoutService();\n      await orders.forEach(async (element: any) => {\n        const url = `lab/labels/order?order_id=${element.order_id}`\n        await p.printLbl(url);\n      });\n      await modalController.dismiss(orders)\n    },\n  },\n  computed: {\n    isOrderComplete(): boolean {\n      if(this.extendedLabsEnabled){\n        return !!this.testTypes[this.activeIndex]['reason'] \n      }\n      return (this.testTypes[this.activeIndex]['specimenConcept'] || this.testTypes[this.activeIndex]['specimen']) \n        && this.testTypes[this.activeIndex]['reason'] \n    },\n    selectedOrders(): any {\n      return this.testTypes.filter((data: any) => data.isChecked === true);\n    },\n    finalOrders(): any {\n      return this.selectedOrders.filter((data: any) => {\n        return data.reason && (data.specimen && !this.extendedLabsEnabled \n          || this.extendedLabsEnabled)\n      } )\n    }\n  },\n  mounted() {\n    this.getActivities();\n  },\n  data() {\n    return {\n      content: \"Content\",\n      extendedLabsEnabled: false as boolean,\n      appActivities: [] as Array<ActivityInterface>,\n      testTypes: [] as any,\n      specimens: [],\n      reasons: ['Routine', 'Targeted', 'Confirmatory', 'Stat', 'Repeat / Missing'],\n      activeIndex: null as any\n    };\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    IonCheckbox,\n    IonRadioGroup,\n    IonRow,\n  },\n});\n","import { render } from \"./LabOrderModal.vue?vue&type=template&id=9adaf5e2&scoped=true&ts=true\"\nimport script from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./LabOrderModal.vue?vue&type=style&index=0&id=9adaf5e2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9adaf5e2\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_radiology_picker = _resolveComponent(\"his-radiology-picker\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Radiology Examination\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_his_radiology_picker, { onOnValue: _ctx.onValue }, null, 8, [\"onOnValue\"])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.onSubmit())),\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.emitedSelectedOptions.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.closeModal())),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  IonFooter,\n} from \"@ionic/vue\";\nimport { defineComponent } from 'vue'\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\";\nimport HisRadiologyPicker from '@/components/FormElements/HisRadiologyPicker.vue'\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  components: { \n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonFooter,\n    HisRadiologyPicker\n  },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false,\n    emitedSelectedOptions: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onValue(selected: any) {\n      this.emitedSelectedOptions = selected\n    },\n    async getSelected() {\n      return this.emitedSelectedOptions.map(async (option: any) => ({\n        ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n        child: [(await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))]\n      }))\n    },\n    async onSubmit(){\n      if(!isEmpty(this.emitedSelectedOptions)) {\n        this.closeModal()\n        let data = await this.getSelected()\n        data = await Promise.all(data)\n        await this.radiologyService.createEncounter()\n        const obsObj = await this.radiologyService.obsObj(data) \n        const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n        await this.radiologyService.printOrders(savedObsData, this.patient)\n        if(this.isPacsEnabled) {\n          try {\n            await this.radiologyService.submitToPacs(savedObsData, this.patient)\n          } catch (error) {\n            console.log(error)\n          }\n        }\n      }\n    },\n    async closeModal() {\n      await modalController.dismiss([])\n    }\n  },\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=3afcbe1c&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientComplaintsService } from \"@/apps/OPD/services/patient_complaints_service\";\nimport LabOrderModal from \"@/components/DataViews/LabOrderModal.vue\"\nimport radiology from \"@/apps/OPD/views/encounters/modals/radiology.vue\"\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { modalController, IonPage } from '@ionic/vue';\nimport { ObservationService } from \"@/services/observation_service\"\nimport { EncounterService } from '@/services/encounter_service'\nimport HisDate from \"@/utils/Date\"\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\n\nexport default defineComponent({\n  components: { HisStandardForm, IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    complaintsService: {} as any,\n    todaysDate: ObservationService.getSessionDate(),\n    presentingComplaints: \"\" as any,\n    isPacsEnabled: false,\n    radiologyBtnName: 'Radiology Order',\n    hasTriageComplaints: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.complaintsService = new PatientComplaintsService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n          this.hasTriageComplaints = await this.getTriagePresentingComplaints()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){     \n      const data = await Promise.all(computedData.complaints)   \n      await this.complaintsService.createEncounter()    \n      await this.complaintsService.saveObservationList(data)\n      this.nextTask()        \n    },\n    async launchOrderSelection() {\n      const modal = await modalController.create({\n        component: LabOrderModal,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async launchRadiologyOrderSelection() {\n      const modal = await modalController.create({\n        component: radiology,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async getTriagePresentingComplaints(){\n      const data =  await this.complaintsService.fetchLatestTriageEncounter();\n      if(!(data.length > 0)){ return false;}\n\n      const encounters = await EncounterService.getEncounters(this.patientID, this.todaysDate)\n      const todayPresentingComplaints = encounters.filter(function (el: any){\n        return el.type.name == \"TRIAGE PRESENTING COMPLAINTS\" &&\n        HisDate.toStandardHisFormat(el.encounter_datetime) == ObservationService.getSessionDate() \n      });\n      if(!(todayPresentingComplaints.length > 0)) {return false;}\n\n      this.presentingComplaints =   todayPresentingComplaints[0].observations;\n      return true;\n    },\n    buildResults() {\n      const columns = [ 'Group','Presenting complaints'];\n      let group = \"\";\n      let rows =this.presentingComplaints.map((item: any) =>{\n        if(item.obs_group_id != null)\n          return [group,item.value_text]\n\n        group = item.value_text;\n      });\n      rows = rows.filter((el: any) =>{\n        return el != undefined\n      })\n      this.presentingComplaints = rows;\n      return [\n        {\n          label: '',\n          value: '',\n          other: { columns, rows},\n        },\n      ];\n    },\n\n    getFields(): Array<Field>{\n      return [\n        {\n          id: \"triage_complaints\",\n          helpText: \"Triaging Complaints\",\n          condition: () => this.hasTriageComplaints,\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'complaints',\n          helpText: 'Presenting Complaints',\n          type: FieldType.TT_COMPLAINTS_PICKER,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.complaintsService.buildValueCoded('Presenting complaint', option.other.parent)),\n              child: [(await this.complaintsService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))]\n            }))\n          },\n          config: {\n            hiddenFooterBtns: [ this.showRadiologyOdersBtn(), this.disableBackBtn()],\n            footerBtns: [\n              {\n                name: \"Lab Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              },\n              {\n                name: this.radiologyBtnName,\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchRadiologyOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              }\n            ],\n          }\n        },\n        {\n          id: \"all_presenting_complaints\",\n          helpText: \"Summary\",\n          condition: () => this.presentingComplaints.length > 0,\n          type: FieldType.TT_SUMMARY,\n          options: (d: any, b: any) => this.buildSummaryResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ]\n    },\n    showRadiologyOdersBtn() {\n      if(this.isPacsEnabled) {\n        return ''\n      } else return this.radiologyBtnName\n    },\n    buildSummaryResults(data: any) {\n      const OPDComplaint = data.complaints.map((value: any)=>{\n        return {\n          'label': \"OPD Complaints\",\n          'value': value.label,\n        };\n      })\n      const triageComplaint = this.presentingComplaints.map((value: any)=>{\n        return {\n          'label': 'Triaging Complaints',\n          'value': value[1],\n        };\n      })\n      return OPDComplaint.concat(triageComplaint);\n    },\n    disableBackBtn() {\n      if(this.hasTriageComplaints) {\n        return ''\n      } else return 'Back'\n    }\n  }\n})\n","import { render } from \"./Complaints.vue?vue&type=template&id=14155b15&ts=true\"\nimport script from \"./Complaints.vue?vue&type=script&lang=ts\"\nexport * from \"./Complaints.vue?vue&type=script&lang=ts\"\n\nimport \"./Complaints.vue?vue&type=style&index=0&id=14155b15&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}