{"version":3,"sources":["webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/apps/ART/services/consultation_service.ts","webpack:///./src/apps/ART/services/stock_service.ts","webpack:///./src/apps/ART/services/dispensation_service.ts","webpack:///./src/components/Keyboard/HisKbConfigurations.ts","webpack:///./src/apps/ART/views/encounters/Consultation.vue?b213","webpack:///./src/components/DataViews/VLReminderModal.vue?3776","webpack:///./src/components/DataViews/VLReminderModal.vue","webpack:///./src/components/DataViews/VLReminderModal.vue?2ced","webpack:///./src/apps/ART/services/lab_service.ts","webpack:///./src/components/DataViews/SideEffectsModal.vue?e8f1","webpack:///./src/components/DataViews/SideEffectsModal.vue","webpack:///./src/components/DataViews/SideEffectsModal.vue?7a31","webpack:///./src/apps/ART/views/encounters/Consultation.vue","webpack:///./src/apps/ART/views/encounters/Consultation.vue?6138","webpack:///./src/utils/HisFormHelpers/MultiFieldDateHelper.ts","webpack:///./src/utils/HisFormHelpers/MonthOptions.ts","webpack:///./src/components/DataViews/VLReminderModal.vue?b147","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts","webpack:///./src/components/DataViews/SideEffectsModal.vue?7f52"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","ConsultationService","patientID","providerID","AppEncounterService","getJson","this","ObservationService","getFirstObs","obs","value_text","match","obsInValidPeriod","getProgramID","date","getFirstValueCoded","id","req","isEmpty","lastScreened","duration","dayjs","diff","getFirstValueText","secondCheck","isTL","value_coded","tlObs","fpObs","drugs","uniqueDrugs","forEach","drug","drug_inventory_id","label","values","familyPlanningLogic","selected","map","data","value","isChecked","disabled","StockService","drugId","stock","length","reduce","accum","pharm","current_quantity","Service","DRUG_PACK_SIZES","DispensationService","drugHistory","currentDrugOrder","useDrugManagement","isEnabled","ART_PROP","drugManagementEnabled","orderId","tabs","totalPacks","dispensations","i","push","quantity","postJson","void","DrugOrderService","getDrugOrderHistory","res","console","warn","getDrugOrders","d","fetchAvailableDrugStock","drug_id","Promise","all","units","drugOrderBarcodes","barcodes","sort","a","b","parseInt","completePack","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","_withId","_withScopeId","_pushScopeId","_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_popScopeId","_component_ion_title","_component_ion_toolbar","_component_ion_header","_component_ion_content","_component_ion_button","_component_ion_footer","_Fragment","_createVNode","default","_","style","overflowY","background","_toDisplayString","artStartDate","monthsOnART","lastOrder","currentRegimen","regimenStartDate","slot","color","size","onClick","$event","closeModal","defineComponent","name","props","VLData","type","Object","required","created","HisDate","toStandardHisDisplayFormat","earliest_start_date","period_on_art","last_order_date","current_regimen","date_started","methods","val","modalController","dismiss","content","components","IonHeader","IonToolbar","IonTitle","IonContent","IonFooter","IonButton","__exports__","ARTLabService","milestone","getConceptID","concept","coded","class","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_component_ion_label","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_radio","_component_ion_radio_group","_component_ion_row","_component_ion_grid","height","_renderList","sides","index","key","selectSideEffect","detail","activeIndex","modelValue","_createCommentVNode","postSideEffects","allSelected","sideEffects","Array","computed","filter","side","mounted","extendedLabsEnabled","appActivities","specimens","reasons","IonLabel","IonList","IonItem","IonRadioGroup","IonRow","mixins","AdherenceMixinVue","HisStandardForm","currentWeight","weightTrail","customRegimens","labOrders","weightLossPercentageNum","lostTenPercentBodyWeight","CxCaEnabled","CxCaStartAge","CxCaMaxAge","DueForCxCa","currentlyPregnant","patientHitMenopause","hasPregnancyObsToday","autoSelect3HP","labOrderFieldContext","consultation","prescription","dispensation","completed3HP","hasTbHistoryObs","allergicToSulphur","TBSuspected","presentedTBSymptoms","askAdherence","lastDrugsReceived","sideEffectsHistory","onPermanentFPMethods","reasonForDecliningTPTObs","malawiSideEffectReasonObs","otherSideEffectReasonObs","wasTransferredIn","dateStartedArt","clientHadAHysterectomy","isNoneClientPatient","tptStatus","customDrugs","watch","ready","handler","PrescriptionService","getFields","immediate","f","computedData","createEncounter","encounter","toastWarning","resolveObs","computedObs","secondaryObs","saveObservationList","savedObs","drugObs","saveAdherence","toastSuccess","refer_to_clinician","gotoPatientDashboard","nextTask","getTptDrugs","formData","drugFilters","tptHistory","routine_tb_therapy","RegimenService","getCustomIngridients","includes","other","getTransferInStatus","receivedArvs","transferLetterObs","toStandardHisFormat","obs_datetime","getDate","getDateStartedArt","getFirstValueDatetime","dateStarted","checkIfWeightLossIsControlled","infoActionSheet","action","checkVLReminder","ProgramService","getPatientVLInfo","vals","eligibile","create","component","VLReminderModal","backdropDismiss","cssClass","componentProps","modal","present","onDidDismiss","launchOrderSelection","waitForVL","orderService","buildDefferedOrder","observations","canScreenCxCa","age","patient","getAge","isFemale","pregnancyEligible","isChildBearing","showCurrentContraceptionMethods","isPregnant","isANCclient","showNewContraceptionMethods","isOnTubalLigation","pregnant_breastfeeding","inArray","p","current_fp_methods","disableFPMethods","listData","infoAlert","noneIndex","findIndex","familyPlanningMethods","currentIndex","disablePrescriptions","buildMedicationOrders","options","o","buildValueCoded","priscribed","medications","declinedFPM","fp_methods","riskOfUnplannedPregnancy","reason_for_no_fpm","showOtherSideEffects","side_effects","hasTBSymptoms","tb_side_effects","buildSideEffectObs","attr","getSideEffectsReasons","sideEffectReasons","undefined","drugInducedConcept","ConceptService","getCachedConceptID","isOtherReason","reason","r","allYes","s","SideEffectsModalVue","getFPMethods","exclusionList","preChecked","getFamilyPlanningMethods","filtered","method","getOptions","preValues","preValue","find","yesNoOptions","getContraindications","contraIndications","getConceptsByCategory","getOtherContraindications","lastElement","pop","getTBSymptoms","getReasonsForNoCxcaOptions","c","runAppendOptionParams","prechecked","checkedOptions","appendOptionParams","appendedOptions","option","didCompleted3HP","tptAutoSelectionMode","on3HPValueUpdate","curOption","is3HPorTPT","ipt3HPConflict","checkedDrugs","item","noTpTPresent","every","Boolean","optionsActionSheet","role","buildValueText","selection","medicationOrderOptions","completedTpt","everTakenTpt","tpt","disableOption","text","description","show","toOption","tb_treatment","completed","getVlLabData","OrderService","Store","get","formatLabs","getSuspendedProgram","proxyID","helpText","FieldType","TT_MULTIPLE_SELECT","init","getClient","isGuardian","PatientTypeService","isDrugRefillPatient","Number","getRecentWeight","getTptTreatmentStatus","validation","Validation","computedValue","v","tag","onValueUpdate","list","cd","l","condition","exitsForm","generateDateFields","minDate","maxDate","computeValue","setDate","buildValueDate","estimation","allowUnknown","getARVs","config","showKeyboard","TT_NEXT_VISIT_INTERVAL_SELECTION","nextAppointment","intervals","setNextVisitInterval","calculateDateFromInterval","TT_DRUG_TRANSFER_IN","validateSeries","pillsBrought","some","drugID","buildObs","drug_interval","date_last_received_arvs","child","previous_arvs_received","drugName","prevValue","qty","rmndr","TT_LAB_ORDERS","unload","noGivenResults","result_given","alertConfirmation","enc","result","resultIds","resultID","encounterID","encounter_id","saveObs","onload","fieldContext","printOrder","orderID","PatientPrintoutService","printLabOrderLbl","hiddenFooterBtns","footerBtns","visible","getTLObs","TT_MULTIPLE_YES_NO","anyEmpty","concat","TT_WEIGHT_CHART","getWeightHistory","getWeightLossPercentageFromTrail","getBMI","bmi","x","y","weight","TT_TEXT_BANNER","mapStrToOptions","checked","TT_SELECT","offer_contraceptives","cervicalCancerScreeningEnabled","cervicalCancerScreeningAgeBounds","start","end","clientDueForCxCa","clientHasHadAHysterectomy","offer_cxca","getBirthdate","getSessionDate","reason_for_no_cxca","isEstimate","buildValueDateEstimated","estimationFieldType","EstimationFieldType","MONTH_ESTIMATE_FIELD","TT_DATA_TABLE","getDrugSideEffects","columns","table","thTxt","rows","keys","k","tdDate","td","drug_induced","cur","getPreviousDrugs","beforeNext","onValue","onConditionFalse","TT_NOTE","other_side_effects","on_tb_treatment","defaultValue","hasTreatmentHistoryObs","test","TT_ADHERENCE_INPUT","date_started_tpt","titles","getFacilities","isFilterDataViaApi","yesNoUnknownOptions","getAdherenceFields","UserService","isNurse","currentOptions","onClickComponentEvents","refreshOptions","btnEvent","btnOutput","getYearField","showUnknown","primaryFunctions","appearInSummary","TT_TEXT","customKeyboard","getMonthField","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","getDefaultDate","form","field","datePart","split","year","month","day","validateMinMax","min","Date","max","fullDate","yearValue","monthValue","dayValue","dateIsEstimated","yearID","monthID","dayID","ageEstimateID","durationEstimateID","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","buildHelpTextDate","part","parts","partValues","dpart","wl","join","updateHelpTextOnValue","toString","StandardValidations","isNaN","minYear","getYear","summaryMapValue","summaryLabel","ref","keyboardActions","valueEstimateCondition","estimateType","conditions","ageEstimateRegex","subtract","AGE_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","LocationService","facilities","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","getVillagesByName","page","getLandmarks","landmarks","landmark","code"],"mappings":"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","file":"js/chunk-6e5e7c5f.6ffafd90.js","sourcesContent":["export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","import { DrugInterface } from \"@/interfaces/Drug\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { ObservationService } from \"@/services/observation_service\";\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"lodash\";\nimport { DrugOrderService } from \"@/services/drug_order_service\"\n\nexport class ConsultationService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 53, providerID);\n  }\n  getFamilyPlanningMethods() {\n    return [\n      \"ORAL CONTRACEPTIVE PILLS\",\n      \"DEPO-PROVERA\",\n      \"INTRAUTERINE CONTRACEPTION\",\n      \"CONTRACEPTIVE IMPLANT\",\n      \"MALE CONDOMS\",\n      \"FEMALE CONDOMS\",\n      \"TUBAL LIGATION\",\n      \"NONE\",\n    ];\n  }\n\n  async getTptTreatmentStatus() {\n    return AppEncounterService.getJson(`/patients/${this.patientID}/tpt_status`)\n  }\n\n  async patientHitMenopause() {\n    const obs = await ObservationService.getFirstObs(\n      this.patientID, 'Why does the woman not use birth control', \n    )\n    return obs && typeof obs?.value_text === 'string'\n      ? (obs.value_text.match(/menopause/i) ? true : false)\n      && AppEncounterService.obsInValidPeriod(obs)\n      : false\n  }\n\n  async hasTreatmentHistoryObs() {\n    const obs = await ObservationService.getFirstObs(this.patientID, 'Previous TB treatment history')\n    return obs && AppEncounterService.obsInValidPeriod(obs)\n  }\n\n  getDrugSideEffects() {\n    return AppEncounterService.getJson(`programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/medication_side_effects`, { \n      date: this.date \n    })\n  }\n\n  getClient() {\n    return AppEncounterService.getFirstValueCoded(this.patientID, 'Patient present');\n  }\n\n  async clientDueForCxCa() {\n    const req: any = await AppEncounterService.getJson(`last_cxca_screening_details`, {\n      id: this.patientID, date: this.date\n    })\n    if (!isEmpty(req)) {\n      const lastScreened = req['date_screened']\n      const duration = dayjs(this.date).diff(lastScreened, 'years')\n      return duration >= 1\n    }\n    return true\n  }\nasync clientHasHadAHysterectomy() {\n    const req: any = await AppEncounterService.getFirstValueCoded(this.patientID, 'Reason for NOT offering CxCa'); \n    if(req === \"Hysterectomy\") {\n      return true\n    }\n    const secondCheck: any = await AppEncounterService.getFirstValueText(this.patientID, 'Treatment'); \n    if(secondCheck === \"Hysterectomy\") {\n      return true\n    }\n    return false\n  }\n  async getTLObs() {\n    const isTL = ((obs: any) => obs && obs.value_coded === 'Tubal ligation' && AppEncounterService.obsInValidPeriod(obs))\n    const tlObs = await AppEncounterService.getFirstObs(this.patientID, 'Family planning')\n    if (isTL(tlObs)) {\n      return isTL(tlObs)\n    } else  {\n      const fpObs = await AppEncounterService.getFirstObs(this.patientID, 'Method of family planning')\n      return isTL(fpObs)\n    }\n  }\n  async getPreviousDrugs() {\n\n    const drugs = await AppEncounterService.getJson(\n      `patients/${this.patientID}/drugs_received`\n    )\n\n    if (!drugs) return\n\n    const uniqueDrugs = {} as any\n    drugs.forEach((drug: DrugInterface) => {\n      uniqueDrugs[drug.drug_inventory_id] = drug;\n    })\n    return uniqueDrugs;\n  }\n  familyPlanningMethods(label: string, values: any[]) {\n    const familyPlanningLogic: any = {\n      \"ORAL CONTRACEPTIVE PILLS\": {\n        \"DEPO-PROVERA\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"DEPO-PROVERA\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"INTRAUTERINE CONTRACEPTION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"CONTRACEPTIVE IMPLANT\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"MALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"FEMALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'MALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"RYTHM METHOD\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'CONTRACEPTIVE IMPLANT': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"TUBAL LIGATION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'VASECTOMY': 'N',\n      },\n      \"VASECTOMY\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'Y', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      },\n      \"NONE\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      }\n    }\n    const selected = familyPlanningLogic[label];\n    return values.map(data => {\n      if (selected[data.label] === \"N\") {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: false,\n          disabled: true,\n        }\n      }\n      else {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: data.isChecked,\n          disabled: false,\n        }\n      }\n\n    })\n  }\n\n}","import { Service } from \"@/services/service\";\n\nexport class StockService extends Service {\n    constructor() {\n        super()\n    }\n\n    static async fetchAvailableDrugStock(drugId: number) {\n        const stock = await this.getJson('pharmacy/items', { 'drug_id': drugId })\n        if (stock && stock.length > 0) {\n            return stock.reduce((accum: number, pharm: any) => accum + pharm.current_quantity, 0);\n        }\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { StockService } from \"./stock_service\";\nimport ART_PROP from '@/apps/ART/art_global_props';\n// ripped from old ART system\nexport const DRUG_PACK_SIZES: Record<string, any> = {\n    '11': [ 30 ],\n    '21': [ 25 ],\n    '22': [ 60 ],\n    '24': [ 30, 60, 90, 100 ],\n    '30': [ 90 ],\n    '39': [ 60 ],\n    '73': [ 120 ],\n    '74': [ 60 ],\n    '76': [ 1000 ],\n    '297': [ 30, 60, 90 ],\n    '576': [ 30, 60, 90 ],\n    '613': [ 60 ],\n    '731': [ 60 ],\n    '732': [ 60 ],\n    '733': [ 60 ],\n    '734': [ 30 ],\n    '735': [ 30 ],\n    '736': [ 60 ],\n    '738': [ 60 ],\n    '931': [ 12, 30, 60 ],\n    '932': [ 30 ],\n    '954': [ 60 ],\n    '963': [ 30, 60, 90 ],\n    '968': [ 60 ],\n    '969': [ 30 ],\n    '971': [ 30,60,90 ],\n    '976': [ 60 ],\n    '977': [ 30 ],\n    '982': [ 30 ],\n    '983': [ 30, 90 ],\n    '1039': [ 30,60,90 ],\n    '1043': [ 60 ],\n    '1044': [ 30],\n    '1056': [ 24 ],\n    '1216': [3, 6, 12]\n}\n\nexport class DispensationService extends AppEncounterService {\n    drugHistory: Array<any>;\n    currentDrugOrder: Array<any>;\n    useDrugManagement: boolean; \n    constructor(patientID: number, providerID: number) {\n        super(patientID, 54, providerID)\n        this.drugHistory = []\n        this.currentDrugOrder = []\n        this.useDrugManagement = false\n    }\n\n    setIsDrugManagementEnabled(isEnabled: boolean) {\n        this.useDrugManagement = isEnabled\n    }\n\n    async loadDrugManagementEnabled() {\n        this.useDrugManagement = await ART_PROP.drugManagementEnabled()\n    }\n\n    getDrugHistory() {\n        return this.drugHistory\n    }\n\n    getCurrentOrder() {\n        return this.currentDrugOrder\n    }\n\n    buildDispensations(orderId: number, tabs: number, totalPacks: number) {\n        const dispensations = []\n        for(let i=0; i < totalPacks; i++) {\n            dispensations.push({\n                'drug_order_id': orderId,\n                date: this.date,\n                quantity: (tabs / totalPacks)\n            })\n        }\n        return dispensations\n    }\n\n    saveDispensations(dispensations: Array<any>) {\n        return AppEncounterService.postJson('/dispensations', { \n            dispensations, \n            'program_id': AppEncounterService.getProgramID()\n        })\n    }\n\n    async voidOrder(orderId: number) {\n        return AppEncounterService.void(`/dispensations/${orderId}`, {})\n    }\n\n    async loadDrugHistory() {\n        try {\n            const res = await DrugOrderService.getDrugOrderHistory(this.patientID)\n            if (res) this.drugHistory = res\n        } catch (e) {\n            console.warn(e)\n        }\n    }\n\n    async loadCurrentDrugOrder() {\n        const res = await DrugOrderService.getDrugOrders(this.patientID)\n        if (res) {\n            if (this.useDrugManagement) {\n                const drugs = res.map(async (d: any) => {\n                    d['available_stock'] = await StockService.fetchAvailableDrugStock(d.drug.drug_id)\n                    return d\n                })\n                this.currentDrugOrder = await Promise.all(drugs)\n                return\n            }\n            this.currentDrugOrder = res\n        }\n    }\n\n    getDrugPackSizes(drugId: number) {\n        if (drugId in DRUG_PACK_SIZES) {\n            return DRUG_PACK_SIZES[drugId]\n        }\n        return [30, 60, 90]\n    }\n\n    // Ripped from old ART system for backwards compatibility purposes\n    calcCompletePack(drug: any, units: number) {\n        //sorting in an ascending order by tabs\n        const drugOrderBarcodes = drug.barcodes.sort((a: any, b: any) => a.tabs - b.tabs); \n        if (drugOrderBarcodes.length == 0 || units == 0.0) return units;\n        for (const i in drugOrderBarcodes) {\n            const { tabs } = drugOrderBarcodes[i]\n            if (parseInt(tabs) >= units) return tabs;\n        }\n        const completePack = parseInt(drugOrderBarcodes[drugOrderBarcodes.length - 1].tabs)\n        return completePack\n    }\n}\n","/**\n * Default keyboard configurations.\n * \n * Configuration consists of one or two keyboard layouts\n * to be displayed at once.\n */\n\nimport {\n    NUMBER_PAD_LO,\n    MONTHLY_DAYS_LO,\n    ALPHABETICAL_LO,\n    QWERTY_LO,\n    SYMBOLS,\n} from \"@/components/Keyboard/KbLayouts\";\n\nexport const SYMBOLS_CONFIG = [\n    SYMBOLS,\n    [\n        ['', 'Delete']\n    ]\n]\n\nexport const NUMBERS_ONLY = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS_WITH_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITH_ESTIMATE = [\n    NUMBER_PAD_LO,\n    [\n        ['N/A'],\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITHOUT_NA_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS = [\n    NUMBER_PAD_LO,\n    [\n        ['Unknown', 'Delete'],\n        ['Qwerty', 'A-Z'],\n    ]\n]\n\nexport const MONTHLY_DAYS = [\n    MONTHLY_DAYS_LO,\n    [\n        ['Unknown']\n    ]\n]\n\nexport const A_TO_Z = [\n    ALPHABETICAL_LO,\n    [\n        ['0-9', 'Delete'],\n        ['Qwerty', 'Unknown'],\n        ['', 'Space']\n    ]\n]\n\nexport const QWERTY = [\n    QWERTY_LO,\n    [\n        ['', 'Delete'],\n        ['?123', '0-9'],\n        ['Space', 'Unknown']\n    ]\n]\n\n/**\n * Navigation map for switching between different keyboard layouts\n */\nexport const KEY_BTN_NAV = [\n    {\n        btn: '0-9',\n        keyboard: NUMBERS\n    },\n    {\n        btn: '?123',\n        keyboard: SYMBOLS_CONFIG\n    },\n    {   \n        btn: 'A-Z',\n        keyboard: A_TO_Z \n    },\n    {\n        btn: 'Qwerty',\n        keyboard: QWERTY\n    }\n]\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-10a26cd2\")\n\n_pushScopeId(\"data-v-10a26cd2\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"VL milestone has been reached\")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Order VL\")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Wait till next milestone\")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Remind me later \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withId(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: { overflowY: 'hidden', background: 'grey' } }, {\n      default: _withId(() => [\n        _createVNode(\"p\", null, \"ART start date : \" + _toDisplayString(_ctx.artStartDate), 1),\n        _createVNode(\"p\", null, \"Months on ART: \" + _toDisplayString(_ctx.monthsOnART), 1),\n        _createVNode(\"p\", null, \"Last VL order date \" + _toDisplayString(_ctx.lastOrder), 1),\n        _createVNode(\"p\", null, \"Current regimen / start date: \" + _toDisplayString(_ctx.currentRegimen) + \" - \" + _toDisplayString(_ctx.regimenStartDate), 1)\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_button, {\n              slot: \"end\",\n              color: \"success\",\n              size: \"large\",\n              onClick: _cache[1] || (_cache[1] = $event => (_ctx.closeModal('order')))\n            }, {\n              default: _withId(() => [\n                _hoisted_2\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              slot: \"end\",\n              size: \"large\",\n              onClick: _cache[2] || (_cache[2] = $event => (_ctx.closeModal('wait')))\n            }, {\n              default: _withId(() => [\n                _hoisted_3\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              slot: \"start\",\n              color: \"danger\",\n              size: \"large\",\n              onClick: _cache[3] || (_cache[3] = $event => (_ctx.closeModal('later')))\n            }, {\n              default: _withId(() => [\n                _hoisted_4\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64 /* STABLE_FRAGMENT */))\n})","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  IonFooter\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport HisDate from \"@/utils/Date\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    VLData: {\n      type: Object as any,\n      required: true\n    },\n    \n  },\n  async created() {\n    this.artStartDate = HisDate.toStandardHisDisplayFormat(this.VLData.earliest_start_date);\n    this.monthsOnART = this.VLData.period_on_art;\n    this.lastOrder = this.VLData.last_order_date ? HisDate.toStandardHisDisplayFormat(this.VLData.last_order_date) : 'N/A';\n    this.currentRegimen = this.VLData.current_regimen.name ? this.VLData.current_regimen.name : 'Other';\n    this.regimenStartDate = HisDate.toStandardHisDisplayFormat(this.VLData.current_regimen.date_started);\n  },\n  methods: {\n   async closeModal(val: string) {\n    await modalController.dismiss(val);\n   } \n  },\n  data() {\n    return {\n      content: \"Content\",\n      artStartDate: \"\",\n      monthsOnART: \"\",\n      lastOrder: \"\",\n      currentRegimen: \"\",\n      regimenStartDate: \"\" \n    };\n  },\n  components: {\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonFooter,\n    IonButton,\n  },\n});\n","import { render } from \"./VLReminderModal.vue?vue&type=template&id=10a26cd2&scoped=true&ts=true\"\nimport script from \"./VLReminderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./VLReminderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./VLReminderModal.vue?vue&type=style&index=0&id=10a26cd2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-10a26cd2\"]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class ARTLabService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 13, providerID);\n  }\n  async buildDefferedOrder(milestone: any) {\n    const concept = await AppEncounterService.getConceptID(\"HIV viral load\");\n    const coded = await AppEncounterService.getConceptID(\"Delayed milestones\");\n\n    return [\n      {\n        'concept_id': concept,\n        'value_text': \"Wait till next milestone\",\n        'value_coded': coded,\n        'value_numeric': milestone,\n      }]\n  }\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-546674a2\")\n\n_pushScopeId(\"data-v-546674a2\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Side effects suspected causes\")\nconst _hoisted_2 = { style: {} }\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"div\", { class: \"side-title\" }, \" Select reason \", -1)\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"p\", null, \"Current Medication\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createVNode(\"p\", null, \"Previous Medication\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Other, not drug related\")\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Drug side effect\")\nconst _hoisted_8 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" Close \")\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\" Save \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_label = _resolveComponent(\"ion-label\")\n  const _component_ion_item = _resolveComponent(\"ion-item\")\n  const _component_ion_list = _resolveComponent(\"ion-list\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withId(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: { overflowY: 'hidden', background: 'grey' } }, {\n      default: _withId(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withId(() => [\n                _createVNode(_component_ion_col, { size: \"4\" }, {\n                  default: _withId(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'78vh'} }, {\n                      default: _withId(() => [\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.sides, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            key: data,\n                            onClick: $event => (_ctx.selectSideEffect(index)),\n                            detail: true,\n                            style: _ctx.activeIndex === index ? 'color: green': 'color: black'\n                          }, {\n                            default: _withId(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withId(() => [\n                                  _createTextVNode(_toDisplayString(data.label), 1 /* TEXT */)\n                                ]),\n                                _: 2\n                              }, 1024)\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\", \"style\"]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, { style: {overflowY: 'auto', height:'78vh'} }, {\n                  default: _withId(() => [\n                    _createVNode(\"div\", _hoisted_2, [\n                      _createVNode(_component_ion_list, null, {\n                        default: _withId(() => [\n                          (_ctx.activeIndex !== null)\n                            ? (_openBlock(), _createBlock(_component_ion_radio_group, {\n                                key: 0,\n                                modelValue: _ctx.sides[_ctx.activeIndex]['reason'],\n                                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (_ctx.sides[_ctx.activeIndex]['reason'] = $event))\n                              }, {\n                                default: _withId(() => [\n                                  _hoisted_3,\n                                  _hoisted_4,\n                                  (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.drugs, (drug, i) => {\n                                    return (_openBlock(), _createBlock(_component_ion_item, { key: i }, {\n                                      default: _withId(() => [\n                                        _createVNode(_component_ion_label, null, {\n                                          default: _withId(() => [\n                                            _createTextVNode(_toDisplayString(drug.drug.name), 1 /* TEXT */)\n                                          ]),\n                                          _: 2\n                                        }, 1024),\n                                        _createVNode(_component_ion_radio, {\n                                          slot: \"start\",\n                                          value: drug.drug_inventory_id\n                                        }, null, 8, [\"value\"])\n                                      ]),\n                                      _: 2\n                                    }, 1024))\n                                  }), 128 /* KEYED_FRAGMENT */)),\n                                  _hoisted_5,\n                                  _createVNode(_component_ion_item, null, {\n                                    default: _withId(() => [\n                                      _createVNode(_component_ion_label, null, {\n                                        default: _withId(() => [\n                                          _hoisted_6\n                                        ]),\n                                        _: 1\n                                      }),\n                                      _createVNode(_component_ion_radio, {\n                                        slot: \"start\",\n                                        value: \"other\"\n                                      })\n                                    ]),\n                                    _: 1\n                                  }),\n                                  _createVNode(_component_ion_item, null, {\n                                    default: _withId(() => [\n                                      _createVNode(_component_ion_label, null, {\n                                        default: _withId(() => [\n                                          _hoisted_7\n                                        ]),\n                                        _: 1\n                                      }),\n                                      _createVNode(_component_ion_radio, {\n                                        slot: \"start\",\n                                        value: \"drug\"\n                                      })\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              }, 8, [\"modelValue\"]))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _hoisted_8\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.closeModal,\n              slot: \"end\",\n              color: \"danger\"\n            }, {\n              default: _withId(() => [\n                _hoisted_9\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postSideEffects,\n              slot: \"end\",\n              disabled: !_ctx.allSelected\n            }, {\n              default: _withId(() => [\n                _hoisted_10\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64 /* STABLE_FRAGMENT */))\n})","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonRadioGroup,\n  IonRow,\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    sideEffects: {\n      type: Object as PropType<ActivityInterface[]>,\n      required: true\n    },\n    drugs: {\n      type: Array as any, \n      default: []\n    },\n  },\n  methods: {\n    closeModal() {\n      modalController.dismiss()\n    },\n    async postSideEffects() {\n      await modalController.dismiss(this.sides);\n    },\n    selectSideEffect(index: number) {\n      this.activeIndex = index;\n    },\n    \n  },\n  computed: {\n    allSelected(): any {\n      return this.sides.filter((side: any) => side['reason']).length === this.sides.length\n    }\n  },\n  mounted() {\n    this.sides = this.sideEffects;\n  },\n  data() {\n    return {\n      content: \"Content\",\n      extendedLabsEnabled: false as boolean,\n      appActivities: [] as Array<ActivityInterface>,\n      sides: [] as any,\n      specimens: [],\n      reasons: ['Routine', 'Targeted', 'Confirmatory', 'Stat', 'Repeat / Missing'],\n      activeIndex: null as any\n    };\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    IonRadioGroup,\n    IonRow,\n  },\n});\n","import { render } from \"./SideEffectsModal.vue?vue&type=template&id=546674a2&scoped=true&ts=true\"\nimport script from \"./SideEffectsModal.vue?vue&type=script&lang=ts\"\nexport * from \"./SideEffectsModal.vue?vue&type=script&lang=ts\"\n\nimport \"./SideEffectsModal.vue?vue&type=style&index=0&id=546674a2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-546674a2\"]])\n\nexport default __exports__","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport { FooterBtnEvent, Option } from \"@/components/Forms/FieldInterface\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { alertConfirmation, infoAlert, toastSuccess, toastWarning } from \"@/utils/Alerts\";\nimport HisDate from \"@/utils/Date\";\nimport { findIndex, isEmpty, find } from \"lodash\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { UserService } from \"@/services/user_service\";\nimport { OrderService } from \"@/services/order_service\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport AdherenceMixinVue from \"./AdherenceMixin.vue\";\nimport { modalController } from \"@ionic/vue\";\nimport VLReminderModal from \"@/components/DataViews/VLReminderModal.vue\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { ARTLabService } from \"../../services/lab_service\";\nimport { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport SideEffectsModalVue from \"@/components/DataViews/SideEffectsModal.vue\";\nimport ART_PROP from \"@/apps/ART/art_global_props\";\nimport { generateDateFields, EstimationFieldType } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { PatientTypeService } from \"../../services/patient_type_service\";\nimport { PrescriptionService } from \"../../services/prescription_service\";\nimport { DispensationService } from \"../../services/dispensation_service\";\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\";\nimport Store from \"@/composables/ApiStore\"\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { RegimenService } from \"@/services/regimen_service\";\n\nexport default defineComponent({\n  mixins: [AdherenceMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    fields: [] as any,\n    currentWeight: -1 as any,\n    weightTrail: [] as any,\n    customRegimens: [] as any,\n    labOrders: [] as any,\n    weightLossPercentageNum: 0 as number,\n    lostTenPercentBodyWeight: false as boolean,\n    CxCaEnabled: false as boolean,\n    CxCaStartAge: -1 as number,\n    CxCaMaxAge: -1 as number,\n    DueForCxCa: false as boolean,\n    currentlyPregnant: false as boolean,\n    patientHitMenopause: false as boolean,\n    hasPregnancyObsToday: false as boolean,\n    autoSelect3HP: false as boolean,\n    labOrderFieldContext: {} as any,\n    consultation: {} as any,\n    prescription: {} as any,\n    dispensation: {} as any,\n    completed3HP: false as boolean,\n    hasTbHistoryObs: false,\n    allergicToSulphur: false as boolean | null,\n    TBSuspected: false,\n    presentedTBSymptoms: false,\n    askAdherence: false as boolean,\n    lastDrugsReceived: [] as any,\n    sideEffectsHistory: {} as any,\n    onPermanentFPMethods: false,\n    reasonForDecliningTPTObs: {} as any,\n    malawiSideEffectReasonObs: [] as any,\n    otherSideEffectReasonObs: [] as any,\n    wasTransferredIn: false as boolean,\n    dateStartedArt: '' as string,\n    clientHadAHysterectomy: false as any,\n    isNoneClientPatient: false as boolean,\n    tptStatus: {} as Record<string, any>,\n    customDrugs: [] as any\n  }),\n  watch: {\n    ready: {\n      handler(value: boolean) {\n        if (value) {\n          this.consultation = new ConsultationService(this.patientID, this.providerID)\n          this.prescription = new PrescriptionService(this.patientID, this.providerID)\n          this.dispensation = new DispensationService(this.patientID, this.providerID)\n          this.fields = this.getFields();\n        }\n      },\n      immediate: true\n    },\n  },\n  methods: {\n    async onFinish(f: any, computedData: any) {\n      const encounter = await this.consultation.createEncounter();  \n\n      if (!encounter) return toastWarning(\"Unable to create encounter\");\n\n      const computedObs = await this.resolveObs(computedData, 'consultation')\n\n      const secondaryObs = (await Promise.all([\n        ...this.malawiSideEffectReasonObs,\n        ...this.otherSideEffectReasonObs,\n        this.reasonForDecliningTPTObs\n      ])).filter((d) => !isEmpty(d))\n\n      const savedObs = await this.consultation.saveObservationList([\n        ...computedObs, ...secondaryObs\n      ])\n\n      if (!isEmpty(this.drugObs) && !this.isNoneClientPatient) await this.saveAdherence();\n\n      if (!savedObs) return toastWarning(\"Unable to save patient observations\");\n\n      toastSuccess(\"Observations and encounter created!\");\n\n      if (f.refer_to_clinician && f.refer_to_clinician.value ==='Yes') {\n        this.gotoPatientDashboard()\n        return\n      }\n      this.nextTask();\n    },\n    async getTptDrugs(formData: any){\n      const drugFilters: string[] = []\n      const tptHistory = formData.routine_tb_therapy.value\n      if (isEmpty(this.customDrugs)) {\n        this.customDrugs = await RegimenService.getCustomIngridients()\n      }\n      if(tptHistory.match(/ipt/i)) {\n        drugFilters.push(\"INH or H (Isoniazid 300mg tablet)\")\n      } else if(tptHistory.includes(\"3HP (RFP + INH)\")){\n        drugFilters.push('INH or H (Isoniazid 300mg tablet)')\n        drugFilters.push('Rifapentine (150mg)')\n      } else if(tptHistory.includes(\"INH 300 / RFP 300 (3HP)\")){\n        drugFilters.push(\"INH 300 / RFP 300 (3HP)\")\n      }\n      return !isEmpty(drugFilters) \n        ? this.customDrugs.filter((drug: any) => drugFilters.includes(drug.name))\n          .map((drug: any) => ({\n            label: drug.name,\n            value: '',\n            other: drug\n          }))\n        : []\n    },\n    async getTransferInStatus() {\n      const receivedArvs = await ConsultationService.getFirstValueCoded(\n        this.patientID, 'Ever received ART'\n      )\n      const transferLetterObs = await ConsultationService.getFirstObs(\n        this.patientID, 'Has transfer letter'\n      )\n      const date = transferLetterObs ? HisDate.toStandardHisFormat(transferLetterObs.obs_datetime) : ''\n      return receivedArvs \n        && receivedArvs.match(/yes/i) \n        && transferLetterObs \n        && `${transferLetterObs.value_coded}`.match(/yes/i)\n        && date === this.consultation.getDate()\n    },\n    async getDateStartedArt() {\n      const dateStarted = await ConsultationService.getFirstValueDatetime(this.patientID, 'Date ART started')\n      return dateStarted ? HisDate.toStandardHisFormat(dateStarted) : ''\n    },\n    async checkIfWeightLossIsControlled(val: any) {\n      if (this.lostTenPercentBodyWeight\n        && `${val.label}`.match(/malnutrition/i)\n        && `${val.value}`.match(/no/i)) {\n        const action = await infoActionSheet(\n          'Recommendation',\n          `Patient's weight has dropped by ${this.weightLossPercentageNum}% , is this controlled weight loss??`,\n          'Please verify',\n          [\n            { name: 'Confirm weight loss', slot: 'start', color: 'success'},\n            { name: 'Confirm controlled', slot: 'end', color: 'primary'}\n          ]\n        )\n        val.value = action === 'Confirm weight loss' ? 'Yes' : 'No'\n      }\n    },\n    async checkVLReminder() {\n      const vals = await ProgramService.getPatientVLInfo(this.patientID);\n      if (vals.eligibile === true) {\n        const modal = await modalController.create({\n          component: VLReminderModal,\n          backdropDismiss: false,\n          cssClass: \"large-modal\",\n          componentProps: { VLData: vals },\n        });\n        modal.present();\n        const { data } = await modal.onDidDismiss();\n        switch (data) {\n          case \"order\":\n            await this.labOrderFieldContext.launchOrderSelection();\n            break;\n          case \"wait\":\n            await this.waitForVL();\n            break;\n          case \"later\":\n            break;\n          default:\n            break;\n        }\n      }\n    },\n    async waitForVL(milestone: any = null) {\n      const orderService = new ARTLabService(this.patientID, this.providerID);\n      const encounter = await orderService.createEncounter();\n      const observations = await orderService.buildDefferedOrder(milestone);\n      if (!encounter) return toastWarning(\"Unable to create encounter\");\n      await orderService.saveObservationList(observations);\n    },\n    canScreenCxCa() {\n      const age = this.patient.getAge()\n      return this.patient.isFemale()\n        && this.DueForCxCa\n        && this.CxCaEnabled \n        && age >= this.CxCaStartAge \n        && age <= this.CxCaMaxAge\n        && !this.clientHadAHysterectomy\n    },\n    pregnancyEligible() {\n      return this.patient.isChildBearing() && !this.onPermanentFPMethods\n    },\n    showCurrentContraceptionMethods(formData: any) {\n      return (this.pregnancyEligible()\n        && !this.patientHitMenopause \n        && !this.isPregnant(formData))\n        && !this.isANCclient()\n    },\n    showNewContraceptionMethods(formData: any) {\n      return (\n        this.pregnancyEligible() &&\n        !this.patientHitMenopause &&\n        !this.isPregnant(formData) &&\n        !this.isOnTubalLigation(formData)\n        && !this.isANCclient()\n      )\n    },\n    isPregnant(formData: any) {\n      if (formData.pregnant_breastfeeding) {\n        return this.inArray(formData.pregnant_breastfeeding, \n          p => p.label === 'Pregnant' && p.value === 'Yes'\n        )\n      }\n      return this.currentlyPregnant\n    },\n    isOnTubalLigation(formData: any) {\n      return this.inArray(formData.current_fp_methods, d => d.value === \"TUBAL LIGATION\")\n    },\n    async disableFPMethods(listData: Array<Option>, value: Option) {\n      if (value.isChecked && value.label === \"NONE\") {\n        return listData.map((i) => {\n          if (i.label != \"NONE\") {\n            i.isChecked = false;\n            i.disabled = false;\n          }\n          return i;\n        });\n      } else if (value.label != \"NONE\" && value.isChecked) {\n        if (value.label.match(/condom/gi)) infoAlert(\"Combine with other modern methods of family planning\") \n        const noneIndex = findIndex(listData, { label: \"NONE\" });\n        listData[noneIndex].isChecked = false;\n        const vals = this.consultation.familyPlanningMethods(\n          value.label,\n          listData\n        );\n        const currentIndex = findIndex(vals, { label: value.label });\n        vals[currentIndex].isChecked = true;\n        return vals;\n      } else {\n        return listData.map((i) => {\n          i.disabled = false;\n          return i;\n        });\n      }\n    },\n    disablePrescriptions(listData: Array<Option>, value: Option) {\n      if (value.isChecked && value.label === \"NONE OF THE ABOVE\") {\n        return listData.map((i) => {\n          if (i.label != \"NONE OF THE ABOVE\") i.isChecked = false;\n          return i;\n        });\n      } else if (value.label != \"NONE OF THE ABOVE\" && value.isChecked) {\n        const noneIndex = findIndex(listData, { label: \"NONE OF THE ABOVE\" });\n        listData[noneIndex].isChecked = false;\n      }\n      return listData;\n    },\n    buildMedicationOrders(options: Option[]) {\n      if (this.inArray(options, o => o.label === \"NONE OF THE ABOVE\")) {\n        return this.consultation.buildValueCoded('Prescribe drugs', 'No')\n      }\n      const priscribed = this.consultation.buildValueCoded('Prescribe drugs', 'Yes')\n      const medications = options.map( o => this.consultation.buildValueCoded(\n        'Medication orders', o.label\n      ))\n      return [priscribed, ...medications]\n    },\n    declinedFPM(formData: any) {\n      return this.inArray(formData.fp_methods, d => d.value === \"NONE\")\n        && this.inArray(formData.current_fp_methods, d => d.value === \"NONE\")\n    },\n    riskOfUnplannedPregnancy(formData: any) {\n      return formData.reason_for_no_fpm.value === \"At risk of unplanned pregnancy\"\n    },\n    showOtherSideEffects(formData: any) {\n      return this.inArray(formData.side_effects, d => d.label === \"Other\" && d.value === \"Yes\")\n    },\n    hasTBSymptoms(formData: any) {\n      this.presentedTBSymptoms = this.inArray(formData.tb_side_effects, d => d.value === \"Yes\")\n      return this.presentedTBSymptoms\n    },\n    async buildSideEffectObs(data: Option[], attr: 'malawiSideEffectReasonObs' | 'otherSideEffectReasonObs'): Promise<boolean> {\n      const sideEffectReasons  = await this.getSideEffectsReasons(data)\n\n      this[attr] = [] //Clear this incase side effects no longer exist\n  \n      if (sideEffectReasons === undefined) return false\n\n      if (sideEffectReasons != -1) {\n        const drugInducedConcept = ConceptService.getCachedConceptID('Drug induced', true)\n        const isOtherReason = (reason: string) => `${reason}`.match(/other|drug/i) ? true : false\n        this[attr] = sideEffectReasons.map((r: any) => ({\n          'concept_id': drugInducedConcept,\n          'value_coded': ConceptService.getCachedConceptID(r.label, true),\n          'value_text': isOtherReason(r.reason) ? 'Past medication history' : null,\n          'value_drug': !isOtherReason(r.reason) ? r.reason : null //Reason is drug ID number if caused by specific drug\n        }))\n      }\n      return true\n    },\n    async getSideEffectsReasons(sideEffects: Option[]) {\n      const allYes = sideEffects.filter(s => !(`${s.label}`.match(/other/i)) && s.value==='Yes')\n      if (allYes.length > 0) {\n        const modal = await modalController.create({\n          component: SideEffectsModalVue,\n          backdropDismiss: false,\n          cssClass: \"large-modal\",\n          componentProps: { sideEffects: allYes, drugs: this.lastDrugsReceived },\n        });\n        modal.present();\n        const { data } = await modal.onDidDismiss();\n        return data;\n      }\n      return -1\n    },\n    getFPMethods(exclusionList: string[] = [], preChecked: Array<Option>) {\n      const methods = this.consultation.getFamilyPlanningMethods();\n      const filtered = methods.filter(\n        (data: string) => !exclusionList.includes(data)\n      )\n      return filtered.map((method: any) => ({\n        label: method,\n        value: method,\n        isChecked: preChecked.map((i) => i.label).includes(method),\n      }))\n    },\n    getOptions(options: string[], preValues: Array<Option>) {\n      return options.map((data: any) => {\n        const preValue = find(preValues, { label: data });\n        return {\n          label: data,\n          value: preValue ? preValue.value : \"\",\n          other: {\n            values: this.yesNoOptions(),\n          },\n        };\n      });\n    },\n    getContraindications(preValues: Array<Option>) {\n      const contraIndications = ConceptService.getConceptsByCategory(\n        \"contraindication\", true\n      ).map((data) => data.name);\n      return this.getOptions([...contraIndications, \"Other\"], preValues);\n    },\n    getOtherContraindications(preValues: Array<Option>) {\n      const contraIndications = ConceptService.getConceptsByCategory(\n        \"side_effect\", true\n      ).map((data) => data.name);\n      /**\n       * HACK ALERT!!!\n       * Dont want to show Other (Specify) as a last element\n       */\n      const lastElement = contraIndications.pop()\n      return this.getOptions([...contraIndications, \"Other (Specify)\", `${lastElement}`], preValues)\n    },\n    getTBSymptoms(preValues: Array<Option>) {\n      const contraIndications = ConceptService.getConceptsByCategory(\n        \"tb_symptom\", true\n      ).map((data) => data.name)\n      return this.getOptions([...contraIndications], preValues);\n    },\n    getReasonsForNoCxcaOptions() {\n      return ConceptService.getConceptsByCategory(\"reason_for_no_cxca\")\n        .map((c: any) => ({\n          label: c.name,\n          value: c.name,\n          other: {\n            c\n          }\n        }))\n    },\n    runAppendOptionParams(options: Option[], prechecked: Option[]) {\n      const checkedOptions = prechecked.filter(o => o.isChecked).map(o => o.label)\n      return options.map(o => {\n        if (typeof o?.other?.appendOptionParams === 'function') {\n          const appendedOptions = o?.other?.appendOptionParams()\n          if (typeof appendedOptions === 'object')  {\n            const option: Option = {\n              label: o.label,\n              value: o.value,\n              other: o.other\n            }\n            if (appendedOptions.isChecked) {\n              option.isChecked = appendedOptions.isChecked\n              delete appendedOptions.isChecked\n            } else {\n              option.isChecked = checkedOptions.includes(o.label)\n            }\n            return { ...option, ...appendedOptions}\n          }\n        }\n        return o\n      })\n    },\n    /**\n     * Checks formdata and previous observation state if a patient completed 3HP\n     */\n    didCompleted3HP(formData: any) {\n      return !this.completed3HP \n        ? formData.routine_tb_therapy \n        && formData.routine_tb_therapy.value.match(/complete/i) ? true : false\n        : true\n    },\n    /**\n     * Checks if 3HP can be auto selected based on FormData and \n     * if  it is enabled in global preferences\n     */\n    tptAutoSelectionMode(formData: any) {\n      return this.autoSelect3HP && !this.didCompleted3HP(formData)\n    },\n    /**\n     * Provides validations for TPT selections and value updates\n     */\n    async on3HPValueUpdate(listData: Option[], curOption: Option, formData: any) {\n      const is3HPorTPT = (i: Option) => i.label.match(/IPT|3HP/i) ? true : false\n\n      //Checks if IPT and 3HP are both selected and returns a boolean\n      const ipt3HPConflict: boolean = (() => {\n        const checkedDrugs = listData.reduce(\n        (checkedDrugs: string[], item: Option) => {\n          if (is3HPorTPT(item) \n            && !(item.label in checkedDrugs) \n            && item.isChecked) {\n            checkedDrugs.push(item.label)\n          }\n          return checkedDrugs\n        }, [])\n        return checkedDrugs.includes('IPT') \n          && (checkedDrugs.includes('3HP (RFP + INH)') \n          || checkedDrugs.includes('INH 300 / RFP 300 (3HP)'))\n      })()\n\n      // check if no tpt is present\n      const noTpTPresent = is3HPorTPT(curOption) \n        && listData.filter(i => is3HPorTPT(i)).map(i => !i.isChecked)\n          .every(Boolean)\n  \n      if (noTpTPresent && this.tptAutoSelectionMode(formData)) {\n        const modal = await optionsActionSheet(\n          'Reasons for declining TPT', \n          '',\n          [\n            'Patient declined',\n            'Side-effects (previous or current)',\n            'Stock-out',\n            'Starting TB treatment',\n            'Other'\n          ],\n          [\n            { name : 'Done', slot: 'start', role: 'action'}\n          ]\n        )\n        this.reasonForDecliningTPTObs = this.consultation.buildValueText(\n          'Other reason for not seeking services', modal.selection\n        )\n      } else {\n        this.reasonForDecliningTPTObs = {}\n      }\n\n      if (ipt3HPConflict) {\n        const action = await infoActionSheet(\n          \"IPT / 3HP conflict\",\n          \"IPT and 3HP can NOT be prescribed together\",\n          \"Please pick either one\",\n          [\n            { name: \"Prescribe 3HP\", slot: \"start\", color: \"primary\" },\n            { name: \"Prescribe IPT\", slot: \"end\", color: \"primary\" },\n          ]\n        )\n        return listData.map(i => {\n          if (is3HPorTPT(i)) {\n            i.isChecked =\n              action === 'Prescribe IPT' && i.label === 'IPT' || \n              action ==='Prescribe 3HP' && i.label === 'INH 300 / RFP 300 (3HP)'\n          }\n          return i\n        })\n      }\n      return listData.map(i => {\n        // By default, toggle between variants of 3HP. All of them cant be selected at once\n        if (curOption.label === '3HP (RFP + INH)' \n          && i.label === 'INH 300 / RFP 300 (3HP)'\n          && curOption.isChecked) {\n          i.isChecked = false\n        } else if (curOption.label === 'INH 300 / RFP 300 (3HP)' \n          && i.label === '3HP (RFP + INH)'\n          && curOption.isChecked ) {\n            i.isChecked = false\n        }\n        return i\n      })\n    },\n    medicationOrderOptions(formData: any, prechecked=[] as Option[]): Option[] {\n      const completedTpt = this.didCompleted3HP(formData)\n      const everTakenTpt = this.tptStatus.tpt !== null\n      const autoSelect3HP = this.tptAutoSelectionMode(formData)\n\n      const disableOption = (text: string) => ({\n        disabled: true,\n        isChecked: false,\n        description: {\n          color: \"danger\",\n          show: \"always\",\n          text\n        }\n      })\n\n      return this.runAppendOptionParams([\n        this.toOption('ARVs', {\n          appendOptionParams: () => ({ \n            isChecked: autoSelect3HP && !this.TBSuspected\n          })\n        }),\n        this.toOption('CPT', {\n          appendOptionParams: () => {\n            if (autoSelect3HP && !this.TBSuspected \n              && !this.allergicToSulphur) {\n              return { isChecked : true }\n            }\n            return this.allergicToSulphur \n              ? disableOption('Allergic to CPT')\n              : { disabled: false }\n          }\n        }),\n        this.toOption('3HP (RFP + INH)', {\n          appendOptionParams: () => {\n            if (completedTpt) return disableOption(`Completed TPT treatment`)\n            if (this.tptStatus.tb_treatment) return disableOption(`Completed/on TB treatment`)\n            if (this.TBSuspected) return disableOption('TB Suspect')\n            if (this.currentWeight < 20) return disableOption('Weight below regulation')\n            if (everTakenTpt && this.tptStatus.tpt !== '3HP (RFP + INH)' && !this.tptStatus.completed) {\n              return disableOption(`On ${this.tptStatus.tpt} treatment`)\n            }\n            if (this.tptStatus.tpt === '3HP (RFP + INH)' && !this.tptStatus.completed) return { isChecked: true }\n          }\n        }),\n        this.toOption('INH 300 / RFP 300 (3HP)', {\n          appendOptionParams: () => { \n            if (completedTpt) return disableOption(`Completed TPT treatment`)\n            if (this.tptStatus.tb_treatment) return disableOption(`Completed/on TB treatment`)\n            if (this.TBSuspected) return disableOption('TB Suspect')\n            if (this.currentWeight < 30) return disableOption('Weight below regulation') \n            if (everTakenTpt && this.tptStatus.tpt !== 'INH 300 / RFP 300 (3HP)' && !this.tptStatus.completed) {\n              return disableOption(`On ${this.tptStatus.tpt} treatment`)\n            }\n            if (this.tptStatus.tpt === 'INH 300 / RFP 300 (3HP)' && !this.tptStatus.completed) return { isChecked: true }\n            return { isChecked: autoSelect3HP }\n          }\n        }),\n        this.toOption('IPT', {\n          appendOptionParams: () => {\n            if (completedTpt) return disableOption(`Completed TPT treatment`)\n            if (this.tptStatus.tb_treatment) return disableOption(`Completed/on TB treatment`)\n            if (this.TBSuspected) return disableOption('TB Suspect')\n            if (everTakenTpt && this.tptStatus.tpt !== 'IPT' && !this.tptStatus.completed) {\n              return disableOption(`On ${this.tptStatus.tpt} treatment`)\n            }\n            if (this.tptStatus.tpt === 'IPT' && !this.tptStatus.completed) return { isChecked: true }\n          }\n        }),\n        this.toOption('NONE OF THE ABOVE')\n      ], prechecked)\n    },\n    async getVlLabData() {\n      return OrderService.formatLabs((await Store.get('GET_LAB_ORDERS_WITH_GIVEN_RESULT_STATUS', { patientID: this.patientID })));\n    },\n    isANCclient() {\n      return ProgramService.getSuspendedProgram() === 'ANC'\n    },\n    getFields(): any {\n      return [\n        {\n          id: \"other_patient_prescription\",\n          proxyID: \"prescription\",\n          helpText: \"Medication to prescribe during this visit\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          init: async () => {\n            const isGuardian = (await this.consultation.getClient()) === \"No\";\n            if (isGuardian) {\n              this.isNoneClientPatient = true\n            } else {\n              this.isNoneClientPatient = (await PatientTypeService.isDrugRefillPatient(this.patientID))\n                ? true : false\n            }\n            if (this.isNoneClientPatient) {\n              this.currentWeight = Number((await this.patient.getRecentWeight()))\n              this.autoSelect3HP = await Store.get('ART_AUTO_3HP_SELECTION')\n              this.tptStatus = await this.consultation.getTptTreatmentStatus()\n              this.completed3HP = this.tptStatus.tpt !== null && this.tptStatus.completed\n            }\n            return true\n          },\n          validation: (data: any) => Validation.required(data),\n          computedValue: (v: Option[]) => ({ \n            tag: 'consultation',\n            obs: this.buildMedicationOrders(v)\n          }),\n          onValueUpdate: (listData: Array<Option>, value: Option, f: any) => {          \n            const list = this.disablePrescriptions(listData, value);\n            return this.on3HPValueUpdate(list, value, f)\n          },\n          options: (formData: any, c: Array<Option>, cd: any, l: any) => {\n            return !isEmpty(l) ? l : this.medicationOrderOptions(formData)\n          },\n          condition: () => this.isNoneClientPatient,\n          exitsForm: () => true\n        },\n        /**\n        * DRUG TRANSFER IN INITIATION \n        */\n        ...generateDateFields({\n          id: 'date_last_received_arvs',\n          helpText: 'Last ARV Dispensation',\n          required: true,\n          init: async () => {\n            this.wasTransferredIn = (await this.getTransferInStatus()) || false\n            this.dateStartedArt = await this.getDateStartedArt()\n            return true\n          },\n          condition: () => this.wasTransferredIn,\n          minDate: () => this.dateStartedArt,\n          maxDate: () => this.consultation.getDate(),\n          computeValue: (date: string) => {\n            this.prescription.setDate(date)\n            return {\n              tag: 'consultation',\n              date,\n              obs: this.consultation.buildValueDate(\n                'Date drug received from previous facility', date\n              )\n            }\n          },\n          estimation: {\n            allowUnknown: false\n          }\n        }, this.consultation.getDate()),\n        {\n          id: 'previous_arvs_received',\n          helpText: 'Last ARV drugs dispensed',\n          type: FieldType.TT_MULTIPLE_SELECT,\n          computedValue: (v: Option[]) => v.map(d => d.other),\n          validation: (v: Option[]) => Validation.required(v),\n          options: async () => {\n            if (!isEmpty(this.customRegimens)) return this.customRegimens\n            const p = new PrescriptionService(this.patientID, this.providerID)\n            this.customRegimens = (await p.getARVs())\n              .map((drug: any ) => ({\n                label: drug.name,\n                value: drug.drug_id,\n                other: { ...drug }\n              })) as Option[]\n            return this.customRegimens\n          },\n          config: {\n            showKeyboard: true\n          },\n          condition: () => this.wasTransferredIn\n        },\n        {\n          id: 'drug_interval',\n          helpText: 'Duration period for last received ARVs',\n          type: FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n          condition: () => this.wasTransferredIn,\n          validation: (val: Option) => Validation.required(val),\n          computedValue: (d: Option) => d.other.nextAppointment,\n          options: () => {\n            const intervals = [\n              { label: '2 weeks', value: 14 },\n              { label: '1 month', value: 28 },\n              { label: '2 months', value: 56 },\n              { label: '3 months', value: 84 },\n              { label: '4 months', value: 112 },\n              { label: '5 months', value: 140 },\n              { label: '6 months', value: 168 },\n              { label: '7 months', value: 196 },\n              { label: '8 months', value: 224 },\n              { label: '9 months', value: 252 },\n              { label: '10 months', value: 280 },\n              { label: '11 months', value: 308 },                        \n              { label: '12 months', value: 336 }\n            ]\n            return intervals.map(({label, value}: Option) => {\n              this.prescription.setNextVisitInterval(value)\n              const nextAppointment = this.prescription.calculateDateFromInterval()\n              return {\n                label,\n                value,\n                other: {\n                  label: 'Medication run-out date:',\n                  value: HisDate.toStandardHisDisplayFormat(nextAppointment),\n                  nextAppointment,\n                  other: {\n                    label: \"\",\n                    value: []\n                  }\n                }\n              }\n            })\n          }\n        },\n        {\n          id: 'arv_quantities',\n          helpText: 'Amount of drugs dispensed (From last ART Facility)',\n          type: FieldType.TT_DRUG_TRANSFER_IN,\n          validation: (v: Option[]) => this.validateSeries([\n            () => Validation.required(v),\n            () => v.map((i: Option) => i.value === '' || i?.other?.pillsBrought === '')\n              .some(Boolean) ? ['Some Drugs are missing values'] : null\n          ]),\n          computedValue: (v: Option[], f: any, c: any) => {\n            return {\n              tag: 'consultation',\n              obs:  v.map(async (d: any) => {\n                const drugID: number = d?.other?.drug?.drug_id || 0\n                return { \n                  ...(await this.consultation.buildObs(\n                    'Drug received from previous facility', {\n                      'value_drug': drugID,\n                      'value_datetime': c?.drug_interval || null,\n                      'value_numeric': d?.value || 0\n                      }\n                  )),\n                  child: (await this.consultation.buildObs(\n                    'Number of tablets brought to clinic', {\n                      'value_drug': drugID,\n                      'value_numeric': d?.other?.pillsBrought || -1,\n                      'value_datetime': c?.date_last_received_arvs?.date || null\n                   }\n                ))}\n              })\n            }\n          },\n          options: (_: any, c: any, listData: Option) => {\n            return c.previous_arvs_received\n              .map((d: any) => {\n                const drugName = d['alternative_drug_name'] || d['drug_name'] || d['name']\n                const prevValue = find(listData, { label: drugName })\n                let qty = ''\n                let rmndr = ''\n                if (prevValue) {\n                  qty = prevValue?.value\n                  rmndr = prevValue?.other?.pillsBrought\n                }\n                return {\n                  label: drugName,\n                  value: qty,\n                  other: {\n                    drug: d,\n                    pillsBrought: rmndr\n                  }\n                }\n              })\n          },\n          condition: () => this.wasTransferredIn\n        },\n        /**\n        * END OF DRUG TRANSFER IN\n        */\n        {\n          id: \"patient_lab_orders\",\n          helpText: \"Lab orders\",\n          type: FieldType.TT_LAB_ORDERS,\n          init: async () => {\n            this.labOrders = await this.getVlLabData()\n            return true\n          },\n          unload: async () => {\n            await this.checkVLReminder()\n            // Check if released results were given to the patient\n            const noGivenResults = this.labOrders.filter((r: any) => r.result_given === 'No')\n            if (noGivenResults.length && (await alertConfirmation('Result(s) Given to Client?'))) {\n              const enc = new AppEncounterService(this.patientID, -1, this.providerID)\n              // flatten array and save observations for results given\n              const obs = noGivenResults.reduce((all: any, result: any) => [\n                ...all, ...(result.resultIds.map(async (resultID: number) =>{\n                  enc.encounterID = result.encounter_id\n                  return enc.saveObs((await enc.buildObs(\"Result Given to Client\", {\n                      \"value_coded\": \"Yes\",\n                      \"obs_group_id\": resultID\n                    })))\n                })) \n              ], [])\n              await Promise.all(obs)\n            }\n            // refresh data\n            this.labOrders = await this.getVlLabData()\n          },\n          onload: (fieldContext: any) =>  this.labOrderFieldContext = fieldContext,\n          options: () => {\n            return [\n              {\n                label: \"Lab orders\",\n                value: \"order trail\",\n                other: {\n                  values: this.labOrders\n                }\n              }\n            ]\n          },\n          config: {\n            printOrder: (orderID: number) => {\n              return new PatientPrintoutService(this.patientID).printLabOrderLbl(orderID)\n            },\n            hiddenFooterBtns: [\"Clear\"],\n            footerBtns: [\n              {\n                name: \"Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => {\n                  if (!isEmpty(this.labOrderFieldContext)) {\n                    await this.labOrderFieldContext.launchOrderSelection();\n                  }\n                }\n              }\n            ]\n          },\n        },\n        {\n          id: \"pregnant_breastfeeding\",\n          helpText: `Patient Pregnant or breastfeeding?`,\n          init: async () => {\n            if (this.patient.isFemale()) {\n              if (this.patient.isChildBearing()) {\n                this.hasPregnancyObsToday = await this.patient.hasPregnancyObsToday()\n                this.currentlyPregnant = await this.patient.isPregnant()\n              }\n              this.onPermanentFPMethods = await this.consultation.getTLObs();\n            }\n            return true\n          },\n          condition: () => !this.hasPregnancyObsToday && this.pregnancyEligible(),\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          validation: (data: any) =>\n            this.validateSeries([\n              () => Validation.required(data),\n              () => Validation.anyEmpty(data),\n            ]),\n          computedValue: (v: Option[]) => {\n            let obs = []\n            if (this.isANCclient()) obs.push(\n              this.consultation.buildValueCoded('Is patient pregnant', 'Yes')\n            )\n            obs = obs.concat(v.map(d => this.consultation.buildValueCoded(d.other.concept, d.value)))\n            return {\n              obs,\n              tag: 'consultation'\n            }\n          },\n          options: (formData: any) => {\n            const options = []\n            // Because ANC clients are always Pregnant!\n            if (!this.isANCclient()) options.push({\n              label: \"Pregnant\",\n              value: \"\",\n              other: {\n                values: this.yesNoOptions(),\n                concept: \"Is patient pregnant\",\n              }\n            })\n\n            options.push({\n              label: \"Breastfeeding\",\n              value: \"\",\n              other: {\n                values: this.yesNoOptions(),\n                concept: \"Is patient breast feeding\",\n              }\n            })\n\n            return formData.pregnant_breastfeeding || options\n          }\n        },\n        {\n          id: \"patient_weight_chart\",\n          helpText: \"Patient weight chart\",\n          type: FieldType.TT_WEIGHT_CHART,\n          init: async () => {\n            this.weightTrail = await this.patient.getWeightHistory()\n            this.weightLossPercentageNum = this.patient.getWeightLossPercentageFromTrail(this.weightTrail)\n            this.lostTenPercentBodyWeight = this.weightLossPercentageNum >= 10\n            return true\n          },\n          options: async () => {\n            const bmi = await this.patient.getBMI();\n            const values = this.weightTrail;\n            return [\n              {\n                label: \"Weight for patient\",\n                value: \"Weight trail\",\n                other: {\n                  bmi,\n                  values: values.map((d: any) => ({\n                    x: HisDate.toStandardHisDisplayFormat(d.date),\n                    y: d.weight,\n                  })),\n                  age: this.patient.getAge(),\n                },\n              },\n            ];\n          },\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: \"has_fp_methods\",\n          helpText: \"\",\n          type: FieldType.TT_TEXT_BANNER,\n          condition: () => this.onPermanentFPMethods,\n          options: () => this.mapStrToOptions([\n            \"Patient is on Tubal ligation method\"\n          ])\n        },\n        {\n          id: \"current_fp_methods\",\n          helpText: \"What method are you currently on?\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          init: async () => {\n            if (this.patient.isFemale()) {\n              this.patientHitMenopause = await this.consultation.patientHitMenopause()\n            }\n            return true\n          },\n          validation: (data: any) => Validation.required(data),\n          onValueUpdate: (listData: Array<Option>, value: Option) => {\n            return this.disableFPMethods(listData, value);\n          },\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.map(d => this.consultation.buildValueCoded('Family planning method', d.value))\n          }),\n          condition: (formData: any) => this.showCurrentContraceptionMethods(formData),\n          options: (_: any, checked: Array<Option>) =>this.getFPMethods([], checked),\n        },\n        {\n          id: \"fp_methods\",\n          helpText: \"What method are you providing today?\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          condition: (formData: any) => this.showNewContraceptionMethods(formData),\n          validation: (data: any) => Validation.required(data),\n          onValueUpdate: (listData: Array<Option>, value: Option) => {\n            return this.disableFPMethods(listData, value);\n          },\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.map((d: Option) => this.consultation.buildValueCoded('Family planning, action to take', d.value))\n          }),\n          options: (_: any, checked: Array<Option>) => this.getFPMethods([], checked)\n        },\n        {\n          id: \"reason_for_no_fpm\",\n          helpText: \"Main reason for not using family planning methods\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          condition: (formData: any) => this.declinedFPM(formData),\n          computedValue: (v: Option) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueText(\"Why does the woman not use birth control\", v.value) \n          }),\n          options: () => this.mapStrToOptions([\n            \"Not Sexually active\",\n            \"Patient want to get pregnant\",\n            \"Not needed for medical reasons\",\n            \"At risk of unplanned pregnancy\",\n            \"Menopause\"\n          ])\n        },\n        {\n          id: \"specific_reason_for_no_fpm\",\n          helpText: \"Specific reason for not using family planning methods\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (v: Option) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueText(\"Reason for not using contraceptives\", v.value)\n          }),\n          condition: (formData: any) => this.riskOfUnplannedPregnancy(formData),\n          options: () => this.mapStrToOptions([\n            \"Following wishes of spouse\",\n            \"Religious reasons\",\n            \"Afraid of side effects\",\n            \"Never though about it\",\n            \"Indifferent (does not mind getting pregnant)\"\n          ])\n        },\n        {\n          id: \"offer_contraceptives\",\n          helpText: \"Offer contraceptives\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          condition: (formData: any) => this.riskOfUnplannedPregnancy(formData),\n          computedValue: (v: any) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueCoded(\"Family planning, action to take\", v.value)\n          }),\n          options: () => [\n            { label: \"Accepted\", value: \"Yes\" },\n            { label: \"Declined\", value: \"No\" },\n            { label: \"Discuss with spouse\", value: \"Discuss with spouse\" },\n          ]\n        },\n        {\n          id: \"offered_intervention\",\n          helpText: \"Offered intervention\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          validation: (data: any) => Validation.required(data),\n          condition: (formData: any) => formData.offer_contraceptives.value === \"Accepted\",\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.map(d => this.consultation.buildValueCoded(d.label, d.value))\n          }),\n          options: (_: any, checked: Array<Option>) => this.getFPMethods([\"NONE\"], checked),\n        },\n        {\n          id: \"offer_cxca\",\n          helpText: \"Refer client for CxCa screening\",\n          type: FieldType.TT_SELECT,\n          init: async () => {\n            if (this.patient.isFemale()) {\n              this.CxCaEnabled = await ART_PROP.cervicalCancerScreeningEnabled()\n              if (this.CxCaEnabled) {\n                const { start, end } = await ART_PROP.cervicalCancerScreeningAgeBounds()\n                this.CxCaMaxAge = end\n                this.CxCaStartAge = start\n                this.DueForCxCa = await this.consultation.clientDueForCxCa()\n                this.clientHadAHysterectomy =  await this.consultation.clientHasHadAHysterectomy();\n              }\n            }\n            return true\n          },\n          validation: (v: Option) => Validation.required(v),\n          condition: (f: any) => this.canScreenCxCa() && !this.isPregnant(f),\n          computedValue: (v: Option) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueCoded('Offer CxCa', v.value)\n          }),\n          options: () => this.yesNoOptions()\n        },\n        {\n          id: \"reason_for_no_cxca\",\n          helpText: \"Reason for NOT offering CxCa\",\n          type: FieldType.TT_SELECT,\n          validation: (v: Option) => Validation.required(v),\n          condition: (f: any) => f.offer_cxca.value === 'No',\n          computedValue: (v: Option) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueCoded(\"Reason for NOT offering CxCa\", v.value)\n          }),\n          options: () => this.getReasonsForNoCxcaOptions(),\n        },\n        ...generateDateFields({\n          id: 'previous_cxca_test_date',\n          helpText: 'Previous CxCa test',\n          required: true,\n          minDate: () => this.patient.getBirthdate(),\n          maxDate: () => ConsultationService.getSessionDate(),\n          condition: (f: any) => f.reason_for_no_cxca.value === 'Not due for screening',\n          computeValue: (date: string, isEstimate: boolean) => {\n            if (isEstimate) {\n              return {\n                tag: 'consultation',\n                obs: this.consultation.buildValueDateEstimated('CxCa test date', date)\n              }\n            } else {\n              return {\n                tag: 'consultation',\n                obs: this.consultation.buildValueDate('CxCa test date', date) \n              }\n            }\n          },\n          estimation: {\n            allowUnknown: true,\n            estimationFieldType: EstimationFieldType.MONTH_ESTIMATE_FIELD\n          }\n        }),\n        {\n          id: 'previous_side_effects',\n          helpText: 'Side effects / Contraindications history',\n          type: FieldType.TT_DATA_TABLE,\n          init: async () => {\n            this.sideEffectsHistory = await this.consultation.getDrugSideEffects()\n            return true\n          },\n          config: {\n            columns: () => [\n              [\n                table.thTxt('Date'),\n                table.thTxt('Condition'),\n                table.thTxt('Drug induced'),\n                table.thTxt('Drug')\n              ]\n            ],\n            rows: () => {\n              return Object.keys(this.sideEffectsHistory)\n              .map((k: string) =>\n                Object.values(this.sideEffectsHistory[k])\n                .filter((d: any) => !isEmpty(d.name))\n                .map((d: any) => [\n                  table.tdDate(k),\n                  table.td(d.name),\n                  table.td(d.drug_induced ? 'Yes' : 'No'),\n                  table.td(d.drug)\n              ]))\n              .reduce((accum, cur) => accum.concat(cur), [])\n            }\n          }\n        },\n        {\n          id: \"side_effects\",\n          helpText: \"Contraindications / Side effects (select either 'Yes' or 'No')\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          init: async () => {\n            this.lastDrugsReceived = await this.consultation.getPreviousDrugs();\n            return true\n          },\n          validation: (data: any) =>\n            this.validateSeries([\n              () => Validation.required(data),\n              () => Validation.anyEmpty(data),\n            ]),\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.map(async (d) => ({\n              ...(await this.consultation.buildValueCoded('Malawi ART side effects', d.label)),\n              child: (await this.consultation.buildValueCoded(d.label, d.value)) \n            }))\n          }),\n          beforeNext: (data: Option[]) => this.buildSideEffectObs(data, 'malawiSideEffectReasonObs'),\n          options: (_: any, checked: Array<Option>) => this.getContraindications(checked)\n        },\n        {\n          id: \"other_side_effects\",\n          helpText: \"Other Contraindications / Side effects (select either 'Yes' or 'No')\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          onValue: async (val: any) => {\n            await this.checkIfWeightLossIsControlled(val)\n            return true\n          },\n          condition: (formData: any) => this.showOtherSideEffects(formData),\n          onConditionFalse: () => this.otherSideEffectReasonObs = [],\n          validation: (data: any) =>\n            this.validateSeries([\n              () => Validation.required(data),\n              () => Validation.anyEmpty(data),\n            ]),\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation',\n            obs: v.filter(d => d.label != 'Other (Specify)')\n              .map(async (d) => ({\n              ...(await this.consultation.buildValueCoded('Other side effect', d.label)),\n              child: (await this.consultation.buildValueCoded(d.label, d.value))\n            }))\n          }),\n          beforeNext: (data: Option[]) => this.buildSideEffectObs(data, 'otherSideEffectReasonObs'),\n          options: (_: any, checked: Array<Option>) => this.getOtherContraindications(checked),\n        },\n        {\n          id: 'other_side_effect_specify',\n          helpText: \"Other Contraindications / Side effects (specify)\",\n          type: FieldType.TT_NOTE,\n          computedValue: async (v: Option) => ({\n            tag: 'consultation',\n            obs: {\n              ...(await this.consultation.buildValueCoded('Other side effect', 'Other (Specify)')),\n              child: (await this.consultation.buildValueText('Other (Specify)', v.value ))\n            }\n          }),\n          condition: (f: any) => this.inArray(\n            f.other_side_effects, d => d.label === \"Other (Specify)\" && d.value === 'Yes'\n          ),\n          validation: (v: Option) => Validation.required(v)\n        },\n        {\n          id: \"on_tb_treatment\",\n          helpText: \"On TB Treatment?\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (data: any) => {\n            this.TBSuspected = data.value === \"Yes\"\n            const obs = [\n              this.consultation.buildValueCoded(\"TB treatment\", data.value)\n            ]\n            if (this.TBSuspected) obs.push(this.consultation.buildValueCoded(\"TB Status\", \"Confirmed TB on treatment\"))\n            return ({ tag: 'consultation', obs })\n          },\n          options: () => this.yesNoOptions()\n        },\n        {\n          id: \"tb_side_effects\",\n          helpText: \"TB Associated symptoms\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          onValue: async (val: any) => {\n            await this.checkIfWeightLossIsControlled(val)\n            return true\n          },\n          validation: (data: any) =>\n            this.validateSeries([\n              () => Validation.required(data),\n              () => Validation.anyEmpty(data)\n          ]), \n          condition: (formData: any) => formData.on_tb_treatment.value.match(/no/i),\n          options: (_: any, checked: Array<Option>) => this.getTBSymptoms(checked),\n          computedValue: (vals: Option[]) => {\n            this.presentedTBSymptoms = this.inArray(vals, d => d.value === \"Yes\")\n            return {\n              tag: 'consultation',\n              obs: vals.map(async (data: Option) => ({\n                ...(await this.consultation.buildValueCoded(\"Routine TB Screening\", data.label)),\n                child: (await this.consultation.buildValueCoded(data.label, data.value))\n              }))\n            } \n          }\n        },\n        {\n          id: \"tb_status\",\n          helpText: \"TB Status\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          condition: (formData: any) => this.hasTBSymptoms(formData),\n          onConditionFalse: () => this.TBSuspected = false,\n          defaultValue: () => 'TB Suspected',\n          computedValue: (data: any) => {\n            this.TBSuspected = data.value === \"TB Suspected\"\n            return {\n              tag: 'consultation',\n              obs: this.consultation.buildValueCoded(\"TB Status\", data.value)\n            }\n          },\n          beforeNext: async (data: Option) => {\n            if (data.value === \"TB Suspected\") {\n              const action = await infoActionSheet(\n                \"Lab Order\",\n                \"The patient is a TB suspect. Do you want to take lab orders?\",\n                \"\",\n                [\n                  { name: \"Order now\", slot: \"start\", color: \"success\" },\n                  { name: \"NOT now\", slot: \"end\", color: \"danger\" },\n                ]\n              )\n              if (action === 'Order now') this.labOrderFieldContext.launchOrderSelection([\n                'TB Microscopic Exam', \n                'GeneXpert', \n                'Culture & Sensitivity',\n                'TB Tests'\n              ])\n            }\n            return true\n          },\n          options: () => this.mapStrToOptions([\n            \"TB NOT suspected\",\n            \"TB Suspected\",\n            \"Confirmed TB Not on treatment\",\n          ])\n        },\n        {\n          id: \"routine_tb_therapy\",\n          helpText: \"TB preventive therapy (TPT) history\",\n          type: FieldType.TT_SELECT,\n          init: async () => {\n            this.hasTbHistoryObs = await this.consultation.hasTreatmentHistoryObs()\n            return true\n          },\n          validation: (data: any) => Validation.required(data),\n          condition: () => !this.hasTbHistoryObs,\n          computedValue: (data: any) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueText(\"Previous TB treatment history\", data.value)\n          }),\n          options: (f: any) => {\n            let options: string[] = []\n            if(/no/i.test(f.on_tb_treatment.value)) {\n              options = [\n                \"Currently on IPT\",\n                \"Currently on 3HP (RFP + INH)\",\n                \"Currently on INH 300 / RFP 300 (3HP)\"\n              ]\n            }\n            options = options.concat([\n              \"Complete course of 3HP in the past (3 months RFP+INH)\",\n              \"Complete course of IPT in the past (min. 6 months of INH)\",\n              \"Aborted course of 3HP (RFP + INH) in the past\",\n              \"Aborted course of INH 300 / RFP 300 (3HP) in the past\",\n              \"Aborted course of IPT in the past\",\n              \"Never taken IPT or 3HP\"\n            ])\n            return this.mapStrToOptions(options)\n          }\n        },\n        ...generateDateFields({\n          id: 'date_started_tpt',\n          helpText: 'Started TPT Treatment',\n          required: true,\n          minDate: () => this.patient.getBirthdate(),\n          maxDate: () => ConsultationService.getSessionDate(),\n          condition: (f: any) => f.routine_tb_therapy.value.match(/currently/i),\n          computeValue: (date: string) => date,\n          estimation: {\n            allowUnknown: true,\n            estimationFieldType: EstimationFieldType.MONTH_ESTIMATE_FIELD\n          }\n        }),\n        {\n          id: \"tpt_drugs_received\",\n          helpText: \"TPT Drugs Received\",\n          required: true,\n          condition: (f: any) => f.routine_tb_therapy.value.match(/currently/i),\n          type: FieldType.TT_ADHERENCE_INPUT,\n          options: (f: any) => this.getTptDrugs(f),\n          computedValue: (drugs: Option[], f: any, c: any) => {\n            return {\n              tag: 'consultation',\n              obs:  drugs.map(async (drug: any) => this.consultation.buildObs(\n                'TPT Drugs Received', \n                {\n                  'value_drug': drug?.other?.drug_id || 0,\n                  'value_datetime': c?.date_started_tpt || null,\n                  'value_numeric': drug?.value || 0\n                }\n              ))\n            }\n          },\n          config: {\n            titles: {\n              label: 'Drug name',\n              value: 'Tablets received'\n            }\n          }\n        },\n        {\n          id: 'tpt_tranfer_from',\n          helpText: 'Facility client is transferring in from',\n          type: FieldType.TT_SELECT,\n          computedValue: ({label}: Option) => ({\n            tag:'consultation',\n            obs: this.consultation.buildValueText(\n              'Location TPT last received', label\n            )\n          }),\n          validation: (val: any) => Validation.required(val),\n          condition: (f: any) => f.routine_tb_therapy.value.match(/currently/i),\n          options: (_: any, filter='') => getFacilities(filter),\n          config: {\n            showKeyboard: true,\n            isFilterDataViaApi: true\n          }\n        },\n        {\n          id: \"allergic_to_sulphur\",\n          helpText: \"Allergic to Cotrimoxazole\",\n          type: FieldType.TT_SELECT,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (data: any) => {\n            this.allergicToSulphur = data.value.match(/unknown/i) \n              ? null \n              : data.value.match(/yes/i) \n              ? true \n              : false  \n            return {\n              tag: 'consultation',\n              obs: () => {\n                return this.consultation.buildValueCoded(\"Allergic to sulphur\", \n                  this.allergicToSulphur === null \n                  ? data.value \n                  : this.allergicToSulphur \n                  ? 'Yes' \n                  : 'No')\n              }\n            }\n          },\n          options: () => this.yesNoUnknownOptions()\n        },\n        ...this.getAdherenceFields(true),\n        {\n          id: \"refer_to_clinician\",\n          helpText: \"Refer to clinician\",\n          type: FieldType.TT_SELECT,\n          condition: () => UserService.isNurse(),\n          validation: (data: any) => Validation.required(data),\n          computedValue: (data: any) => ({\n            tag: 'consultation',\n            obs: this.consultation.buildValueCoded(\"Refer to clinician\", data.value)\n          }),\n          options: () => this.yesNoOptions(),\n        },\n        {\n          id: \"medication_to_prescribe\",\n          proxyID: \"prescription\",\n          helpText: \"Medication to prescribe during this visit\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          init: async () => {\n            if (!this.isNoneClientPatient) {\n              this.currentWeight = Number((await this.patient.getRecentWeight()))\n              this.autoSelect3HP = await Store.get('ART_AUTO_3HP_SELECTION')\n              this.tptStatus = await this.consultation.getTptTreatmentStatus()\n              this.completed3HP = this.tptStatus.tpt !== null && this.tptStatus.completed\n            }\n            return true\n          },\n          condition: (f: any) => !f.refer_to_clinician || `${f.refer_to_clinician.value}`.match(/no/i),\n          validation: (data: Option) => Validation.required(data),\n          computedValue: (v: Option[]) => ({\n            tag: 'consultation', \n            obs: this.buildMedicationOrders(v)\n          }),\n          onValueUpdate: (listData: Array<Option>, value: Option, formData: any) => {\n            const list =  this.disablePrescriptions(listData, value)\n            return this.on3HPValueUpdate(list, value, formData)\n          },\n          options: (formData: any, c: Array<Option>, cd: any, currentOptions: any) => {\n            return this.medicationOrderOptions(formData, currentOptions)\n          },\n          config: {\n            footerBtns: [\n              {\n                name: \"Update allergic to CPT\",\n                onClickComponentEvents: {\n                  refreshOptions: (btnEvent: FooterBtnEvent, options: Option[], formData: any): Option[] => {\n                    this.allergicToSulphur = btnEvent.btnOutput === 'Allergic'\n                    return this.medicationOrderOptions(formData, options)\n                  }\n                },\n                onClick: () => {\n                  return infoActionSheet(\n                    \"Allergic to Cotrimoxazole update\",\n                    `Is the patient allergic to cotrimoxazole.`,\n                    \"\",\n                    [\n                      { name: \"Allergic\", slot: \"start\", color: \"success\" },\n                      { name: \"NOT Allergic\", slot: \"end\" },\n                    ]\n                  )\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Consultation.vue?vue&type=template&id=336b620e&ts=true\"\nimport script from \"./Consultation.vue?vue&type=script&lang=ts\"\nexport * from \"./Consultation.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport MonthOptions from \"@/utils/HisFormHelpers/MonthOptions\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport HisDate, { STANDARD_DATE_FORMAT } from \"@/utils/Date\"\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\"\nimport { NUMBER_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport { NUMBERS_WITHOUT_NA_UNKNOWN } from '../../components/Keyboard/HisKbConfigurations';\nimport dayjs from \"dayjs\"\nimport { Service } from \"@/services/service\"\n\nexport enum EstimationFieldType {\n    AGE_ESTIMATE_FIELD = \"age-estimate-field\",\n    MONTH_ESTIMATE_FIELD = \"month-period-estimate-field\"\n}\n\nexport interface EstimationInterface {\n    estimationFieldType?: EstimationFieldType;\n    allowUnknown: boolean; \n    allowUnknownMonthDay?: boolean;\n}\n\nexport interface DateFieldInterface {\n    id: string;\n    helpText: string;\n    init?: (f: any, c: any) => boolean | Promise<boolean>;\n    summaryLabel?: string;\n    condition?: Function;\n    required?: boolean;\n    defaultValue?: Function;\n    beforeNext?: Function;\n    minDate?(formData: any, computeForm: any): string;\n    maxDate?(formData: any, computeForm: any): string | null;\n    unload?(data: any, state: string, formData: any,  computeForm: any): void; \n    computeValue: Function;\n    appearInSummary?: Function;\n    estimation: EstimationInterface;\n    config?: any;\n}\n\nexport function getYearField(id: string, name: string, showUnknown=true): Field {\n    const primaryFunctions = []\n    if (showUnknown) primaryFunctions.push('UNKNOWN')\n    return {\n        id,\n        helpText: `${name} Year`,\n        appearInSummary: () => false,\n        type: FieldType.TT_TEXT,\n        config: {\n            customKeyboard: [\n                NUMBER_PAD_LO,\n                [\n                    primaryFunctions,\n                    ['DELETE']\n                ]\n            ]\n        }\n    }\n}\n\nexport function getMonthField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Month`,\n        appearInSummary: () => false,\n        type: FieldType.TT_SELECT,\n        options: () => MonthOptions\n    }\n}\n\nexport function getDayField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Day`,\n        type: FieldType.TT_MONTHLY_DAYS,\n        appearInSummary: () => false\n    }\n}\n\nexport function getMonthDurationEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Estimated period`,\n        type: FieldType.TT_SELECT,\n        appearInSummary: () => false,\n        options: () => ([\n            { label: '6 months ago', value: 180 },\n            { label: '12 months ago', value: 365 },\n            { label: '18 months ago', value: 540 },\n            { label: '24 months ago', value: 730 },\n            { label: 'Over 2 years ago', value: 730 }\n        ])\n    }\n}\n\nexport function getAgeEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Age Estimate`,\n        type: FieldType.TT_NUMBER,\n        appearInSummary: () => false,\n        config: {\n            keypad: NUMBERS_WITHOUT_NA_UNKNOWN\n        }\n    }\n}\n\nfunction appendLeadingZero(s: string) {\n    return parseInt(s) < 10 ? `0${s}` : s\n}\n\nasync function getDefaultDate(form: any, field: DateFieldInterface, datePart: 'Year' | 'Month' | 'Day') {\n    if (field.defaultValue) {\n        const date = await field.defaultValue(form)\n        if (date) {\n            const [year, month, day] = date.split('-')\n            switch(datePart) {\n                case 'Year':\n                    return year || ''\n                case 'Month':\n                    return parseInt(month) || ''\n                case 'Day':\n                    return parseInt(day) || ''    \n            }\n        }\n    }\n    return ''\n}\n\nfunction d(date: string) {\n    return HisDate.toStandardHisDisplayFormat(date)\n}\n\nfunction validateMinMax(date: string, field: DateFieldInterface, form: any, computed: any) {\n    if (field.minDate) {\n        const min = field.minDate(form, computed)\n        if (new Date(date) < new Date(min)) {\n            return [`${d(date)} is less than minimum date of ${d(min)}`]\n        }\n    }\n    if (field.maxDate) {\n        const max = field.maxDate(form, computed)\n        if (max && new Date(date) > new Date(max)) {\n            return [`${d(date)} is greater than max date of  ${d(max)}`]\n        }\n    }\n}\n/**\n * This Jungle of code generates Fields of Year, Month and Day.\n * \n * if you're brave please refactor this. Just dont break anything Ok!\n * @param field \n * @param refDate \n * @returns \n */\nexport function generateDateFields(field: DateFieldInterface, refDate=''): Array<Field> {\n    let fullDate = ''\n    let yearValue = ''\n    let monthValue = ''\n    let dayValue = ''\n    let dateIsEstimated = false\n\n    const yearID = `year_${field.id}`\n    const monthID = `month_${field.id}`\n    const dayID = `day_${field.id}`\n    const ageEstimateID = `age_estimate_${field.id}`\n    const durationEstimateID = `duration_estimate_${field.id}`\n\n    const year = getYearField(yearID, field.helpText, field.estimation.allowUnknown)\n    const month = getMonthField(monthID, field.helpText)\n    const day = getDayField(dayID, field.helpText)\n\n    const ageEstimate = getAgeEstimateField(ageEstimateID, field.helpText)\n    const durationEstimate = getMonthDurationEstimateField(durationEstimateID, field.helpText)\n\n    const estimateMonthOrDay = typeof field.estimation.allowUnknownMonthDay === 'boolean'\n        && field.estimation.allowUnknownMonthDay\n\n    const datePartCondition = (f: any) => {\n        if (f[yearID] && f[yearID].value) {\n            if (['Unknown'].includes(f[yearID].value)) {\n                return false\n            }\n        }\n        return field.condition ? field.condition(f) : true\n    }\n    /**\n     * Generates fulldate based on current date part, it's value and previously recorded date parts.\n     * @param value\n     * @param part\n     * @returns\n     */\n    const buildHelpTextDate = (value: any, part: 'month' | 'year' | 'day') => {\n        const parts = [\n            { type: 'year', value: yearValue, default: 'YYYY' },\n            { type: 'month', value: monthValue, default: 'MM' },\n            { type: 'day', value: dayValue, default: 'DD' },\n        ]\n        return parts.reduce((partValues: any, dpart: any) => {\n            const wl = [null, undefined, 'Unknown', '']\n            if (part === dpart.type) {\n                if (wl.includes(value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(value)\n                }\n            } else {\n                if (wl.includes(dpart.value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(dpart.value)\n                }\n            }\n            return partValues\n        }, []).join('-')\n    }\n\n    if (typeof field.init === 'function') year.init = field.init\n    \n    // YEAR CONFIG\n    year.updateHelpTextOnValue = (data: any) => `${year.helpText} (${buildHelpTextDate(data?.label, 'year')})`\n\n    year.proxyID = field.id\n\n    year.unload = (v: Option) => yearValue = v.value.toString()\n \n    year.config = { ...year.config, ...field.config }\n\n    year.defaultValue = (f: any) => getDefaultDate(f, field, 'Year')\n\n    year.condition = (f: any) => field.condition \n        ? field.condition(f) \n        : true\n\n    year.validation = (v: Option, f: any, c: any) => {\n        if (field.required && StandardValidations.required(v)) {\n            return ['Year cannot be empty']\n        }\n        const year = v ? v.value : ''\n        if (!field.estimation.allowUnknown \n            && year.toString().match(/unknown/i)) {\n            return ['Value unknown is not permitted']\n        }\n    \n        if (year && !['Unknown'].includes(year as string)\n            && isNaN(year as number)\n            || year < 1900) {\n            return ['Invalid Year']\n        }\n\n        if (year && typeof field.minDate === 'function') {\n            const minYear = HisDate.getYear(field.minDate(f, c)) \n            if (parseInt(year as any) < minYear) {\n                return [`Year of ${year} is less than Minimum year of ${minYear}`]\n            }\n        }\n\n        if (year && typeof field.maxDate === 'function') {\n            const max = field.maxDate(f, c)\n            if (max && year > HisDate.getYear(max)) {\n                return [`Year of ${year} exceeds Maximum year of ${HisDate.getYear(max)}`]\n            }\n        }\n\n        return null\n    }\n    /**\n     * Year Proxy field will be our reference point of \n     * how data should appear on the summary\n     * @returns \n     */\n    year.summaryMapValue = () => ({\n        label: field.summaryLabel || field.helpText, \n        value: fullDate ? d(fullDate) : 'Unknown'\n    })\n\n    // To avoid the year from appearing on the summary, \n    // match the ref against the proxyID itself\n    year.appearInSummary = (_: any, ref: string) => ref === field.id\n\n    /**\n     * This helps to keep computeValue of the dateProxy up-to-date when year changes\n     * @param val \n     * @returns \n     */\n    year.computedValue = (val: Option) => {\n        if (fullDate) {\n            const [_, month, day] = fullDate.split('-')\n            fullDate = `${val.value}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n        if (val && val.value === 'Unknown') {\n            fullDate = ''\n            return field.computeValue('Unknown', false)\n        }\n    }\n\n    // MONTH CONFIG\n    month.updateHelpTextOnValue = (data: any) => `${month.helpText} (${buildHelpTextDate(data?.label, 'month')})`\n\n    month.proxyID = field.id\n\n    month.unload = (v: Option) => monthValue = appendLeadingZero(v.value.toString())\n\n    month.condition = (f: any) =>  datePartCondition(f)\n\n    month.validation = (v: Option) => StandardValidations.required(v)\n\n    month.defaultValue = (f: any) => getDefaultDate(f, field, 'Month')\n\n    // Add Unknown value to trigger default estimated Month\n    if (estimateMonthOrDay) {\n        month.options = () => [...MonthOptions, { label: 'Unknown', value: 'Unknown'}]\n    }\n\n    /**\n     *\n     * This helps to keep compute value up to date when month changes\n     * @param val\n     * @returns\n     */\n    month.computedValue = (val: Option, f: any) => {\n        // Estimate Month and Day when Month Value is Unknown\n        if (`${val.value}`.match(/unknown/i)) {\n            fullDate = `${f[yearID].value}-07-15`\n            return field.computeValue(fullDate, true)\n        }\n        // Default date behaviour\n        if (fullDate) {\n            const [year, _, day] = fullDate.split('-')\n            const month = appendLeadingZero(`${val.value}`)\n            fullDate = `${year}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n    }\n    // DAY CONFIG\n    day.proxyID = field.id\n\n    day.updateHelpTextOnValue = (data: any) => `${day.helpText} (${buildHelpTextDate(data?.label, 'day')})`\n\n    day.condition = (f: any) => !`${f[monthID].value}`.match(/unknown/i) && datePartCondition(f) \n\n    day.validation =  (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Day is required for date']\n        }\n        dateIsEstimated = `${v.value}`.match(/unknown/i) ? true : false\n        // Use 15 as default value if day is estimated\n        dayValue = dateIsEstimated ? '15' :  appendLeadingZero(`${v.value}`)\n        fullDate = `${yearValue}-${monthValue}-${dayValue}`\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    day.defaultValue = (f: any) => getDefaultDate(f, field, 'Day')\n\n    day.computedValue = () => {\n        return field.computeValue(fullDate, dateIsEstimated)\n    }\n\n    day.unload = (d: any, s: any, f: any, c: any) => {\n        if (field.unload) field.unload(d, s, f, c)\n    }\n\n    day.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    day.config = { \n        // Monthly days shown on the Day component depends on this configuration\n        // to show approprite days based on specific year and month calendar\n        year: (f: any) => f[yearID].value,\n        month: (f: any) => f[monthID].value\n    }\n    // If not configured to do estimates, dont show Unknown Button which appears by default\n    // on MonthlyDay component.\n    if (!estimateMonthOrDay) day.config.keyboardActions = []\n\n    const valueEstimateCondition = (f: any, estimateType: EstimationFieldType) => {\n        const conditions = [\n            f[yearID].value === 'Unknown',\n            field.condition ? field.condition(f) : true,\n            field.estimation.estimationFieldType === estimateType\n        ]\n        return conditions.every(Boolean)\n    }\n\n    // AGE ESTIMATE CONFIG\n    ageEstimate.proxyID = field.id\n\n    ageEstimate.validation = (v: Option, f: any, c: any) => {\n        if (v && v.value > 300) {\n            return ['Age estimate is too high and exceeding hard limit of 300']\n        }\n        if (isNaN(parseInt(v.value.toString()))) {\n            return ['Please enter a valid number']\n        }\n        const ageEstimateRegex = /^(12[0-7]|1[01][0-9]|[1-9]?[0-9])$/\n        if(!v.value.toString().match(ageEstimateRegex) ){\n            return ['Not a valid age estimate'] \n        }\n        const year = dayjs(Service.getSessionDate())\n            .subtract(v.value as number, 'years')\n            .year()\n        fullDate = `${year}-07-15`\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    ageEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.AGE_ESTIMATE_FIELD\n    ) \n\n    ageEstimate.computedValue = () => field.computeValue(fullDate, true)\n\n    ageEstimate.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    // DURATION ESTIMATE\n    durationEstimate.proxyID = field.id\n\n    durationEstimate.validation = (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Please select an estimate']\n        }\n        fullDate = dayjs(Service.getSessionDate())\n            .subtract(v.value as number, 'day')\n            .format(STANDARD_DATE_FORMAT)\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    durationEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.MONTH_ESTIMATE_FIELD\n    )\n\n    durationEstimate.computedValue = () => field.computeValue(fullDate, true)\n\n    durationEstimate.beforeNext = (_: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    return [\n        year,\n        month,\n        day,\n        ageEstimate,\n        durationEstimate\n    ]\n}\n","export default ([\n    {\n        label: 'Jan',\n        value: 1\n    },\n    {\n        label: 'Feb',\n        value: 2\n    },\n    {\n        label: 'Mar',\n        value: 3\n    },\n    {\n        label: 'Apr',\n        value: 4\n    },\n    {\n        label: 'May',\n        value: 5\n    },\n    {\n        label: 'Jun',\n        value: 6\n    },\n    {\n        label: 'Jul',\n        value: 7\n    },\n    {\n        label: 'Aug',\n        value: 8\n    },\n    {\n        label: 'Sep',\n        value: 9\n    },\n    {\n        label: 'Oct',\n        value: 10\n    },\n    {\n        label: 'Nov',\n        value: 11\n    },\n    {\n        label: 'Dec',\n        value: 12\n    }\n])","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./VLReminderModal.vue?vue&type=style&index=0&id=10a26cd2&scoped=true&lang=css\"","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport async function getVillagesByName(name='a', page=1): Promise<Option[]> {\n    const villages = await LocationService.getVillagesByName(name, page)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport function getLandmarks(): Option[] {\n    const landmarks = [\n        'Catholic Church',\n        'CCAP',\n        'Seventh Day',\n        'Mosque',\n        'Primary School',\n        'Borehole',\n        'Secondary School',\n        'College',\n        'Market',\n        'Football Ground',\n        'Other'\n    ]\n\n    return landmarks.map(landmark =>({\n        label: landmark,\n        value: landmark,\n        other: {\n            code: landmark\n        }\n    }))\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SideEffectsModal.vue?vue&type=style&index=0&id=546674a2&scoped=true&lang=css\""],"sourceRoot":""}