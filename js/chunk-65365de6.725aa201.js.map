{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/moh/MohTptInitiationsReport.vue?9a6c","webpack:///./src/apps/ART/views/reports/moh/MohTptInitiationsReport.vue","webpack:///./src/apps/ART/views/reports/moh/MohTptInitiationsReport.vue?0c3e","webpack:///./src/apps/ART/services/reports/patient_report_service.ts","webpack:///./src/apps/ART/services/reports/moh_cohort_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","reportPrefix","title","period","rows","fields","columns","config","showIndex","validationErrors","errors","showValidationStatus","showStatus","headerInfoList","headerList","onReportConfiguration","onPeriod","_","defineComponent","mixins","ReportMixin","components","ReportTemplate","IonPage","data","cohort","canValidate","mohCohort","table","thTxt","thNum","totalIpt","total3hp","watch","doIt","this","validateReport","created","getDateDurationFields","methods","report","RegimenReportService","MohCohortReportService","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","getTptNewInitiations","setRows","drilldown","patients","context","asyncRows","sortByArvNumber","map","p","td","arv_number","tdDate","birthdate","dispensation_date","length","tdLink","drilldownAsyncRows","gender","fullGender","formatGender","ageIndex","AGE_GROUPS","group","location","isEmpty","uniq","push","validations","param","check","i","error","s","validateIndicators","__exports__","PatientReportService","ArtReportService","constructor","super","getBookedAppointments","date","getJson","programID","getViralLoadResults","range","getReport","getOtherOutcome","outcome","getPatientVisitTypes","getClientsDueForVl","getClientRentention","getExternalConsultationClients","getMissedAppointments","getPregnantWomen","getArchivingCandidates","CohortVar","regenerate","cohortUrl","setRegenerate","getCohortDrillDown","resourceId","id","requestCohort","params","ajxGet","qaurterRequestParams","name","quarter","datePeriodRequestParams","startDate","endDate","getCachedCohortValues","cache","sessionStorage","getItem","MOH_CACHE","conf","JSON","parse","cacheCohort","values","setItem","stringify","callback","cachedValues","Object","keys","reduce","key","indicator","find","validation","indicatorValue","contents","condition","parseInt"],"mappings":"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","file":"js/chunk-65365de6.725aa201.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        reportPrefix: \"MoH\",\n        title: _ctx.title,\n        period: _ctx.period,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        config: {\n                showIndex: true\n            },\n        validationErrors: _ctx.errors,\n        showValidationStatus: _ctx.showStatus,\n        headerInfoList: _ctx.headerList,\n        onReportConfiguration: _ctx.onPeriod\n      }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"validationErrors\", \"showValidationStatus\", \"headerInfoList\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { AGE_GROUPS } from \"@/apps/ART/services/reports/patient_report_service\"\nimport { RegimenReportService } from \"@/apps/ART/services/reports/regimen_report_service\"\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport { isEmpty, uniq } from 'lodash'\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { IonPage } from \"@ionic/vue\"\nimport { MohCohortReportService } from \"@/apps/ART/services/reports/moh_cohort_service\"\nimport { Option } from '@/components/Forms/FieldInterface'\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate, IonPage },\n    data: () => ({\n        title: 'TPT new initiations report',\n        rows: [] as Array<any>,\n        cohort: {} as any,\n        canValidate: false as boolean,\n        mohCohort: {} as any,\n        headerList: [] as Array<Option>,\n        errors: [] as string[],\n        showStatus: false as boolean,\n        columns: [\n            [\n                table.thTxt('District'),\n                table.thTxt('Age group'),\n                table.thTxt('Gender'),\n                table.thNum('3HP (Started New on ART)'),\n                table.thNum('6H (Started New on ART)'),\n                table.thNum('3HP (Started Previously on ART)'),\n                table.thNum('6H (Started Previously on ART)')\n            ]\n        ],\n        totalIpt: [] as number[],\n        total3hp: [] as number[]\n    }),\n    watch: {\n        async canValidate(doIt: boolean) {\n            if (doIt) await this.validateReport()\n        }\n    },\n    created() {\n        this.fields = this.getDateDurationFields()\n    },\n    methods: {\n        async onPeriod(_: any, config: any) {\n            this.canValidate = false\n            this.rows = []\n            this.errors = []\n            this.showStatus = false\n            this.totalIpt = []\n            this.total3hp = []\n            this.report = new RegimenReportService()\n            this.mohCohort = new MohCohortReportService()\n            this.mohCohort.setStartDate(config.start_date)\n            this.mohCohort.setEndDate(config.end_date)\n            this.report.setStartDate(config.start_date)\n            this.report.setEndDate(config.end_date)\n            this.period = this.report.getDateIntervalPeriod()\n            this.cohort = await this.report.getTptNewInitiations()\n            this.setRows('F')\n            this.setRows('M')\n            this.canValidate = true\n            this.showStatus = true\n        },\n        drilldown(patients: Array<any>, context: string) {\n            const columns = [\n                [\n                    table.thTxt('ARV #'),\n                    table.thTxt('DOB'),\n                    table.thTxt('Dispensed date')\n                ]\n            ]\n            const asyncRows = () => this.sortByArvNumber(patients).map(\n                (p: any) => ([\n                   table.td(p.arv_number),\n                   table.tdDate(p.birthdate),\n                   table.tdDate(p.dispensation_date)\n               ])\n            )\n            if (patients.length <= 0) return table.td(0)\n\n            return table.tdLink(patients.length, () => this.drilldownAsyncRows(context, columns, asyncRows))\n        },\n        setRows(gender: 'M' | 'F') {\n            const fullGender = this.formatGender(gender)\n            for(const ageIndex in AGE_GROUPS) {\n                const group = AGE_GROUPS[ageIndex]\n                const location = this.cohort['Location'];\n                if (!isEmpty(this.cohort) && group in this.cohort && ageIndex) {\n                    const data = this.cohort[group]\n                    this.total3hp = uniq([...this.total3hp, ...data['3HP_new'][gender], ...data['3HP_prev'][gender]])\n                    this.totalIpt = uniq([...this.totalIpt, ...data['6H_new'][gender], ...data['6H_prev'][gender]])\n                    this.rows.push([\n                        table.td(location),\n                        table.td(group),\n                        table.td(fullGender),\n                        this.drilldown(data['3HP_new'][gender], `${group} ${fullGender}s New on 3HP`),\n                        this.drilldown(data['6H_new'][gender], `${group} ${fullGender}s New on 6H`),\n                        this.drilldown(data['3HP_prev'][gender], `${group} ${fullGender}s Previously on 3HP`),\n                        this.drilldown(data['6H_prev'][gender], `${group} ${fullGender}s Previously on 6H`)\n                    ])\n                } else {\n                    this.rows.push([\n                        table.td(group),\n                        table.td(fullGender),\n                        table.td(0),\n                        table.td(0)\n                    ])\n                }\n            }\n        },\n        validateReport() {\n            const validations = {\n                'newly_initiated_on_3hp' : {\n                    param: this.total3hp.length,\n                    check: (i: number, p: number) => i != p,\n                    error: (i: number, p: number) => `\n                        Total newly initiated on <b>3HP(${p})</b> is not matching newly \n                        initiated on 3HP in Cohort report <b>(${i})</b>.\n                    `\n                },\n                'newly_initiated_on_ipt': {\n                    param: this.totalIpt.length,\n                    check: (i: number, p: number) => i != p,\n                    error: (i: number, p: number) => `\n                        Total newly initiated on IPT <b>(${p})</b> is not matching \n                        newly initiated on IPT in Cohort report <b>(${i})</b>.\n                    `\n                }\n            }\n            const s = this.mohCohort.validateIndicators(validations, (errors: string[]) => this.errors = errors)\n            if (s === -1) this.errors = ['Report not validated. Run the MoH cohort report for similar reporting period and then run this report']\n        }\n    }\n})\n","import { render } from \"./MohTptInitiationsReport.vue?vue&type=template&id=2e4cd3bc&ts=true\"\nimport script from \"./MohTptInitiationsReport.vue?vue&type=script&lang=ts\"\nexport * from \"./MohTptInitiationsReport.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ArtReportService } from \"./art_report_service\";\n\nexport const AGE_GROUPS = [\n    '<1 year',\n    '1-4 years', \n    '5-9 years', \n    '10-14 years', \n    '15-19 years', \n    '20-24 years', \n    '25-29 years', \n    '30-34 years', \n    '35-39 years', \n    '40-44 years', \n    '45-49 years', \n    '50-54 years',\n    '55-59 years',\n    '60-64 years',\n    '65-69 years',\n    '70-74 years',\n    '75-79 years',\n    '80-84 years',\n    '85-89 years',\n    '90 plus years'\n]\n\nexport class PatientReportService extends ArtReportService {\n    constructor() {\n        super()\n    }\n    \n    getBookedAppointments(date: string) {\n        return ArtReportService.getJson(`programs/${this.programID}/scheduled_appointments`, { date })\n    }\n\n    getViralLoadResults(range: string) {\n        return this.getReport(`/programs/${this.programID}/reports/high_vl_patients`, { range })\n    }\n\n    getOtherOutcome(outcome: string) {\n        return this.getReport('patient_outcome_list', { outcome })\n    }\n\n    getPatientVisitTypes() {\n        return this.getReport('patient_visit_types')\n    }\n\n    getClientsDueForVl() {\n        return this.getReport('clients_due_vl')\n    }\n\n    getClientRentention() {\n        return this.getReport(`/programs/${this.programID}/reports/retention`)\n    }\n\n    getExternalConsultationClients() {\n        return this.getReport(`${this.programID}/external_consultation_clients`)\n    }\n\n    getMissedAppointments() {\n        return this.getReport('missed_appointments')\n    }\n\n    getPregnantWomen() {\n        return this.getReport(`/programs/${this.programID}/reports/pregnant_patients`)\n    }\n\n    getArchivingCandidates() {\n        return ArtReportService.getJson(`programs/${this.programID}/reports/archiving_candidates`, { \n            'start_date': this.date\n        })\n    }\n}\n","import { find } from \"lodash\";\nimport { ArtReportService } from \"./art_report_service\";\n\nexport enum CohortVar {\n    MOH_CACHE = 'mohCache'\n}\n\nexport interface CohortValidationInterface {\n    param: number | string;\n    error: (indicator: number, param: number) => string;\n    check: (indicator: number, param: number) => boolean;\n}\n\nexport class MohCohortReportService extends ArtReportService {\n    regenerate: boolean;\n    constructor() {\n        super()\n        this.regenerate = false\n    }\n\n    private cohortUrl() {\n        return `programs/${this.programID}/reports/cohort`\n    }\n\n    setRegenerate(regenerate: boolean) {\n        this.regenerate = regenerate\n    }\n\n    getCohortDrillDown(resourceId: string) {\n        return ArtReportService.getJson('cohort_report_drill_down', {\n            id: resourceId,\n            date: this.date,\n            'program_id': this.programID\n        })\n    }\n\n    requestCohort(params: any) {\n        return ArtReportService.ajxGet(\n            this.cohortUrl(), params\n        )\n    }\n\n    qaurterRequestParams() {\n        return { \n            name: this.quarter, \n            regenerate: this.regenerate \n        }\n    }\n\n    datePeriodRequestParams() {\n        return {\n            name: `Cohort-${this.startDate}-${this.endDate}`,\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            regenerate: this.regenerate\n        }\n    }\n\n    getCachedCohortValues() {\n        const cache = sessionStorage.getItem(CohortVar.MOH_CACHE)\n        if (cache) {\n            const conf = JSON.parse(cache)\n            if (conf.start_date === this.startDate \n                && conf.end_date === this.endDate\n                || conf.quarter === this.quarter) {\n                return conf.data\n            }\n        }\n    }\n\n    cacheCohort(values: any) {\n        sessionStorage.setItem(\n            CohortVar.MOH_CACHE, \n            JSON.stringify({\n                'start_date': this.startDate,\n                'end_date': this.endDate,\n                'quarter': this.quarter,\n                'data': values\n        }))\n    }\n\n    validateIndicators(validations: Record<string, CohortValidationInterface>, callback: Function) {\n        const cachedValues = this.getCachedCohortValues()\n        if (cachedValues) {\n            const errors = Object.keys(validations)\n                .reduce((errors: Array<any>, key: string) => {\n                    const indicator: any = find(cachedValues, { name: key })\n                    const validation: any = validations[key]\n                    const indicatorValue: any = indicator ? indicator.contents : null\n                    const param = validation.param as number\n                    const condition = validation.check(parseInt(indicatorValue), param)\n                    if (condition) errors.push(\n                        validation.error(indicatorValue, param)\n                    )\n                    return errors\n                }, [])\n            return callback(errors)\n        }\n        return -1\n    }\n}\n"],"sourceRoot":""}