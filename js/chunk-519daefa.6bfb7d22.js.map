{"version":3,"sources":["webpack:///./src/apps/ART/services/lab_order_service.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/components/DataViews/LabOrderModal.vue?3251","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/DataViews/LabOrderModal.vue?0743","webpack:///./src/components/DataViews/LabOrderModal.vue","webpack:///./src/components/DataViews/LabOrderModal.vue?f722","webpack:///./src/apps/AETC/services/patient_radiology_service.ts","webpack:///./src/apps/AETC/views/encounters/Complaints.vue?5ba4","webpack:///./src/apps/AETC/services/patient_complaints_service.ts","webpack:///./src/apps/AETC/views/encounters/modals/radiology.vue?0f43","webpack:///./src/apps/AETC/views/encounters/modals/radiology.vue","webpack:///./src/apps/AETC/views/encounters/modals/radiology.vue?0781","webpack:///./src/apps/AETC/views/encounters/Complaints.vue","webpack:///./src/apps/AETC/views/encounters/Complaints.vue?78ec","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/apps/AETC/views/encounters/Complaints.vue?a533","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object"],"names":["LabOrderService","AppEncounterService","constructor","patientID","providerID","super","defineComponent","components","HisStandardForm","data","patient","fields","providers","facts","sessionDate","apiDate","encounterName","isBdeMode","birthDate","outcome","outcomeStartDate","ready","watch","handler","route","params","patient_id","this","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","FlowState","SET_PROVIDER","selection","username","split","provider","find","person_id","CONTINUE","CHANGE_SESSION_DATE","$router","push","EXIT","CHANGE_PATIENT_OUTCOME","GO_TO_PATIENT_DASHBOARD","gotoPatientDashboard","findings","matchToGuidelines","ENCOUNTER_GUIDELINES","index","_finding$actions","_finding$actions3","finding","actions","alert","_finding$actions2","status","_finding$actions4","flowState","value","program","startDate","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","isBDE","getBirthdate","$route","name","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","_p$person","isEmpty","person","names","_p$person2","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","d","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","conditions","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","dformat","HisDate","toStandardHisDisplayFormat","priority","async","action","infoActionSheet","slot","color","modal","optionsActionSheet","role","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","key","_hoisted_3","_hoisted_4","_createElementVNode","_hoisted_5","_hoisted_6","style","background","height","_hoisted_7","_hoisted_8","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_checkbox","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_text","_component_BarcodeInput","_component_ion_radio","_component_ion_radio_group","_component_ion_button","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_footer","_createElementBlock","_Fragment","_createVNode","_withCtx","_createTextVNode","_","size","overflowY","_renderList","testTypes","disabled","activeIndex","isOrderComplete","detail","_toDisplayString","modelValue","isChecked","$event","onIonChange","onSelectTest","selectedOrders","canScanDBS","test","accessionNumber","onOnScan","barcode","onScanEIDbarcode","_createCommentVNode","extendedLabsEnabled","specimens","onClick","addSpecimen","testReasons","finalOrders","specimen","reason","removeOrder","currentIndex","postActivities","closeModal","activities","testFilters","appActivities","getActivities","ART_GLOBAL_PROP","extendedLabEnabled","verifyingBarcode","loadingController","create","message","present","toastWarning","getTop","v","dismiss","OrderService","accessionNumExists","testName","event","$nextTick","checked","getSpecimens","tests","getTestTypes","vlIndex","findIndex","viralLoad","splice","sorted","t","concept_id","orders","encounter","createEncounter","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","invalidate","canPrintOrders","alertConfirmation","confirmBtnLabel","cancelBtnLabel","printOrders","modalController","PrintoutService","forEach","url","element","order_id","printLbl","reasons","match","r","mounted","content","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonLabel","IonList","IonItem","BarcodeInput","IonCheckbox","IonRadioGroup","IonRow","PatientRadiologyService","radiologyType","ConceptService","getConceptSet","patientId","Service","getJson","getRadiologyObs","getID","thirdpartyapps","getThirdpartyApps","app","savedObsData","order","children","accession_number","value_text","obs_id","getFullName","getAge","getGender","getNationalID","getEncounterID","getDate","getUserName","getUserID","getUserRoles","postJson","lastAccessionNumber","getAccesionNumber","observations","getConceptName","child","value_coded","printService","patientNationalId","patientName","urls","fullXrayOrder","obs_datetime","batchPrintLbls","_component_his_standard_form","_component_ion_page","onSubmit","PatientComplaintsService","complaintType","getObs","getConceptID","date","_component_his_radiology_picker","onOnValue","onValue","emitedSelectedOptions","IonFooter","HisRadiologyPicker","mixins","EncounterMixinVue","radiologyService","isPacsEnabled","isReady","AETC_GLOBAL_PROP","isPACsEnabled","selected","buildValueCoded","parent","buildValueCodedFromConceptId","getSelected","obsObj","saveObservationList","submitToPacs","log","IonPage","complaintsService","todaysDate","ObservationService","presentingComplaints","radiologyBtnName","hasTriageComplaints","getTriagePresentingComplaints","getFields","complaints","component","LabOrderModal","backdropDismiss","cssClass","onDidDismiss","radiology","fetchLatestTriageEncounter","encounters","EncounterService","getEncounters","todayPresentingComplaints","el","toStandardHisFormat","encounter_datetime","buildResults","columns","group","rows","item","obs_group_id","id","helpText","FieldType","TT_TABLE_VIEWER","config","hiddenFooterBtns","TT_COMPLAINTS_PICKER","validation","Validation","computedValue","showRadiologyOdersBtn","disableBackBtn","footerBtns","visible","launchOrderSelection","visibleOnStateChange","launchRadiologyOrderSelection","TT_SUMMARY","buildSummaryResults","OPDComplaint","triageComplaint","COMPONENT_REFS","TT_ASYNC_MULTI_SELECT","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_SELECT","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_TEXT","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_CLINIC_HOLIDAY_PICKER","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","code","ids","slice","keys","module","exports"],"mappings":"kHAAA,kDACM,MAAOA,UAAwBC,OACnCC,YAAYC,EAAmBC,GAC7BC,MAAMF,EAAW,GAAIC,M,sKCaVE,+BAAgB,CAC3BC,WAAY,CAAEC,wBACdC,KAAMA,KAAA,CACFC,QAAS,GACTC,OAAQ,GACRR,UAAW,GACXC,YAAa,EACbQ,UAAW,GACXC,MAAO,CACHC,YAAa,GACbC,QAAS,GACTC,cAAe,MACfJ,UAAW,GACXK,WAAW,EACXC,UAAW,GACXC,QAAS,GACTC,iBAAkB,IAEtBC,OAAO,IAEXC,MAAO,CACJ,OAAU,CACLC,QAAQC,GACDA,EAAMC,OAAOC,YAAcC,KAAKxB,WAAaqB,EAAMC,OAAOC,aACzDC,KAAKxB,UAAYyB,SAASJ,EAAMC,OAAOC,YACvCG,OAAMC,IAAI,iBAAkB,CAAE3B,UAAWwB,KAAKxB,YACzC4B,KAAKC,IACFL,KAAKjB,QAAUsB,EACfL,KAAKM,oBAAoBF,KAAK,KAC1BJ,KAAKO,2BAA2BH,KAAK,KACjCJ,KAAKN,OAAQ,UAMrCc,WAAW,EACXC,MAAM,IAGdC,SAAU,CACNC,oBACI,OAAOX,KAAKY,wBAGpBC,QAAS,CACLC,aAAaC,EAAkBjB,EAAO,MAClC,MAAMkB,EAAc,GAmBpB,GAlBAA,EAAOC,OAAUC,cAAiBC,IAC9B,MAAQC,GAAaD,EAAUE,MAAM,KAC/BC,EAAWC,kBAAKvB,KAAKf,UAAW,CAAEmC,aAExC,OADIE,IAAUtB,KAAKvB,WAAa6C,EAASE,WAClCP,OAAUQ,UAErBT,EAAOC,OAAUS,qBAAuB,KACpC1B,KAAK2B,QAAQC,KAAK,kDAAkD5B,KAAKxB,WAClEyC,OAAUY,MAErBb,EAAOC,OAAUa,wBAA0B,KACvC9B,KAAK2B,QAAQC,KAAK,qBAAqB5B,KAAKxB,WACrCyC,OAAUY,MAErBb,EAAOC,OAAUc,yBAA2B,KACxC/B,KAAKgC,uBACEf,OAAUY,MAEjBd,KAASC,EACT,OAAOA,EAAOD,GAAOjB,IAG7B,iCACI,MAAMmC,EAAWC,eAAkBlC,KAAKd,MAAOiD,QAC/C,IAAI,MAAMC,KAASH,EAAU,KAAAI,EAAAC,EACzB,MAAMC,EAAUN,EAASG,GACzB,GAAW,OAAPG,QAAO,IAAPA,GAAgB,QAATF,EAAPE,EAASC,eAAO,IAAAH,GAAhBA,EAAkBI,MAAO,KAAAC,EACzB,MAAMC,EAAS3C,KAAKc,mBAA2B,OAAPyB,QAAO,IAAPA,GAAgB,QAATG,EAAPH,EAASC,eAAO,IAAAE,OAAA,EAAhBA,EAAkBD,MAAMzC,KAAKd,SACrE,GAAIyD,IAAW1B,OAAUY,KAAM,OAEnC,GAAW,OAAPU,QAAO,IAAPA,GAAgB,QAATD,EAAPC,EAASC,eAAO,IAAAF,GAAhBA,EAAkBnB,UAAW,KAAAyB,EAC7B,MAAMzB,QAAyB,OAAPoB,QAAO,IAAPA,GAAgB,QAATK,EAAPL,EAASC,eAAO,IAAAI,OAAA,EAAhBA,EAAkBzB,UAAUnB,KAAKd,QACzDc,KAAKc,aAAaK,EAAU0B,UAAW1B,EAAU2B,UAI7D,0BACI,IACI,MAAMC,QAAgB7C,OAAMC,IAAI,kBAAmB,CAAE3B,UAAWwB,KAAKxB,YACrEwB,KAAKd,MAAMM,QAAUuD,EAAQvD,QAC7BQ,KAAKd,MAAMO,iBAAmBsD,EAAQC,UACxC,MAAOC,GACLC,QAAQC,MAAMF,GACdG,eAAY,GAAGH,GAEnBjD,KAAKd,MAAMC,YAAckE,OAAeC,iBACxCtD,KAAKd,MAAME,QAAUiE,OAAeE,mBACpCvD,KAAKd,MAAMI,UAAY+D,OAAeG,QACtCxD,KAAKd,MAAMK,UAAYS,KAAKjB,QAAQ0E,eACpCzD,KAAKd,MAAMG,cAAgBW,KAAK0D,OAAOC,KACjC3D,KAAK0D,OAAOC,KAAKC,WAAWC,cAC5B,MACFR,OAAeG,UACfxD,KAAKf,gBAAkBiB,OAAMC,IAAI,aACjCH,KAAKd,MAAMD,UAAYe,KAAKf,UACvB6E,KAAK,CAACC,EAAQC,KACX,MAAMC,EAAYF,EAAE3C,SAASyC,cACvBK,EAAYF,EAAE5C,SAASyC,cAC7B,OAAOI,EAAYC,GAAa,EAAID,EAAYC,EAAa,EAAI,IAEpEC,IAAKC,IAAU,IAAAC,EACZ,IAAIV,EAAO,GAAGS,EAAEhD,SAChB,IAAKkD,qBAAS,OAADF,QAAC,IAADA,GAAS,QAARC,EAADD,EAAGG,cAAM,IAAAF,OAAA,EAATA,EAAWG,OAAQ,KAAAC,EAC5B,MAAQC,IAAuB,QAARD,EAAAL,EAAEG,cAAM,IAAAE,OAAA,EAARA,EAAUD,QAAS,GAC1Cb,GAAQ,KAAKe,EAAWC,cAAcD,EAAWE,eAErD,OAAOjB,MAIvBkB,SAASC,EAAeC,EAAM,IAC1B,MAAO,CACHD,QACAhC,MAAOgC,EACPC,UAGRC,gBAAgBC,GACZ,OAAOA,EAAMd,IAAIe,IAAK,CAAEJ,MAAOI,EAAGpC,MAAOoC,MAE7CtE,sBACI,MAAO,sBAAsBZ,KAAKxB,WAEtCwD,uBACI,OAAOhC,KAAK2B,QAAQC,KAAK,CAACuD,KAAMnF,KAAKY,yBAEzCwE,WACI,OAAOA,eAASpF,KAAKxB,UAAWwB,KAAK2B,UAEzC0D,eACI,MAAO,CACH,CAAEP,MAAO,MAAOhC,MAAO,OACvB,CAAEgC,MAAO,KAAMhC,MAAO,QAG9BwC,cAAcR,EAAeC,EAAW,IACpC,MAAO,CACHD,QACAhC,MAAO,GACPiC,MAAO,IACAA,EACHQ,OAAQvF,KAAKqF,kBAIzBG,WAAWC,GACP,OAAOA,EAAQtB,IAAKuB,IACT,CAAEZ,MAAOY,EAAQ5C,MAAO4C,MAGvCC,sBACI,MAAO,CACH,CAAEb,MAAO,MAAOhC,MAAO,OACvB,CAAEgC,MAAO,KAAMhC,MAAO,MACtB,CAAEgC,MAAO,UAAWhC,MAAO,aAGnC8C,WAAWC,EAAUC,EAAI,IACrB,MAAMP,EAAcQ,OAAOR,OAAOM,GAC7BG,OAAQC,GAAWA,IAAMA,EAAEH,MAAQA,GAAe,KAARA,IAC1CI,OAAO,CAACC,EAAYC,KACjB,MAAMtH,EAAOsH,EAAIP,IAAMO,EAAIP,IAAMO,EAQjC,OAPIC,MAAMC,QAAQxH,GACdqH,EAAQA,EAAMI,OAAOzH,GACE,oBAATA,EACdqH,EAAMvE,KAAK9C,KAEXqH,EAAMvE,KAAK9C,GAERqH,GACJ,IACX,OAAOK,QAAQC,IAAIlB,IAEvBmB,QAAQC,EAAiBC,GACrB,IACI,OAAOD,EAAIX,OAAQd,GAAW0B,EAAW1B,IAAI2B,OAAS,EACxD,MAAO5D,GACL,OAAO,IAGf6D,eAAeC,GACX,IACI,IAAI,MAAM7B,KAAK6B,EAAY,CACvB,MAAMC,EAAYD,EAAW7B,KAE7B,GAAI8B,EAAW,OAAOA,GAE5B,MAAO/D,GACL,MAAO,CAACA,QCjNxB,MAAMgE,EAAc,EAEL,U,kCCLf,W,kDCEM,SAAUC,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQC,yBAAcC,yBAAaC,qCAAyBR,EAAKS,UAAW,CAC1E5I,OAAQmI,EAAKnI,OACb6I,YAAaV,EAAKU,YAClBC,YAAaX,EAAKW,YAClBC,sBAAuBZ,EAAKY,sBAC5BC,WAAYb,EAAKc,SACjBA,SAAUd,EAAKe,eACfC,UAAWhB,EAAKiB,SACf,KAAM,GAAI,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN5FzJ,+BAAgB,CAC3BgF,KAAM,kBACN/E,WAAY,CAAEyJ,wBACdC,MAAO,CACH,WACA,WAEJxJ,KAAMA,KAAA,CACF8I,SAAU,sBAEdW,MAAO,CACHL,eAAgB,CACZM,KAAMC,UAEVZ,YAAa,CACTW,KAAME,QACNC,SAAS,GAEbb,YAAa,CACTU,KAAMI,QAEV5J,OAAQ,CACJwJ,KAAMzC,OACN8C,UAAU,GAEdd,sBAAuB,CACnBS,KAAMI,OACNC,UAAU,IAGlBhI,QAAS,CACLoH,SAASa,EAAeC,GACpB/I,KAAKgJ,MAAM,WAAYF,EAAUC,IAErCX,QAAQlD,GACJlF,KAAKgJ,MAAM,UAAW9D,O,qBCnClC,MAAM+B,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD,U,yDCPf,wEAIYjG,EAJZ,yBAIA,SAAYA,GACRA,EAAA,+BACAA,EAAA,6CACAA,EAAA,qDACAA,EAAA,2CACAA,EAAA,uBACAA,EAAA,gBANJ,CAAYA,MAAS,KAQrB,MAAMgI,EAAWhD,GAAciD,OAAQC,2BAA2BlD,GAErD9D,EAA2D,CACpE,qEAAsE,CAClEiH,SAAU,EACV5G,QAAS,CACLC,MAAO4G,OAAS5J,uBACZ,MAAM6J,QAAeC,eACjB,6BACA,mBAAmBN,EAAQxJ,GAC3B,qEACA,CACI,CAAEkE,KAAM,SAAU6F,KAAM,MAAOC,MAAO,WACtC,CAAE9F,KAAM,iBAAkB6F,KAAM,MAAOC,MAAO,WAC9C,CAAE9F,KAAM,kBAAmB6F,KAAM,MAAOC,MAAO,YAGvD,MAAkB,WAAXH,EACDrI,EAAUc,wBACC,mBAAXuH,EACArI,EAAUa,uBACVb,EAAUQ,WAGxBsF,WAAY,CACRvH,QAAQA,GACJ,MAAmB,iBAAZA,GAEXC,iBAAiBuD,GAAmB,YAAE7D,IAClC,OAAOA,GAAe6D,KAIlC,+DAAgE,CAC5DoG,SAAU,EACV5G,QAAS,CACLC,MAAO4G,OAAS9J,YAAWJ,kBACvB,MAAMmK,QAAeC,eACjB,6BAA8B,GAC9B,gBAAgBN,EAAQ9J,iCAA2C8J,EAAQ1J,KAC3E,CACI,CAAEoE,KAAM,SAAU6F,KAAM,MAAOC,MAAO,UACtC,CAAE9F,KAAM,sBAAuB6F,KAAM,MAAOC,MAAO,aAG3D,MAAkB,wBAAXH,EACDrI,EAAUS,oBACVT,EAAUc,0BAGxBgF,WAAY,CACRxH,UAAUA,GAAmB,YAAEJ,IAC3B,OAAOA,EAAcI,KAIjC,oDAAqD,CACjD6J,SAAU,EACV5G,QAAS,CACLrB,UAAWkI,OAASpK,YAAWI,gBAAeF,cAAaC,cACvD,MAAMsK,QAAcC,eAChB,gCAAgCtK,EAChC,QAAQ4J,EAAQ9J,iBAA2B8J,EAAQ7J,KACnDH,EACA,CACI,CAAE0E,KAAM,SAAU8F,MAAO,SAAUD,KAAM,QAASI,KAAM,WACxD,CAAEjG,KAAM,UAAW6F,KAAM,MAAOI,KAAM,YAG9C,MAAwB,WAAjBF,EAAMJ,OACP,CAAExG,OAAQ,EAAGD,UAAW5B,EAAUc,yBAClC,CAAEe,MAAO4G,EAAMvI,UAAW0B,UAAW5B,EAAUC,gBAG7D6F,WAAY,CACRzH,UAAUkE,GACN,OAAOA,O,8ECvDvB,SAASqG,EAAY3K,EAAuB6H,GACxC,MAAMhG,EAAQ,GACR+I,EAAU,EAAE,EAAG,GAAI,UAAMC,GAE/B,IAAI,MAAMC,KAAQjD,EAAY,CAC1B,KAAMiD,KAAQ9K,GACV,SAEJ,MAAM4D,EAAQ5D,EAAM8K,GAChBF,EAAQG,SAASnH,GACjB/B,EAAMa,MAAK,GAIfb,EAAMa,KAAKmF,EAAWiD,GAAMlH,EAAO5D,IAEvC,OAAO6B,EAAMmJ,MAAMxB,SAQvB,SAASyB,EAAelI,GACpB,OAAOA,EAAS6B,KAAK,CAACC,EAAGC,IAAOD,EAAEqF,UAAYpF,EAAEoF,UAAarF,EAAEqF,SAAWpF,EAAEoF,UAAY,EAAI,GAGhG,SAASgB,EAAanI,GAClB,OAAOA,EAAS6B,KAAK,CAACC,EAAGC,IAAOD,EAAEsG,QAAUrG,EAAEqG,QAAWtG,EAAEsG,OAASrG,EAAEqG,QAAU,EAAI,GAgBlF,SAAUnI,EACZhD,EACAoL,EACAC,EAAO,GACPC,EAAY,GACZC,EAAO,YACP,MAAMC,EAAU,GAChB,IAAI,MAAMC,KAAkBL,EAAY,CACpC,MAAMxL,EAA2BwL,EAAWK,GACtCC,EAAoB,CACrB9L,EAAKyL,QAAUA,GAAUzL,EAAKyL,QAAUA,EACxCzL,EAAK0L,aAAeA,GACd1L,EAAK0L,aAAeA,GAG3BI,EAAkBC,KAAKnC,UAIvBmB,EAAY3K,EAAOJ,EAAKiI,cACxBjI,EAAKgM,MAAQH,EACT7L,EAAKiM,cACLjM,EAAKiM,YAAYC,KAAOlM,EAAKiM,YAAYE,KAAK/L,IAElDwL,EAAQ9I,KAAK9C,IAGrB,MAAkB,aAAX2L,EAAwBN,EAAeO,GAAWN,EAAaM,K,kDCvG1E,MAAMQ,EAAeC,IAAMC,yBAAa,mBAAmBD,EAAEA,IAAIE,0BAAcF,GACzEG,EAAa,CAAEC,MAAO,qBACtBC,EAAa,CAAEC,IAAK,GACpBC,EAAa,CAAEH,MAAO,0BACtBI,EAA2BT,EAAa,IAAmBU,gCAAoB,MAAO,CAAEL,MAAO,0BAA4B,qBAAsB,IACjJM,EAA2BX,EAAa,IAAmBU,gCAAoB,MAAO,CAAEL,MAAO,0BAA4B,yBAA0B,IACrJO,EAAa,CAAEC,MAAO,CAACC,WAAY,cAAeC,OAAQ,SAC1DC,EAAa,CAAEX,MAAO,eACtBY,EAA2BjB,EAAa,IAAmBU,gCAAoB,QAAS,KAAM,CACrFA,gCAAoB,KAAM,KAAM,CAC9BA,gCAAoB,KAAM,KAAM,QAChCA,gCAAoB,KAAM,KAAM,YAChCA,gCAAoB,KAAM,KAAM,UAChCA,gCAAoB,KAAM,KAAM,cAE7C,IAEE,SAAU1E,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM4E,EAAuBC,8BAAkB,aACzCC,EAAyBD,8BAAkB,eAC3CE,EAAwBF,8BAAkB,cAC1CG,EAAuBH,8BAAkB,aACzCI,EAA0BJ,8BAAkB,gBAC5CK,EAAsBL,8BAAkB,YACxCM,EAAsBN,8BAAkB,YACxCO,EAAqBP,8BAAkB,WACvCQ,EAAsBR,8BAAkB,YACxCS,EAA0BT,8BAAkB,gBAC5CU,EAAuBV,8BAAkB,aACzCW,EAA6BX,8BAAkB,mBAC/CY,EAAwBZ,8BAAkB,cAC1Ca,EAAqBb,8BAAkB,WACvCc,EAAsBd,8BAAkB,YACxCe,EAAyBf,8BAAkB,eAC3CgB,EAAwBhB,8BAAkB,cAEhD,OAAQ5E,yBAAc6F,gCAAoBC,cAAW,KAAM,CACzDC,yBAAajB,EAAuB,KAAM,CACxC5D,QAAS8E,qBAAS,IAAM,CACtBD,yBAAalB,EAAwB,KAAM,CACzC3D,QAAS8E,qBAAS,IAAM,CACtBD,yBAAapB,EAAsB,CAAEb,MAAO,eAAiB,CAC3D5C,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiB,gBAEnBC,EAAG,MAGPA,EAAG,MAGPA,EAAG,IAELH,yBAAaJ,EAAwB,CAAErB,MAAO,CAAC,SAAW,SAAS,WAAa,OAAO,OAAS,SAAW,CACzGpD,QAAS8E,qBAAS,IAAM,CACtBD,yBAAaL,EAAqB,KAAM,CACtCxE,QAAS8E,qBAAS,IAAM,CACtBD,yBAAaN,EAAoB,KAAM,CACrCvE,QAAS8E,qBAAS,IAAM,CACtBD,yBAAaZ,EAAoB,CAAEgB,KAAM,KAAO,CAC9CjF,QAAS8E,qBAAS,IAAM,CACtBD,yBAAab,EAAqB,CAAEZ,MAAO,CAAC8B,UAAW,OAAQ5B,OAAO,SAAW,CAC/EtD,QAAS8E,qBAAS,IAAM,EACrBhG,wBAAW,GAAO6F,gCAAoBC,cAAW,KAAMO,wBAAY3G,EAAK4G,UAAW,CAACjP,EAAMsD,KACjFqF,yBAAcC,yBAAagF,EAAqB,CACtDnB,MAAO,cACPE,IAAK3M,EACLkP,SAA+B,OAArB7G,EAAK8G,aAAwB9G,EAAK8G,cAAgB7L,IAAU+E,EAAK+G,gBAC3EC,OAAQ,IACP,CACDxF,QAAS8E,qBAAS,IAAM,CACtBD,yBAAahB,EAAsB,CAAE,YAAa,IAAM,CACtD7D,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiBU,6BAAiBtP,EAAK6E,MAAO,KAEhDgK,EAAG,GACF,MACHH,yBAAaf,EAAyB,CACpC4B,WAAYvP,EAAKwP,UACjB,sBAAwBC,GAAkBzP,EAAKwP,UAAaC,EAC5D/E,KAAM,QACNgF,YAAcvL,GAAMkE,EAAKsH,aAAa3P,EAAK6E,KAAMvB,EAAOa,IACvD,KAAM,EAAG,CAAC,aAAc,sBAAuB,kBAEpD0K,EAAG,GACF,KAAM,CAAC,eACR,QAENA,EAAG,MAGPA,EAAG,IAEgB,MAApBxG,EAAK8G,aAAuB9G,EAAKuH,eAAe7H,OAAS,GACrDY,yBAAcC,yBAAakF,EAAoB,CAC9CnB,IAAK,EACLM,MAAO,CAAC8B,UAAW,OAAQ5B,OAAO,SACjC,CACDtD,QAAS8E,qBAAS,IAAM,CACtB7B,gCAAoB,MAAON,EAAY,CACpCnE,EAAKwH,YAAc,kBAAkBC,KAAKzH,EAAK4G,UAAU5G,EAAK8G,aAAatK,OACvE8D,yBAAc6F,gCAAoB,MAAO9B,EAAY,CACpDI,gCAAoB,MAAOF,EAAY,CACrCgC,6BAAiB,iBACjBF,yBAAaX,EAAqB,CAChCpD,MAAOtC,EAAK4G,UAAU5G,EAAK8G,aAAaY,gBAAkB,UAAY,QACrE,CACDlG,QAAS8E,qBAAS,IAAM,CACtB7B,gCAAoB,IAAK,KAAMwC,6BAAiBjH,EAAK4G,UAAU5G,EAAK8G,aAAaY,iBAAmB,QAAS,KAE/GlB,EAAG,GACF,EAAG,CAAC,YAETH,yBAAaV,EAAyB,CACpCc,KAAM,QACNkB,SAAU1H,EAAO,KAAOA,EAAO,GAAM2H,GAAY5H,EAAK6H,iBAAiBD,SAG3EE,gCAAoB,IAAI,GAC1B9H,EAAK+H,oBAiCHD,gCAAoB,IAAI,IAhCvBxH,yBAAcC,yBAAaiF,EAAqB,CAAElB,IAAK,GAAK,CAC3D9C,QAAS8E,qBAAS,IAAM,CACtBD,yBAAaR,EAA4B,CACvCqB,WAAYlH,EAAK4G,UAAU5G,EAAK8G,aAAa,YAC7C,sBAAuB7G,EAAO,KAAOA,EAAO,GAAMmH,GAAkBpH,EAAK4G,UAAU5G,EAAK8G,aAAa,YAAeM,IACnH,CACD5F,QAAS8E,qBAAS,IAAM,CACtB9B,GACClE,wBAAW,GAAO6F,gCAAoBC,cAAW,KAAMO,wBAAY3G,EAAKgI,UAAYrQ,IAC3E2I,yBAAcC,yBAAagF,EAAqB,CAAEjB,IAAK3M,GAAQ,CACrE6J,QAAS8E,qBAAS,IAAM,CACtBD,yBAAahB,EAAsB,KAAM,CACvC7D,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiBU,6BAAiBtP,EAAK6E,MAAO,KAEhDgK,EAAG,GACF,MACHH,yBAAaT,EAAsB,CACjCvD,KAAM,QACN1G,MAAOhE,EAAK6E,KACZyL,QAAUb,GAAiBpH,EAAKkI,YAAYvQ,IAC3C,KAAM,EAAG,CAAC,QAAS,cAExB6O,EAAG,GACF,QACD,QAENA,EAAG,GACF,EAAG,CAAC,iBAETA,EAAG,KAGTH,yBAAaR,EAA4B,CACvCqB,WAAYlH,EAAK4G,UAAU5G,EAAK8G,aAAa,UAC7C,sBAAuB7G,EAAO,KAAOA,EAAO,GAAMmH,GAAkBpH,EAAK4G,UAAU5G,EAAK8G,aAAa,UAAaM,IACjH,CACD5F,QAAS8E,qBAAS,IAAM,CACtB5B,GACCpE,wBAAW,GAAO6F,gCAAoBC,cAAW,KAAMO,wBAAY3G,EAAKmI,YAAcxQ,IAC7E2I,yBAAcC,yBAAagF,EAAqB,CACtDnB,MAAO,cACPE,IAAK3M,GACJ,CACD6J,QAAS8E,qBAAS,IAAM,CACtBD,yBAAahB,EAAsB,KAAM,CACvC7D,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiBU,6BAAiBtP,GAAO,KAE3C6O,EAAG,GACF,MACHH,yBAAaT,EAAsB,CACjCvD,KAAM,QACN1G,MAAOhE,GACN,KAAM,EAAG,CAAC,YAEf6O,EAAG,GACF,QACD,QAENA,EAAG,GACF,EAAG,CAAC,iBAET/B,gCAAoB,MAAOE,EAAY,CACrCF,gCAAoB,QAASM,EAAY,CACvCC,EACAP,gCAAoB,QAAS,KAAM,EAChCnE,wBAAW,GAAO6F,gCAAoBC,cAAW,KAAMO,wBAAY3G,EAAKoI,YAAa,CAACzQ,EAAMsD,KACnFqF,yBAAc6F,gCAAoB,KAAM,CAAE7B,IAAKrJ,GAAS,CAC9DwJ,gCAAoB,KAAM,KAAMwC,6BAAiBtP,EAAK6E,MAAO,GAC7DiI,gCAAoB,KAAM,KAAMwC,6BAAiBtP,EAAK0Q,UAAY,OAAQ,GAC1E5D,gCAAoB,KAAM,KAAMwC,6BAAiBtP,EAAK2Q,QAAS,GAC/D7D,gCAAoB,KAAM,KAAM,CAC9B4B,yBAAaP,EAAuB,CAClCmC,QAAUb,GAAiBpH,EAAKuI,YAAY5Q,EAAK6Q,cACjDnG,KAAM,MACNC,MAAO,UACN,CACDd,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiB,OAEnBC,EAAG,GACF,KAAM,CAAC,kBAGZ,cAKZA,EAAG,KAELsB,gCAAoB,IAAI,KAE9BtB,EAAG,MAGPA,EAAG,MAGPA,EAAG,IAELH,yBAAaH,EAAuB,KAAM,CACxC1E,QAAS8E,qBAAS,IAAM,CACtBD,yBAAalB,EAAwB,KAAM,CACzC3D,QAAS8E,qBAAS,IAAM,CACtBD,yBAAaP,EAAuB,CAClCmC,QAASjI,EAAKyI,eACdhC,KAAM,QACNpE,KAAM,MACNwE,SAAsC,IAA5B7G,EAAKoI,YAAY1I,QAC1B,CACD8B,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiB,oBAEnBC,EAAG,GACF,EAAG,CAAC,UAAW,aAClBH,yBAAaP,EAAuB,CAClCmC,QAAShI,EAAO,KAAOA,EAAO,GAAMmH,GAAiBpH,EAAK0I,WAAW,KACrEjC,KAAM,QACNpE,KAAM,QACNC,MAAO,UACN,CACDd,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiB,aAEnBC,EAAG,MAGPA,EAAG,MAGPA,EAAG,KAEJ,I,gHCrOUhP,+BAAgB,CAC7BgF,KAAM,QACN4E,MAAO,CACLuH,WAAY,CACVtH,KAAMzC,OACN8C,UAAU,GAEZkH,YAAa,CACXvH,KAAMnC,OAERyE,MAAO,CACLtC,KAAMI,OACND,QAAS,KAGbhJ,MAAO,CACLmQ,WAAY,CACVlQ,QAAQkQ,GACFA,IACF9P,KAAKgQ,cAAgB,IAAIF,GACzB9P,KAAKiQ,kBAGTzP,WAAW,IAGf,gBACER,KAAKkP,0BAA4BgB,OAAgBC,qBACjDnQ,KAAK2O,iBAAmBuB,OAAgBvB,cAE1C9N,QAAS,CACP,uBAAuBkO,GAErB,GADA/O,KAAKoQ,kBAAoBpQ,KAAKoQ,kBAC1BpQ,KAAKoQ,iBAAT,CAKA,UAJOC,OAAkBC,OAAO,CAAEC,QAAS,YAAYxB,KAAayB,UACpExQ,KAAK+N,UAAU/N,KAAKiO,aAAa,mBAAqB,MAGlD,IAAGc,GAAS,KAAKlI,QAAU,EAI7B,OAHA4J,eAAa,uBACbzQ,KAAKoQ,kBAAmB,OACxBC,OAAkBK,SAAStQ,KAAKuQ,GAAKA,GAAKN,OAAkBO,WAM9D,UACcC,OAAaC,mBAAmB/B,GAG1C0B,eAAa,WAAW1B,sBAFxB/O,KAAK+N,UAAU/N,KAAKiO,aAAa,mBAAqBc,EAIxD,MAAO9L,GACPG,eAAY,6BAA+B2L,EAAU,2BAA4B,KAEnF/O,KAAKoQ,kBAAmB,EACxBC,OAAkBK,SAAStQ,KAAKuQ,GAAKA,GAAKN,OAAkBO,aAE9D,mBAAmBG,EAAkB3O,EAAe4O,GAClDhR,KAAKiR,UAAU5H,UACbrJ,KAAK+N,UAAU3L,GAAO,aAAe4O,EAAMzG,OAAO2G,QAC/ClR,KAAK+N,UAAU3L,GAAO,cACvBpC,KAAKmP,gBAAkB0B,OAAaM,aAAaJ,GACjD/Q,KAAK+N,UAAU3L,GAAO,gBAAkBA,EACxCpC,KAAKiO,YAAc7L,GAEnBpC,KAAK0P,YAAYtN,MAIvB,sBACE,MAAMgP,QAA0BP,OAAaQ,eACvCC,EAAUC,uBAAUH,EAAO,CAACzN,KAAM,mBAClC6N,GAAyB,IAAbF,EAAiBF,EAAMK,OAAOH,EAAS,GAAK,KACxDI,EAASN,EAAMtN,KAAK,CAACC,EAAQC,KAAW,GAAGD,EAAEJ,MAAOE,eAAgB,GAAGG,EAAEL,MAAOE,cAAgB,GAAI,GACvGmC,OAAQ2L,IAAWtL,MAAMC,QAAQtG,KAAK+P,cAAe/P,KAAK+P,YAAY9F,SAAS0H,EAAEhO,OACpF3D,KAAK+N,UAAYyD,EAAY,IAAIA,KAAcE,GAAUA,GAE3DhC,YAAYtN,GACVpC,KAAK+N,UAAU3L,GAAO,cAAe,EACrCpC,KAAK+N,UAAU3L,GAAO,UAAY,KAClCpC,KAAK+N,UAAU3L,GAAO,YAAc,KACpCpC,KAAK+N,UAAU3L,GAAO,mBAAqB,KAC3CpC,KAAK+N,UAAU3L,GAAO,mBAAqB,KAC3CpC,KAAKiO,YAAc,KACnBjO,KAAKmP,UAAY,IAEnBE,YAAYvQ,GACVkB,KAAK+N,UAAU/N,KAAKiO,aAAa,mBAAqBnP,EAAK8S,YAE7D,uBACE,MAAMpT,EAAW,GAAGwB,KAAK0D,OAAO5D,OAAOC,WACjC8R,EAAS,IAAIxT,OAAgB4B,SAASzB,IAAa,GACnDsT,QAAkBD,EAAOE,kBAE/B,GAAGD,EAAW,CACZ,MAAME,QAAwBnB,OAAaoB,eAAeH,EAAW9R,KAAKuP,aACpEtJ,QAAU4K,OAAaqB,gBAAgBJ,EAAUK,aAAcH,GAErE,IAAI/L,EAAG,OAAOwK,eAAa,6BAE3BvQ,OAAMkS,WAAW,sBACjB,MAAMC,QAAuBC,eAAkB,iEAAkE,CAC/GC,gBAAiB,MACjBC,eAAgB,OAEfH,QAAsBrS,KAAKyS,YAAYxM,SAC/BjG,KAAK6P,WAAW5J,KAG/B,iBAAiB4L,SACTa,OAAgB9B,QAAQiB,IAEhC,kBAAkBA,GAChB,MAAMzN,EAAI,IAAIuO,aACRd,EAAOe,QAAQvJ,UACnB,MAAMwJ,EAAM,6BAA6BC,EAAQC,eAC3C3O,EAAE4O,SAASH,WAEbH,OAAgB9B,QAAQiB,KAGlCnR,SAAU,CACRwN,kBACE,MAA+B,iBAApBlO,KAAKiO,gBAGZjO,KAAK2O,YAAc,kBAAkBC,KAAK5O,KAAK+N,UAAU/N,KAAKiO,aAAa,WAC5EjO,KAAK+N,UAAU/N,KAAKiO,aAAa,sBAGjCjO,KAAKkP,sBACGlP,KAAK+N,UAAU/N,KAAKiO,aAAa,WAEpCjO,KAAK+N,UAAU/N,KAAKiO,aAAa,oBAAsBjO,KAAK+N,UAAU/N,KAAKiO,aAAa,cAC3FjO,KAAK+N,UAAU/N,KAAKiO,aAAa,aAExCS,iBACE,OAAO1O,KAAK+N,UAAU/H,OAAQlH,IAAiC,IAAnBA,EAAKwP,YAEnDiB,cACE,OAAOvP,KAAK0O,eAAe1I,OAAQlH,KAC7BkB,KAAK2O,YAAc,kBAAkBC,KAAK9P,EAAK6E,QAAU7E,EAAK+P,mBAG3D/P,EAAK2Q,SAAW3Q,EAAK0Q,WAAaxP,KAAKkP,qBACzClP,KAAKkP,wBAGdI,cACE,IAAI2D,EAAUjT,KAAKiT,QAKnB,OAJIjT,KAAK+N,UAAU/N,KAAKiO,aAAatK,KAAKuP,MAAM,iBAC7CD,EAAUA,EAAQjN,OAAQmN,GAAoB,SAANA,GACxCF,EAAUA,EAAQ1M,OAAO,CAAC,oCAAqC,qCAE3D0M,IAGXG,UACEpT,KAAKiQ,iBAEPnR,OACE,MAAO,CACL6P,YAAY,EACZyB,kBAAkB,EAClBiD,QAAS,UACTnE,qBAAqB,EACrBc,cAAe,GACfjC,UAAW,GACXoB,UAAW,GACX8D,QAAS,CAAC,UAAW,WAAY,eAAgB,OAAQ,oBACzDhF,YAAa,OAGjBrP,WAAY,CACV0U,iBACAC,kBACAC,iBACAC,gBACAC,kBACAC,gBACAC,eACAC,eACAC,oBACAC,mBACAC,qBACAC,iB,iCC/MJ,MAAMhN,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E,U,0JCDT,MAAOgN,UAAgC5V,OAC3CC,YAAYC,EAAmBC,GAC7BC,MAAMF,EAAW,IAAKC,GAGxB,8BAA8B0V,EAAuBnO,EAAS,IAC5D,OAAOoO,OAAeC,cAAcF,EAAenO,GAGrD,sBAAsBsO,GACpB,IACE,MAAMnP,EAAO,yCAAyCmP,EAChDxV,QAAayV,OAAQC,QAAQrP,GACnC,OAAOrG,EACP,MAAOqE,GACP,OAAO,GAIX,2BAA2BpE,GACzB,aAAYiB,KAAKyU,gBAAgB1V,EAAQ2V,UAAU7N,OAAS,EAM9D,uCAAuC9H,GACrC,MAAM4V,QAAyBJ,OAAQK,oBACvC,IAAI/B,EAAM,GACV,IAAK,MAAMgC,KAAOF,EACD,QAAZE,EAAIlR,OACLkP,EAAMgC,EAAIhC,KAGVvO,qBAAQuO,KACVA,EAAM,4BAA4B7S,KAAKxB,WAEzC,MAAMM,QAAckB,KAAKyU,gBAAgB1V,EAAQ2V,SACjD,OAAK5V,EAAK+H,OAAS,GAGV,CAAE/H,KAAMA,EAAM+T,IAAKA,GAI9B,mBAAmBiC,EAAmB/V,GACpC,IAAI8P,EACJ,IAAI,MAAMkG,KAASD,EACjBjG,EAAkBkG,EAAMC,SAAS,GAAGC,iBAEtC,MAAMpD,QAAerL,QAAQC,IAAIqO,EAAa3Q,IAAIkF,UAAiB,CACjE,gBAAmB0L,EAAMG,WACzB,OAAUH,EAAMI,OAChB,eAAkBJ,EAAMC,SAAS,GAAGE,eAEhC7U,EAAc,CAClB,aAAgBtB,EAAQqW,cACxB,WAAcrW,EAAQsW,SACtB,WAActW,EAAQ0E,eACtB,cAAiB1E,EAAQuW,YACzB,YAAevW,EAAQwW,gBACvB,UAAaxW,EAAQ2V,QACrB,aAAgB1U,KAAKwV,iBACrB,aAAgBxV,KAAKyV,UACrB,iBAAoB5G,GAEhBvN,EAAW,CACf,SAAYiT,OAAQmB,cACpB,OAAUnB,OAAQoB,YAClB,UAAapB,OAAQqB,gBAEvB,OAAOrB,OAAQsB,SAAS,6BAA8B,CACpD,gBAAmBxV,EACnB,kBAAqBiB,EACrB,iBAAoBuQ,IAIxB,0BACE,aAAc0C,OAAQC,QAAQ,oCAAoC,oBAGpE,aAAa1V,GACX,MAAMgX,QAA4B9V,KAAK+V,oBACjCC,EAAe,GACrB,IAAK,MAAMjB,KAASjW,EAClBkX,EAAapU,KACX,CACE,WAAcmT,EAAMnD,WACpB,iBAAqBwC,OAAe6B,eAAelB,EAAMmB,MAAMtE,YAC/DsE,MAAM,CAAC,CACL,WAAcnB,EAAMmB,MAAMtE,WAC1B,iBAAoBkE,EACpB,iBAAoB1B,OAAe6B,eAAelB,EAAMmB,MAAMC,iBAKtE,OAAOH,EAGT,kBAAkBnE,EAAa9S,GAC7B,MAAMqX,EAAe,IAAIzD,OACnB0D,EAAoBtX,EAAQwW,gBAC5Be,EAAcvX,EAAQqW,cACtBmB,EAAiB,GACvB,IAAI,MAAMxB,KAASlD,EAAQ,CACzB,MAAM2E,EAAgBzB,EAAMG,WAAY,KAAMH,EAAMC,SAAS,GAAGE,WAChEqB,EAAK3U,KAAK,uCACemT,EAAMC,SAAS,GAAGC,iBACvC,wBAAwBoB,EACxB,iBAAiBC,EACjB,gBAAgBE,EAChB,iBAAiBtN,OAAQC,2BAA2B4L,EAAM0B,qBAI1DL,EAAaM,eAAeH,GAAM,M,yDC3HtC,SAAUrP,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMmP,EAA+BtK,8BAAkB,qBACjDuK,EAAsBvK,8BAAkB,YAE9C,OAAQ5E,yBAAcC,yBAAakP,EAAqB,KAAM,CAC5DjO,QAAS8E,qBAAS,IAAM,CACtBD,yBAAamJ,EAA8B,CACzC5O,sBAAuBZ,EAAKxG,kBAC5B3B,OAAQmI,EAAKnI,OACbkJ,eAAgBf,EAAK0P,SACrBhP,aAAa,GACZ,KAAM,EAAG,CAAC,wBAAyB,SAAU,qBAElD8F,EAAG,I,oDCZD,MAAOmJ,UAAiCxY,OAC5CC,YAAYC,EAAmBC,GAC7BC,MAAMF,EAAW,IAAKC,GAGxB,+BAA+BsY,EAAuB/Q,EAAS,IAC7D,OAAOoO,OAAeC,cAAc0C,EAAe/Q,GAErD,mCACC,aAAa8Q,EAAyBE,OAAO,CACxC,WAAc5C,OAAe6C,aAAa,+BAC1C,WAAcjX,KAAKkX,KACnB,SAAYlX,KAAKkX,KACjB,UAAalX,KAAKxB,a,gBCdpB,SAAU0I,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM4E,EAAuBC,8BAAkB,aACzCC,EAAyBD,8BAAkB,eAC3CE,EAAwBF,8BAAkB,cAC1C8K,EAAkC9K,8BAAkB,wBACpDe,EAAyBf,8BAAkB,eAC3CY,EAAwBZ,8BAAkB,cAC1CgB,EAAwBhB,8BAAkB,cAEhD,OAAQ5E,yBAAc6F,gCAAoBC,cAAW,KAAM,CACzDC,yBAAajB,EAAuB,KAAM,CACxC5D,QAAS8E,qBAAS,IAAM,CACtBD,yBAAalB,EAAwB,KAAM,CACzC3D,QAAS8E,qBAAS,IAAM,CACtBD,yBAAapB,EAAsB,CAAEb,MAAO,eAAiB,CAC3D5C,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiB,2BAEnBC,EAAG,MAGPA,EAAG,MAGPA,EAAG,IAELH,yBAAaJ,EAAwB,CAAErB,MAAO,CAAC,SAAW,SAAS,WAAa,OAAO,OAAS,SAAW,CACzGpD,QAAS8E,qBAAS,IAAM,CACtBD,yBAAa2J,EAAiC,CAAEC,UAAWjQ,EAAKkQ,SAAW,KAAM,EAAG,CAAC,gBAEvF1J,EAAG,IAELH,yBAAaH,EAAuB,KAAM,CACxC1E,QAAS8E,qBAAS,IAAM,CACtBD,yBAAalB,EAAwB,KAAM,CACzC3D,QAAS8E,qBAAS,IAAM,CACtBD,yBAAaP,EAAuB,CAClCmC,QAAShI,EAAO,KAAOA,EAAO,GAAMmH,GAAiBpH,EAAK0P,YAC1DjJ,KAAM,QACNpE,KAAM,MACNwE,SAAgD,IAAtC7G,EAAKmQ,sBAAsBzQ,QACpC,CACD8B,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiB,oBAEnBC,EAAG,GACF,EAAG,CAAC,aACPH,yBAAaP,EAAuB,CAClCmC,QAAShI,EAAO,KAAOA,EAAO,GAAMmH,GAAiBpH,EAAK0I,cAC1DjC,KAAM,QACNpE,KAAM,QACNC,MAAO,UACN,CACDd,QAAS8E,qBAAS,IAAM,CACtBC,6BAAiB,aAEnBC,EAAG,MAGPA,EAAG,MAGPA,EAAG,KAEJ,I,gECjDUhP,+BAAgB,CAC7BgF,KAAM,QACN/E,WAAY,CACV0U,iBACAC,kBACAC,iBACAC,gBACAC,kBACA6D,iBACAC,iCAEFC,OAAQ,CAACC,QACT5Y,KAAMA,KAAA,CACJ6Y,iBAAkB,GAClBC,eAAe,EACfN,sBAAuB,KAEzB3X,MAAO,CACLD,MAAO,CACL,cAAcmY,GACTA,IACD7X,KAAK2X,iBAAmB,IAAIzD,OAAwBlU,KAAKxB,UAAWwB,KAAKvB,YACzEuB,KAAK4X,oBAAuBE,OAAiBC,kBAGjDvX,WAAW,EACXC,MAAM,IAGVI,QAAS,CACP,cAAcmX,GACZhY,KAAKsX,sBAAwBU,GAE/B,oBACE,OAAOhY,KAAKsX,sBAAsBnT,IAAIkF,UAAkB,UAC5CrJ,KAAK2X,iBAAiBM,gBAAgB,mBAAoBvS,EAAOX,MAAMmT,QACjFhC,MAAO,OAAOlW,KAAK2X,iBAAiBQ,6BAA6BzS,EAAOX,MAAMmT,OAAQxS,EAAOX,MAAM6M,iBAGvG,iBACE,IAAItN,qBAAQtE,KAAKsX,uBAAwB,CACvCtX,KAAK6P,aACL,IAAI/Q,QAAakB,KAAKoY,cACtBtZ,QAAa0H,QAAQC,IAAI3H,SACnBkB,KAAK2X,iBAAiB5F,kBAC5B,MAAMsG,QAAerY,KAAK2X,iBAAiBU,OAAOvZ,GAC5CgW,QAAqB9U,KAAK2X,iBAAiBW,oBAAoBD,GAErE,SADMrY,KAAK2X,iBAAiBlF,YAAYqC,EAAc9U,KAAKjB,SACxDiB,KAAK4X,cACN,UACQ5X,KAAK2X,iBAAiBY,aAAazD,EAAc9U,KAAKjB,SAC5D,MAAOoE,GACPD,QAAQsV,IAAIrV,MAKpB,yBACQuP,OAAgB9B,QAAQ,Q,qBCtEpC,MAAM3J,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS,KAErD,Q,4DCSAtI,+BAAgB,CAC7BC,WAAY,CAAEC,uBAAiB4Z,gBAC/BhB,OAAQ,CAACC,QACT5Y,KAAMA,KAAA,CACJ4Z,kBAAmB,GACnBC,WAAYC,OAAmBtV,iBAC/BuV,qBAAsB,GACtBjB,eAAe,EACfkB,iBAAkB,kBAClBC,qBAAqB,IAEvBpZ,MAAO,CACLD,MAAO,CACL,cAAcmY,GACTA,IACD7X,KAAK0Y,kBAAoB,IAAI5B,EAAyB9W,KAAKxB,UAAWwB,KAAKvB,YAC3EuB,KAAK4X,oBAAuBE,OAAiBC,gBAC7C/X,KAAK+Y,0BAA4B/Y,KAAKgZ,gCACtChZ,KAAKhB,OAASgB,KAAKiZ,cAGvBzY,WAAW,EACXC,MAAM,IAGVI,QAAS,CACP,eAAe8M,EAAQ5E,GACrB,MAAMjK,QAAa0H,QAAQC,IAAIsC,EAAamQ,kBACtClZ,KAAK0Y,kBAAkB3G,wBACvB/R,KAAK0Y,kBAAkBJ,oBAAoBxZ,GACjDkB,KAAKoF,YAEP,6BACE,MAAMsE,QAAcgJ,OAAgBpC,OAAO,CACzC6I,UAAWC,OACXC,iBAAiB,EACjBC,SAAU,gBAEZ5P,EAAM8G,gBACA9G,EAAM6P,gBAEd,sCACE,MAAM7P,QAAcgJ,OAAgBpC,OAAO,CACzC6I,UAAWK,EACXH,iBAAiB,EACjBC,SAAU,gBAEZ5P,EAAM8G,gBACA9G,EAAM6P,gBAEd,sCACE,MAAMza,QAAckB,KAAK0Y,kBAAkBe,6BAC3C,KAAK3a,EAAK+H,OAAS,GAAK,OAAO,EAE/B,MAAM6S,QAAmBC,OAAiBC,cAAc5Z,KAAKxB,UAAWwB,KAAK2Y,YACvEkB,EAA4BH,EAAW1T,QAAO,SAAU8T,GAC5D,MAAuB,gCAAhBA,EAAGtR,KAAK7E,MACfuF,OAAQ6Q,oBAAoBD,EAAGE,qBAAuBpB,OAAmBtV,oBAE3E,OAAKuW,EAA0BhT,OAAS,IAExC7G,KAAK6Y,qBAAyBgB,EAA0B,GAAG7D,cACpD,IAETiE,eACE,MAAMC,EAAU,CAAE,QAAQ,yBAC1B,IAAIC,EAAQ,GACRC,EAAMpa,KAAK6Y,qBAAqB1U,IAAKkW,IACvC,GAAwB,MAArBA,EAAKC,aACN,MAAO,CAACH,EAAME,EAAKnF,YAErBiF,EAAQE,EAAKnF,aAMf,OAJAkF,EAAOA,EAAKpU,OAAQ8T,QACL/P,GAAN+P,GAET9Z,KAAK6Y,qBAAuBuB,EACrB,CACL,CACEtV,MAAO,GACPhC,MAAO,GACPiC,MAAO,CAAEmV,UAASE,WAKxBnB,YACE,MAAO,CACL,CACEsB,GAAI,oBACJC,SAAU,sBACVxT,UAAWA,IAAMhH,KAAK+Y,oBACtBvQ,KAAMiS,OAAUC,gBAChBjV,QAAUQ,GAAWjG,KAAKia,eAC1BU,OAAQ,CACNC,iBAAkB,CAAC,WAGvB,CACEL,GAAI,aACJC,SAAU,wBACVhS,KAAMiS,OAAUI,qBAChBC,WAAahc,GAAcic,OAAWlS,SAAS/J,GAC/Ckc,cAAgBvV,GACPA,EAAQtB,IAAIkF,UAAa,UACpBrJ,KAAK0Y,kBAAkBT,gBAAgB,uBAAwBvS,EAAOX,MAAMmT,QACtFhC,MAAO,OAAOlW,KAAK0Y,kBAAkBP,6BAA6BzS,EAAOX,MAAMmT,OAAQxS,EAAOX,MAAM6M,gBAGxG+I,OAAQ,CACNC,iBAAkB,CAAE5a,KAAKib,wBAAyBjb,KAAKkb,kBACvDC,WAAY,CACV,CACExX,KAAM,YACNiK,KAAM,QACNpE,KAAM,MACNC,MAAO,UACP2R,SAAS,EACThM,QAAS/F,eAAkBrJ,KAAKqb,uBAChCC,qBAAuBva,GACE,IAAhBA,EAAMqB,OAGjB,CACEuB,KAAM3D,KAAK8Y,iBACXlL,KAAM,QACNpE,KAAM,MACNC,MAAO,UACP2R,SAAS,EACThM,QAAS/F,eAAkBrJ,KAAKub,gCAChCD,qBAAuBva,GACE,IAAhBA,EAAMqB,UAMvB,CACEmY,GAAI,4BACJC,SAAU,UACVxT,UAAWA,IAAMhH,KAAK6Y,qBAAqBhS,OAAS,EACpD2B,KAAMiS,OAAUe,WAChB/V,QAASA,CAACQ,EAAQjC,IAAWhE,KAAKyb,oBAAoBxV,GACtD0U,OAAQ,CACNC,iBAAkB,CAAC,aAK3BK,wBACE,OAAGjb,KAAK4X,cACC,GACK5X,KAAK8Y,kBAErB2C,oBAAoB3c,GAClB,MAAM4c,EAAe5c,EAAKoa,WAAW/U,IAAKrB,IACjC,CACL,MAAS,iBACT,MAASA,EAAMgC,SAGb6W,EAAkB3b,KAAK6Y,qBAAqB1U,IAAKrB,IAC9C,CACL,MAAS,sBACT,MAASA,EAAM,MAGnB,OAAO4Y,EAAanV,OAAOoV,IAE7BT,iBACE,OAAGlb,KAAK+Y,oBACC,GACK,W,UCrLpB,MAAM,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS7R,KAErD,gB,yDCFR,IAAKuT,EAPZ,oEAOA,SAAYA,GACRA,EAAA,4CACAA,EAAA,sCACAA,EAAA,6CACAA,EAAA,8BACAA,EAAA,wCACAA,EAAA,gCACAA,EAAA,sCACAA,EAAA,qBACAA,EAAA,gCACAA,EAAA,oCACAA,EAAA,0BACAA,EAAA,8BACAA,EAAA,0BACAA,EAAA,yBACAA,EAAA,0CACAA,EAAA,qDACAA,EAAA,2DACAA,EAAA,oCACAA,EAAA,oCACAA,EAAA,2BACAA,EAAA,yCACAA,EAAA,2BACAA,EAAA,oCACAA,EAAA,oCACAA,EAAA,0CACAA,EAAA,8CACAA,EAAA,gCACAA,EAAA,2CACAA,EAAA,qDACAA,EAAA,2CACAA,EAAA,kCACAA,EAAA,4CACAA,EAAA,8CACAA,EAAA,4CACAA,EAAA,sCACAA,EAAA,0CACAA,EAAA,+BACAA,EAAA,kCACAA,EAAA,gDACAA,EAAA,wCACAA,EAAA,8CACAA,EAAA,4CACAA,EAAA,gCACAA,EAAA,kCACAA,EAAA,4CACAA,EAAA,qDACAA,EAAA,0DACAA,EAAA,6DACAA,EAAA,2CACAA,EAAA,0CACAA,EAAA,2CACAA,EAAA,gDACAA,EAAA,wEArDJ,CAAYA,MAAS,KAyDd,MAAMmB,EAA8B,CACvCnB,EAAUoB,sBACVpB,EAAUqB,gBACVrB,EAAUsB,qBACVtB,EAAUuB,aACVvB,EAAUwB,WACVxB,EAAUyB,QACVzB,EAAU0B,UACV1B,EAAU2B,iBACV3B,EAAU4B,mBACV5B,EAAU6B,QACV7B,EAAU8B,UACV9B,EAAU+B,gBACV/B,EAAUgC,yBACVhC,EAAUiC,iCACVjC,EAAUC,gBACVD,EAAUkC,gBACVlC,EAAUmC,UACVnC,EAAUoC,mBACVpC,EAAUqC,gBACVrC,EAAUsC,gBACVtC,EAAUuC,sBACVvC,EAAUI,qBACVJ,EAAUwC,yBACVxC,EAAUe,WACVf,EAAUyC,uBACVzC,EAAU0C,mBACV1C,EAAU2C,cACV3C,EAAU4C,sBACV5C,EAAU6C,qBACV7C,EAAU8C,eACV9C,EAAU+C,sBACV/C,EAAUgD,sBACVhD,EAAUiD,qBACVjD,EAAUkD,aACVlD,EAAUmD,eACVnD,EAAUoD,sBACVpD,EAAUqD,kBACVrD,EAAUsD,cACVtD,EAAUuD,eACVvD,EAAUwD,sBACVxD,EAAUyD,cACVzD,EAAU0D,kBACV1D,EAAU2D,8BACV3D,EAAU4D,+BACV5D,EAAU6D,sBACV7D,EAAU8D,oBACV9D,EAAU+D,iBACV/D,EAAUgE,qBACVhE,EAAUiE,oBACVjE,EAAUkE,sBACVlE,EAAUmE,mCACVnE,EAAUoE,oB,kCCpHd,W,qBCAA,IAAI1a,EAAM,CACT,wBAAyB,CACxB,OACA,qBAED,wBAAyB,CACxB,OACA,qBAED,iCAAkC,CACjC,OACA,qBAED,+BAAgC,CAC/B,OACA,qBAED,0BAA2B,CAC1B,OACA,qBAED,yBAA0B,CACzB,OACA,iBACA,qBAED,sBAAuB,CACtB,OACA,qBAED,kCAAmC,CAClC,OACA,qBAED,0BAA2B,CAC1B,OACA,iBACA,qBAED,mBAAoB,CACnB,OACA,qBAED,yBAA0B,CACzB,OACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,oBAAqB,CACpB,OACA,sBAED,wBAAyB,CACxB,OACA,2DACA,sBAED,+BAAgC,CAC/B,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,iBACA,sBAED,yBAA0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,2DACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,2DACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,iBACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAAS2a,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE9a,EAAK4a,GAC9B,OAAOvY,QAAQ0Y,UAAU9e,MAAK,WAC7B,IAAI6C,EAAI,IAAIkc,MAAM,uBAAyBJ,EAAM,KAEjD,MADA9b,EAAEmc,KAAO,mBACHnc,KAIR,IAAIoc,EAAMlb,EAAI4a,GAAMxE,EAAK8E,EAAI,GAC7B,OAAO7Y,QAAQC,IAAI4Y,EAAIC,MAAM,GAAGnb,IAAI6a,EAAoB/b,IAAI7C,MAAK,WAChE,OAAO4e,EAAoBzE,MAG7BuE,EAAoBS,KAAO,WAC1B,OAAOxZ,OAAOwZ,KAAKpb,IAEpB2a,EAAoBvE,GAAK,OACzBiF,EAAOC,QAAUX","file":"js/chunk-519daefa.6bfb7d22.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class LabOrderService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 57, providerID);\n  }\n}","\n/**\n * @deprecated moved to useEncounter composable\n * \n */\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LabOrderModal.vue?vue&type=style&index=0&id=79ed58e6&scoped=true&lang=css\"","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: (facts: FactsInterface) => any;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: ConditionsInteface;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\nexport type FactsInterface = Record<string, any>\nexport type ConditionResolver = (value: any, facts: FactsInterface) => boolean | RegExpMatchArray | null\nexport type ConditionsInteface = Record<string, ConditionResolver>\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: FactsInterface, conditions: ConditionsInteface): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: FactsInterface, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-79ed58e6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"ion-margin-bottom\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"his-md-text side-title\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Select specimen \", -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Main test(s) reason \", -1))\nconst _hoisted_6 = { style: {background: 'lightyellow', height: '34vh'} }\nconst _hoisted_7 = { class: \"his-sm-text\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Test\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Specimen\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Reason\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\")\n  ])\n], -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_text = _resolveComponent(\"ion-text\")!\n  const _component_BarcodeInput = _resolveComponent(\"BarcodeInput\")!\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")!\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Lab orders\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"6\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'75vh'} }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testTypes, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            class: \"his-sm-text\",\n                            key: data,\n                            disabled: _ctx.activeIndex !== null && _ctx.activeIndex !== index && !_ctx.isOrderComplete,\n                            detail: \"\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, { \"text-wrap\": \"\" }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(data.name), 1)\n                                ]),\n                                _: 2\n                              }, 1024),\n                              _createVNode(_component_ion_checkbox, {\n                                modelValue: data.isChecked,\n                                \"onUpdate:modelValue\": ($event: any) => ((data.isChecked) = $event),\n                                slot: \"start\",\n                                onIonChange: (e) => _ctx.onSelectTest(data.name, index, e)\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\"])\n                            ]),\n                            _: 2\n                          }, 1032, [\"disabled\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.activeIndex != null && _ctx.selectedOrders.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'79vh'}\n                    }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", _hoisted_1, [\n                          (_ctx.canScanDBS && /hiv viral load/i.test(_ctx.testTypes[_ctx.activeIndex].name))\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n                                _createElementVNode(\"div\", _hoisted_3, [\n                                  _createTextVNode(\" Barcode ID: \"),\n                                  _createVNode(_component_ion_text, {\n                                    color: _ctx.testTypes[_ctx.activeIndex].accessionNumber ? 'success' : 'dark'\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createElementVNode(\"b\", null, _toDisplayString(_ctx.testTypes[_ctx.activeIndex].accessionNumber || 'None'), 1)\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"color\"])\n                                ]),\n                                _createVNode(_component_BarcodeInput, {\n                                  size: \"small\",\n                                  onOnScan: _cache[0] || (_cache[0] = (barcode) => _ctx.onScanEIDbarcode(barcode))\n                                })\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          (!_ctx.extendedLabsEnabled)\n                            ? (_openBlock(), _createBlock(_component_ion_list, { key: 1 }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_radio_group, {\n                                    modelValue: _ctx.testTypes[_ctx.activeIndex]['specimen'],\n                                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['specimen']) = $event))\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _hoisted_4,\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.specimens, (data) => {\n                                        return (_openBlock(), _createBlock(_component_ion_item, { key: data }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_component_ion_label, null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(data.name), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024),\n                                            _createVNode(_component_ion_radio, {\n                                              slot: \"start\",\n                                              value: data.name,\n                                              onClick: ($event: any) => (_ctx.addSpecimen(data))\n                                            }, null, 8, [\"value\", \"onClick\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      }), 128))\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"modelValue\"])\n                                ]),\n                                _: 1\n                              }))\n                            : _createCommentVNode(\"\", true),\n                          _createVNode(_component_ion_radio_group, {\n                            modelValue: _ctx.testTypes[_ctx.activeIndex]['reason'],\n                            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['reason']) = $event))\n                          }, {\n                            default: _withCtx(() => [\n                              _hoisted_5,\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testReasons, (data) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  class: \"his-sm-text\",\n                                  key: data\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(data), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_radio, {\n                                      slot: \"start\",\n                                      value: data\n                                    }, null, 8, [\"value\"])\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              }), 128))\n                            ]),\n                            _: 1\n                          }, 8, [\"modelValue\"])\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_6, [\n                          _createElementVNode(\"table\", _hoisted_7, [\n                            _hoisted_8,\n                            _createElementVNode(\"tbody\", null, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.finalOrders, (data, index) => {\n                                return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.name), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.specimen || 'N/A'), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.reason), 1),\n                                  _createElementVNode(\"td\", null, [\n                                    _createVNode(_component_ion_button, {\n                                      onClick: ($event: any) => (_ctx.removeOrder(data.currentIndex)),\n                                      slot: \"end\",\n                                      color: \"danger\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"X\")\n                                      ]),\n                                      _: 2\n                                    }, 1032, [\"onClick\"])\n                                  ])\n                                ]))\n                              }), 128))\n                            ])\n                          ])\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postActivities,\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.finalOrders.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.closeModal([]))),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonCheckbox,\n  IonRadioGroup,\n  IonRow,\nloadingController,\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { alertConfirmation, toastDanger, toastWarning } from \"@/utils/Alerts\"\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport ART_GLOBAL_PROP from \"@/apps/ART/art_global_props\"\nimport Store from \"@/composables/ApiStore\"\nimport { findIndex } from \"lodash\";\nimport BarcodeInput from \"@/components/BarcodeInput.vue\"\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    activities: {\n      type: Object as PropType<ActivityInterface[]>,\n      required: true\n    },\n    testFilters: {\n      type: Array    \n    },\n    title: {\n      type: String, \n      default: \"\"\n    },\n  },\n  watch: {\n    activities: {\n      handler(activities: Array<ActivityInterface>){\n        if (activities) {\n          this.appActivities = [...activities]\n          this.getActivities();\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    this.extendedLabsEnabled = await ART_GLOBAL_PROP.extendedLabEnabled()\n    this.canScanDBS = await ART_GLOBAL_PROP.canScanDBS()\n  },\n  methods: {\n    async onScanEIDbarcode(barcode: string) {\n      this.verifyingBarcode = !this.verifyingBarcode;\n      if (this.verifyingBarcode) return\n      (await loadingController.create({ message: `Checking ${barcode}`})).present()\n      this.testTypes[this.activeIndex]['accessionNumber'] = null\n      // // Expected barcode examples: L5728043 or 57280438\n      // const barcodeOk = /^([A-Z]{1})?[0-9]{7,8}$/i.test(`${barcode}`.trim())\n      if (`${barcode||''}`.length <= 0) {\n        toastWarning(\"Barcode is required\")\n        this.verifyingBarcode = false\n        loadingController.getTop().then(v => v && loadingController.dismiss())\n        return ;\n      }\n      /**\n       * Verify with API if barcode was already used:\n      */\n      try {\n        if (!(await OrderService.accessionNumExists(barcode))) {\n          this.testTypes[this.activeIndex]['accessionNumber'] = barcode\n        } else {\n          toastWarning(`Barcode ${barcode} was already used`)\n        }\n      } catch (e) {\n        toastDanger(\"Failed to confirm barcode \" + barcode + \", Please try again later\", 8000)  \n      }\n      this.verifyingBarcode = false\n      loadingController.getTop().then(v => v && loadingController.dismiss())\n    },\n    async onSelectTest(testName: string, index: number, event: any) {\n      this.$nextTick(async () => {\n        this.testTypes[index]['isChecked'] = event.target.checked;\n        if(this.testTypes[index]['isChecked']){\n          this.specimens = await OrderService.getSpecimens(testName);\n          this.testTypes[index]['currentIndex'] = index;\n          this.activeIndex = index;\n        } else {\n          this.removeOrder(index)\n        }\n      })\n    },\n    async getActivities() {\n      const tests: Array<any> = await OrderService.getTestTypes();\n      const vlIndex = findIndex(tests, {name: \"HIV viral load\"})\n      const viralLoad = vlIndex !== -1 ? tests.splice(vlIndex, 1) : null;\n      const sorted = tests.sort((a: any, b: any) => `${a.name}`.toUpperCase() > `${b.name}`.toUpperCase() ? 1: -1)\n        .filter((t: any) => Array.isArray(this.testFilters) ? this.testFilters.includes(t.name) : true)\n      this.testTypes = viralLoad ? [...viralLoad, ...sorted] : sorted\n    },\n    removeOrder(index: number) {\n      this.testTypes[index]['isChecked'] = false;\n      this.testTypes[index]['reason'] = null;\n      this.testTypes[index]['specimen'] = null;\n      this.testTypes[index]['specimenConcept'] = null\n      this.testTypes[index]['accessionNumber'] = null\n      this.activeIndex = null\n      this.specimens = []\n    },\n    addSpecimen(data: any) {\n      this.testTypes[this.activeIndex]['specimenConcept'] = data.concept_id;\n    },\n    async postActivities() {\n      const patientID= `${this.$route.params.patient_id}`;\n      const orders = new LabOrderService(parseInt(patientID), -1); //TODO: get selected provider for this encounter\n      const encounter = await orders.createEncounter();\n\n      if(encounter) {\n        const formattedOrders = await OrderService.buildLabOrders(encounter, this.finalOrders);\n        const d =await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n        \n        if(!d) return toastWarning('Unable to save lab orders')\n\n        Store.invalidate('PATIENT_LAB_ORDERS')\n        const canPrintOrders = await alertConfirmation('Lab orders and encounter created!, print out your last orders?', { \n          confirmBtnLabel: 'Yes',\n          cancelBtnLabel: 'No'\n        })\n        if(canPrintOrders) await this.printOrders(d)\n        else await this.closeModal(d)\n      }\n    },\n    async closeModal(orders: []) {\n      await modalController.dismiss(orders)\n    },\n    async printOrders(orders: any) {\n      const p = new PrintoutService();\n      await orders.forEach(async (element: any) => {\n        const url = `lab/labels/order?order_id=${element.order_id}`\n        await p.printLbl(url);\n      });\n      await modalController.dismiss(orders)\n    },\n  },\n  computed: {\n    isOrderComplete(): boolean {\n      if (typeof this.activeIndex != 'number') {\n        return false\n      }\n      if (this.canScanDBS && /hiv viral load/i.test(this.testTypes[this.activeIndex]['name']) && \n        !this.testTypes[this.activeIndex]['accessionNumber']) {\n          return false\n      }\n      if(this.extendedLabsEnabled){\n        return !!this.testTypes[this.activeIndex]['reason'] \n      }\n      return (this.testTypes[this.activeIndex]['specimenConcept'] || this.testTypes[this.activeIndex]['specimen']) \n        && this.testTypes[this.activeIndex]['reason'] \n    },\n    selectedOrders(): any {\n      return this.testTypes.filter((data: any) => data.isChecked === true);\n    },\n    finalOrders(): any {\n      return this.selectedOrders.filter((data: any) => {\n        if (this.canScanDBS && /hiv viral load/i.test(data.name) && !data.accessionNumber) {\n          return false\n        }\n        return data.reason && (data.specimen && !this.extendedLabsEnabled \n          || this.extendedLabsEnabled)\n      })\n    },\n    testReasons(): Array<string> {\n      let reasons = this.reasons;\n      if (this.testTypes[this.activeIndex].name.match(/Viral load/i)) {\n         reasons = reasons.filter((r: string) => r !== 'Stat')\n         reasons = reasons.concat(['Follow up after Low Level Viremia', 'Follow up after High Viral Load'])\n      }\n      return reasons    \n    }\n  },\n  mounted() {\n    this.getActivities();\n  },\n  data() {\n    return {\n      canScanDBS: false,\n      verifyingBarcode: false,\n      content: \"Content\",\n      extendedLabsEnabled: false as boolean,\n      appActivities: [] as Array<ActivityInterface>,\n      testTypes: [] as any,\n      specimens: [],\n      reasons: ['Routine', 'Targeted', 'Confirmatory', 'Stat', 'Repeat / Missing'],\n      activeIndex: null as any\n    };\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    BarcodeInput,\n    IonCheckbox,\n    IonRadioGroup,\n    IonRow,\n  },\n});\n","import { render } from \"./LabOrderModal.vue?vue&type=template&id=79ed58e6&scoped=true&ts=true\"\nimport script from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./LabOrderModal.vue?vue&type=style&index=0&id=79ed58e6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-79ed58e6\"]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\nimport { PrintoutService } from \"@/services/printout_service\";\nimport { Service } from \"@/services/service\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\n\nexport class PatientRadiologyService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 121, providerID) \n  }\n\n  static async getRadiologyList(radiologyType: string, filter = '') {\n    return ConceptService.getConceptSet(radiologyType, filter) \n  }\n\n  async getRadiologyObs(patientId: number) {\n    try {\n      const path = 'radiology/radiology_orders?patient_id='+patientId\n      const data = await Service.getJson(path)\n      return data\n    } catch (error) {\n      return 0\n    }\n  }\n\n  async showPreviousRadiolgy(patient: any): Promise<boolean> {\n    if ( (await this.getRadiologyObs(patient.getID())).length > 0 ) {\n      return true\n    }\n    return false\n  }\n\n  async getPreviousRadiologyExaminations(patient: any): Promise<any>{\n    const thirdpartyapps  =  await Service.getThirdpartyApps()\n    let url = '' \n    for (const app of thirdpartyapps) {\n      if(app.name == 'pacs') {\n        url = app.url\n      }\n    }\n    if (isEmpty(url)) {\n      url = `opd/encounters/radiology/${this.patientID}`\n    }\n    const data =  await this.getRadiologyObs(patient.getID())\n    if(!(data.length > 0)) { \n      return false;\n    } else {\n      return { data: data, url: url}\n    }\n  }\n\n  async submitToPacs(savedObsData: any, patient: any) {\n    let accessionNumber\n    for(const order of savedObsData) {\n      accessionNumber = order.children[0].accession_number\n    }\n    const orders = await Promise.all(savedObsData.map(async (order: any) => ({\n      \"main_value_text\": order.value_text,\n      \"obs_id\": order.obs_id,\n      \"sub_value_text\": order.children[0].value_text\n    })))\n    const patientData = {\n      \"patient_name\": patient.getFullName(),\n      \"patientAge\": patient.getAge(),\n      \"patientDOB\": patient.getBirthdate(),\n      \"patientGender\": patient.getGender(),\n      \"national_id\": patient.getNationalID(),\n      \"person_id\": patient.getID(),\n      \"encounter_id\": this.getEncounterID(),\n      \"date_created\": this.getDate(),\n      \"accession_number\": accessionNumber\n    }\n    const provider = {\n      \"username\": Service.getUserName(),\n      \"userID\": Service.getUserID(),\n      \"userRoles\": Service.getUserRoles(),\n    }\n    return Service.postJson(`radiology/radiology_orders`, {\n      'patient_details': patientData,\n      'physician_details': provider,\n      'radiology_orders': orders\n    }) \n  }\n\n  async getAccesionNumber() {\n    return (await Service.getJson(`sequences/next_accession_number`))['accession_number']\n  }\n\n  async obsObj(data: Array<any>) {\n    const lastAccessionNumber = await this.getAccesionNumber()\n    const observations = [] as Array<any>\n    for (const order of data) {\n      observations.push(\n        {\n          'concept_id': order.concept_id, \n          'value_text':  await ConceptService.getConceptName(order.child.concept_id),\n          child:[{\n            'concept_id': order.child.concept_id,\n            'accession_number': lastAccessionNumber,\n            'value_text': await ConceptService.getConceptName(order.child.value_coded)\n          }]\n        }\n      )\n    }\n    return observations\n  } \n\n  async printOrders(orders: any, patient: Patientservice) {\n    const printService = new PrintoutService()\n    const patientNationalId = patient.getNationalID()\n    const patientName = patient.getFullName()\n    const urls: string[] = [];\n    for(const order of orders) {\n      const fullXrayOrder = order.value_text +\": \"+ order.children[0].value_text\n      urls.push(`/radiology/barcode`\n        + `?accession_number=${order.children[0].accession_number}`\n        + `&patient_national_id=${patientNationalId}`\n        + `&patient_name=${patientName}`\n        + `&radio_order=${fullXrayOrder}`\n        + `&date_created=${HisDate.toStandardHisDisplayFormat(order.obs_datetime)}`\n      )\n    }\n\n    await printService.batchPrintLbls(urls, true)\n  }\n}","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\n\nexport class PatientComplaintsService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 122, providerID) \n  }\n\n  static async getComplaintsList(complaintType: string, filter = '') {\n    return ConceptService.getConceptSet(complaintType, filter) \n  }\n  async fetchLatestTriageEncounter() { \n   return await PatientComplaintsService.getObs({\n        'concept_id': ConceptService.getConceptID(\"History of COVID-19 contact\") ,\n        'start_date': this.date,\n        'end_date': this.date,\n        'person_id': this.patientID,\n    })\n  }\n}\n","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_radiology_picker = _resolveComponent(\"his-radiology-picker\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Radiology Examination\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_his_radiology_picker, { onOnValue: _ctx.onValue }, null, 8, [\"onOnValue\"])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.onSubmit())),\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.emitedSelectedOptions.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.closeModal())),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  IonFooter,\n} from \"@ionic/vue\";\nimport { defineComponent } from 'vue'\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/AETC/services/patient_radiology_service\";\nimport HisRadiologyPicker from '@/components/FormElements/HisRadiologyPicker.vue'\nimport AETC_GLOBAL_PROP from \"@/apps/AETC/aetc_global_props\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  components: { \n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonFooter,\n    HisRadiologyPicker\n  },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false,\n    emitedSelectedOptions: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await AETC_GLOBAL_PROP.isPACsEnabled())\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onValue(selected: any) {\n      this.emitedSelectedOptions = selected\n    },\n    async getSelected() {\n      return this.emitedSelectedOptions.map(async (option: any) => ({\n        ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n        child: [await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id)]\n      }))\n    },\n    async onSubmit(){\n      if(!isEmpty(this.emitedSelectedOptions)) {\n        this.closeModal()\n        let data = await this.getSelected()\n        data = await Promise.all(data)\n        await this.radiologyService.createEncounter()\n        const obsObj = await this.radiologyService.obsObj(data) \n        const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n        await this.radiologyService.printOrders(savedObsData, this.patient)\n        if(this.isPacsEnabled) {\n          try {\n            await this.radiologyService.submitToPacs(savedObsData, this.patient)\n          } catch (error) {\n            console.log(error)\n          }\n        }\n      }\n    },\n    async closeModal() {\n      await modalController.dismiss([])\n    }\n  },\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=2d597bd1&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientComplaintsService } from \"@/apps/AETC/services/patient_complaints_service\";\nimport LabOrderModal from \"@/components/DataViews/LabOrderModal.vue\"\nimport radiology from \"@/apps/AETC/views/encounters/modals/radiology.vue\"\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { modalController, IonPage } from '@ionic/vue';\nimport { ObservationService } from \"@/services/observation_service\"\nimport { EncounterService } from '@/services/encounter_service'\nimport HisDate from \"@/utils/Date\"\nimport AETC_GLOBAL_PROP from \"@/apps/AETC/aetc_global_props\";\n\nexport default defineComponent({\n  components: { HisStandardForm, IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    complaintsService: {} as any,\n    todaysDate: ObservationService.getSessionDate(),\n    presentingComplaints: \"\" as any,\n    isPacsEnabled: false,\n    radiologyBtnName: 'Radiology Order',\n    hasTriageComplaints: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.complaintsService = new PatientComplaintsService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await AETC_GLOBAL_PROP.isPACsEnabled())\n          this.hasTriageComplaints = await this.getTriagePresentingComplaints()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){     \n      const data = await Promise.all(computedData.complaints)   \n      await this.complaintsService.createEncounter()    \n      await this.complaintsService.saveObservationList(data)\n      this.nextTask()        \n    },\n    async launchOrderSelection() {\n      const modal = await modalController.create({\n        component: LabOrderModal,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async launchRadiologyOrderSelection() {\n      const modal = await modalController.create({\n        component: radiology,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async getTriagePresentingComplaints(){\n      const data =  await this.complaintsService.fetchLatestTriageEncounter();\n      if(!(data.length > 0)){ return false;}\n\n      const encounters = await EncounterService.getEncounters(this.patientID, this.todaysDate)\n      const todayPresentingComplaints = encounters.filter(function (el: any){\n        return el.type.name == \"TRIAGE PRESENTING COMPLAINTS\" &&\n        HisDate.toStandardHisFormat(el.encounter_datetime) == ObservationService.getSessionDate() \n      });\n      if(!(todayPresentingComplaints.length > 0)) {return false;}\n\n      this.presentingComplaints =   todayPresentingComplaints[0].observations;\n      return true;\n    },\n    buildResults() {\n      const columns = [ 'Group','Presenting complaints'];\n      let group = \"\";\n      let rows =this.presentingComplaints.map((item: any) =>{\n        if(item.obs_group_id != null)\n          return [group,item.value_text]\n\n        group = item.value_text;\n      });\n      rows = rows.filter((el: any) =>{\n        return el != undefined\n      })\n      this.presentingComplaints = rows;\n      return [\n        {\n          label: '',\n          value: '',\n          other: { columns, rows},\n        },\n      ];\n    },\n\n    getFields(): Array<Field>{\n      return [\n        {\n          id: \"triage_complaints\",\n          helpText: \"Triaging Complaints\",\n          condition: () => this.hasTriageComplaints,\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'complaints',\n          helpText: 'Presenting Complaints',\n          type: FieldType.TT_COMPLAINTS_PICKER,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.complaintsService.buildValueCoded('Presenting complaint', option.other.parent)),\n              child: [await this.complaintsService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id)]\n            }))\n          },\n          config: {\n            hiddenFooterBtns: [ this.showRadiologyOdersBtn(), this.disableBackBtn()],\n            footerBtns: [\n              {\n                name: \"Lab Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              },\n              {\n                name: this.radiologyBtnName,\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchRadiologyOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              }\n            ],\n          }\n        },\n        {\n          id: \"all_presenting_complaints\",\n          helpText: \"Summary\",\n          condition: () => this.presentingComplaints.length > 0,\n          type: FieldType.TT_SUMMARY,\n          options: (d: any, b: any) => this.buildSummaryResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ]\n    },\n    showRadiologyOdersBtn() {\n      if(this.isPacsEnabled) {\n        return ''\n      } else return this.radiologyBtnName\n    },\n    buildSummaryResults(data: any) {\n      const OPDComplaint = data.complaints.map((value: any)=>{\n        return {\n          'label': \"OPD Complaints\",\n          'value': value.label,\n        };\n      })\n      const triageComplaint = this.presentingComplaints.map((value: any)=>{\n        return {\n          'label': 'Triaging Complaints',\n          'value': value[1],\n        };\n      })\n      return OPDComplaint.concat(triageComplaint);\n    },\n    disableBackBtn() {\n      if(this.hasTriageComplaints) {\n        return ''\n      } else return 'Back'\n    }\n  }\n})\n","import { render } from \"./Complaints.vue?vue&type=template&id=e265d6f0&ts=true\"\nimport script from \"./Complaints.vue?vue&type=script&lang=ts\"\nexport * from \"./Complaints.vue?vue&type=script&lang=ts\"\n\nimport \"./Complaints.vue?vue&type=style&index=0&id=e265d6f0&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_ASYNC_MULTI_SELECT = 'AsyncMultiSelect',\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_ASYNC_MULTI_SELECT,\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Complaints.vue?vue&type=style&index=0&id=e265d6f0&lang=css\"","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./AsyncMultiSelect.vue\": [\n\t\t\"5de2\",\n\t\t\"chunk-45847ec4\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"TouchFormElement14~TouchFormElement21~TouchFormElement25\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"TouchFormElement14~TouchFormElement21~TouchFormElement25\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"TouchFormElement14~TouchFormElement21~TouchFormElement25\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-45847ec4\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"chunk-362ef7b9\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement53\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement54\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}