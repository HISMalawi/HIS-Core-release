{"version":3,"sources":["webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/apps/RADIOLOGY/views/RadiologyPreferences.vue?f2b0","webpack:///./src/apps/RADIOLOGY/views/RadiologyPreferences.vue","webpack:///./src/apps/RADIOLOGY/views/RadiologyPreferences.vue?0a29","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts","webpack:///./src/apps/RADIOLOGY/radiology_global_props.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","defineComponent","name","components","TouchScreenForm","emits","data","props","type","Function","Boolean","default","String","Object","required","methods","formData","computedData","this","$emit","i","__exports__","_component_his_standard_form","_resolveComponent","_component_ion_page","_withCtx","_createVNode","_","HisStandardForm","IonPage","preference","created","$route","params","defaultReferralLocation","prop","GlobalPropertyService","set","toastSuccess","$router","back","isPreference","id","RADIOLOGY_GLOBAL_PROP","DEFAULT_REFERRAL_LOCATION","helpText","FieldType","TT_SELECT","computedValue","v","label","defaultValue","RADIOLOGY_PROP","validation","val","Validation","condition","options","filter","getFacilities","config","showKeyboard","isFilterDataViaApi","LocationService","facilities","f","isEmpty","trim","map","facility","value","location_id","other","getLabFacilities","getLabs","getFacilityWards","tag","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","getVillagesByName","page","getLandmarks","landmarks","landmark","code","get"],"mappings":"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","file":"js/chunk-1aaa69a2.2294c8ef.js","sourcesContent":["import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onFinish,\n        skipSummary: true\n      }, null, 8, [\"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport RADIOLOGY_PROP from \"@/apps/RADIOLOGY/radiology_global_props\"\nimport { RADIOLOGY_GLOBAL_PROP } from \"@/apps/RADIOLOGY/radiology_global_props\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from '@/components/Forms/FieldInterface';\nimport { GlobalPropertyService } from '@/services/global_property_service';\nimport { toastSuccess } from '@/utils/Alerts';\nimport { IonPage } from \"@ionic/vue\"\nimport {\n\tgetFacilities\n} from '@/utils/HisFormHelpers/LocationFieldOptions'\n\nexport default defineComponent({\n\tcomponents: { HisStandardForm, IonPage },\n\tdata: () => ({\n\t\tpreference: '' as string,\n\t\tfields: [] as any\n\t}),\n\tcreated() {\n\t\tthis.preference = this.$route.params.name as string\n\t\tthis.fields = [\n\t\t\t...this.defaultReferralLocation()\n\t\t]\n\t},\n\tmethods: {\n\t\tasync onFinish(_: any, data: Record<string, any>) {\n\t\t\tfor(const prop in data) {\n\t\t\t\tawait GlobalPropertyService.set(prop, data[prop])\n\t\t\t\ttoastSuccess('Property has been updated', 2000)\n\t\t\t}\n\t\t\tthis.$router.back()\n\t\t},\n        isPreference(prop: string) {\n\t\t\treturn !this.preference || prop === this.preference\n\t\t},\n\t\tdefaultReferralLocation() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: RADIOLOGY_GLOBAL_PROP.DEFAULT_REFERRAL_LOCATION,\n\t\t\t\t\thelpText: 'Default external referral location',\n\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\tcomputedValue: (v: Option) => v.label,\n\t\t\t\t\tdefaultValue: () => RADIOLOGY_PROP.defaultReferralLocation(),\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\n\t\t\t\t\tcondition: () => this.isPreference('default_referral_location'),\n\t\t\t\t\toptions: (_: any, filter='') => getFacilities(filter),\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tshowKeyboard: true,\n\t\t\t\t\t\tisFilterDataViaApi: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n})\n","import { render } from \"./RadiologyPreferences.vue?vue&type=template&id=1b97face&ts=true\"\nimport script from \"./RadiologyPreferences.vue?vue&type=script&lang=ts\"\nexport * from \"./RadiologyPreferences.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport async function getVillagesByName(name='a', page=1): Promise<Option[]> {\n    const villages = await LocationService.getVillagesByName(name, page)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport function getLandmarks(): Option[] {\n    const landmarks = [\n        'Catholic Church',\n        'CCAP',\n        'Seventh Day',\n        'Mosque',\n        'Primary School',\n        'Borehole',\n        'Secondary School',\n        'College',\n        'Market',\n        'Football Ground',\n        'Other'\n    ]\n\n    return landmarks.map(landmark =>({\n        label: landmark,\n        value: landmark,\n        other: {\n            code: landmark\n        }\n    }))\n}\n","import { GlobalPropertyService } from \"@/services/global_property_service\"\n\nexport enum RADIOLOGY_GLOBAL_PROP {\n    DEFAULT_REFERRAL_LOCATION = 'default.referral.location'\n}\n\nexport default {\n    defaultReferralLocation: () => GlobalPropertyService.get(RADIOLOGY_GLOBAL_PROP.DEFAULT_REFERRAL_LOCATION)\n}"],"sourceRoot":""}