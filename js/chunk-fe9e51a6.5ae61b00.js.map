{"version":3,"sources":["webpack:///./src/apps/OPD/services/hmis_report_service.ts","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMIS15.vue?ad10","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMIS15.vue","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMIS15.vue?4a27","webpack:///./src/apps/OPD/services/idsr_service.ts","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMISTemplate.vue?81f2","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMISTemplate.vue","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMISTemplate.vue?7d79","webpack:///./src/apps/OPD/views/reports/ReportMixin.vue","webpack:///./src/apps/OPD/views/reports/ReportMixin.vue?c14d","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue?88ad","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue?9f3c","webpack:///./src/apps/OPD/services/opd_report_service.ts"],"names":["HMISReportService","regenerate","this","getReport","request","params","all","count","Object","entries","key","value","temp","condition","item","id","name","total","totalPatientIds","value1","conditionDetails","length","push","IDSRConditionsObj","CSVString","row","OpdReportService","_hoisted_1","_hoisted_2","_createVNode","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_loading","_resolveComponent","_component_his_standard_form","_component_hmis_header","_component_hmis_template","_component_ion_content","_component_his_footer","_component_ion_page","_openBlock","_createBlock","_Fragment","isLoading","message","reportReady","_createCommentVNode","onOnFinish","onPeriod","skipSummary","fields","default","_withCtx","componentKey","reportName","ref","periodLabel","periodDates","clinicName","totalOPDVisits","TotalOPDVisits","onDrillDown","hmis15Data","_","btns","defineComponent","mixins","ReportMixinVue","components","IonLoading","HmisHeader","HmisTemplate","HisStandardForm","HisFooter","IonPage","IonContent","data","formData","computedFormData","reportID","getLocationName","created","getBtns","getDateDurationFields","methods","form","config","report","setRegenerate","setStartDate","HisDate","toStandardHisFormat","start_date","setEndDate","end_date","getReportPeriod","requestHMIS15","hmis","getAttendance","visits","console","log","size","slot","color","visible","onClick","rep","$refs","onDownload","exportToCustomPDF","$router","path","__exports__","IDSRReportService","lessThanFiveYears","lessThanFiveYearsPatientIds","greaterThanEqualFiveYears","greaterThanEqualFiveYearsPatientIds","key1","epiWeeks","Service","getJson","epiWeeksObj","reverse","forEach","dates","split","startDate","endDate","txt","start","end","months","_payload","monthandyear","startandendmonths","trim","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","String","required","computedData","$emit","i","class","style","_component_report_table","columns","rows","tableCssTheme","ReportTable","conditions","table","thTxt","renderResults","Conditions","buildRows","getCSVString","dayjs","format","getCoreVersion","getApiVersion","getSiteUUID","csvData","Blob","reportTitle","quarter","navigator","msSaveBlob","link","document","createElement","href","window","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","td","textAlign","buildRow","patientIds","tdLink","watch","immediate","handler","period","customFileName","drillDownCache","toDate","date","toStandardHisDisplayFormat","confirmPatient","patient","title","printW","open","content","getElementById","write","innerHTML","setTimeout","print","close","conditionName","isEmpty","rowParser","ids","Promise","map","Patientservice","findByID","personDetails","getGivenName","getFamilyName","getGender","getAge","getPhoneNumber","getCurrentDistrict","getCurrentVillage","getClosestLandmark","tdBtn","modalController","dismiss","drilldownData","drilldownAsyncRows","asyncRows","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","modal","present","getDefaultDrillDownTable","tableRows","defaultRow","index","getArvNumber","tdDate","getBirthdate","toString","runTableDrill","drill","values","getEpiweeksFields","helpText","FieldType","TT_SELECT","validation","val","Validation","options","getReportEpiWeeks","items","q","label","moment","other","getMonthlyFields","getReportMonths","useQuarter","setCustomQuarterPeriod","maxQuarter","minDate","maxDate","getSessionDate","quarters","getReportQuarters","generateDateFields","f","estimation","allowUnknown","computeValue","unload","d","s","c","reportparams","Number","rangeLabel","range","colspan","sortable","exportable","mounted","initTable","newValue","oldValue","tableHeaders","LA_TYPES","one","two","three","four","NCD_TYPES","MENTAL_HEALTH_DIAGNOSIS","epiweek","programID","getProgramID","url","printService","PrintoutService","keys","v","printLbl","Url","parameterizeObjToString","buildRequest","payload","minDuration","year","getCurrentYear"],"mappings":"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","file":"js/chunk-fe9e51a6.5ae61b00.js","sourcesContent":["import { OpdReportService } from \"./opd_report_service\";\n\nexport class HMISReportService extends OpdReportService {\n    regenerate: boolean;\n    constructor() {\n        super()\n        this.regenerate = false\n    }\n\n    setRegenerate(regenerate: boolean) {\n        this.regenerate = regenerate\n    }\n\n    requestHMIS15() {\n        return this.getReport('generate_hmis_15_report', {\n            request: 'true'\n        })\n    }\n\n    requestHMIS17() {\n        return this.getReport('generate_hmis_17_report', {\n            request: 'true',\n        })\n    }\n\n    renderResults(params: any) {\n        const all = []\n        let count = 1\n        for (const [key, value] of Object.entries(params)) {\n            const temp: any = []\n            const condition: any = value\n            const item = {\n                id: 0,\n                name: '',\n                total: 0,\n                totalPatientIds: ''\n            }\n            item.name = key\n            let total = 0\n            item.id = count\n            count += 1 \n            for (const [key1, value1] of Object.entries(condition)) {\n                key1\n                const conditionDetails: any = value1\n                if (conditionDetails != null) {\n                    total +=conditionDetails.length;\n                    item.total = total\n                    if(conditionDetails.length) {\n                        temp.push(...conditionDetails)\n                        item.totalPatientIds = temp\n                    }\n            }\n          }\n          all.push(item)\n        }\n        return all\n    }\n\n    getCSVString(IDSRConditionsObj: any) {\n        let CSVString = `Diseases/Events/Conditions, #,\\n`\n        for(const condition of IDSRConditionsObj) {\n          const row = `${condition.name},${condition.total},\\n`\n          CSVString+=row\n        }\n        return {CSVString}\n    }\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { id: \"report-content\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"div\", { id: \"print\" }, null, -1)\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_loading = _resolveComponent(\"ion-loading\")\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_hmis_header = _resolveComponent(\"hmis-header\")\n  const _component_hmis_template = _resolveComponent(\"hmis-template\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_his_footer = _resolveComponent(\"his-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_loading, {\n      \"is-open\": _ctx.isLoading,\n      message: \"Please wait...\"\n    }, null, 8, [\"is-open\"]),\n    (!_ctx.reportReady)\n      ? (_openBlock(), _createBlock(_component_his_standard_form, {\n          key: 0,\n          onOnFinish: _ctx.onPeriod,\n          skipSummary: true,\n          fields: _ctx.fields\n        }, null, 8, [\"onOnFinish\", \"fields\"]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.reportReady)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 1 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createVNode(\"div\", _hoisted_1, [\n                  _createVNode(_component_hmis_header, {\n                    key: _ctx.componentKey,\n                    reportName: _ctx.reportName,\n                    ref: \"header\",\n                    periodLabel: _ctx.periodLabel,\n                    periodDates: _ctx.periodDates,\n                    clinicName: _ctx.clinicName,\n                    totalOPDVisits: _ctx.TotalOPDVisits\n                  }, null, 8, [\"reportName\", \"periodLabel\", \"periodDates\", \"clinicName\", \"totalOPDVisits\"]),\n                  _createVNode(_component_hmis_template, {\n                    key: _ctx.componentKey,\n                    reportName: _ctx.reportName,\n                    onDrillDown: _ctx.onDrillDown,\n                    params: _ctx.hmis15Data,\n                    periodDates: _ctx.periodDates,\n                    ref: \"rep\"\n                  }, null, 8, [\"reportName\", \"onDrillDown\", \"params\", \"periodDates\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, { btns: _ctx.btns }, null, 8, [\"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    _hoisted_2\n  ], 64 /* STABLE_FRAGMENT */))\n}","\nimport { defineComponent } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport { IonPage, IonContent, IonLoading } from \"@ionic/vue\"\nimport { Field } from '@/components/Forms/FieldInterface'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport ReportMixinVue from \"../../ReportMixin.vue\";\nimport { HMISReportService } from \"@/apps/OPD/services/hmis_report_service\"\nimport HmisHeader from \"@/apps/OPD/views/reports/moh/MOHReportHeader.vue\"\nimport HmisTemplate from \"@/apps/OPD/views/reports/moh/HMIS/HMISTemplate.vue\"\nimport HisDate from \"@/utils/Date\"\nimport { NavBtnInterface } from \"@/components/HisDynamicNavFooterInterface\";\n\nexport default defineComponent({\n  mixins: [ReportMixinVue],\n  components: { IonLoading, HmisHeader, HmisTemplate, HisStandardForm, HisFooter, IonPage, IonContent },\n  data: () => ({\n    formData: {} as any,\n    componentKey: 0 as number,\n    computedFormData: {} as any,\n    hmis15Data: {} as any,\n    btns: [] as Array<NavBtnInterface>,\n    isLoading: false as boolean,\n    fields: [] as Array<Field>,\n    reportID: -1 as any,\n    periodLabel: 'Period',\n    periodDates: '' as string,\n    reportName: 'HMIS 15',\n    TotalOPDVisits: 0 as number,\n    clinicName: HMISReportService.getLocationName(),\n    reportReady: false as boolean,\n  }),\n  created() {\n    this.btns = this.getBtns()\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async onPeriod(form: any, config: any, regenerate=false) {\n      this.componentKey += 1\n      this.formData = form\n      this.computedFormData = config\n      this.reportReady = true \n      this.isLoading = true\n      this.report = new HMISReportService()\n      this.report.setRegenerate(regenerate)\n      this.report.setStartDate(HisDate.toStandardHisFormat(config.start_date))\n      this.report.setEndDate(HisDate.toStandardHisFormat(config.end_date))\n      this.periodDates = this.report.getReportPeriod()\n      try {\n        const hmis = await this.report.requestHMIS15()\n        const visits = await this.report.getAttendance()\n        if(hmis && visits) {\n          this.reportID = \"data\"\n          this.TotalOPDVisits = visits.length\n          this.hmis15Data = hmis\n        }\n      } catch (error) {\n        console.log(error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n    getBtns() {\n      return  [\n        {\n          name: \"CSV\",\n          size: \"large\",\n          slot: \"start\",\n          color: \"primary\",\n          visible: true,\n          onClick: async () => {\n            const rep = this.$refs.rep as any\n            rep.onDownload()\n          }\n        },\n        {\n          name: \"PDF\",\n          size: \"large\",\n          slot: \"start\",\n          color: \"primary\",\n          visible: true,\n          onClick: () => this.exportToCustomPDF(this.reportName)\n        },\n        {\n          name: \"Back\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"warning\",\n          visible: true,\n          onClick: () => this.reportReady = false\n        },\n        {\n          name: \"Refresh\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"warning\",\n          visible: true,\n          onClick: async () => await this.onPeriod(this.formData, this.computedFormData, true)\n        },\n        {\n          name: \"Finish\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"success\",\n          visible: true,\n          onClick: () => this.$router.push({ path:'/' })\n        }\n      ]   \n    }\n  }\n})\n","import { render } from \"./HMIS15.vue?vue&type=template&id=3293bc8f&ts=true\"\nimport script from \"./HMIS15.vue?vue&type=script&lang=ts\"\nexport * from \"./HMIS15.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { OpdReportService } from \"./opd_report_service\";\nimport moment from \"dayjs\"\nimport { Service } from \"@/services/service\";\n\nexport interface CohortValidationInterface {\n    param: number | string;\n    error: (indicator: number, param: number) => string;\n    check: (indicator: number, param: number) => boolean;\n}\n\nexport interface CommonInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport class IDSRReportService extends OpdReportService {\n    regenerate: boolean;\n    constructor() {\n        super()\n        this.regenerate = false\n    }\n\n    setRegenerate(regenerate: boolean) {\n        this.regenerate = regenerate\n    }\n\n    requestIDSRWeekly() {\n        return this.getReport('generate_weekly_idsr_report', {\n            request: 'true',\n        })\n    }\n\n    requestIDSRMonthly() {\n        return this.getReport('generate_monthly_idsr_report', {\n            request: 'true',\n        })\n    }\n\n    renderResults(params: any) {\n        const all = []\n        let count = 1\n        for (const [key, value] of Object.entries(params)) {\n            const temp: any = []\n            const condition: any = value\n            const item = {\n                id: 0,\n                name: '',\n                lessThanFiveYears: '',\n                lessThanFiveYearsPatientIds: '',\n                greaterThanEqualFiveYears: '',\n                greaterThanEqualFiveYearsPatientIds: '',\n                total: 0,\n                totalPatientIds: ''\n            }\n            item.name = key\n            let total = 0\n            item.id = count\n            count += 1 \n            for (const [key1, value1] of Object.entries(condition)) {\n                const conditionDetails: any = value1\n                if (conditionDetails != null) {\n                    total +=conditionDetails.length;\n                    item.total = total\n                    if(conditionDetails.length) {\n                        temp.push(...conditionDetails)\n                        item.totalPatientIds = temp\n                    }\n                    if (key1 == '<5yrs') {\n                    item.lessThanFiveYears = conditionDetails.length\n                    item.lessThanFiveYearsPatientIds = conditionDetails\n                    }\n                if (key1 == '>=5yrs') {\n                item.greaterThanEqualFiveYears = conditionDetails.length\n                item.greaterThanEqualFiveYearsPatientIds = conditionDetails\n                }\n            }\n          }\n          all.push(item)\n        }\n        return all\n    }\n\n    getCSVString(IDSRConditionsObj: any) {\n        let CSVString = `Diseases/Events/Conditions, <5 yrs, >=5 yrs, Total,\\n`\n        for(const condition of IDSRConditionsObj) {\n            CSVString += `${condition.name},${condition.lessThanFiveYears},${condition.greaterThanEqualFiveYears},${condition.total},\\n`  \n        }\n        return {CSVString}\n    }\n\n    static async getReportEpiWeeks() {\n        const epiWeeks: Array<CommonInterface> = []\n        const epiWeeksObj = await Service.getJson('get_weeks')\n        epiWeeksObj.reverse().forEach( (item: any) => { \n            const dates = item[1].split(\" \")\n            const startDate = dates[0]\n            const endDate = dates[2]\n            const txt = item[0].split('W')\n            const name = txt[0] +\"/W\"+ txt[1]\n            epiWeeks.push({ name: name, start: startDate, end: endDate })\n        })\n        return epiWeeks\n    }\n\n    static async getReportMonths() {\n        const months: Array<CommonInterface> = []\n        const epiWeeksObj = await Service.getJson('get_months')\n        epiWeeksObj.forEach( (item: any) => {\n            const _payload = item[1];\n            const monthandyear = _payload[0]\n            const startandendmonths = _payload[1];\n            const dates = startandendmonths.split(\"to\");\n            months.push({ name: monthandyear, start: dates[0], end: dates[1].trim() })\n        })\n        return months\n    }\n}\n","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"my-table\",\n  style: {\"margin\":\"auto\",\"width\":\"95%\",\"margin-top\":\"3%\",\"margin-bottom\":\"3%\"}\n}\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_table = _resolveComponent(\"report-table\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_report_table, {\n      columns: _ctx.columns,\n      rows: _ctx.rows,\n      config: {tableCssTheme: _ctx.tableCssTheme}\n    }, null, 8, [\"columns\", \"rows\", \"config\"])\n  ]))\n}","\n/* eslint-disable @typescript-eslint/camelcase */\nimport { defineComponent } from 'vue'\nimport { HMISReportService } from \"@/apps/OPD/services/hmis_report_service\"\nimport { Service } from \"@/services/service\"\nimport dayjs from 'dayjs'\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n  components: { ReportTable },\n  data: function(){\n    return {\n      conditions: [] as any,\n      tableCssTheme: 'opd-report-theme',\n      total: ' Total ',\n      rows: [] as RowInterface[][],\n      columns: [\n      [\n        table.thTxt(''),\n        table.thTxt('Diseases/Events/Conditions'),\n        table.thTxt('UNVERIFIED'),\n        table.thTxt('VERIFIED'),\n      ]\n    ] as ColumnInterface[][],\n    }\n  },\n  props: ['params', 'periodDates', 'quarter', 'onDrillDown', 'reportName'],\n  methods: {\n   renderResults() {\n     const report = new HMISReportService()\n     const Conditions = report.renderResults(this.params)\n     if(Conditions.length) {\n       this.conditions = Conditions\n       this.rows = this.buildRows(Conditions)\n     } \n   },\n   onDownload() {\n     const report = new HMISReportService()\n     let {CSVString} = report.getCSVString(this.conditions)\n     CSVString += `\n          Date Created: ${dayjs().format('DD/MMM/YYYY HH:MM:ss')}\n          His-Core Version: ${Service.getCoreVersion()}\n          API Version: ${Service.getApiVersion()}\n          Report Period: ${this.periodDates}\n          Site: ${Service.getLocationName()}\n          Site UUID: ${Service.getSiteUUID()}`\n          ;\n      // }\n      const csvData = new Blob([CSVString], { type: \"text/csv;charset=utf-8;\" });\n      //IE11 & Edge\n      const reportTitle = `${Service.getLocationName()} ${this.reportName} ${this.quarter}`;\n      \n      if (navigator.msSaveBlob) {\n        navigator.msSaveBlob(csvData, 'exportFilename');\n      } else {\n        //In FF link must be added to DOM to be clicked\n        const link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(csvData);\n        link.setAttribute(\"download\", `${reportTitle}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n   },\n   buildRows(data: any): RowInterface[][] {\n     const rows: RowInterface[][] = []\n     data.forEach((condition: { \n       id: number;\n       name: string;\n       total: number;\n       totalPatientIds: any;\n\n       }) => {\n        rows.push([\n          table.td(condition.id, {style: {textAlign: 'left'}}),\n          table.td(condition.name, {style: {textAlign: 'left'}}),\n          this.buildRow(this.total+'('+condition.name+')', condition.total, condition.totalPatientIds),\n          table.td(''),\n        ])\n     })\n     return rows\n   },\n   buildRow(name: string, count: number, patientIds: any) {\n    if (!(count > 0)) {\n      return table.td(0)\n     } else {\n      return table.tdLink(\n      count,\n      async () =>  this.onDrillDown(name, patientIds)\n      )\n     }\n   }\n  },\n  watch: {\n    params: {\n      immediate: true,\n      handler() {\n        this.renderResults();\n      }\n    }\n  }\n})\n","import { render } from \"./HMISTemplate.vue?vue&type=template&id=0bcecae1&ts=true\"\nimport script from \"./HMISTemplate.vue?vue&type=script&lang=ts\"\nexport * from \"./HMISTemplate.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { OpdReportService } from \"@/apps/OPD/services/opd_report_service\"\nimport { IDSRReportService } from \"@/apps/OPD/services/idsr_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport moment from \"dayjs\"\nimport { Service } from '@/services/service';\nimport { isEmpty } from 'lodash'\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async exportToCustomPDF(title: string) {\n            const printW = open('', '', 'width:1024px, height:768px')\n            const content = document.getElementById('report-content')\n            if (content && printW) {\n                printW.document.write(`\n                    <html>\n                    <head>\n                        <title>${title}</title>\n                        <link rel=\"stylesheet\" media=\"print\" href=\"/assets/css/cohort.css\" />\n                    </head>\n                    <body>\n                        ${content.innerHTML}\n                    </body>\n                    </html>\n                `)\n                setTimeout(() => { printW.print(); printW.close() }, 3500)\n            }\n        },\n        async onDrillDown(conditionName: string, patientIds: number[]) {\n            if(isEmpty(patientIds)) return\n            const columns = [[\n                table.thTxt('First name'),\n                table.thTxt('Last name'),\n                table.thTxt('Gender'),\n                table.thTxt('Age'),\n                table.thTxt('Phone'),\n                table.thTxt('Address'),\n                table.thTxt('Action')\n            ]]\n            const rowParser = async (ids: number[]) => {\n                return await Promise.all(ids.map(async (id) => {\n                const personDetails = await Patientservice.findByID(id)\n                const patient = new Patientservice(personDetails)\n                return [\n                    table.td(patient.getGivenName()),\n                    table.td(patient.getFamilyName()),\n                    table.td(patient.getGender()),\n                    table.td(patient.getAge()),\n                    table.td(patient.getPhoneNumber()),\n                    table.td(`${patient.getCurrentDistrict()}, ${patient.getCurrentVillage()}, ${patient.getClosestLandmark()}`),\n                    table.tdBtn('Select', async () => {\n                    await modalController.dismiss({})\n                    this.$router.push({ path: `/patient/dashboard/${id}`})\n                    })\n                ]\n                })) \n            }\n            return this.drilldownData(conditionName, columns, patientIds, rowParser)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = (tableRows: Array<any[]>) => {\n                return tableRows.map(async (defaultRow: Array<any>) => {\n                    const [index, id ] = defaultRow\n                    if (id in this.drillDownCache) {\n                        //const [oldIndex, ...rest] = this.drillDownCache[id]\n                        return [index] // Assign new index number and maintain patient record\n                    } \n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = [\n                        index,\n                        table.td(patient.getArvNumber()), \n                        table.td(patient.getGender()), \n                        table.tdDate(patient.getBirthdate().toString()),\n                        table.tdBtn('Show', async () => {\n                            await modalController.dismiss({})\n                            this.$router.push({ path: `/patient/dashboard/${id}`})\n                        })\n                    ]\n                    this.drillDownCache[id] = row\n                    return row\n                })\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getEpiweeksFields(): Array<Field> {\n            return [\n                {\n                    id: 'epiweek',\n                    helpText: 'Select EPI week',\n                    type: FieldType.TT_SELECT,\n                    validation: (val: Option) => Validation.required(val),\n                    options: async () => {\n                        const epiWeeks = await IDSRReportService.getReportEpiWeeks()\n                        const items: Array<Option> = epiWeeks.map((q: any) => ({\n                            label: q.name +' - ('+ moment(q.start).format('DD/MMM/YYYY') +' - '+ moment(q.end).format('DD/MMM/YYYY')+')',\n                            value: q.start,\n                            other: q\n                        }))\n                        return items\n                    }\n                },\n            ]\n        },\n        getMonthlyFields(): Array<Field> {\n            return [\n                {\n                    id: 'idsrmonth',\n                    helpText: 'Select Month',\n                    type: FieldType.TT_SELECT,\n                    validation: (val: Option) => Validation.required(val),\n                    options: async () => {\n                        const epiWeeks = await IDSRReportService.getReportMonths()\n                        const items: Array<Option> = epiWeeks.map((q: any) => ({\n                            label: q.name +' - ('+ moment(q.start).format('DD/MMM/YYYY') +' - '+ moment(q.end).format('DD/MMM/YYYY')+')',\n                            value: q.start,\n                            other: q\n                        }))\n                        return items\n                    }\n                },\n            ]\n        },\n        getDateDurationFields(useQuarter=false, setCustomQuarterPeriod=false, maxQuarter=5): Array<Field> {\n            const minDate = '2001-01-01'\n            const maxDate = Service.getSessionDate()\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = OpdReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { style: {\"margin\":\"auto\",\"width\":\"95%\",\"margin-top\":\"1%\"} }\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_table = _resolveComponent(\"report-table\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_report_table, {\n      columns: _ctx.columns,\n      rows: _ctx.rows,\n      config: {tableCssTheme: _ctx.tableCssTheme}\n    }, null, 8, [\"columns\", \"rows\", \"config\"])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n    components: { ReportTable },\n    props: {\n      clinicName: {\n        type: String,\n        default: ''\n      },\n      reportparams: {\n        type: Object,\n        required: true\n      },\n      totalOPDVisits: {\n        type: Number,\n        required: true\n      },\n      reportName: {\n        type: String,\n        required: true\n      },\n      periodLabel: {\n        type: String,\n        required: true\n      },\n      periodDates: {\n        type: String,\n        required: true\n      },\n      rangeLabel: {\n        type: String,\n        required: true\n      },\n      range: {\n        type: String,\n        required: true\n      },\n    },\n    data: function() {\n      return {\n        tableCssTheme: 'opd-report-theme',\n        rows: [] as RowInterface[][],\n        columns: [\n            [\n              table.thTxt(this.reportName, {\n                colspan: 2,\n                sortable: false,\n                exportable: false \n              })\n            ]\n        ] as ColumnInterface[][],\n      }\n    },\n    mounted() {\n      this.initTable()\n    },\n    watch: {\n       totalOPDVisits(newValue, oldValue) {\n         this.initTable()\n       }\n    },\n    methods: {\n      initTable() {\n        const rows: RowInterface[][] = []\n        const tableHeaders = [\n          {\n            name: 'Country:',\n            value: 'Malawi',\n          },\n          {\n            name: 'Reporting Facility Name:',\n            value: this.clinicName\n          },\n          {\n            name: this.rangeLabel+':',\n            value: this.range\n          },\n          {\n            name: this.periodLabel+':',\n            value: this.periodDates\n          },\n          {\n            name: 'Total OPD Visits:',\n            value: this.totalOPDVisits\n          }\n\n        ]\n        tableHeaders.forEach(item => {\n          if(item.name !== 'undefined:') {\n                rows.push([\n                    table.td(item.name, {style: {textAlign: 'left'}}),\n                    table.td(item.value, {style: {textAlign: 'left'}}),\n                ])\n          }\n        })\n        this.rows = rows\n      }\n    }\n  })\n  ","import { render } from \"./MOHReportHeader.vue?vue&type=template&id=3d81af96&ts=true\"\nimport script from \"./MOHReportHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./MOHReportHeader.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport { PrintoutService } from '@/services/printout_service';\nimport Url from \"@/utils/Url\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport const AGE_GROUPS = [\n    '0-5 months', '6-11 months',\n    '12-23 months', '2-4 years', \n    '5-9 years', '10-14 years', \n    '15-17 years', '18-19 years', \n    '20-24 years', '25-29 years', \n    '30-34 years', '35-39 years', \n    '40-44 years', '45-49 years', \n    '50 plus years'\n]\n\nexport const OTHER_AGE_GROUPS = [\n    '<1 year', '1-4 years',\n    '5-9 years', '10-14 years',\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\nexport const LA_TYPES: Record<string, string> = {\n    one: 'AL 1', \n    two: 'AL 2', \n    three: 'AL 3', \n    four: 'LA 4'\n}\n\nexport const NCD_TYPES = [\n    'Diabetes',\n    'Hypertension',\n    'Stroke',\n    'Suspected cancer',\n    'Confirmed cancer',\n    'Palliative cancer',\n    'Asthma',\n    'Depression',\n    'Acute psychosis',\n    'Chronic psychosis',\n    'Epilepsy'\n]\n\nexport const MENTAL_HEALTH_DIAGNOSIS = [\n    'Organic mental disorder (Chronic)',\n    'Organic mental disorder (acute)',\n    'Alcohol use mental disorder',\n    'Drug use mental disorder',\n    'Schizophrenia',\n    'Acute and transient psychotic disorder',\n    'Schizo-affective disorder',\n    'Mood-affective disorder (MANIC)',\n    'Mood-affective disorder (BIPOLAR)',\n    'Mood-affective disorder (DEPRESSION)',\n    'Anxiety disorder',\n    'Stress reaction adjustment disorder',\n    'Dissociative conversion disorder',\n    'Somatoform disorder',\n    'Puerperal mental disorder',\n    'Personality/Behaviour disorder',\n    'Mental retardation',\n    'Psychological mental disorder',\n    'Hyperkinetic conduct disorder',\n    'Epilepsy'\n]\n\nexport class OpdReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    epiweek: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.epiweek = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPatientsWithNIDs() {\n        return this.getReport('with_nids')\n    }\n\n    getClinicRegistrations(){\n        return this.getReport('registration');\n    }\n\n    getAttendance(){\n        return this.getReport(`programs/${this.programID}/reports/attendance`)\n    }\n\n    getDrugsGivenWithoutPrescription() {\n        return this.getReport('drugs_given_without_prescription')\n    }\n\n    getDrugsGivenWithPrescription() {\n        return this.getReport('drugs_given_with_prescription')\n    }\n\n    getDiagnosis(){\n        const url = `programs/${this.programID}/reports/diagnosis`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n\n    getDiagnosisByAddress(){\n        return this.getReport('diagnosis_by_address')\n    }\n\n    getLaPrescriptions(){\n        const url = `programs/${this.programID}/reports/la_prescriptions`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            \n        })\n    }\n\n    printLaReport(data: Record<string, any>){\n        const printService = new PrintoutService()\n        const url = `programs/${this.programID}/barcodes/la_report`\n        const params: Record<string, any> = {\n            \"date[start]\": this.startDate,\n            \"date[end]\": this.endDate\n        }\n        Object.keys(LA_TYPES).forEach((v, i) => {\n            i++\n            params[`${i}[prescription]`] = data[`total_la_${v}_prescribed_drugs`]\n            params[`${i}[dispensed]`] = data[`total_la_${v}_dispensed_drugs`]\n        })\n        return printService.printLbl(`${url}?${Url.parameterizeObjToString(params)}`)\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setEpiWeek(epiweek: string) {\n        this.epiweek = epiweek\n    }\n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.epiweek) {\n            payload['epiweek'] = this.epiweek\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}