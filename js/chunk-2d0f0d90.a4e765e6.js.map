{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Reports/Clinic/AncAppointments.vue?bbf7","webpack:///./src/apps/ANC/Services/anc_clinic_report_service.ts","webpack:///./src/apps/ANC/Views/Reports/Clinic/AncAppointments.vue","webpack:///./src/apps/ANC/Views/Reports/Clinic/AncAppointments.vue?f2de"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","period","rows","fields","columns","showtitleOnly","config","showIndex","onReportConfiguration","onPeriod","_","AncClinicReportService","AncReportService","getJson","this","programID","date","startDate","paginated","defineComponent","mixins","ReportMixin","components","ReportTemplate","IonPage","data","appointments","table","thTxt","exportable","created","report","id","helpText","type","FieldType","TT_APPOINTMENT_PICKER","defaultValue","getSessionDate","validation","val","Validation","required","onValue","context","setStartDate","generateBookedAppointments","length","appointmentCounter","methods","form","HisDate","toStandardHisDisplayFormat","map","p","td","npid","given_name","family_name","gender","tdDate","birthdate","tdBtn","confirmPatient","person_id","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA6BC,8BAAkB,mBAC/CC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,sBAAS,iBAAM,CACtBC,yBAAaP,EAA4B,CACvCQ,MAAOd,EAAKc,MACZC,OAAQf,EAAKe,OACbC,KAAMhB,EAAKgB,KACXC,OAAQjB,EAAKiB,OACbC,QAASlB,EAAKkB,QACdC,eAAe,EACfC,OAAQ,CACAC,WAAW,GAEnBC,sBAAuBtB,EAAKuB,UAC3B,KAAM,EAAG,CAAC,QAAS,SAAU,OAAQ,SAAU,UAAW,8BAE/DC,EAAG,I,kGCnBMC,EAAb,4LACI,WACI,OAAOC,OAAiBC,QAAjB,mBAAqCC,KAAKC,UAA1C,wBAA2E,CAC9EC,KAAMF,KAAKG,UACXC,WAAW,QAJvB,GAA4CN,Q,oFCS7BO,+BAAgB,CAC3BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,sBAAgBC,gBAC9BC,KAAM,iBAAO,CACTzB,MAAO,iBACPgB,KAAM,GACNd,KAAM,GACNwB,aAAc,GACdtB,QAAS,CACL,CACIuB,OAAMC,MAAM,cACZD,OAAMC,MAAM,aAAc,CAAEC,YAAY,IACxCF,OAAMC,MAAM,YAAa,CAAEC,YAAY,IACvCF,OAAMC,MAAM,UACZD,OAAMC,MAAM,aACZD,OAAMC,MAAM,eAIxBE,QAnB2B,WAmBpB,WACHhB,KAAKiB,OAAS,IAAIpB,EAClBG,KAAKX,OAAS,CACV,CACI6B,GAAI,OACJC,SAAU,cACVC,KAAMC,OAAUC,sBAChBC,aAAc,kBAAM1B,EAAuB2B,kBAC3CC,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,IAC9CG,QAAS,WAAF,8CAAE,WAAO3B,EAAc4B,GAArB,8FACL,EAAKb,OAAOc,aAAa7B,GADpB,SAEc,EAAKe,OAAOe,6BAF1B,UAECrB,EAFD,SAGDA,EAAKsB,OAAS,GAHb,uBAID,EAAKrB,aAAeD,EACpBmB,EAAQI,mBAAqB,EAAKtB,aAAaqB,OAL9C,mBAMM,GANN,iCAQE,GARF,2CAAF,wDAAE,MAarBE,QAAS,CACLxC,SADK,SACIyC,GAAS,WACdpC,KAAKZ,KAAO,GACZY,KAAKb,OAASkD,OAAQC,2BAA2BF,EAAKlC,MACtDF,KAAKZ,KAAOY,KAAKY,aAAa2B,KAAI,SAACC,GAAD,MAAa,CAC3C3B,OAAM4B,GAAGD,EAAEE,MACX7B,OAAM4B,GAAGD,EAAEG,YACX9B,OAAM4B,GAAGD,EAAEI,aACX/B,OAAM4B,GAAGD,EAAEK,QACXhC,OAAMiC,OAAON,EAAEO,WACflC,OAAMmC,MAAM,UAAU,kBAAM,EAAKC,eAAeT,EAAEU,sB,qBCzDlE,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAShF,KAErD","file":"js/chunk-2d0f0d90.a4e765e6.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_template = _resolveComponent(\"report-template\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        period: _ctx.period,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        showtitleOnly: true,\n        config: {\n                showIndex: false\n            },\n        onReportConfiguration: _ctx.onPeriod\n      }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","import { AncReportService } from \"./anc_report_service\";\n\nexport class AncClinicReportService extends AncReportService {\n    generateBookedAppointments() {\n        return AncReportService.getJson(`programs/${this.programID}/booked_appointments`, {\n            date: this.startDate,\n            paginated: false\n        })\n    }\n}\n","\nimport { defineComponent } from 'vue'\nimport { AncClinicReportService } from \"@/apps/ANC/Services/anc_clinic_report_service\"\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport { FieldType } from '@/components/Forms/BaseFormElements'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport HisDate from \"@/utils/Date\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { IonPage } from \"@ionic/vue\"\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate, IonPage },\n    data: () => ({\n        title: 'Booked clients',\n        date: '' as string,\n        rows: [] as Array<any>,\n        appointments: [] as any,\n        columns: [\n            [\n                table.thTxt('Identifier'),\n                table.thTxt('First name', { exportable: false }),\n                table.thTxt('Last name', { exportable: false }) ,\n                table.thTxt('Gender'),\n                table.thTxt('birthdate'),\n                table.thTxt('Actions')\n            ]\n        ]\n    }),\n    created() {\n        this.report = new AncClinicReportService()\n        this.fields = [\n            {\n                id: 'date',\n                helpText: 'Select date',\n                type: FieldType.TT_APPOINTMENT_PICKER,\n                defaultValue: () => AncClinicReportService.getSessionDate(),\n                validation: (val: any) => Validation.required(val),\n                onValue: async (date: string, context: any) => {\n                    this.report.setStartDate(date)\n                    const data = await this.report.generateBookedAppointments()\n                    if (data.length > 0) {\n                        this.appointments = data\n                        context.appointmentCounter = this.appointments.length\n                        return true\n                    }\n                    return false\n                }\n            }\n        ]\n    },\n    methods: {\n        onPeriod(form: any) {\n            this.rows = []\n            this.period = HisDate.toStandardHisDisplayFormat(form.date)\n            this.rows = this.appointments.map((p: any) => ([\n                table.td(p.npid),\n                table.td(p.given_name),\n                table.td(p.family_name),\n                table.td(p.gender),\n                table.tdDate(p.birthdate),\n                table.tdBtn('Select', () => this.confirmPatient(p.person_id))\n            ]))\n        }\n    }\n})\n","import { render } from \"./AncAppointments.vue?vue&type=template&id=1742e9f5&ts=true\"\nimport script from \"./AncAppointments.vue?vue&type=script&lang=ts\"\nexport * from \"./AncAppointments.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}