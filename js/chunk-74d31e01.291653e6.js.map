{"version":3,"sources":["webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/apps/OPD/views/encounters/Diagnosis.vue"],"names":["FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","patientID","providerID","facts","ready","watch","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","_component_his_standard_form","_resolveComponent","onSubmit","PatientDiagnosisService","AppEncounterService","constructor","page","limit","conceptSetId","ConceptService","getConceptID","getJson","id","ClinicalNotesService","mixins","EncounterMixinVue","notesService","diagnosisService","malariaTestResult","isReady","this","OrderService","getLatestMalariaTestResult","getFields","_","createEncounter","diagnosisData","saveObservationList","notesData","mapListToOptions","list","item","concept_id","isChecked","malaria","o","alertConfirmation","helpText","FieldType","TT_INFINITE_SCROLL_MULTIPLE_SELECT","validation","Validation","async","getDiagnosis","beforeNext","checkMalariaResult","computedValue","buildValueCodedFromConceptId","summaryMapValue","config","isFilterDataViaApi","showKeyboard","TT_TEXT","v","buildValueText","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info"],"mappings":"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","file":"js/chunk-74d31e01.291653e6.js","sourcesContent":["/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientDiagnosisService } from \"@/apps/OPD/services/patient_diagnosis_service\"\nimport { ClinicalNotesService } from \"@/apps/OPD/services/clinical_notes_service\";\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { isEmpty } from 'lodash';\nimport { ConceptName } from '@/interfaces/conceptName';\nimport { OrderService } from '@/services/order_service';\nimport { alertConfirmation } from '@/utils/Alerts';\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    activeField: '',\n    notesService: {} as any,\n    diagnosisService: {} as any,\n    malariaTestResult: 'No' as string\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.malariaTestResult = await OrderService.getLatestMalariaTestResult(this.patientID)\n          this.notesService = new ClinicalNotesService(this.patientID, this.providerID)\n          this.diagnosisService = new PatientDiagnosisService(this.patientID, this.providerID)\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){\n      await this.diagnosisService.createEncounter()\n      \n      const diagnosisData = await this.resolveObs({...computedData}, 'diagnosis')      \n      await this.diagnosisService.saveObservationList(diagnosisData)\n\n      const notesData = await this.resolveObs({...computedData}, 'notes')\n      if(!isEmpty(notesData)) {\n        await this.notesService.createEncounter()\n        await this.notesService.saveObservationList(notesData)\n      }\n\n      this.nextTask()        \n    },\n    mapListToOptions(list: ConceptName[]){\n      if(isEmpty(list)) return []\n      return list.map(item => ({\n        label: item.name, value: item.name, other: item.concept_id, isChecked: false\n      })).sort((a, b) => a.label < b.label ? -1 : a.label > b.label ? 1 : 0)\n    },\n    async checkMalariaResult(data: Array<any>){\n      const malaria = data.find(o => o.label === 'Malaria')      \n      if(malaria) {\n        if(this.malariaTestResult === \"Positive\") return true\n        return await alertConfirmation(`Patient has ${this.malariaTestResult} malaria test result. Do you want to continue?`)\n      }\n      return true\n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: 'primary_diagnosis',\n          helpText: 'Select primary diagnosis',\n          type: FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n          validation: (data: any) => Validation.required(data),\n          options: async (_, filter='', page=1, limit=10) => this.mapListToOptions(\n            await PatientDiagnosisService.getDiagnosis(filter, page, limit)\n          ),\n          beforeNext: async (data: any) => await this.checkMalariaResult(data),\n          computedValue: (options: Array<Option>) => ({\n            tag: 'diagnosis',\n            obs: options.map(({other}) => \n              this.diagnosisService.buildValueCodedFromConceptId('Primary diagnosis', other))\n          }),\n          summaryMapValue: ({ value }: Option) => ({\n            value,\n            label: \"Primary diagnosis\"\n          }),\n          config: {\n            isFilterDataViaApi: true,\n            showKeyboard: true,\n          }\n        },\n        {\n          id: 'secondary_diagnosis',\n          helpText: 'Select secondary diagnosis',\n          type: FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n          options: async (_, filter='', page=1, limit=10) => this.mapListToOptions(\n            await PatientDiagnosisService.getDiagnosis(filter, page, limit)\n          ),\n          beforeNext: async (data: any) => await this.checkMalariaResult(data),\n          computedValue: (options: Array<Option>) => !isEmpty(options) && ({\n            tag: 'diagnosis',\n            obs: options.map(({other}) => \n              this.diagnosisService.buildValueCodedFromConceptId('Secondary diagnosis', other))\n          }),\n          summaryMapValue: ({ value }: Option) => ({\n            value,\n            label: \"Secondary diagnosis\"\n          }),\n          config: {\n            showKeyboard: true,\n            isFilterDataViaApi: true,\n          }\n        },\n        {\n          id: 'clinical_notes',\n          helpText: 'Clinical notes',\n          type: FieldType.TT_TEXT,\n          computedValue: (v: Option) => v && ({\n            tag: 'notes',\n            obs: this.notesService.buildValueText('Clinical notes construct', v.value)\n          })\n        },\n      ]\n    }\n  }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onSubmit\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Diagnosis.vue?vue&type=template&id=6019fc75&ts=true\"\nimport script from \"./Diagnosis.vue?vue&type=script&lang=ts\"\nexport * from \"./Diagnosis.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}