{"version":3,"sources":["webpack:///./src/apps/HTS/views/encounters/HtsCircumcisionStatus.vue?5497","webpack:///./src/apps/HTS/views/encounters/HtsCircumcisionStatus.vue","webpack:///./src/apps/HTS/views/encounters/HtsCircumcisionStatus.vue?b8bf","webpack:///./src/apps/HTS/services/hts_circumcision_service.ts","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","formLabel","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","patientDashboardUrl","_","defineComponent","components","IonPage","HisStandardForm","setup","ref","service","HtsCircumcisionService","yesNoOptions","saveEncounter","StartHtsEncounter","onInitVisit","value","id","helpText","type","FieldType","TT_YES_NO","isRequired","finalComputedValue","v","concept","offlineMeta","obs","buildValueCoded","options","label","values","computedData","encounterName","encounterTypeID","__exports__","AppEncounterService","constructor","patientID","providerID","super","getRecentCircumcisionStatus","this","getFirstValueCoded","_resolveDynamicComponent","formType","activeField","onOnFinish","onOnIndex","onIndex","name","TouchScreenForm","emits","data","props","Function","Boolean","String","Object","required","methods","formData","$emit","i"],"mappings":"yIAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,EAA+BC,8BAAkB,qBACjDC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,qBAAS,IAAM,CACtBC,yBAAaP,EAA8B,CACzCQ,UAAW,sBACXC,OAAQf,EAAKe,OACbC,eAAgBhB,EAAKiB,SACrBC,aAAa,EACbC,sBAAuBnB,EAAKoB,uBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,4BAE3CC,EAAG,I,gECPQC,+BAAgB,CAC7BC,WAAY,CAAEC,eAASC,wBACvBC,QACE,MAAMX,EAASY,iBAAa,IACtBC,EAAU,IAAIC,QAAwB,IAEtC,aAAEC,EAAY,cAAEC,EAAa,oBAAEX,GAAwBY,eAAkB,CAC7EC,YAAaA,KACXlB,EAAOmB,MAAQ,CACb,CACEC,GAAI,uBACJC,SAAU,sBACVC,KAAMC,OAAUC,UAChBC,WAAYA,KAAM,EAClBC,mBAAqBC,IACnB,MAAMC,EAAU,sBAChB,MAAO,CACLC,YAAa,CACX,CAACD,GAAUD,GAEbG,IAAKjB,EAAQkB,gBAAgBH,EAASD,KAG1CK,QAASA,IACA,CACL,CACEC,MAAO,yBACPd,MAAO,GACPe,OAAQnB,WAStB,SAASb,EAASI,EAAQ6B,GACxBnB,EAAc,CACZoB,cAAe,eACfC,gBAAiBxB,EAAQwB,gBACzBF,iBAIJ,MAAO,CACL9B,sBACAH,WACAF,a,qBCpDN,MAAMsC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAStD,KAErD,gB,oCCPf,kDAEM,MAAO8B,UAA+ByB,OACxCC,YAAYC,EAAmBC,GAAa,GACxCC,MAAMF,EAAW,IAAKC,GAG1BE,8BACI,OAAOC,KAAKC,mBAAmB,0B,kDCNjC,SAAU9D,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQI,yBAAcC,yBAAaoD,qCAAyB9D,EAAK+D,UAAW,CAC1EhD,OAAQf,EAAKe,OACbG,YAAalB,EAAKkB,YAClB8C,YAAahE,EAAKgE,YAClB7C,sBAAuBnB,EAAKmB,sBAC5B8C,WAAYjE,EAAKiB,SACjBA,SAAUjB,EAAKgB,eACfkD,UAAWlE,EAAKmE,SACf,KAAM,GAAI,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN5F7C,+BAAgB,CAC3B8C,KAAM,kBACN7C,WAAY,CAAE8C,wBACdC,MAAO,CACH,WACA,WAEJC,KAAMA,KAAA,CACFR,SAAU,sBAEdS,MAAO,CACHxD,eAAgB,CACZqB,KAAMoC,UAEVvD,YAAa,CACTmB,KAAMqC,QACN/D,SAAS,GAEbqD,YAAa,CACT3B,KAAMsC,QAEV5D,OAAQ,CACJsB,KAAMuC,OACNC,UAAU,GAEd1D,sBAAuB,CACnBkB,KAAMsC,OACNE,UAAU,IAGlBC,QAAS,CACL7D,SAAS8D,EAAe7B,GACpBU,KAAKoB,MAAM,WAAYD,EAAU7B,IAErCiB,QAAQc,GACJrB,KAAKoB,MAAM,UAAWC,O,qBCnClC,MAAM5B,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAStD,KAErD","file":"js/chunk-74d581df.6ba3f92e.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        formLabel: \"Circumcision status\",\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onFinish,\n        skipSummary: true,\n        cancelDestinationPath: _ctx.patientDashboardUrl()\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport { defineComponent, ref } from \"vue\";\nimport { Field } from \"@/components/Forms/FieldInterface\";\nimport { IonPage } from \"@ionic/vue\";\nimport { HtsCircumcisionService } from \"@/apps/HTS/services/hts_circumcision_service\";\nimport { StartHtsEncounter } from \"@/apps/HTS/composables/HtsFormEncounter\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\n\nexport default defineComponent({\n  components: { IonPage, HisStandardForm },\n  setup() {\n    const fields = ref<Field[]>([])\n    const service = new HtsCircumcisionService(-1)\n\n    const { yesNoOptions, saveEncounter, patientDashboardUrl } = StartHtsEncounter({\n      onInitVisit: () => {\n        fields.value = [\n          {\n            id: \"hts_male_circumcised\",\n            helpText: \"Circumcision status\",\n            type: FieldType.TT_YES_NO,\n            isRequired: () => true,\n            finalComputedValue: (v: any) => {\n              const concept = \"Circumcision status\"\n              return {\n                offlineMeta: {\n                  [concept]: v\n                },\n                obs: service.buildValueCoded(concept, v),\n              }\n            },\n            options: () => {\n              return [\n                {\n                  label: \"Is client circumcised?\",\n                  value: \"\",\n                  values: yesNoOptions(),\n                }\n              ]\n            }\n          }\n        ]\n      }\n    })\n    \n    function onFinish(_: any, computedData: any) {\n      saveEncounter({ \n        encounterName: \"CIRCUMCISION\",\n        encounterTypeID: service.encounterTypeID, \n        computedData \n      })\n    }\n\n    return {\n      patientDashboardUrl,\n      onFinish,\n      fields\n    }\n  }\n});\n","import { render } from \"./HtsCircumcisionStatus.vue?vue&type=template&id=0cf403ba&ts=true\"\nimport script from \"./HtsCircumcisionStatus.vue?vue&type=script&lang=ts\"\nexport * from \"./HtsCircumcisionStatus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class HtsCircumcisionService extends AppEncounterService {\n    constructor(patientID: number, providerID = -1) {\n        super(patientID, 158, providerID)\n    }\n\n    getRecentCircumcisionStatus() {\n        return this.getFirstValueCoded('Circumcision status')\n    }\n}\n","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}