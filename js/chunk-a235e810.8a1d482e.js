(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a235e810"],{"4db6":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n("cc6f");class o extends i["a"]{constructor(e,t=-1){super(e,158,t)}getRecentCircumcisionStatus(){return this.getFirstValueCoded("Circumcision status")}}},7920:function(e,t,n){"use strict";var i=n("7a23");function o(e,t,n,o,s,a){return Object(i["openBlock"])(),Object(i["createBlock"])(Object(i["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var s=n("9441"),a=Object(i["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:s["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),r=n("6b0d"),c=n.n(r);const l=c()(a,[["render",o]]);t["a"]=l},d76a:function(e,t,n){"use strict";n.r(t);var i=n("7a23");function o(e,t,n,o,s,a){const r=Object(i["resolveComponent"])("his-standard-form"),c=Object(i["resolveComponent"])("ion-page");return Object(i["openBlock"])(),Object(i["createBlock"])(c,null,{default:Object(i["withCtx"])(()=>[Object(i["createVNode"])(r,{formLabel:"Referral",skipSummary:!0,fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.patientDashboardUrl()},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}n("14d9");var s=n("d95e"),a=n("d867"),r=n("cc6f");class c extends r["a"]{constructor(e,t=-1){super(e,114,t)}}var l=n("4db6"),u=n("b432"),d=n("0011"),p=n("7920"),h=n("e9be"),v=Object(i["defineComponent"])({components:{IonPage:a["D"],HisStandardForm:p["a"]},setup(){const e=new c(-1),t=Object(i["ref"])([]),n=Object(i["ref"])(!1),{visitID:o,getEncounter:a,saveEncounter:r,patientDashboardUrl:p,htsClient:v}=Object(h["a"])({onInitVisit:()=>{t.value=[b(),C()]}});function m(t,n){r({encounterTypeID:e.encounterTypeID,encounterName:"REFERRAL",computedData:n})}function f(e){return c.getFirstValueCoded(o.value,e)}function b(){let t=!1;const i=[];return{id:"services",helpText:"Refer Client to other Services?",type:s["b"].TT_MULTIPLE_SELECT,isRequired:()=>!0,init:async()=>{const e=v.age;if("M"===v.gender){const n=a("CIRCUMCISION");var s;if(n)t=/no/i.test(null===(s=n.meta)||void 0===s?void 0:s.hts_male_circumcised)&&e>14&&e<64;else if(!Object(u["a"])().isOfflineMode.value){const n=new l["a"](o.value),i=await n.getRecentCircumcisionStatus();t=["No"===i,e>14&&e<64].every(Boolean)}}const r=a("Testing");var c,d;if(r)((null===(c=r.meta)||void 0===c?void 0:c.test_results)||[]).forEach(e=>{/syphilis|Hepatitis/i.test(e.label)&&"Positive"===e.value&&i.push(e.label)}),n.value=/positive/i.test(""+(null===r||void 0===r||null===(d=r.meta)||void 0===d||null===(d=d.hiv_result)||void 0===d?void 0:d.label));else if(!Object(u["a"])().isOfflineMode.value){for(const e of["Syphilis Test Result","Hepatitis B Test Result"])"Positive"===await f(e)&&i.push(e);n.value=["Positive","Positive Initial Professional"].includes(await f("HIV status"))}return!0},finalComputedValue:t=>({obs:t.map(t=>e.buildValueText("Referrals ordered",""+t.value))}),onValueUpdate(e,t){return e.map(e=>("None"===t.value&&"None"!=e.value&&(e.isChecked=!1),"None"!=t.value&&t.isChecked&&"None"===e.value&&(e.isChecked=!1),e))},options:e=>{const o=[],s=(t,n={})=>{const i=!!e.services&&e.services.some(e=>e.value===t);return{label:t,value:t,isChecked:i,...n}};return o.push(s("STI",i.length?{description:{text:`Client tested positive for ${Object(d["b"])(i)}. Please recommend this option if client has not started yet`}}:{})),o.push(s("TB")),"M"===v.gender&&o.push(s("VMMC",t?{description:{text:"Client is not circumcised, please recommend this option"}}:{})),o.push(s("PrEP ",n.value?{disabled:n.value,description:{text:"Client is HIV positive, cannot refer for PrEP"}}:{})),o.push(s("PEP ",n.value?{disabled:n.value,description:{text:"Client is HIV positive, cannot refer for PEP"}}:{})),o.push(s("Other")),o.push(s("None")),o},config:{footerBtns:[{name:"None",slot:"end",onClickComponentEvents:{refreshOptions:(e,t)=>t.map(e=>(e.isChecked="None"===e.label,e))},onClick:()=>"None"}]}}}function C(){return{id:"comment",helpText:"Comments (Optional)",type:s["b"].TT_NOTE,finalComputedValue:t=>t&&!/^\s*$/gi.test(""+t.value)?{obs:e.buildValueText("Comments",""+t.value)}:null}}return{patientDashboardUrl:p,onFinish:m,fields:t}}}),m=n("6b0d"),f=n.n(m);const b=f()(v,[["render",o]]);t["default"]=b}}]);
//# sourceMappingURL=chunk-a235e810.8a1d482e.js.map