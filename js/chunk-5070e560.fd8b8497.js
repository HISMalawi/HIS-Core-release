(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5070e560"],{8866:function(e,t,i){"use strict";i.r(t);var a=i("7a23");function r(e,t,i,r,n,l){const s=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(s,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}var n=i("d95e"),l=i("7920"),s=i("b515"),o=i("7365"),h=i("ad60"),u=i("2ef0"),c=Object(a["defineComponent"])({mixins:[o["a"]],components:{HisStandardForm:l["a"]},data:()=>({age:null,gender:null,recentHeight:null,vitals:{},weightForHeight:{},medianWeightandHeight:{}}),watch:{ready:{async handler(e){e&&await this.init(this.patient)},immediate:!0}},methods:{async init(e){this.vitals=new s["a"](e.getID(),this.providerID),this.age=e.getAge(),this.gender=e.getGender();const t=await e.getRecentHeight();this.recentHeight=-1==t?null:t,this.age<=14&&(this.medianWeightandHeight=await e.getMedianWeightHeight(),this.weightForHeight=await h["a"].getWeightForHeightValues()),this.fields=this.getFields()},async onFinish(e,t){await this.vitals.createEncounter(),await this.vitals.saveObservationList(await this.resolveObs(t)),this.nextTask()},validateVitals(e){const t=this.checkRequiredVitals(e);if(t.length>0)return t.map(e=>[e.label+" can not be empty"]);const i=this.sanitizeVitals(e);return this.vitals.validateAll(i)},sanitizeVitals(e){return e.filter(e=>("Height"!==e.label||0!=e.other.required)&&(""!==e.value&&"Age"!==e.label))},checkRequiredVitals(e){return e.filter(e=>""===e.value&&!0===e.other.required)},getFields(){return[{id:"vitals",helpText:"Vitals entry",type:n["b"].TT_VITALS_ENTRY,validation:e=>this.validateVitals(e),computedValue:e=>{let t=[];const i=e.filter(e=>!e.other.doNotSave);return i.forEach(e=>{var i;e.value&&("function"===typeof(null===(i=e.other)||void 0===i?void 0:i.computed)?t=t.concat(e.other.computed(e.value)):t.push(this.vitals.buildValueNumber(e.label,e.value)))}),t},config:{hiddenFooterBtns:["Clear"],onUpdateAlertStatus:e=>{const t=Object(u["find"])(e,{label:"BP"});if(t&&""!=t.value){const[e,i]=(""+t.value).split("/").map(e=>parseInt(e));if(e>=140&&i>=90)return{status:"Client is at risk of pre-eclampsia, refer for urine protein test.",color:"brown"};if(e<120||e>140)return{status:"Systolic reading is out of normal range",color:"brown"};if(i<80||i>90)return{status:"Diastolic reading is out of normal range",color:"brown"};if(e>=130&&e<=139&&i>=80&&i<=89)return{status:"Prehypertension",color:"brown"}}return{status:"",color:""}},onChangeOption:e=>{if(!e.value&&e.other.required)throw`Value for ${e.label} is required`;if(e.value){const t=this.vitals.validator(e);if(t&&t.length)throw t}}},options:()=>{const e=this.recentHeight&&this.age>18?this.recentHeight:"",t=!(e&&this.age>18);return[{label:"Weight",value:"",other:{modifier:"KG",icon:"weight",required:!0}},{label:"Height",value:""+e,other:{modifier:"CM",icon:"height",recentHeight:this.recentHeight,visible:t}},{label:"BP",value:"",other:{computed:e=>{const[t,i]=e.split("/");return[this.vitals.buildValueNumber("Systolic",t),this.vitals.buildValueNumber("Diastolic",i)]},modifier:"mmHG",icon:"bp"}},{label:"Age",value:this.age,other:{doNotSave:!0,modifier:"Years old",icon:"",visible:!1}}]}}]}}}),d=i("6b0d"),g=i.n(d);const v=g()(c,[["render",r]]);t["default"]=v},b515:function(e,t,i){"use strict";i.d(t,"a",(function(){return n}));var a=i("cc6f"),r=i("2ef0");class n extends a["a"]{constructor(e,t){super(e,6,t)}isNotEmptyandNumber(e){return(""+e.value).match(/^-?\d+\.?\d*$/)?null:["Invalid entry for "+e.label]}isNotEmptyandFloat(e){return(""+e.value).match(/^\d{1,3}\.\d{1,5}$/)?null:[`Invalid entry for ${e.label}. Don't forget to add a decimal. e.g. 56.2 ${e.other.modifier}`]}checkMinMax(e,t,i){const a=[];var r,n;parseFloat(""+e.value)<t&&a.push([`${e.label} entered is less than minimum ${t} ${(null===e||void 0===e||null===(r=e.other)||void 0===r?void 0:r.modifier)||""}`]);parseFloat(""+e.value)>i&&a.push([`${e.label} entered is greater than maximum ${i} ${(null===e||void 0===e||null===(n=e.other)||void 0===n?void 0:n.modifier)||""}`]);return a.length>0?a:null}validateAll(e){const t=[];return e.map(e=>{const i=this.validator(e);return Object(r["isArray"])(i)?t.push(i):null}),t.length>0?t:null}mergeErrors(e){const t=[];return e.forEach(e=>{Object(r["isArray"])(e)&&t.push(e)}),t.length>0?t:null}isValidBPReading(e){const t=[],i=(""+e.value).match(/^\d{1,3}\/\d{1,3}$/g)?null:["Invalid BP reading"];if(t.push(i),null==i){const i=(""+e.value).split("/"),a={label:"Systolic",value:i[0]},r={label:"Diastolic",value:i[1]};t.push(this.checkMinMax(r,30,200)),t.push(this.checkMinMax(a,40,250))}return this.mergeErrors(t)}validator(e){const t=[{name:"Weight",validator:e=>{const t=this.isNotEmptyandFloat(e),i=this.checkMinMax(e,2,250);return this.mergeErrors([t,i])}},{name:"Height",validator:e=>{const t=[];return t.push(this.isNotEmptyandNumber(e)),t.push(this.checkMinMax(e,40,220)),this.mergeErrors(t)}},{name:"BP",validator:e=>this.isValidBPReading(e)},{name:"Temp",validator:e=>{const t=this.isNotEmptyandNumber(e),i=this.checkMinMax(e,30,42);return this.mergeErrors([t,i])}},{name:"SP02",validator:e=>{const t=this.checkMinMax(e,40,100);return this.mergeErrors([t])}},{name:"Pulse",validator:e=>{const t=this.checkMinMax(e,50,120);return this.mergeErrors([t])}}],i=t.filter(t=>t.name===e.label);return i.length>0?i[0].validator(e):null}}}}]);
//# sourceMappingURL=chunk-5070e560.fd8b8497.js.map