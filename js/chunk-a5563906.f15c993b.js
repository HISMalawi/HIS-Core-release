(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a5563906"],{7365:function(e,t,i){"use strict";i("14d9"),i("13d5");var a,s=i("7a23"),n=i("ad60"),o=i("2ef0"),r=i("0fa1"),l=i("7f35"),c=i("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(a||(a={}));const u=e=>c["b"].toStandardHisDisplayFormat(e),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(l["a"])("Data Integrity Issue Found","Patient died on "+u(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?a.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?a.CHANGE_PATIENT_OUTCOME:a.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const i=await Object(l["a"])("Data integrity issue found","",`Session date ${u(t)} is less than birth date of ${u(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===i?a.CHANGE_SESSION_DATE:a.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:i,apiDate:s})=>{const n=await Object(l["c"])("Please select a provider for "+t,`BDE: ${u(i)} | Current: ${u(s)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===n.action?{value:-1,flowState:a.GO_TO_PATIENT_DASHBOARD}:{value:n.selection,flowState:a.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}};var p=i("c21d"),h=i("7920"),v=i("b5e4"),m=i("8e8b"),b=i("b432"),T=i("5a0c"),f=i.n(T),_=i("cc6f"),O=i("2ed9"),y=Object(s["defineComponent"])({components:{HisStandardForm:h["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],encounterStartTime:null,facts:{age:-1,gender:"",birthDate:"",sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:"",village:"",district:"",currentTA:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():m["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,Object(o["isEmpty"])(this.patient)||Object(b["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0,this.setStartTime()}).catch(e=>console.log(e))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{setStartTime(){this.encounterStartTime=(new Date).getTime()},goOffline(){return!b["c"].value||b["b"].value},isOnline(){return b["c"].value},isOfflineMode(){return b["b"].value},initOfflineData(){var e;const t=Object(b["a"])().findByID(this.offlineID),i=null===t||void 0===t||null===(e=t.personParams)||void 0===e?void 0:e.person;i&&(this.facts.birthDate=i.birthdate,this.facts.age=f()(n["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.district=i.current_district,this.facts.village=i.current_village,this.facts.currentTA=i.current_traditional_authority,this.facts.gender=i.gender,this.ready=!0,this.setStartTime())},async saveFormEncounterAndProceed(e={}){let t="Pending",i=!1,a=null;const s=(new Date).getTime(),n=(s-this.encounterStartTime)/1e3,o=n/60;try{const t=await _["a"].buildValueText("Device",Object(O["f"])()),i=await _["a"].buildValueNumber("Review Time",o);a=[...await this.resolveObs(e.computedData),t,i]}catch(r){return console.error(""+r),Object(v["e"])("Unable to resolve observations")}if(!this.isOfflineMode()){try{const s=new _["a"](this.patientID,e.encounterTypeID,this.providerID);await s.createEncounter()&&await s.saveObservationList(a)&&(t="Success"),"function"===typeof e.callback&&await e.callback(s),i=!0}catch(r){i=!1,/NetworkError|Failed to fetch/i.test(""+r)?t="NetworkError":(t="Exception",console.error("Exception while saving an encounter: "+r))}if("Exception"===t)return Object(v["c"])("An error has occured!")}Object(b["a"])().saveObsOffline({observations:a,id:this.offlineID,uploadStatus:t,encounterName:this.$route.name,encounterTypeID:e.encounterTypeID,meta:e.formData,labOrders:e.labOrders,created:i},i),e.skipNextTask||this.nextTask()},runflowState(e,t=null){const i={};if(i[a.SET_PROVIDER]=e=>{const[t]=e.split(" "),i=Object(o["find"])(this.providers,{username:t});return i&&(this.providerID=i.person_id),a.CONTINUE},i[a.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),a.EXIT),i[a.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),a.EXIT),i[a.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),a.EXIT),e in i)return i[e](t)},async checkEncounterGuidelines(){const e=Object(p["a"])(this.facts,d);for(const o in e){var t,i;const r=e[o];if(null!==r&&void 0!==r&&null!==(t=r.actions)&&void 0!==t&&t.alert){var s;const e=this.runflowState(await(null===r||void 0===r||null===(s=r.actions)||void 0===s?void 0:s.alert(this.facts)));if(e===a.EXIT)return}if(null!==r&&void 0!==r&&null!==(i=r.actions)&&void 0!==i&&i.selection){var n;const e=await(null===r||void 0===r||null===(n=r.actions)||void 0===n?void 0:n.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await m["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=e.programID===n["a"].getProgramID(),this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(v["c"])(""+e)}this.facts.currentTA=this.patient.getCurrentTA(),this.facts.district=this.patient.getCurrentDistrict(),this.facts.village=this.patient.getCurrentVillage(),this.facts.sessionDate=n["a"].getSessionDate(),this.facts.apiDate=n["a"].getCachedApiDate(),this.facts.isBdeMode=n["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",n["a"].isBDE()&&(this.providers=await m["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const i=e.username.toUpperCase(),a=t.username.toUpperCase();return i<a?-1:i>a?1:0}).map(e=>{var t;let i=""+e.username;if(!Object(o["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var a;const[t]=(null===(a=e.person)||void 0===a?void 0:a.names)||[];i+=` (${t.given_name} ${t.family_name})`}return i}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>"string"===typeof e||"number"===typeof e?{label:e,value:e}:e)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){try{const e=this.offlineID||this.patientID;await Object(r["b"])(e,this.$router,this.$route)}catch(e){console.error("Workflow error "+e),this.gotoPatientDashboard()}},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},toConditionalOptions(e){const t=[];for(const i of e)("boolean"!==typeof i[1]||i[1])&&t.push(this.toOption(i[0]));return t},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const i=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const i=t.obs?t.obs:t;return Array.isArray(i)?e=e.concat(i):"function"===typeof i?e.push(i()):e.push(i),e},[]);return Promise.all(i)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(i){return!1}},validateSeries(e){try{for(const t in e){const i=e[t]();if(i)return i}}catch(t){return[t]}}}});const E=y;t["a"]=E},7920:function(e,t,i){"use strict";var a=i("7a23");function s(e,t,i,s,n,o){return Object(a["openBlock"])(),Object(a["createBlock"])(Object(a["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var n=i("9441"),o=Object(a["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:n["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),r=i("6b0d"),l=i.n(r);const c=l()(o,[["render",s]]);t["a"]=c},c21d:function(e,t,i){"use strict";i.d(t,"a",(function(){return o}));i("14d9");function a(e,t){const i=[],a=[-1,"",null,void 0];for(const s in t){if(!(s in e))continue;const n=e[s];a.includes(n)?i.push(!1):i.push(t[s](n,e))}return i.every(Boolean)}function s(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function n(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function o(e,t,i="",o="",r="priority"){const l=[];for(const s in t){const n=t[s],r=[n.target&&i&&n.target!=i,n.targetEvent&&o&&n.targetEvent!=o];r.some(Boolean)||a(e,n.conditions)&&(n.title=s,n.description&&(n.description.text=n.description.info(e)),l.push(n))}return"priority"===r?s(l):n(l)}},d8ba:function(e,t,i){"use strict";i.r(t);var a=i("7a23");function s(e,t,i,s,n,o){const r=Object(a["resolveComponent"])("his-standard-form"),l=Object(a["resolveComponent"])("ion-page");return Object(a["openBlock"])(),Object(a["createBlock"])(l,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(r,{fields:e.formFields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}i("14d9");var n,o=i("7365"),r=i("d95e"),l=i("9e49"),c=i("2706"),u=i("d867"),d=i("b446"),p=i("9283"),h=i("ad49");function v(){return h["a"].isProp(n.RECENCY_ESSAY_ACTIVATED+"=Yes")}(function(e){e["RECENCY_ESSAY_ACTIVATED"]="recency_essay_activated"})(n||(n={}));var m={recencyEssayActivated:v},b=i("b5e4"),T=i("2ef0"),f=i("3800"),_=Object(a["defineComponent"])({components:{IonPage:u["D"]},mixins:[o["a"]],data:()=>({formFields:[],arvNumber:"",hivStatus:"",artStatus:"",arvStartDate:"",recencyEssayActivated:!1,riskOfPreclampsia:null,service:{}}),watch:{ready:{async handler(e){e&&(this.service=new l["a"](this.patientID,this.providerID),await this.service.loadSubsequentVisit(),await this.service.loadArtStatus(),this.recencyEssayActivated=await m.recencyEssayActivated(),this.formFields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){const i=await this.resolveObs(t);await this.service.createEncounter(),await this.service.saveObservationList(i),await this.service.printLabResults(),this.nextTask()},getFields(){return[{id:"art_summary",helpText:"ART Summary",type:r["b"].TT_SUMMARY,condition:()=>this.service.isHivPositive(),options:()=>[{label:"HIV Status",value:`\n                                <b style="color:${this.service.isHivPositive()?"red":"green"}">\n                                    ${this.service.getHivStatus()}\n                                </b>\n                            `},{label:"On Art",value:this.service.getArtStatus()||"N/A"},{label:"Art Start date",value:p["b"].toStandardHisDisplayFormat(this.service.getArvStartDate())||"N/A"},{label:"ARV Number",value:this.service.getArvNumber()||"N/A"}]},{id:"lab_results",helpText:"Lab Results",type:r["b"].TT_MULTIPLE_YES_NO,condition:()=>!this.service.isPregnancyTestDone&&!this.hivStatus,options:e=>{if(e.lab_results)return e.lab_results;const t=[];return this.service.isPrengnacyTestDone||t.push(this.toYesNoOption("Pregnancy test done",{concept:"B-HCG"})),this.service.hivStatus||t.push(this.toYesNoOption("Previous HIV test done",{concept:"Previous HIV test done"})),t},validation:e=>c["a"].required(e),computedValue:e=>e.map(e=>this.service.buildValueCoded(e.other.concept,e.value))},{id:"prev_hiv_test_result",helpText:"Previous HIV test results",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),condition:e=>this.inArray(e.lab_results,e=>"Previous HIV test done"===e.label&&"Yes"===e.value),options:()=>this.mapStrToOptions(["Negative","Positive","Inconclusive","Unknown"]),computedValue:e=>this.service.buildValueCoded("Previous HIV Test Results",e.value)},...Object(d["b"])({id:"prev_hiv_test_date",helpText:"Previous HIV test",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.service.getDate(),estimation:{allowUnknown:!1},condition:e=>{var t;return!(null===(t=e.prev_hiv_test_result)||void 0===t||!t.value)},computeValue:e=>this.service.buildValueDate("Previous HIV Test Date",e)}),{id:"on_art",helpText:"Patient on ART",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),computedValue:e=>this.service.buildValueCoded("On Art",e.value),condition:e=>"Positive"===e.prev_hiv_test_result.value,options:()=>this.yesNoOptions()},{id:"arv_number",helpText:"ARV Number",type:r["b"].TT_TEXT,validation:e=>c["a"].required(e),computedValue:e=>this.service.buildValueText("Art number",e.value),condition:e=>"Yes"===e.on_art.value},{id:"recency_essay",helpText:"Rapid Recency Essay - Asante Results",type:r["b"].TT_MULTIPLE_YES_NO,condition:e=>"Positive"===e.prev_hiv_test_result.value&&this.recencyEssayActivated,computedValue:e=>e?e.map(e=>this.service.buildValueCoded(e.label,e.value)):null,options:e=>e.recency_essay?e.recency_essay:[this.toYesNoOption("Line 1. Control Line Present"),this.toYesNoOption("Line 2. Positive Verification Line Present"),this.toYesNoOption("Line 3. Long-Term Line Present")]},{id:"available_test_results",helpText:"Available Lab Tests",type:r["b"].TT_MULTIPLE_SELECT,validation:e=>c["a"].required(e),computedValue:e=>Object(T["find"])(e,{label:"None"})?this.service.buildValueCoded("Lab test done","No"):null,onValueUpdate(e,t){return e.map(e=>("None"===t.value&&"None"!=e.value&&(e.isChecked=!1),"None"!=t.value&&t.isChecked&&"None"===e.value&&(e.isChecked=!1),e))},options:async e=>{var t;const i=[],a=!!this.service.isHivPositive()||"Positive"===(null===(t=e.prev_hiv_test_result)||void 0===t?void 0:t.value);a||i.push(this.toOption("HIV")),i.push(this.toOption("HB")),i.push(this.toOption("Syphilis")),i.push(this.toOption("Malaria")),i.push(this.toOption("Blood Group"));const s={label:"Urine",value:"Urine",isChecked:!1};if(null===this.riskOfPreclampsia&&(this.riskOfPreclampsia=await this.service.isAtRiskOfPreEclampsia(),this.riskOfPreclampsia)){const e=await Object(b["a"])("Select urine test to conduct urine protein test",{header:"Client is at risk of pre-eclampsia.",cancelBtnLabel:"Remind later",confirmBtnLabel:"Select Urine Test"});s.isChecked=e}return[...i,s,this.toOption("None")]},config:{footerBtns:[{name:"None",slot:"end",onClickComponentEvents:{refreshOptions:(e,t)=>t.map(e=>(e.isChecked="None"===e.label,e))},onClick:()=>"None"}]},exitsForm:e=>Object(T["find"])(e.available_test_results,{label:"None"})},{id:"hiv_status",helpText:"HIV Test Result",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),condition:e=>e.available_test_results.map(e=>e.value).includes("HIV"),computedValue:e=>this.service.buildValueCoded("HIV status",e.value),options:()=>this.mapStrToOptions(["Negative","Positive","Inconclusive"])},{id:"on_art_1",helpText:"Patient on ART",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),condition:e=>"Positive"===e.hiv_status.value,computedValue:e=>this.service.buildValueCoded("On Art",e.value),options:()=>this.yesNoOptions()},{id:"arv_number_1",helpText:"ARV Number",type:r["b"].TT_TEXT,validation:e=>c["a"].required(e),computedValue:e=>this.service.buildValueText("Art number",e.value),condition:e=>"Yes"===e.on_art_1.value},{id:"recency_essay_1",helpText:"Rapid Recency Essay - Asante Results",type:r["b"].TT_MULTIPLE_YES_NO,condition:e=>"Positive"===e.hiv_status.value&&this.recencyEssayActivated,computedValue:e=>e?e.map(e=>this.service.buildValueCoded(e.label,e.value)):null,options:()=>[this.toYesNoOption("Line 1. Control Line Present"),this.toYesNoOption("Line 2. Positive Verification Line Present"),this.toYesNoOption("Line 3. Long-term Line Present")]},{id:"hb_result",helpText:"HB Test Result (g/dl)",type:r["b"].TT_NUMBER,validation:e=>this.validateSeries([()=>c["a"].required(e),()=>c["a"].isFloatingPointNumber(e),()=>c["a"].rangeOf(e,2,16)]),config:{keypad:[f["f"],[["Delete"]]]},computedValue:e=>this.service.buildValueNumber("HB Test Result",e.value),condition:e=>e.available_test_results.map(e=>e.value).includes("HB")},{id:"syphilis",helpText:"Syphilis Test Result",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),computedValue:e=>this.service.buildValueCoded("Syphilis Test Result",e.value),condition:e=>e.available_test_results.map(e=>e.value).includes("Syphilis"),options:()=>this.mapStrToOptions(["Negative","Positive"])},{id:"malaria",helpText:"Malaria Test Result",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),condition:e=>e.available_test_results.map(e=>e.value).includes("Malaria"),computedValue:e=>this.service.buildValueCoded("Malaria Test Result",e.value),options:()=>this.mapStrToOptions(["Negative","Positive"])},{id:"blood_group",helpText:"Blood Group Test Result",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),condition:e=>e.available_test_results.map(e=>e.value).includes("Blood Group"),computedValue:e=>this.service.buildValueText("Blood group",e.value),options:()=>this.mapStrToOptions(["A+","A-","B+","B-","AB+","AB-","O+","O-"])},{id:"available_urine_tests",helpText:"Available Urine Tests Results",type:r["b"].TT_MULTIPLE_SELECT,validation:e=>c["a"].required(e),condition:e=>e.available_test_results.map(e=>e.value).includes("Urine"),options:()=>this.mapStrToOptions(["Protein","Glucose","WBC","RBC","Nitrate"]),config:{buildOptionsOnce:!0}},{id:"protein",helpText:"Urine Protein Test Result",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),condition:e=>e.available_urine_tests.map(e=>e.value).includes("Protein"),computedValue:e=>this.service.buildValueText("Urine protein",e.value),options:()=>this.mapStrToOptions(["Negative","(+)","+","++","+++","++++"])},{id:"glucose",helpText:"Glucose Test Result (mg/dl)",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),condition:e=>e.available_urine_tests.map(e=>e.value).includes("Glucose"),computedValue:e=>this.service.buildValueText("Blood glucose",e.value),options:()=>this.mapStrToOptions(["Normal","+","++","+++"])},{id:"wbc",helpText:"White Blood Cells Test Result (cmm)",type:r["b"].TT_NUMBER,validation:e=>this.validateSeries([()=>c["a"].required(e),()=>c["a"].rangeOf(e,1,1e6)]),computedValue:e=>this.service.buildValueNumber("White blood cells",e.value),condition:e=>e.available_urine_tests.map(e=>e.value).includes("WBC")},{id:"rbc",helpText:"Red Blood Cells Test Result (cmm)",type:r["b"].TT_NUMBER,validation:e=>this.validateSeries([()=>c["a"].required(e),()=>c["a"].rangeOf(e,1,1e6)]),computedValue:e=>this.service.buildValueNumber("Red blood cells",e.value),condition:e=>e.available_urine_tests.map(e=>e.value).includes("RBC")},{id:"nitrate",helpText:"Nitrate Test Result",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),computedValue:e=>this.service.buildValueCoded("Urine Nitrate Test",e.value),condition:e=>e.available_urine_tests.map(e=>e.value).includes("Nitrate"),options:()=>this.mapStrToOptions(["Negative","Trace","Positive"])}]}}}),O=i("6b0d"),y=i.n(O);const E=y()(_,[["render",s]]);t["default"]=E}}]);
//# sourceMappingURL=chunk-a5563906.f15c993b.js.map