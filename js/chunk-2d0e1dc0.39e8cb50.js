(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e1dc0"],{"7bdc":function(e,t,i){"use strict";i.r(t);var n=i("7a23");function a(e,t,i,a,s,r){const o=Object(n["resolveComponent"])("report-template");return Object(n["openBlock"])(),Object(n["createBlock"])(o,{title:e.title,period:e.period,rows:e.rows,fields:e.fields,columns:e.columns,canExportCsv:!1,canExportPDf:!1,onReportConfiguration:e.onPeriod},null,8,["title","period","rows","fields","columns","onReportConfiguration"])}i("14d9");var s=i("4ba2"),r=i("d95e"),o=i("9ceb"),d=i("fb25"),c=i("2706"),l=i("7f12"),p=i("d867"),u=i("23e6"),h=i("9283"),f=i("fa73"),m=i("b5e4"),w=Object(n["defineComponent"])({components:{ReportTemplate:s["a"]},data:()=>({service:{},dde:{},title:"Duplicate Identifiers",fields:[],rows:[],columns:[[o["a"].thTxt("Identifier"),o["a"].thTxt("Count"),o["a"].thTxt("View"),o["a"].thTxt("Resolve")]]}),async created(){this.fields=this.getFormFields(),this.dde=new f["a"],await this.dde.loadDDEStatus()},methods:{async onPeriod({identifier:e}){const t=parseInt(e.value.toString());this.title=e.label+" Duplicates",this.service=new d["a"],this.service.setIdentifierType(t),this.rows=await this.getRows()},getFormFields(){return[{id:"identifier",helpText:"Select Identifier type",type:r["b"].TT_SELECT,validation:e=>c["a"].required(e),options:async()=>(await d["a"].getIdentifierTypes()).map(e=>({label:e.name,value:e.patient_identifier_type_id}))}]},toDate(e){return h["b"].toStandardHisDisplayFormat(e)},async drillDuplicates(e){const t=await p["Z"].create({component:l["a"],cssClass:"custom-modal",componentProps:{title:"Persons using identifier "+e,columns:["Given name","Family name","Gender","Birth date","Action"],onRows:async()=>{const t=await this.service.getPatientsByIdentifier(e);return t.map(e=>{try{const t=new u["a"](e);return[t.getGivenName(),t.getFamilyName(),t.getGender(),this.toDate(t.getBirthdate()),{type:"button",name:"View",action:()=>{p["Z"].dismiss().then(()=>{this.$router.push("/patient/dashboard/"+t.getID())})}}]}catch(t){return Object(m["c"])("Unable to load patient details"),["N/A","N/A","N/A","N/A","N/A"]}})}}});t.present()},async getRows(){return(await this.service.getDuplicateIndentifiers()).map(e=>[o["a"].td(e.identifier),o["a"].td(e.count),o["a"].tdBtn("Select",()=>this.drillDuplicates(e.identifier)),o["a"].tdBtn("Resolve",()=>{this.$router.push("/npid/duplicates/"+e.identifier)},{event:{disabled:3!=this.service.getIdentifierType()}},"danger")])}}}),b=i("d959"),g=i.n(b);const v=g()(w,[["render",a]]);t["default"]=v}}]);
//# sourceMappingURL=chunk-2d0e1dc0.39e8cb50.js.map