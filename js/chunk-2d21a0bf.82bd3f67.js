(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21a0bf"],{ba9c:function(e,t,n){"use strict";n.r(t);var i=n("7a23");function s(e,t,n,s,a,o){const r=Object(i["resolveComponent"])("his-standard-form");return Object(i["openBlock"])(),Object(i["createBlock"])(r,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}var a=n("d95e"),o=n("7920"),r=n("2706"),c=n("7365"),d=n("cc6f");class p extends d["a"]{constructor(e,t){super(e,184,t)}}var l=n("b5e4"),u=Object(i["defineComponent"])({mixins:[c["a"]],components:{HisStandardForm:o["a"]},data:()=>({reception:{}}),watch:{patient:{async handler(){this.reception=new p(this.patientID,this.providerID),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(e){const t=await this.reception.createEncounter();if(!t)return Object(l["e"])("Unable to create encounter");const n=e["reason_for_visit"],i=await this.reception.buildValueCoded("Reason for visit",n.value);await this.reception.saveObs(i);Object(l["d"])("Observations and encounter created!"),this.nextTask()},getFields(){return[{id:"reason_for_visit",helpText:"Reason for visit",type:a["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>this.mapOptions(["Initial screening","Postponed treatment","One year subsequent check-up after treatment","Subsequent screening","Problem visit after treatment","Referral"])}]}}}),h=n("6b0d"),b=n.n(h);const f=b()(u,[["render",s]]);t["default"]=f}}]);
//# sourceMappingURL=chunk-2d21a0bf.82bd3f67.js.map