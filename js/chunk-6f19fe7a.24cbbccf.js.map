{"version":3,"sources":["webpack:///./src/apps/OPD/services/hmis_report_service.ts","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMIS15.vue?6293","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMIS15.vue","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMIS15.vue?6297","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMISTemplate.vue?3828","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMISTemplate.vue","webpack:///./src/apps/OPD/views/reports/moh/HMIS/HMISTemplate.vue?2806"],"names":["HMISReportService","regenerate","this","getReport","request","params","all","count","Object","entries","key","value","temp","condition","item","id","name","total","totalPatientIds","value1","conditionDetails","length","push","IDSRConditionsObj","CSVString","row","OpdReportService","_hoisted_1","_hoisted_2","_createVNode","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_loading","_resolveComponent","_component_his_standard_form","_component_hmis_header","_component_hmis_template","_component_ion_content","_component_his_footer","_component_ion_page","_openBlock","_createBlock","_Fragment","isLoading","message","reportReady","_createCommentVNode","onOnFinish","onPeriod","skipSummary","fields","default","_withCtx","componentKey","reportName","ref","periodLabel","periodDates","clinicName","totalOPDVisits","TotalOPDVisits","onDrillDown","hmis15Data","_","btns","defineComponent","mixins","ReportMixinVue","components","IonLoading","HmisHeader","HmisTemplate","HisStandardForm","HisFooter","IonPage","IonContent","data","formData","computedFormData","reportID","getLocationName","created","getBtns","getDateDurationFields","methods","form","config","report","setRegenerate","setStartDate","HisDate","toStandardHisFormat","start_date","setEndDate","end_date","getReportPeriod","requestHMIS15","hmis","getClinicRegistrations","visits","console","log","size","slot","color","visible","onClick","rep","$refs","onDownload","exportToCustomPDF","$router","path","__exports__","class","style","_component_report_table","columns","rows","tableCssTheme","ReportTable","conditions","table","thTxt","props","renderResults","Conditions","buildRows","getCSVString","dayjs","format","Service","getCoreVersion","getApiVersion","getSiteUUID","csvData","Blob","type","reportTitle","quarter","navigator","msSaveBlob","link","document","createElement","href","window","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","forEach","td","textAlign","buildRow","patientIds","tdLink","watch","immediate","handler"],"mappings":"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","file":"js/chunk-6f19fe7a.24cbbccf.js","sourcesContent":["import { OpdReportService } from \"./opd_report_service\";\n\nexport class HMISReportService extends OpdReportService {\n    regenerate: boolean;\n    constructor() {\n        super()\n        this.regenerate = false\n    }\n\n    setRegenerate(regenerate: boolean) {\n        this.regenerate = regenerate\n    }\n\n    requestHMIS15() {\n        return this.getReport('generate_hmis_15_report', {\n            request: 'true'\n        })\n    }\n\n    requestHMIS17() {\n        return this.getReport('generate_hmis_17_report', {\n            request: 'true',\n        })\n    }\n\n    renderResults(params: any) {\n        const all = []\n        let count = 1\n        for (const [key, value] of Object.entries(params)) {\n            const temp: any = []\n            const condition: any = value\n            const item = {\n                id: 0,\n                name: '',\n                total: 0,\n                totalPatientIds: ''\n            }\n            item.name = key\n            let total = 0\n            item.id = count\n            count += 1 \n            for (const [key1, value1] of Object.entries(condition)) {\n                key1\n                const conditionDetails: any = value1\n                if (conditionDetails != null) {\n                    total +=conditionDetails.length;\n                    item.total = total\n                    if(conditionDetails.length) {\n                        temp.push(...conditionDetails)\n                        item.totalPatientIds = temp\n                    }\n            }\n          }\n          all.push(item)\n        }\n        return all\n    }\n\n    getCSVString(IDSRConditionsObj: any) {\n        let CSVString = `Diseases/Events/Conditions, #,\\n`\n        for(const condition of IDSRConditionsObj) {\n          const row = `${condition.name},${condition.total},\\n`\n          CSVString+=row\n        }\n        return {CSVString}\n    }\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { id: \"report-content\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"div\", { id: \"print\" }, null, -1)\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_loading = _resolveComponent(\"ion-loading\")\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_hmis_header = _resolveComponent(\"hmis-header\")\n  const _component_hmis_template = _resolveComponent(\"hmis-template\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_his_footer = _resolveComponent(\"his-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_loading, {\n      \"is-open\": _ctx.isLoading,\n      message: \"Please wait...\"\n    }, null, 8, [\"is-open\"]),\n    (!_ctx.reportReady)\n      ? (_openBlock(), _createBlock(_component_his_standard_form, {\n          key: 0,\n          onOnFinish: _ctx.onPeriod,\n          skipSummary: true,\n          fields: _ctx.fields\n        }, null, 8, [\"onOnFinish\", \"fields\"]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.reportReady)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 1 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createVNode(\"div\", _hoisted_1, [\n                  _createVNode(_component_hmis_header, {\n                    key: _ctx.componentKey,\n                    reportName: _ctx.reportName,\n                    ref: \"header\",\n                    periodLabel: _ctx.periodLabel,\n                    periodDates: _ctx.periodDates,\n                    clinicName: _ctx.clinicName,\n                    totalOPDVisits: _ctx.TotalOPDVisits\n                  }, null, 8, [\"reportName\", \"periodLabel\", \"periodDates\", \"clinicName\", \"totalOPDVisits\"]),\n                  _createVNode(_component_hmis_template, {\n                    key: _ctx.componentKey,\n                    reportName: _ctx.reportName,\n                    onDrillDown: _ctx.onDrillDown,\n                    params: _ctx.hmis15Data,\n                    periodDates: _ctx.periodDates,\n                    ref: \"rep\"\n                  }, null, 8, [\"reportName\", \"onDrillDown\", \"params\", \"periodDates\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, { btns: _ctx.btns }, null, 8, [\"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    _hoisted_2\n  ], 64 /* STABLE_FRAGMENT */))\n}","\nimport { defineComponent } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport { IonPage, IonContent, IonLoading } from \"@ionic/vue\"\nimport { Field } from '@/components/Forms/FieldInterface'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport ReportMixinVue from \"../../ReportMixin.vue\";\nimport { HMISReportService } from \"@/apps/OPD/services/hmis_report_service\"\nimport HmisHeader from \"@/apps/OPD/views/reports/moh/MOHReportHeader.vue\"\nimport HmisTemplate from \"@/apps/OPD/views/reports/moh/HMIS/HMISTemplate.vue\"\nimport HisDate from \"@/utils/Date\"\nimport { NavBtnInterface } from \"@/components/HisDynamicNavFooterInterface\";\n\nexport default defineComponent({\n  mixins: [ReportMixinVue],\n  components: { IonLoading, HmisHeader, HmisTemplate, HisStandardForm, HisFooter, IonPage, IonContent },\n  data: () => ({\n    formData: {} as any,\n    componentKey: 0 as number,\n    computedFormData: {} as any,\n    hmis15Data: {} as any,\n    btns: [] as Array<NavBtnInterface>,\n    isLoading: false as boolean,\n    fields: [] as Array<Field>,\n    reportID: -1 as any,\n    periodLabel: 'Period',\n    periodDates: '' as string,\n    reportName: 'HMIS 15',\n    TotalOPDVisits: 0 as number,\n    clinicName: HMISReportService.getLocationName(),\n    reportReady: false as boolean,\n  }),\n  created() {\n    this.btns = this.getBtns()\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async onPeriod(form: any, config: any, regenerate=false) {\n      this.componentKey += 1\n      this.formData = form\n      this.computedFormData = config\n      this.reportReady = true \n      this.isLoading = true\n      this.report = new HMISReportService()\n      this.report.setRegenerate(regenerate)\n      this.report.setStartDate(HisDate.toStandardHisFormat(config.start_date))\n      this.report.setEndDate(HisDate.toStandardHisFormat(config.end_date))\n      this.periodDates = this.report.getReportPeriod()\n      try {\n        const hmis = await this.report.requestHMIS15()\n        const visits = await this.report.getClinicRegistrations()\n        if(hmis && visits) {\n          this.reportID = \"data\"\n          this.TotalOPDVisits = visits.length\n          this.hmis15Data = hmis\n        }\n      } catch (error) {\n        console.log(error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n    getBtns() {\n      return  [\n        {\n          name: \"CSV\",\n          size: \"large\",\n          slot: \"start\",\n          color: \"primary\",\n          visible: true,\n          onClick: async () => {\n            const rep = this.$refs.rep as any\n            rep.onDownload()\n          }\n        },\n        {\n          name: \"PDF\",\n          size: \"large\",\n          slot: \"start\",\n          color: \"primary\",\n          visible: true,\n          onClick: () => this.exportToCustomPDF(this.reportName)\n        },\n        {\n          name: \"Back\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"warning\",\n          visible: true,\n          onClick: () => this.reportReady = false\n        },\n        {\n          name: \"Refresh\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"warning\",\n          visible: true,\n          onClick: async () => await this.onPeriod(this.formData, this.computedFormData, true)\n        },\n        {\n          name: \"Finish\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"success\",\n          visible: true,\n          onClick: () => this.$router.push({ path:'/' })\n        }\n      ]   \n    }\n  }\n})\n","import { render } from \"./HMIS15.vue?vue&type=template&id=183f2a1a&ts=true\"\nimport script from \"./HMIS15.vue?vue&type=script&lang=ts\"\nexport * from \"./HMIS15.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"my-table\",\n  style: {\"margin\":\"auto\",\"width\":\"95%\",\"margin-top\":\"3%\",\"margin-bottom\":\"3%\"}\n}\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_table = _resolveComponent(\"report-table\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_report_table, {\n      columns: _ctx.columns,\n      rows: _ctx.rows,\n      config: {tableCssTheme: _ctx.tableCssTheme}\n    }, null, 8, [\"columns\", \"rows\", \"config\"])\n  ]))\n}","\n/* eslint-disable @typescript-eslint/camelcase */\nimport { defineComponent } from 'vue'\nimport { HMISReportService } from \"@/apps/OPD/services/hmis_report_service\"\nimport { Service } from \"@/services/service\"\nimport dayjs from 'dayjs'\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n  components: { ReportTable },\n  data: function(){\n    return {\n      conditions: [] as any,\n      tableCssTheme: 'opd-report-theme',\n      total: ' Total ',\n      rows: [] as RowInterface[][],\n      columns: [\n      [\n        table.thTxt(''),\n        table.thTxt('Diseases/Events/Conditions'),\n        table.thTxt('UNVERIFIED'),\n        table.thTxt('VERIFIED'),\n      ]\n    ] as ColumnInterface[][],\n    }\n  },\n  props: ['params', 'periodDates', 'quarter', 'onDrillDown', 'reportName'],\n  methods: {\n   renderResults() {\n     const report = new HMISReportService()\n     const Conditions = report.renderResults(this.params)\n     if(Conditions.length) {\n       this.conditions = Conditions\n       this.rows = this.buildRows(Conditions)\n     } \n   },\n   onDownload() {\n     const report = new HMISReportService()\n     let {CSVString} = report.getCSVString(this.conditions)\n     CSVString += `\n          Date Created: ${dayjs().format('DD/MMM/YYYY HH:MM:ss')}\n          His-Core Version: ${Service.getCoreVersion()}\n          API Version: ${Service.getApiVersion()}\n          Report Period: ${this.periodDates}\n          Site: ${Service.getLocationName()}\n          Site UUID: ${Service.getSiteUUID()}`\n          ;\n      // }\n      const csvData = new Blob([CSVString], { type: \"text/csv;charset=utf-8;\" });\n      //IE11 & Edge\n      const reportTitle = `${Service.getLocationName()} ${this.reportName} ${this.quarter}`;\n      \n      if (navigator.msSaveBlob) {\n        navigator.msSaveBlob(csvData, 'exportFilename');\n      } else {\n        //In FF link must be added to DOM to be clicked\n        const link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(csvData);\n        link.setAttribute(\"download\", `${reportTitle}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n   },\n   buildRows(data: any): RowInterface[][] {\n     const rows: RowInterface[][] = []\n     data.forEach((condition: { \n       id: number;\n       name: string;\n       total: number;\n       totalPatientIds: any;\n\n       }) => {\n        rows.push([\n          table.td(condition.id, {style: {textAlign: 'left'}}),\n          table.td(condition.name, {style: {textAlign: 'left'}}),\n          this.buildRow(this.total+'('+condition.name+')', condition.total, condition.totalPatientIds),\n          table.td(''),\n        ])\n     })\n     return rows\n   },\n   buildRow(name: string, count: number, patientIds: any) {\n    if (!(count > 0)) {\n      return table.td(0)\n     } else {\n      return table.tdLink(\n      count,\n      async () =>  this.onDrillDown(name, patientIds)\n      )\n     }\n   }\n  },\n  watch: {\n    params: {\n      immediate: true,\n      handler() {\n        this.renderResults();\n      }\n    }\n  }\n})\n","import { render } from \"./HMISTemplate.vue?vue&type=template&id=0bcecae1&ts=true\"\nimport script from \"./HMISTemplate.vue?vue&type=script&lang=ts\"\nexport * from \"./HMISTemplate.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}