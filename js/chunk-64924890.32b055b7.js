(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-64924890"],{b805:function(e,t,n){"use strict";n.r(t);var a=n("7a23");function i(e,t,n,i,r,o){const c=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(c,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}var r=n("9441"),o=n("7365"),c=n("cc6f");class s extends c["a"]{constructor(e,t){super(e,80,t)}}var l=n("2706"),u=n("d95e"),d=n("e86e"),f=n("b5e4"),p=Object(a["defineComponent"])({components:{HisStandardForm:r["a"]},mixins:[o["a"]],data:()=>({receptionService:{}}),watch:{ready:{async handler(e){e&&(this.receptionService=new s(this.patient.getID(),this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const n=await this.receptionService.createEncounter();if(!n)return Object(f["e"])("Unable to create registration encounter");const a=await this.resolveObs({...t}),i=await this.receptionService.saveObservationList(a);if(!i)return Object(f["e"])("Unable to save observations");this.$router.push("/registration/encounters/patient_services/"+this.patientID)},getFields(){return[{id:"referral",helpText:"Is the Patient a Referral Case From Another Health Facility?",type:u["b"].TT_SELECT,validation:e=>l["a"].required(e),computedValue:e=>({obs:this.receptionService.buildValueCoded("Is patient referred?",e.value)}),options:()=>[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},{id:"referring_facility_name",helpText:"Referred from",type:u["b"].TT_SELECT,validation:e=>l["a"].required(e),computedValue:({label:e})=>({obs:this.receptionService.buildValueText("Referred from",e)}),condition:e=>"Yes"===e.referral.value,options:(e,t="")=>Object(d["b"])(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}}]}}}),b=n("6b0d"),h=n.n(b);const m=h()(p,[["render",i]]);t["default"]=m},e86e:function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"d",(function(){return o})),n.d(t,"c",(function(){return c})),n.d(t,"f",(function(){return s})),n.d(t,"e",(function(){return l})),n.d(t,"a",(function(){return u})),n.d(t,"g",(function(){return d})),n.d(t,"h",(function(){return f}));var a=n("5713"),i=n("2ef0");async function r(e=""){const t=await a["a"].getFacilities({name:e});return t.filter(e=>!Object(i["isEmpty"])(e)).map(e=>({label:e.name,value:e.location_id,other:e}))}async function o(e=""){const t=await a["a"].getLabs({search_name:e});return t.map(e=>({label:e,value:e}))}async function c(e=""){const t=await a["a"].getFacilities({name:e,tag:"Facility adult sections"});return t.map(e=>({label:e.name,value:e.name,other:e}))}async function s(){const e=await a["a"].getSpecialistClinics();return e.map(e=>({label:e.name,value:e.name,other:e}))}async function l(){const e=await a["a"].getRegions();return e.map(e=>({label:e.name,value:e.region_id,other:e}))}async function u(e){const t=await a["a"].getDistricts(e);return t.map(e=>({label:e.name,value:e.district_id,other:e}))}async function d(e,t=""){const n=await a["a"].getTraditionalAuthorities(e,t);return n.map(e=>({label:e.name,value:e.traditional_authority_id,other:e}))}async function f(e,t=""){const n=await a["a"].getVillages(e,t);return n.map(e=>({label:e.name,value:e.village_id,other:e}))}}}]);
//# sourceMappingURL=chunk-64924890.32b055b7.js.map