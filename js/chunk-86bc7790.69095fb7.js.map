{"version":3,"sources":["webpack:///./src/apps/ART/services/consultation_service.ts","webpack:///./src/apps/ART/services/registration_service.ts","webpack:///./src/apps/EMC/utils/form.ts","webpack:///./src/apps/EMC/views/HIVReception.vue?a69d","webpack:///./src/apps/EMC/views/HIVReception.vue","webpack:///./src/apps/EMC/views/HIVReception.vue?7c00","webpack:///./src/apps/ART/services/staging_service.ts","webpack:///./src/apps/ART/guidelines/staging_guidelines.ts","webpack:///./src/utils/loader.ts","webpack:///./src/apps/ART/services/vitals_service.ts"],"names":["ConsultationService","patientID","providerID","AppEncounterService","getJson","this","ObservationService","getFirstObs","obs","value_text","match","obsInValidPeriod","getProgramID","date","getFirstValueCoded","id","req","isEmpty","lastScreened","duration","dayjs","diff","getFirstValueText","secondCheck","isTL","value_coded","tlObs","fpObs","drugs","uniqueDrugs","forEach","drug","drug_inventory_id","label","values","familyPlanningLogic","selected","map","data","value","isChecked","disabled","ClinicRegistrationService","isValidForm","form","key","required","error","validation","payload","errs","length","toString","console","log","Object","every","resolveFormValues","underscoreKeys","formData","computedFormData","fKey","toUnderscores","computedValue","resolveObs","tag","filter","d","reduce","accum","cur","Array","isArray","concat","push","Promise","all","optionsToGroupObs","conceptName","options","option","buildGroupValueCoded","submitForm","callback","showloader","loader","show","hide","toastWarning","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_col","_resolveComponent","_component_ion_row","_component_ion_grid","_component_layout","_openBlock","_createBlock","default","_withCtx","_createVNode","class","isReady","size","_KeepAlive","_resolveDynamicComponent","activeForm","patient","isNewPatient","sitePrefix","onOnValue","onValue","onOnNext","onNext","onOnPrevious","onPrevious","onOnFinish","onFinish","_","_createCommentVNode","defineComponent","components","ClinicRegistration","defineAsyncComponent","Staging","Layout","IonGrid","IonRow","IonCol","IonButton","setup","route","useRoute","router","useRouter","ref","reactive","patientId","parseInt","params","new","isStaging","computed","isRegistration","initialVisitDate","firstVisitEncounters","type","registration","arvNumberEditable","computedData","stagingData","staging","setSessionDate","registrationService","consultationService","vitalsService","VitalsService","patientTypeService","PatientTypeService","stagingService","StagingService","getAge","encounter","EncounterService","voidEncounter","arvNumber","createArvNumber","createEncounter","pTypeObs","saveObservationList","regObs","everRegisteredAtClinic","vitalsObs","consultationObs","patientProgram","PatientProgramService","setProgramDate","enrollProgram","resetSessionDate","toastSuccess","onMounted","Patientservice","findByID","p","Store","get","then","prefix","getEncounters","enc","encounterTypes","encounters","includes","encounter_type","encounter_id","__exports__","StagingCategory","ADULT_WHO_STAGE_CRITERIA","concept","priority","conditions","stage","reasonForArt","reason","CHILD_WHO_STAGE_CRITERIA","CONTRADICTING_STAGE_DEFINITIONS_ALERTS","actions","alert","facts","alertConfirmation","bmi","confirmBtnLabel","cancelBtnLabel","selectedCondition","condition","keepAsymptomatic","selectedConditions","stageThreeConditions","stageFourConditions","stageTwoConditions","RECOMMENDED_CHILD_STAGING_CONDITIONS","description","color","info","weightPercentile","RECOMMENDED_ADULT_STAGING_CONDITIONS","CHILD_ART_ELIGIBILITY","ageInMonths","age","pshdConditions","ConceptService","getConceptsByCategory","pshdCondition","testType","cd4","cd4Modifier","modifier","ADULT_ART_ELIGIBILITY","severeSymp","found","total","symp","name","gender","breastFeeding","answer","pregnant","confirmatoryTest","LocationService","getFacilities","e","isAdult","category","getStagingCategoryByNum","buildValueCoded","stageNumber","ADULT_STAGE_1","PEDAID_STAGE_1","ADULT_STAGE_2","PEDAID_STAGE_2","ADULT_STAGE_3","PEDAID_STAGE_3","ADULT_STAGE_4","PEDAID_STAGE_4","test","message","loadingController","create","spinner","translucent","present","dismiss","vital","other","val","min","max","parseFloat","vitals","j","validator","errors","holder","element","isValidBP","split","bpSystolic","bpDiastolic","checkMinMax","mergeErrors","emptyErrors","isNotEmptyandFloat","minErrors","isNotEmptyandNumber","isValidBPReading","v"],"mappings":"qVAOaA,EAAb,wDACE,WAAYC,EAAmBC,GAAkB,0CACzCD,EAAW,GAAIC,GAFzB,+DAIE,WACE,MAAO,CACL,2BACA,eACA,6BACA,wBACA,eACA,iBACA,iBACA,UAbN,4FAiBE,uHACSC,OAAoBC,QAApB,oBAAyCC,KAAKJ,UAA9C,iBADT,gDAjBF,mJAqBE,oHACoBK,OAAmBC,YACnCF,KAAKJ,UAAW,4CAFpB,cACQO,EADR,4BAISA,GAAkC,kBAA3B,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAKC,iBACrBD,EAAIC,WAAWC,MAAM,eACrBP,OAAoBQ,iBAAiBH,KAN5C,gDArBF,sJA+BE,oHACoBF,OAAmBC,YAAYF,KAAKJ,UAAW,iCADnE,cACQO,EADR,yBAESA,GAAOL,OAAoBQ,iBAAiBH,IAFrD,gDA/BF,yFAoCE,WACE,OAAOL,OAAoBC,QAApB,mBAAwCD,OAAoBS,eAA5D,qBAAuFP,KAAKJ,UAA5F,4BAAiI,CACtIY,KAAMR,KAAKQ,SAtCjB,uBA0CE,WACE,OAAOV,OAAoBW,mBAAmBT,KAAKJ,UAAW,qBA3ClE,uFA8CE,wHACyBE,OAAoBC,QAApB,8BAA2D,CAChFW,GAAIV,KAAKJ,UAAWY,KAAMR,KAAKQ,OAFnC,UACQG,EADR,OAIOC,qBAAQD,GAJf,uBAKUE,EAAeF,EAAI,iBACnBG,EAAWC,IAAMf,KAAKQ,MAAMQ,KAAKH,EAAc,SANzD,kBAOWC,GAAY,GAPvB,iCASS,GATT,gDA9CF,yJAyDA,sHAC2BhB,OAAoBW,mBAAmBT,KAAKJ,UAAW,gCADlF,UACUe,EADV,OAEe,iBAARA,EAFP,0CAGa,GAHb,uBAKmCb,OAAoBmB,kBAAkBjB,KAAKJ,UAAW,aALzF,UAKUsB,EALV,OAMuB,iBAAhBA,EANP,2CAOa,GAPb,kCASW,GATX,iDAzDA,wIAoEE,+GACQC,EAAQ,SAAChB,GAAD,OAAcA,GAA2B,mBAApBA,EAAIiB,aAAoCtB,OAAoBQ,iBAAiBH,IADlH,SAEsBL,OAAoBI,YAAYF,KAAKJ,UAAW,mBAFtE,UAEQyB,EAFR,QAGMF,EAAKE,GAHX,yCAIWF,EAAKE,IAJhB,wBAMwBvB,OAAoBI,YAAYF,KAAKJ,UAAW,6BANxE,eAMU0B,EANV,yBAOWH,EAAKG,IAPhB,iDApEF,gJA8EE,sHAEsBxB,OAAoBC,QAApB,mBACNC,KAAKJ,UADC,oBAFtB,UAEQ2B,EAFR,OAMOA,EANP,wDAQQC,EAAc,GACpBD,EAAME,SAAQ,SAACC,GACbF,EAAYE,EAAKC,mBAAqBD,KAV1C,kBAYSF,GAZT,gDA9EF,4FA4FE,SAAsBI,EAAeC,GACnC,IAAMC,EAA2B,CAC/B,2BAA4B,CAC1B,eAAgB,IAAK,6BAA8B,IAAK,wBAAyB,IACjF,eAAgB,IAAK,iBAAkB,IAAK,eAAgB,IAAK,iBAAkB,IACnF,UAAa,KAEf,eAAgB,CACd,2BAA4B,IAAK,6BAA8B,IAAK,wBAAyB,IAC7F,eAAgB,IAAK,iBAAkB,IAAK,eAAgB,IAAK,iBAAkB,IACnF,UAAa,KAEf,6BAA8B,CAC5B,2BAA4B,IAAK,eAAgB,IAAK,wBAAyB,IAC/E,eAAgB,IAAK,iBAAkB,IAAK,eAAgB,IAAK,iBAAkB,IACnF,UAAa,KAEf,wBAAyB,CACvB,2BAA4B,IAAK,eAAgB,IAAK,6BAA8B,IACpF,eAAgB,IAAK,iBAAkB,IAAK,eAAgB,IAAK,iBAAkB,IACnF,UAAa,KAEf,eAAgB,CACd,2BAA4B,IAAK,eAAgB,IAAK,6BAA8B,IACpF,wBAAyB,IAAK,iBAAkB,IAAK,eAAgB,IAAK,iBAAkB,IAC5F,UAAa,KAEf,iBAAkB,CAChB,2BAA4B,IAAK,eAAgB,IAAK,6BAA8B,IACpF,wBAAyB,IAAK,eAAgB,IAAK,eAAgB,IAAK,iBAAkB,IAC1F,UAAa,KAEf,eAAgB,CACd,2BAA4B,IAAK,eAAgB,IAAK,6BAA8B,IACpF,eAAgB,IAAK,iBAAkB,IAAK,wBAAyB,IAAK,iBAAkB,IAC5F,UAAa,KAEf,iBAAkB,CAChB,2BAA4B,IAAK,eAAgB,IAAK,6BAA8B,IACpF,eAAgB,IAAK,iBAAkB,IAAK,wBAAyB,IAAK,eAAgB,IAC1F,UAAa,KAEf,UAAa,CACX,2BAA4B,IAAK,eAAgB,IAAK,6BAA8B,IACpF,eAAgB,IAAK,iBAAkB,IAAK,wBAAyB,IAAK,eAAgB,IAC1F,iBAAkB,KAEpB,KAAQ,CACN,2BAA4B,IAAK,eAAgB,IAAK,6BAA8B,IACpF,eAAgB,IAAK,iBAAkB,IAAK,wBAAyB,IAAK,eAAgB,IAC1F,iBAAkB,MAGhBC,EAAWD,EAAoBF,GACrC,OAAOC,EAAOG,KAAI,SAAAC,GAChB,MAA6B,MAAzBF,EAASE,EAAKL,OACT,CACLA,MAAOK,EAAKL,MACZM,MAAOD,EAAKC,MACZC,WAAW,EACXC,UAAU,GAIL,CACLR,MAAOK,EAAKL,MACZM,MAAOD,EAAKC,MACZC,UAAWF,EAAKE,UAChBC,UAAU,UAhKpB,GAAyCtC,S,sICL5BuC,EAAb,wDACI,WAAYzC,EAAmBC,GAAkB,0CACvCD,EAAW,EAAGC,GAF5B,0BAA+CC,S,kYCMxC,SAAewC,EAAtB,kC,8DAAO,WAA4BC,GAA5B,wHACaA,GADb,iDACMC,EADN,YAECD,EAAKC,GAAKC,WAAY7B,qBAAQ2B,EAAKC,GAAKN,OAFzC,uBAGDK,EAAKC,GAAKE,MAAQ,yBAHjB,iCAMgC,oBAAzBH,EAAKC,GAAKG,WANjB,uBAODJ,EAAKC,GAAKE,MAAQ,GAPjB,qCAUGE,EAAqC,WAA3B,eAAOL,EAAKC,GAAKN,OAC3BK,EAAKC,GAAKN,MACV,CAAEN,MAAOW,EAAKC,GAAKN,MAAOA,MAAOK,EAAKC,GAAKN,OAZ9C,UAcgBK,EAAKC,GAAKG,WAAYC,EAAmBL,GAdzD,QAcGM,EAdH,OAeAA,GAAQA,EAAKC,OAAS,GACvBP,EAAKC,GAAKE,MAAQG,EAAKE,WACvBC,QAAQC,IAAIT,EAAKD,EAAKC,GAAKE,QAE3BH,EAAKC,GAAKE,MAAQ,GAnBjB,gDAsBEQ,OAAOrB,OAAOU,GAAMY,OAAM,gBAAGT,EAAH,EAAGA,MAAH,OAAgBA,MAtB5C,4C,wBAyBD,SAAUU,EAAkBb,GAAoC,IAAtBc,EAAsB,wDAC9DC,EAAgB,GAChBC,EAAwB,GAC9B,IAAK,IAAMf,KAAOD,EAChB,GAAGA,EAAKC,GAAKN,MAAO,CAClB,IAAMsB,EAAOH,EAAiBI,eAAcjB,GAAOA,EACnDc,EAASE,GAAQjB,EAAKC,GAAKN,MACW,oBAA5BK,EAAKC,GAAKkB,gBAClBH,EAAiBC,GAAQjB,EAAKC,GAAKkB,cAAenB,EAAKC,GAAKN,MAAOK,IAIzE,MAAO,CAAEe,WAAUC,oBAGf,SAAUI,EAAYxD,GAAgB,IAANyD,EAAM,uDAAF,GAClC/B,EAAcqB,OAAOrB,OAAO1B,GAC/B0D,QAAO,SAACC,GAAD,OAAYA,IAAMA,EAAEF,MAAQA,GAAe,KAARA,MAC1CG,QAAO,SAACC,EAAYC,GACnB,IAAMhC,EAAOgC,EAAI9D,IAAM8D,EAAI9D,IAAM8D,EAMjC,OALIC,MAAMC,QAAQlC,GAChB+B,EAAQA,EAAMI,OAAOnC,GAEnB+B,EAAMK,KAAKpC,GAER+B,IACN,IACL,OAAOM,QAAQC,IAAI1C,GAGd,SAAe2C,EAAtB,oC,8DAAO,WAAkCC,EAAqBC,GAAvD,iGACQJ,QAAQC,IAAIG,EAAQ1C,IAAR,yDAAY,WAAO2C,GAAP,0GAC5B1E,OAAmB2E,qBAAqBH,EAAaE,EAAO/C,MAAO+C,EAAOxC,UAAY,MAAQ,OADlE,2CAAZ,wDADpB,mF,wBAYA,SAAe0C,EAAtB,sC,8DAAO,WAA2BtC,EAAcuC,EAA8BJ,GAAvE,6GACKpC,EAAYC,GADjB,kFAGGwC,GAAoB,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASK,cAAc,EACtCA,GAAYC,OAAOC,OAJpB,EAKkC7B,EAAkBb,EAAD,OAAOmC,QAAP,IAAOA,OAAP,EAAOA,EAASrB,gBAA/DC,EALJ,EAKIA,SAAUC,EALd,EAKcA,iBALd,UAMGuB,EAASxB,EAAUC,GANtB,YAOAwB,EAPA,kCAOkBC,OAAOE,OAPzB,6DASHC,eAAa,GAAD,cACZH,OAAOE,OAVJ,0D,qFCzED,SAAUE,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAAqBC,8BAAkB,WACvCC,EAAqBD,8BAAkB,WACvCE,EAAsBF,8BAAkB,YACxCG,EAAoBH,8BAAkB,UAE5C,OAAQI,yBAAcC,yBAAaF,EAAmB,KAAM,CAC1DG,QAASC,sBAAS,iBAAM,CACtBC,yBAAaN,EAAqB,KAAM,CACtCI,QAASC,sBAAS,iBAAM,CACtBC,yBAAaP,EAAoB,CAAEQ,MAAO,YAAc,CACtDH,QAASC,sBAAS,iBAAM,CACrBd,EAAKiB,SACDN,yBAAcC,yBAAaN,EAAoB,CAC9CnD,IAAK,EACL+D,KAAM,MACL,CACDL,QAASC,sBAAS,iBAAM,EACrBH,yBAAcC,yBAAaO,eAAY,KAAM,EAC3CR,yBAAcC,yBAAaQ,qCAAyBpB,EAAKqB,YAAa,CACrEC,QAAStB,EAAKsB,QACdC,aAAcvB,EAAKuB,aACnBC,WAAYxB,EAAKwB,WACjBC,UAAWzB,EAAK0B,QAChBC,SAAU3B,EAAK4B,OACfC,aAAc7B,EAAK8B,WACnBC,WAAY/B,EAAKgC,UAChB,KAAM,EAAG,CAAC,UAAW,eAAgB,aAAc,YAAa,WAAY,eAAgB,iBAC9F,WAELC,EAAG,KAELC,gCAAoB,IAAI,OAE9BD,EAAG,QAGPA,EAAG,QAGPA,EAAG,I,0UCtBQE,+BAAgB,CAC7BC,WAAY,CACVC,mBAAoBC,mCAAqB,kBAAM,8GAC/CC,QAASD,mCAAqB,kBAAM,8GACpCE,cACAC,qBACAC,mBACAC,mBACAC,0BAEFC,MAV6B,WAW3B,IAAMC,EAAQC,iBACRC,EAASC,iBACThC,EAAUiC,kBAAI,GACdtG,EAAOuG,sBAAS,IAChB9B,EAAa6B,iBAAI,sBACjB1B,EAAa0B,iBAAI,IACjBE,EAAYC,SAASP,EAAMQ,OAAOjI,GAAGqC,YAAc,IACnD6D,IAAeuB,EAAMQ,OAAOC,IAAI7F,WAAW1C,MAAM,SACjDwI,EAAYC,uBAAS,iBAA2B,YAArBpC,EAAWxE,SACtC6G,EAAiBD,uBAAS,iBAA2B,YAArBpC,EAAWxE,SAC3CyE,EAAU4B,iBAAI,IACdS,EAAmBT,iBAAI,IACvBU,EAAuBV,iBAAI,IAE3BxB,EAAU,SAACxE,GAAD,OAAeN,EAAKM,EAAK2G,MAAQ3G,EAAKN,MAChDgF,EAAS,kBAAMP,EAAWxE,MAAQ,WAClCiF,EAAa,kBAAMT,EAAWxE,MAAQ,sBAEtCmF,EAAQ,yDAAG,2IACuCpF,EAAKkH,aAAnDC,EADO,EACPA,kBAAmB9F,EADZ,EACYA,SAAU+F,EADtB,EACsBA,aACfC,EAAgBrH,EAAKsH,QAAnCF,aAFO,SAGThH,OAA0BmH,eAAelG,EAAS0F,kBAHzC,UAITS,EAAsB,IAAIpH,OAA0BoG,GAAY,GAChEiB,EAAsB,IAAI/J,OAAoB8I,GAAY,GAC1DkB,EAAgB,IAAIC,OAAcnB,GAAY,GAC9CoB,EAAqB,IAAIC,OAAmBrB,GAAY,GACxDsB,EAAiB,IAAIC,OAAevB,EAAW9B,EAAQzE,MAAM+H,UAAW,GAR/D,SAWbjF,OAAOC,OAGH2B,GAAiBhG,qBAAQqI,EAAqB/G,QAChD+G,EAAqB/G,MAAMT,SAAQ,SAAAyI,GACjCC,OAAiBC,cAAcF,EAAW,iBAK3Cd,IAAqB9F,EAAS+G,UArBpB,kCAsBL1D,EAAQzE,MAAMoI,gBAAd,UAAiCzD,EAAW3E,MAA5C,gBAAyDoB,EAAS+G,YAtB7D,yBA0BPR,EAAmBU,kBA1BZ,yBA2BU5G,eAAW0F,EAAc,gBA3BnC,eA2BPmB,EA3BO,iBA4BPX,EAAmBY,oBAAoBD,GA5BhC,yBA+BPf,EAAoBc,kBA/Bb,yBAgCQ5G,eAAW0F,EAAc,gBAhCjC,eAgCPqB,EAhCO,iBAiCPjB,EAAoBgB,oBAAoBC,GAjCjC,WAoC0B,QAApCpH,EAASqH,uBApCC,kCAqCLhB,EAAcY,kBArCT,yBAsCa5G,eAAW0F,EAAc,UAtCtC,eAsCLuB,EAtCK,iBAuCLjB,EAAcc,oBAAoBG,GAvC7B,yBAyCLlB,EAAoBa,kBAzCf,yBA0CmB5G,eAAW0F,EAAc,gBA1C5C,eA0CLwB,EA1CK,iBA2CLnB,EAAoBe,oBAAoBI,GA3CnC,yBA+CPd,EAAeQ,kBA/CR,yBAgDK5G,eAAW2F,GAhDhB,eAgDPnJ,EAhDO,iBAiDP4J,EAAeU,oBAAoBtK,GAjD5B,YAoDVyG,EApDU,wBAqDLkE,EAAiB,IAAIC,OAAsBtC,GACjDqC,EAAeE,eAAe1H,EAAS0F,kBAtD5B,UAuDL8B,EAAeG,gBAvDV,yBA0DPjG,OAAOE,OA1DA,yBA2DP7C,OAA0B6I,mBA3DnB,yBA4DPC,eAAa,sBA5DN,QA6Db9C,EAAOhE,KAAP,uBAA4BoE,IA7Df,sEA+DPzD,OAAOE,OA/DA,QAgEblC,QAAQC,IAAR,MACAkC,eAAa,GAAD,cAjEC,0DAAH,qDA0Fd,OArBAiG,uBAAS,wCAAC,oHACQC,OAAeC,SAAS7C,GADhC,OACF8C,EADE,OAER5E,EAAQzE,MAAQ,IAAImJ,OAAeE,GACnCC,OAAMC,IAAI,eAAeC,MAAK,SAAAC,GAAM,OAAI9E,EAAW3E,MAAQyJ,KAC3DrF,EAAQpE,OAAQ,EACZ0E,GAEFuD,OAAiByB,cAAcnD,EAAW,CAAC,kBAAqB,IAAIiD,MAAK,SAACG,GACxE,IAAGjL,qBAAQiL,GAAX,CACA,IAAMC,EAAiB,CAAC,EAAG,GAAI,EAAG,EAAG,IACrC9C,EAAiB9G,MAAQuJ,iBAAII,EAAK,yBAA0B,IACzD7C,EAAiB9G,OAClBiI,OAAiByB,cAAcnD,EAAW,CAAEjI,KAAMwI,EAAiB9G,QAASwJ,MAAK,SAACK,GAChF9C,EAAqB/G,MAAQ6J,EAC1BlI,QAAO,SAAAgI,GAAG,OAAIC,EAAeE,SAASH,EAAII,mBAC1CjK,KAAI,SAAA6J,GAAG,OAAIA,EAAIK,uBAflB,4CAqBH,CACLxF,aACAC,UACAC,eACAiC,YACAE,iBACAlC,aACAP,UACAS,UACAM,WACAJ,SACAE,iB,qBCjJN,MAAMgF,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS/G,KAErD,gB,0ECQVgH,E,sLCXQC,EAA+D,CACxE,iCAAkC,CAC9BC,QAAS,qBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,yDAA0D,CACtDH,QAAS,qBACTC,SAAU,EACVC,WAAY,CACRE,aAAc,SAACC,GAAD,MAA+B,uBAAXA,KAG1C,iCAAkC,CAC9BL,QAAS,sBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,iCAAkC,CAC9BH,QAAS,qBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,iCAAkC,CAC9BH,QAAS,oBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,MAKzBG,EAA+D,CACxE,mCAAoC,CAChCN,QAAS,oBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,yDAA0D,CACtDH,QAAS,oBACTC,SAAU,EACVC,WAAY,CACRE,aAAc,SAACC,GAAD,MAA+B,sBAAXA,KAG1C,uCAAwC,CACpCL,QAAS,qBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,mCAAoC,CAChCH,QAAS,oBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,mCAAoC,CAChCH,QAAS,mBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,MAKzBI,EAA6E,CACtF,+EAAgF,CAC5EN,SAAU,EACVO,QAAS,CACLC,MAAO,WAAF,8CAAE,WAAOC,GAAP,iGAA4BC,eAAkB,oBAAD,OAAqBD,EAAME,IAA3B,+CAA6E,CAC7HC,gBAAiB,8BACjBC,eAAgB,eAFb,mFAAF,sDAAE,IAKXZ,WAAY,CACRa,kBADQ,SACWC,GACf,MAAqB,gEAAdA,GAEXJ,IAAI,SAACA,GAAD,OAAiBA,EAAM,QAGnC,mDAAoD,CAChDX,SAAU,EACVO,QAAS,CACLC,MAAO,WAAF,8CAAE,WAAOC,GAAP,uGAC4BC,eAAkB,0CAA2C,CACxFE,gBAAiB,oBACjBC,eAAgB,kBAHjB,UACGG,EADH,QAKAA,EALA,wBAMCP,EAAMP,MAAQ,EACdO,EAAMQ,mBAAqB,GAC3BR,EAAMS,qBAAuB,GAC7BT,EAAMU,oBAAsB,GAC5BV,EAAMW,mBAAqB,GAV5B,mBAWQ,GAXR,kCAaI,GAbJ,4CAAF,sDAAE,IAgBXnB,WAAY,CACRa,kBADQ,SACUC,GACd,MAAqB,+BAAdA,GAEXb,MAAO,SAACA,GAAD,OAAmBA,GAAS,MAKlCmB,EAA2E,CACpF,+DAAiE,CAC7DrB,SAAU,EACVO,QAAS,CACL3K,WAAW,GAEf0L,YAAa,CACTC,MAAO,SACP7I,KAAM,SACN8I,KAAM,SAACf,GAAD,qDAAwDA,EAAMgB,oBAExExB,WAAY,CACRa,kBADQ,SACUC,GACd,MAAqB,2IAAdA,GAEXU,iBAJQ,SAISA,GACb,OAAOA,EAAmB,MAItC,0FAA2F,CACvFzB,SAAU,EACVO,QAAS,CACL3K,WAAW,GAEf0L,YAAa,CACTC,MAAO,SACP7I,KAAM,SACN8I,KAAM,SAACf,GAAD,+CAAkDA,EAAMgB,oBAElExB,WAAY,CACRa,kBADQ,SACUC,GACd,MAAqB,4HAAdA,GAEXU,iBAJQ,SAISA,GACb,OAAOA,GAAoB,IAAMA,GAAoB,MAIjE,6EAA8E,CAC1EzB,SAAU,EACVO,QAAS,CACL3K,WAAW,EACXC,UAAU,GAEdyL,YAAa,CACTC,MAAO,YACP7I,KAAM,SACN8I,KAAM,iBAAM,wDAEhBvB,WAAY,CACRa,kBADQ,SACUC,GACd,MAAqB,4HAAdA,GAEXE,mBAJQ,SAIWhB,GACf,OAAOA,EAAWR,SAAS,8IAM9BiC,EAA2E,CACpF,iCAAkC,CAC9B1B,SAAU,EACVO,QAAS,CACL3K,WAAW,GAEf0L,YAAa,CACTC,MAAO,SACP7I,KAAM,SACN8I,KAAM,SAACf,GAAD,uCAA0CA,EAAME,OAE1DV,WAAY,CACRa,kBADQ,SACUC,GACd,MAAqB,gEAAdA,GAEXJ,IAAK,SAACA,GAAD,OAAiBA,EAAM,MAGpC,wCAAyC,CACrCX,SAAU,EACVO,QAAS,CACL3K,WAAW,GAEf0L,YAAa,CACTC,MAAO,UACP7I,KAAM,YACN8I,KAAM,SAACf,GAAD,uBAA0BA,EAAME,IAAhC,2BAEVV,WAAY,CACRa,kBAAmB,SAACC,GAAD,MAAqC,uEAAdA,GAC1CJ,IAAK,SAACA,GAAD,OAAiBA,GAAO,IAAQA,GAAO,QAGpD,gEAAiE,CAC7DX,SAAU,EACVO,QAAS,CACL3K,WAAW,EACXC,UAAU,GAEdyL,YAAa,CACTC,MAAO,YACP7I,KAAM,SACN8I,KAAM,iBAAM,4CAEhBvB,WAAY,CACRa,kBADQ,SACUC,GACd,MAAqB,uEAAdA,GAEXE,mBAJQ,SAIWhB,GACf,OAAOA,EAAWR,SAAS,mEAM9BkC,EAA4D,CACrE,yBAA0B,CACtB5B,QAAS,oBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,yBAA0B,CACtBH,QAAS,qBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,8FAA+F,CAC3FH,QAAS,sBACTC,SAAU,EACVC,WAAY,CACR2B,YADQ,SACIC,GACR,OAAOA,EAAM,IAEjBZ,mBAAoB,SAAChB,GACjB,IAAM6B,EAAiBC,OAAeC,sBAAsB,kBAC5D,IAAK,IAAMC,KAAiBH,EACxB,GAAI7B,EAAWR,SAASwC,GAAgB,OAAO,EAEnD,OAAO,GAEXC,SAXQ,SAWCA,GACL,MAAoB,mBAAbA,KAInB,uFAAwF,CACpFnC,QAAS,oCACTC,SAAU,EACVC,WAAY,CACR2B,YAAa,SAACC,GAAD,OAAiBA,EAAM,IACpCK,SAAU,SAACA,GAAD,MAAmC,sCAAbA,KAGxC,uCAAwC,CACpCnC,QAAS,eACTC,SAAU,EACVC,WAAY,CACR2B,YAAa,SAACC,GAAD,OAAiBA,EAAM,MAG5C,qEAAsE,CAClE9B,QAAS,sCACTC,SAAU,EACVC,WAAY,CACR2B,YADQ,SACIC,GACR,OAAOA,GAAO,IAAMA,GAAO,IAE/BM,IAJQ,SAIJA,GACA,OAAOA,GAAO,KAElBC,YAPQ,SAOIC,GACR,MAAoB,MAAbA,GAAiC,MAAbA,GAE/BnC,MAVQ,SAUFA,GACF,OAAOA,GAAS,KAI5B,gFAAiF,CAC7EH,QAAS,sCACTC,SAAU,EACVC,WAAY,CACRkC,IADQ,SACJA,GACA,OAAOA,GAAO,KAElBC,YAJQ,SAIIC,GACR,MAAoB,MAAbA,GAAiC,MAAbA,GAE/BnC,MAPQ,SAOFA,GACF,OAAOA,GAAS,KAI5B,sGAAuG,CACnGH,QAAS,sCACTC,SAAU,EACVC,WAAY,CACRhM,KADQ,SACHA,GACD,OAAOA,GAAQ,cAEnB4N,IAJQ,SAIJA,GACA,OAAOA,EAAM,GAEjBM,IAPQ,SAOJA,GACA,OAAOA,GAAO,KAElBC,YAVQ,SAUIC,GACR,MAAoB,MAAbA,GAAiC,MAAbA,KAIvC,6DAA8D,CAC1DtC,QAAS,eACTC,SAAU,GACVC,WAAY,CACRhM,KADQ,SACHA,GACD,OAAOA,GAAQ,cAEnB4N,IAJQ,SAIJA,GACA,OAAOA,GAAO,KAI1B,qEAAsE,CAClE9B,QAAS,eACTC,SAAU,GACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAAmBA,GAAS,MAKlCoC,EAA4D,CACrE,yBAA0B,CACtBvC,QAAS,qBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,iDAAkD,CAC9CH,QAAS,qBACTC,SAAU,EACVC,WAAY,CACRgB,mBAAoB,SAAChB,GACjB,IAAMsC,EAAaR,OAAeC,sBAAsB,+BAClDQ,EAAQD,EAAW/K,QAAO,SAACiL,EAAOC,GAAR,OAAiBzC,EAAWR,SAASiD,EAAKC,MAAQF,EAAQ,EAAI,IAAG,GACjG,OAAOD,GAAS,KAI5B,yBAA0B,CACtBzC,QAAS,sBACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAA6B,IAAVA,KAGlC,2CAA4C,CACxCH,QAAS,gCACTC,SAAU,EACVC,WAAY,CACRhM,KADQ,SACHA,GACD,OAAOA,EAAO,cAElBkO,IAJQ,SAIJA,GACA,OAAOA,GAAO,KAElBC,YAPQ,SAOIC,GACR,MAAoB,MAAbA,GAAiC,MAAbA,KAIvC,0CAA2C,CACvCtC,QAAS,gCACTC,SAAU,EACVC,WAAY,CACRhM,KADQ,SACHA,GACD,OAAOA,GAAQ,cAEnBkO,IAJQ,SAIJA,GACA,OAAOA,GAAO,KAElBC,YAPQ,SAOIC,GACR,MAAoB,MAAbA,GAAiC,MAAbA,KAIvC,0CAA2C,CACvCtC,QAAS,gCACTC,SAAU,EACVC,WAAY,CACRhM,KADQ,SACHA,GACD,OAAOA,GAAQ,cAEnBkO,IAJQ,SAIJA,GACA,OAAOA,GAAO,KAElBC,YAPQ,SAOIC,GACR,MAAoB,MAAbA,GAAiC,MAAbA,KAIvC,0CAA2C,CACvCtC,QAAS,gCACTC,SAAU,EACVC,WAAY,CACRhM,KADQ,SACHA,GACD,OAAOA,GAAQ,cAEnBkO,IAJQ,SAIJA,GACA,OAAOA,GAAO,KAElBC,YAPQ,SAOIC,GACR,MAAoB,MAAbA,GAAiC,MAAbA,KAIvC,+BAAgC,CAC5BtC,QAAS,gBACTC,SAAU,EACVC,WAAY,CACR2C,OADQ,SACDA,GACH,MAAkB,MAAXA,GAEXC,cAJQ,SAIMC,GACV,MAAmB,QAAXA,GAEZ5C,MAAO,SAACA,GAAD,OAAmBA,GAAS,KAG3C,yBAA0B,CACtBH,QAAS,mBACTC,SAAU,EACVC,WAAY,CACR2C,OADQ,SACDA,GACH,MAAkB,MAAXA,GAEXG,SAJQ,SAICD,GACL,MAAkB,QAAXA,GAEX5C,MAPQ,SAOFA,GACF,OAAOA,GAAS,KAI5B,qEAAsE,CAClEH,QAAS,eACTC,SAAU,EACVC,WAAY,CACRC,MAAO,SAACA,GAAD,OAAmBA,GAAS,ODhd/C,SAAKL,GACDA,+CACAA,+CACAA,+CACAA,+CACAA,iDACAA,iDACAA,iDACAA,kDARJ,CAAKA,MAAe,KAWb,IAAMpC,EAAb,wDAGI,WAAYpK,EAAmBwO,EAAavO,GAAkB,oCAC1D,cAAMD,EAAW,GAAIC,GACrB,EAAKuO,IAAMA,EACX,EAAKmB,iBAAmB,KAHkC,EAHlE,8CASI,WAAY,OAAOvP,KAAKoO,KAAO,KATnC,sBAWI,WAAa,OAAOpO,KAAKoO,KAAO,KAXpC,oBAaI,SAAOA,GACHpO,KAAKoO,IAAMA,IAdnB,2BAiBI,WAAwB,IAATvK,EAAS,uDAAF,GAAM,OAAO2L,OAAgBC,cAAc,CAACP,KAAMrL,MAjB5E,qCAmBI,WAA4B,OAAO7D,KAAKuP,mBAnB5C,6BAqBI,SAAgBrN,GACZ,IACI,QAAOA,EAAM7B,MAAM,sBACtB,MAAMqP,GACH,OAAO,KAzBnB,gCA6BI,WACI,OAAO7C,IA9Bf,mCAiCI,WACI,OAAO7M,KAAK2P,UAAYtD,EAA2BO,IAlC3D,6CAqCI,WACI,OAAO5M,KAAK2P,UAAYd,EAAuBX,IAtCvD,+CAyCI,WACI,OAAOlO,KAAK2P,UAAY1B,EAAsCL,IA1CtE,kCA6CI,SAAqBnB,GACjB,IAAMmD,EAAW5P,KAAK6P,wBAAwBpD,GAC9C,OAAO3M,OAAoByO,sBAAsBqB,KA/CzD,6BAkDI,WACI,OAAO9P,OAAoByO,sBAAsB,2BAnDzD,iCAsDI,WACI,OAAOzO,OAAoByO,sBAAsB,oBAvDzD,8BA0DI,SAAiB9B,GACb,OAAOzM,KAAK8P,gBAAgB,YAAarD,KA3DjD,iCA8DI,SAAoBa,GAChB,OAAOtN,KAAK8P,gBAAgB,8BAA+BxC,KA/DnE,kCAkEI,SAAqBX,GACjB,OAAO3M,KAAK8P,gBAAgB,6BAA8BnD,KAnElE,qCAsEY,SAAwBoD,GAC5B,OAAOA,GACH,KAAK,EACD,OAAO/P,KAAK2P,UAAYvD,EAAgB4D,cAAgB5D,EAAgB6D,eAC5E,KAAK,EACD,OAAOjQ,KAAK2P,UAAYvD,EAAgB8D,cAAgB9D,EAAgB+D,eAC5E,KAAK,EACD,OAAOnQ,KAAK2P,UAAYvD,EAAgBgE,cAAgBhE,EAAgBiE,eAC5E,KAAK,EACD,OAAOrQ,KAAK2P,UAAYvD,EAAgBkE,cAAgBlE,EAAgBmE,eAC5E,QACI,MAAO,MAjFvB,kGAqFI,oHACuBzQ,OAAoBW,mBACnCT,KAAKJ,UAAW,8BAFxB,OACU4Q,EADV,OAIQA,IAAMxQ,KAAKuP,iBAAmBiB,GAJtC,gDArFJ,8DAAoC1Q,S,4GExBvBkF,EAAS,CAOdC,KAPc,SAOTwL,GAAgB,6JACXC,uBAAkBC,OAAO,CACrCF,QAASA,GAAW,aACpBG,QAAS,WACTC,aAAa,IAJU,uCAKrBC,WALqB,8CAarB5L,KApBc,WAoBV,sKACDwL,uBAAkBK,WADjB,gD,4OCnBCnH,EAAb,wDACE,WAAYhK,EAAmBC,GAAkB,0CACzCD,EAAW,EAAGC,GAFxB,0DAIE,SAAoBmR,GAClB,MAAO,UAAGA,EAAM9O,OAAQ7B,MAAM,iBAAmB,KAAO,CAAC,qBAAD,OAAsB2Q,EAAMpP,UALxF,gCAOE,SAAmBoP,GAAa,MAC9B,MAAO,UAAGA,EAAM9O,OAAQ7B,MAAM,sBAC1B,KACA,CAAC,qBAAD,OAAsB2Q,EAAMpP,MAA5B,uDAA+E,UAAAoP,EAAMC,aAAN,eAAarC,WAAY,OAVhH,yBAYE,SAAYsC,EAAaC,EAAaC,GACpC,IACsC,EAGA,EAJhC7F,EAAI,GACN8F,WAAW,GAAD,OAAIH,EAAIhP,QAAWiP,GAC/B5F,EAAElH,KAAK,CAAC,GAAD,OAAI6M,EAAItP,MAAR,yCAA8CuP,EAA9C,aAAwD,OAAHD,QAAG,IAAHA,GAAA,UAAAA,EAAKD,aAAL,eAAYrC,WAAY,MAElFyC,WAAW,GAAD,OAAIH,EAAIhP,QAAWkP,GAC/B7F,EAAElH,KAAK,CAAC,GAAD,OAAI6M,EAAItP,MAAR,4CAAiDwP,EAAjD,aAA2D,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAKD,aAAL,eAAYrC,WAAY,MAEzF,OAAOrD,EAAEzI,OAAS,EAAIyI,EAAI,OApB9B,yBAsBE,SAAY+F,GAAgB,WACpB/F,EAAS,GAKf,OAJA+F,EAAOtP,KAAI,SAACgP,GACV,IAAMO,EAAI,EAAKC,UAAUR,GACzB,OAAO7M,qBAAQoN,GAAKhG,EAAElH,KAAKkN,GAAK,QAE3BhG,EAAEzI,OAAS,EAAIyI,EAAI,OA5B9B,yBA+BE,SAAYkG,GACV,IAAMC,EAAc,GAMpB,OALAD,EAAOhQ,SAAQ,SAAAkQ,GACTxN,qBAAQwN,IACVD,EAAOrN,KAAKsN,MAGTD,EAAO5O,OAAS,EAAI4O,EAAS,OAtCxC,8BAwCE,SAAiBV,GACf,IAAMzF,EAAI,GACJqG,EAAa,UAAGZ,EAAM9O,OAAQ7B,MAAM,uBAAyB,KAAO,CAAC,sBAE3E,GADAkL,EAAElH,KAAKuN,GACS,MAAbA,EAAmB,CACpB,IAAM1P,EAAQ,UAAG8O,EAAM9O,OAAQ2P,MAAM,KAE/BC,EAAa,CACjBlQ,MAAO,WACPM,MAAOA,EAAM,IAET6P,EAAc,CAClBnQ,MAAO,YACPM,MAAOA,EAAM,IAEfqJ,EAAElH,KAAKrE,KAAKgS,YAAYD,EAAa,GAAI,MACzCxG,EAAElH,KAAKrE,KAAKgS,YAAYF,EAAY,GAAI,MAE1C,OAAO9R,KAAKiS,YAAY1G,KA1D5B,uBA4DE,SAAUyF,GAAa,WACfnP,EAAS,CACb,CACEqN,KAAM,SACNsC,UAAW,SAACN,GACV,IAAMgB,EAAc,EAAKC,mBAAmBjB,GACtCkB,EAAY,EAAKJ,YAAYd,EAAK,EAAK,KAC7C,OAAO,EAAKe,YAAY,CAACC,EAAaE,MAG1C,CACElD,KAAM,SACNsC,UAAW,SAACN,GACV,IAAMO,EAAS,GAGf,OAFAA,EAAOpN,KAAK,EAAKgO,oBAAoBnB,IACrCO,EAAOpN,KAAK,EAAK2N,YAAYd,EAAK,GAAI,MAC/B,EAAKe,YAAYR,KAEzB,CACDvC,KAAM,KACNsC,UAAW,SAACN,GACV,OAAO,EAAKoB,iBAAiBpB,KAE9B,CACDhC,KAAM,OACNsC,UAAW,SAACN,GACV,IAAMgB,EAAc,EAAKG,oBAAoBnB,GACvCkB,EAAY,EAAKJ,YAAYd,EAAK,GAAI,IAC5C,OAAO,EAAKe,YAAY,CAACC,EAAaE,MAEvC,CACDlD,KAAM,OACNsC,UAAW,SAACN,GACV,IAAMkB,EAAY,EAAKJ,YAAYd,EAAK,GAAI,KAC5C,OAAO,EAAKe,YAAY,CAACG,MAE1B,CACDlD,KAAM,QACNsC,UAAW,SAACN,GACV,IAAMkB,EAAY,EAAKJ,YAAYd,EAAK,GAAI,KAC5C,OAAO,EAAKe,YAAY,CAACG,OAIzBG,EAAI1Q,EAAOgC,QAAO,SAAA8N,GACtB,OAAOA,EAAQzC,OAAS8B,EAAMpP,SAEhC,OAAI2Q,EAAEzP,OAAS,EACNyP,EAAE,GAAGf,UAAUR,GAEjB,SA9GX,GAAmClR","file":"js/chunk-86bc7790.69095fb7.js","sourcesContent":["import { DrugInterface } from \"@/interfaces/Drug\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { ObservationService } from \"@/services/observation_service\";\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"lodash\";\nimport { DrugOrderService } from \"@/services/drug_order_service\"\n\nexport class ConsultationService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 53, providerID);\n  }\n  getFamilyPlanningMethods() {\n    return [\n      \"ORAL CONTRACEPTIVE PILLS\",\n      \"DEPO-PROVERA\",\n      \"INTRAUTERINE CONTRACEPTION\",\n      \"CONTRACEPTIVE IMPLANT\",\n      \"MALE CONDOMS\",\n      \"FEMALE CONDOMS\",\n      \"TUBAL LIGATION\",\n      \"NONE\",\n    ];\n  }\n\n  async getTptTreatmentStatus() {\n    return AppEncounterService.getJson(`/patients/${this.patientID}/tpt_status`)\n  }\n\n  async patientHitMenopause() {\n    const obs = await ObservationService.getFirstObs(\n      this.patientID, 'Why does the woman not use birth control', \n    )\n    return obs && typeof obs?.value_text === 'string'\n      ? (obs.value_text.match(/menopause/i) ? true : false)\n      && AppEncounterService.obsInValidPeriod(obs)\n      : false\n  }\n\n  async hasTreatmentHistoryObs() {\n    const obs = await ObservationService.getFirstObs(this.patientID, 'Previous TB treatment history')\n    return obs && AppEncounterService.obsInValidPeriod(obs)\n  }\n\n  getDrugSideEffects() {\n    return AppEncounterService.getJson(`programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/medication_side_effects`, { \n      date: this.date \n    })\n  }\n\n  getClient() {\n    return AppEncounterService.getFirstValueCoded(this.patientID, 'Patient present');\n  }\n\n  async clientDueForCxCa() {\n    const req: any = await AppEncounterService.getJson(`last_cxca_screening_details`, {\n      id: this.patientID, date: this.date\n    })\n    if (!isEmpty(req)) {\n      const lastScreened = req['date_screened']\n      const duration = dayjs(this.date).diff(lastScreened, 'years')\n      return duration >= 1\n    }\n    return true\n  }\nasync clientHasHadAHysterectomy() {\n    const req: any = await AppEncounterService.getFirstValueCoded(this.patientID, 'Reason for NOT offering CxCa'); \n    if(req === \"Hysterectomy\") {\n      return true\n    }\n    const secondCheck: any = await AppEncounterService.getFirstValueText(this.patientID, 'Treatment'); \n    if(secondCheck === \"Hysterectomy\") {\n      return true\n    }\n    return false\n  }\n  async getTLObs() {\n    const isTL = ((obs: any) => obs && obs.value_coded === 'Tubal ligation' && AppEncounterService.obsInValidPeriod(obs))\n    const tlObs = await AppEncounterService.getFirstObs(this.patientID, 'Family planning')\n    if (isTL(tlObs)) {\n      return isTL(tlObs)\n    } else  {\n      const fpObs = await AppEncounterService.getFirstObs(this.patientID, 'Method of family planning')\n      return isTL(fpObs)\n    }\n  }\n  async getPreviousDrugs() {\n\n    const drugs = await AppEncounterService.getJson(\n      `patients/${this.patientID}/drugs_received`\n    )\n\n    if (!drugs) return\n\n    const uniqueDrugs = {} as any\n    drugs.forEach((drug: DrugInterface) => {\n      uniqueDrugs[drug.drug_inventory_id] = drug;\n    })\n    return uniqueDrugs;\n  }\n  familyPlanningMethods(label: string, values: any[]) {\n    const familyPlanningLogic: any = {\n      \"ORAL CONTRACEPTIVE PILLS\": {\n        \"DEPO-PROVERA\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"DEPO-PROVERA\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"INTRAUTERINE CONTRACEPTION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"CONTRACEPTIVE IMPLANT\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"MALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"FEMALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'MALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"RYTHM METHOD\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'CONTRACEPTIVE IMPLANT': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"TUBAL LIGATION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'VASECTOMY': 'N',\n      },\n      \"VASECTOMY\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'Y', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      },\n      \"NONE\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      }\n    }\n    const selected = familyPlanningLogic[label];\n    return values.map(data => {\n      if (selected[data.label] === \"N\") {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: false,\n          disabled: true,\n        }\n      }\n      else {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: data.isChecked,\n          disabled: false,\n        }\n      }\n\n    })\n  }\n\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class ClinicRegistrationService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 9, providerID) //TODO: Use encounter type reference name'\n    }\n}\n","import { ObsValue, ObservationService } from \"@/services/observation_service\"\nimport { DTForm } from \"../interfaces/dt_form_field\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { toUnderscores } from \"@/utils/Strs\";\nimport { isEmpty } from \"lodash\";\nimport { loader } from \"@/utils/loader\";\nimport { toastWarning } from '@/utils/Alerts';\n\nexport async function isValidForm (form: DTForm) {\n  for (const key in form) {\n    if (form[key].required && isEmpty(form[key].value)) {\n      form[key].error = \"This field is required\";\n      continue;\n    }\n    if(typeof form[key].validation !== 'function') {\n      form[key].error = ''\n      continue\n    }\n    const payload = typeof form[key].value === 'object'\n        ? form[key].value\n        : { label: form[key].value, value: form[key].value }\n\n    const errs = await form[key].validation!(payload as Option, form)\n    if(errs && errs.length > 0) {\n      form[key].error = errs.toString()\n      console.log(key, form[key].error)\n    } else {\n      form[key].error = ''\n    }       \n  }\n  return Object.values(form).every(({ error }) => !error)\n}\n\nexport function resolveFormValues(form: DTForm, underscoreKeys = false) {\n  const formData: any = {}\n  const computedFormData: any = {}\n  for (const key in form) {\n    if(form[key].value) {\n      const fKey = underscoreKeys ? toUnderscores(key) : key\n      formData[fKey] = form[key].value\n      if(typeof form[key].computedValue === 'function') {\n        computedFormData[fKey] = form[key].computedValue!(form[key].value, form)\n      }\n    }\n  }\n  return { formData, computedFormData }\n}\n\nexport function resolveObs (obs: any, tag=''): Promise<ObsValue[]> {\n  const values: any = Object.values(obs)\n    .filter((d: any) => d && (d.tag === tag || tag === ''))\n    .reduce((accum: any, cur: any) => { \n      const data = cur.obs ? cur.obs : cur\n      if (Array.isArray(data)) {\n        accum = accum.concat(data)\n      } else {\n          accum.push(data)\n      }\n      return accum\n    }, [])\n  return Promise.all(values)\n}\n\nexport async function optionsToGroupObs (conceptName: string, options: Option[]) {\n  return await Promise.all(options.map(async (option) => {\n    return ObservationService.buildGroupValueCoded(conceptName, option.label, option.isChecked ? 'Yes' : 'No')\n  }))\n}\n\ntype SubmitFormCallback = (formData: Record<string, any>, computedData: Record<string, any>) => Promise<void> | void\ninterface SubmitOptios {\n  showloader?: boolean;\n  underscoreKeys?: boolean;\n}\n\nexport async function submitForm (form: DTForm, callback: SubmitFormCallback, options?: SubmitOptios) {\n  if(!await isValidForm(form)) return\n  try {\n    const showloader = options?.showloader || false\n    if (showloader) loader.show()\n    const {formData, computedFormData} = resolveFormValues(form, options?.underscoreKeys)\n    await callback(formData, computedFormData)\n    if(showloader) await loader.hide()\n  } catch (error) {\n    toastWarning(`${error}`)\n    loader.hide()\n  }\n}","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, KeepAlive as _KeepAlive, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_layout = _resolveComponent(\"layout\")\n\n  return (_openBlock(), _createBlock(_component_layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_grid, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_row, { class: \"his-card\" }, {\n            default: _withCtx(() => [\n              (_ctx.isReady)\n                ? (_openBlock(), _createBlock(_component_ion_col, {\n                    key: 0,\n                    size: \"12\"\n                  }, {\n                    default: _withCtx(() => [\n                      (_openBlock(), _createBlock(_KeepAlive, null, [\n                        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.activeForm), {\n                          patient: _ctx.patient,\n                          isNewPatient: _ctx.isNewPatient,\n                          sitePrefix: _ctx.sitePrefix,\n                          onOnValue: _ctx.onValue,\n                          onOnNext: _ctx.onNext,\n                          onOnPrevious: _ctx.onPrevious,\n                          onOnFinish: _ctx.onFinish\n                        }, null, 8, [\"patient\", \"isNewPatient\", \"sitePrefix\", \"onOnValue\", \"onOnNext\", \"onOnPrevious\", \"onOnFinish\"]))\n                      ], 1024))\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { computed, defineAsyncComponent, defineComponent, onMounted, reactive, ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport Layout from \"@/apps/EMC/Components/Layout.vue\";\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport { Patientservice } from '@/services/patient_service';\nimport Store from \"@/composables/ApiStore\"\nimport { toastSuccess, toastWarning } from '@/utils/Alerts';\nimport { loader } from '@/utils/loader';\nimport { ClinicRegistrationService } from '@/apps/ART/services/registration_service';\nimport { ConsultationService } from '@/apps/ART/services/consultation_service';\nimport { VitalsService } from '@/apps/ART/services/vitals_service';\nimport { PatientTypeService } from '@/apps/ART/services/patient_type_service';\nimport { resolveObs } from '../utils/form';\nimport { PatientProgramService } from '@/services/patient_program_service';\nimport { StagingService } from '@/apps/ART/services/staging_service';\nimport { EncounterService } from '@/services/encounter_service';\nimport { isEmpty, get } from 'lodash';\nimport { Encounter } from '@/interfaces/encounter';\n\nexport default defineComponent({\n  components: {\n    ClinicRegistration: defineAsyncComponent(() => import('@/apps/EMC/Components/ClinicRegistration.vue')),\n    Staging: defineAsyncComponent(() => import('@/apps/EMC/Components/Staging.vue')),\n    Layout,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const isReady = ref(false);\n    const data = reactive({} as any);\n    const activeForm = ref('ClinicRegistration')\n    const sitePrefix = ref('')\n    const patientId = parseInt(route.params.id.toString() || '')\n    const isNewPatient = route.params.new.toString().match(/true/i) ? true : false\n    const isStaging = computed(() => activeForm.value === 'Staging');\n    const isRegistration = computed(() => activeForm.value === 'Staging');\n    const patient = ref({} as Patientservice)\n    const initialVisitDate = ref('')\n    const firstVisitEncounters = ref([] as number[])\n    \n    const onValue = (form: any) => data[form.type] = form.data;\n    const onNext = () => activeForm.value = \"Staging\"\n    const onPrevious = () => activeForm.value = \"ClinicRegistration\"\n\n    const onFinish = async () => {\n      const { arvNumberEditable, formData, computedData } = data.registration\n      const { computedData: stagingData } = data.staging\n      await ClinicRegistrationService.setSessionDate(formData.initialVisitDate)\n      const registrationService = new ClinicRegistrationService(patientId, -1)\n      const consultationService = new ConsultationService(patientId, -1)\n      const vitalsService = new VitalsService(patientId, -1)\n      const patientTypeService = new PatientTypeService(patientId, -1);\n      const stagingService = new StagingService(patientId, patient.value.getAge(), -1)\n\n      try {\n        loader.show();\n        \n        // Void first visit encounters\n        if(!isNewPatient && !isEmpty(firstVisitEncounters.value)) {\n          firstVisitEncounters.value.forEach(encounter => {\n            EncounterService.voidEncounter(encounter, 'Duplicate')\n          });\n        }\n\n        // ARV Number\n        if(arvNumberEditable && formData.arvNumber) {\n          await patient.value.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`)\n        }\n\n        // Patient Type Encunter\n        await patientTypeService.createEncounter()\n        const pTypeObs = await resolveObs(computedData, 'patient type')\n        await patientTypeService.saveObservationList(pTypeObs)\n\n        // Registration Encounter\n        await registrationService.createEncounter()\n        const regObs = await resolveObs(computedData, 'registration')\n        await registrationService.saveObservationList(regObs)\n\n        // Vitals and Consultation Encounters\n        if(formData.everRegisteredAtClinic === 'Yes') {\n          await vitalsService.createEncounter()\n          const vitalsObs = await resolveObs(computedData, 'vitals')\n          await vitalsService.saveObservationList(vitalsObs)\n\n          await consultationService.createEncounter()\n          const consultationObs = await resolveObs(computedData, 'consultation')\n          await consultationService.saveObservationList(consultationObs)\n        }\n\n        // Staging encounter\n        await stagingService.createEncounter()\n        const obs = await resolveObs(stagingData)\n        await stagingService.saveObservationList(obs)        \n        \n        // enroll patient into HIV program\n        if(isNewPatient) {\n          const patientProgram = new PatientProgramService(patientId)\n          patientProgram.setProgramDate(formData.initialVisitDate)\n          await patientProgram.enrollProgram();\n        } \n        \n        await loader.hide()\n        await ClinicRegistrationService.resetSessionDate()\n        await toastSuccess('Saved successfully')\n        router.push(`/emc/patient/${patientId}`)\n      } catch (error) {\n        await loader.hide()\n        console.log(error)\n        toastWarning(`${error}`)\n      }\n    }\n    \n    onMounted(async () => {\n      const p = await Patientservice.findByID(patientId);\n      patient.value = new Patientservice(p);\n      Store.get('SITE_PREFIX').then(prefix => sitePrefix.value = prefix);\n      isReady.value = true;\n      if(!isNewPatient) {\n        // get first visit encounters\n        EncounterService.getEncounters(patientId, {\"encounter_type_id\": 9}).then((enc: Encounter[]) => {\n          if(isEmpty(enc)) return\n          const encounterTypes = [9, 53, 6, 5, 52]\n          initialVisitDate.value = get(enc, '[0].encounter_datetime', '')\n          if(initialVisitDate.value) {\n            EncounterService.getEncounters(patientId, { date: initialVisitDate.value }).then((encounters: Encounter[]) => {\n              firstVisitEncounters.value = encounters\n                .filter(enc => encounterTypes.includes(enc.encounter_type))\n                .map(enc => enc.encounter_id)\n            })\n          }\n        });\n      }\n    })\n    return {\n      activeForm,\n      patient,\n      isNewPatient,\n      isStaging,\n      isRegistration,\n      sitePrefix,\n      isReady,\n      onValue,\n      onFinish,\n      onNext,\n      onPrevious,\n    }\n  },\n})\n","import { render } from \"./HIVReception.vue?vue&type=template&id=3400bdf9&ts=true\"\nimport script from \"./HIVReception.vue?vue&type=script&lang=ts\"\nexport * from \"./HIVReception.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { LocationService } from \"@/services/location_service\"\nimport {\n    RECOMMENDED_ADULT_STAGING_CONDITIONS,\n    CHILD_ART_ELIGIBILITY,\n    ADULT_ART_ELIGIBILITY,\n    ADULT_WHO_STAGE_CRITERIA,\n    CHILD_WHO_STAGE_CRITERIA,\n    CONTRADICTING_STAGE_DEFINITIONS_ALERTS,\n    RECOMMENDED_CHILD_STAGING_CONDITIONS\n} from \"@/apps/ART/guidelines/staging_guidelines\"\n\n/**\n * Enable for filtering staging categories in ConceptName Dictionary\n */\nenum StagingCategory {\n    ADULT_STAGE_4 = 'stage_4_conditions_adults',\n    ADULT_STAGE_3 = 'stage_3_conditions_adults',\n    ADULT_STAGE_2 = 'stage_2_conditions_adults',\n    ADULT_STAGE_1 = 'stage_1_conditions_adults',\n    PEDAID_STAGE_4 = 'stage_4_conditions_pedaids',\n    PEDAID_STAGE_3 = 'stage_3_conditions_pedaids',\n    PEDAID_STAGE_2 = 'stage_2_conditions_pedaids',\n    PEDAID_STAGE_1 = 'stage_1_conditions_pedaids'\n}\n\nexport class StagingService extends AppEncounterService {\n    age: number\n    confirmatoryTest: string | null;\n    constructor(patientID: number, age: number, providerID: number) {\n        super(patientID, 52, providerID) //TODO: Use encounter type reference name\n        this.age = age\n        this.confirmatoryTest = null\n    }\n\n    isAdult() { return this.age >= 15 }\n\n    isPedaid() { return this.age <= 14 }\n\n    setAge(age: number) {\n        this.age = age\n    }\n\n    getFacilities (filter='') { return LocationService.getFacilities({name: filter}) }\n    \n    getConfirmatoryTestType() { return this.confirmatoryTest }\n\n    cd4CountIsValid(value: string) {\n        try {\n            return value.match(/^(=|<|>)([0-9]*)$/m) ? true : false\n        }catch(e) {\n            return false\n        }\n    }\n\n    getAlertGuidelines() {\n        return CONTRADICTING_STAGE_DEFINITIONS_ALERTS\n    }\n\n    getWhoStageGuidelines() {\n        return this.isAdult() ? ADULT_WHO_STAGE_CRITERIA : CHILD_WHO_STAGE_CRITERIA\n    }\n\n    getProgramEligibilityGuidelines() {\n        return this.isAdult() ? ADULT_ART_ELIGIBILITY: CHILD_ART_ELIGIBILITY\n    }\n\n    getRecommendedConditionGuidelines() {\n        return this.isAdult() ? RECOMMENDED_ADULT_STAGING_CONDITIONS: RECOMMENDED_CHILD_STAGING_CONDITIONS\n    }\n\n    getStagingConditions(stage: number) {\n        const category = this.getStagingCategoryByNum(stage)\n        return AppEncounterService.getConceptsByCategory(category)\n    }\n\n    getAllWhoStages() {\n        return AppEncounterService.getConceptsByCategory('whole_staging_numbers')\n    }\n\n    getAllReasonsForART() {\n        return AppEncounterService.getConceptsByCategory('reason_for_art')\n    }\n\n    buildWhoStageObs(stage: string) {\n        return this.buildValueCoded('Who stage', stage)\n    }\n    \n    buildWhoCriteriaObs(condition: string) {\n        return this.buildValueCoded('Who stages criteria present', condition)\n    }\n\n    buildReasonForArtObs(reason: string) {\n        return this.buildValueCoded('Reason for ART eligibility', reason)\n    }\n\n    private getStagingCategoryByNum(stageNumber: number) {\n        switch(stageNumber) {\n            case 1:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_1 : StagingCategory.PEDAID_STAGE_1\n            case 2:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_2 : StagingCategory.PEDAID_STAGE_2\n            case 3:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_3 : StagingCategory.PEDAID_STAGE_3\n            case 4:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_4 : StagingCategory.PEDAID_STAGE_4\n            default: \n                return ''\n        }\n    }\n\n    async loadHivConfirmatoryTestType() {\n        const test = await AppEncounterService.getFirstValueCoded(\n            this.patientID, 'Confirmatory hiv test type'\n        )\n        if (test) this.confirmatoryTest = test\n    }\n}\n","import { ConceptService } from \"@/services/concept_service\"\nimport { alertConfirmation } from \"@/utils/Alerts\"\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\"\n\nexport const ADULT_WHO_STAGE_CRITERIA: Record<string, GuideLineInterface> = {\n    'Adults with stage 4 conditions': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4,\n        }\n    },\n    'Classify as stage 4 when reason for ART is WHO STAGE 4': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 2,\n        conditions: {\n            reasonForArt: (reason: string) => reason === 'WHO STAGE IV ADULT'\n        }\n    },\n    'Adults with stage 3 conditions': {\n        concept: 'WHO STAGE III ADULT',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3\n        }\n    },\n    'Adults with stage 2 conditions': {\n        concept: 'WHO STAGE II ADULT',\n        priority: 4,\n        conditions: {\n            stage: (stage: number) => stage === 2,\n        }\n    },\n    'Adults with stage 1 conditions': {\n        concept: 'WHO STAGE I ADULT',\n        priority: 5,\n        conditions: {\n            stage: (stage: number) => stage === 1\n        }\n    }\n}\n\nexport const CHILD_WHO_STAGE_CRITERIA: Record<string, GuideLineInterface> = {\n    'Children with stage 4 conditions': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4,\n        }\n    },\n    'Classify as stage 4 when reason for ART is WHO STAGE 4': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 2,\n        conditions: {\n            reasonForArt: (reason: string) => reason === 'WHO STAGE IV PEDS'\n        }\n    },\n    'For children with stage 3 conditions': {\n        concept: 'WHO STAGE III PEDS',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3\n        }\n    },\n    'Children with stage 2 conditions': {\n        concept: 'WHO STAGE II PEDS',\n        priority: 4,\n        conditions: {\n            stage: (stage: number) => stage === 2\n        }\n    },\n    'Children with stage 1 conditions': {\n        concept: 'WHO STAGE I PEDS',\n        priority: 5,\n        conditions: {\n            stage: (stage: number) => stage === 1\n        }\n    }\n}\n\nexport const CONTRADICTING_STAGE_DEFINITIONS_ALERTS: Record<string, GuideLineInterface> = {\n    \"Warn if Severe weight loss is selected when actual patient BMI is acceptable\": {\n        priority: 1,\n        actions: {\n            alert: async (facts: any) => await alertConfirmation(`Patient's BMI of ${facts.bmi} greater than 18.5, do you wish to proceed?`, {\n                confirmBtnLabel: 'Yes, keep severe weightloss',\n                cancelBtnLabel: 'No, cancel'\n            }),\n        },\n        conditions: {\n            selectedCondition (condition: string) {\n                return condition === 'Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained'\n            },\n            bmi:(bmi: number) => bmi > 18.5\n        }\n    },\n    \"Warn for contradicting stage defining conditions\": {\n        priority: 1,\n        actions: {\n            alert: async (facts: any) => {\n                const keepAsymptomatic = await alertConfirmation('CONTRADICTING STAGE DEFINING CONDITIONS', {\n                    confirmBtnLabel: \"Keep Asymptomatic\",\n                    cancelBtnLabel: 'Keep other(s)'\n                })\n                if(keepAsymptomatic) {\n                    facts.stage = 1\n                    facts.selectedConditions = []\n                    facts.stageThreeConditions = []\n                    facts.stageFourConditions = []\n                    facts.stageTwoConditions = []\n                    return true\n                }\n                return false\n            },\n        },\n        conditions: {\n            selectedCondition(condition: string){\n                return condition === 'Asymptomatic HIV infection'\n            },\n            stage: (stage: number) => stage >= 2\n        }\n    },\n}\n\nexport const RECOMMENDED_CHILD_STAGING_CONDITIONS: Record<string, GuideLineInterface> = {\n    'For children whose current weight percentile is less than 70' : {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Child has a low weight percentile of ${facts.weightPercentile}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Severe unexplained wasting or malnutrition not responding to treatment (weight-for-height/ -age <70% or MUAC less than 11cm or oedema)'\n            },\n            weightPercentile(weightPercentile: number){\n                return weightPercentile < 70\n            }\n        }\n    },\n    'Enable Moderate unexplained malnutrition for children whose weight for height is 70-79%': {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Child has weight percentile of ${facts.weightPercentile}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate unexplained wasting/malnutrition not responding to treatment (weight-for-height/ -age 70-79% or muac 11-12 cm)'\n            },\n            weightPercentile(weightPercentile: number){\n                return weightPercentile >= 70 && weightPercentile <= 79\n            }\n        }\n    },\n    'Disable moderate weight loss when Severe unexplained weight loss is chosen': {\n        priority: 2,\n        actions: {\n            isChecked: false,\n            disabled: true\n        },\n        description: {\n            color: 'secondary',\n            show: 'always',\n            info: () => 'Severe weight loss/manutrition was already selected',\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate unexplained wasting/malnutrition not responding to treatment (weight-for-height/ -age 70-79% or muac 11-12 cm)'\n            },\n            selectedConditions(conditions: Array<string>) {\n                return conditions.includes('Severe unexplained wasting or malnutrition not responding to treatment (weight-for-height/ -age <70% or MUAC less than 11cm or oedema)')\n            }\n        }\n    }\n}\n\nexport const RECOMMENDED_ADULT_STAGING_CONDITIONS: Record<string, GuideLineInterface> = {\n    'Adults with a BMI less than 16': {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Adult has a low BMI of ${facts.bmi}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained'\n            },\n            bmi: (bmi: number) => bmi < 16\n        }\n    },\n    'Adults whose BMI is between 16 and 18': {\n        priority: 3,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'warning',\n            show: 'onChecked',\n            info: (facts: any) => `BMI of ${facts.bmi} is between 16 and 18`,\n        },\n        conditions: {\n            selectedCondition: (condition: string) => condition === 'Moderate weight loss less than or equal to 10 percent, unexplained',\n            bmi: (bmi: number) => bmi >= 16.0 && bmi <= 18.5\n        }\n    },\n    \"Disable Moderate weight loss if severe weightloss is selected\": {\n        priority: 2,\n        actions: {\n            isChecked: false,\n            disabled: true\n        },\n        description: {\n            color: 'secondary',\n            show: 'always',\n            info: () => 'Severe weight loss was already selected',\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate weight loss less than or equal to 10 percent, unexplained'\n            },\n            selectedConditions(conditions: Array<string>) {\n                return conditions.includes('Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained')\n            }\n        }\n    }\n}\n\nexport const CHILD_ART_ELIGIBILITY: Record<string, GuideLineInterface> = {\n    'Has stage 4 conditions': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4\n        }\n    },\n    'Has stage 3 conditions': {\n        concept: 'WHO STAGE III PEDS',\n        priority: 2,\n        conditions: {\n            stage: (stage: number) => stage === 3,\n        }\n    },\n    'Children under twelve months who tested positive on Rapid test and have presumed severe HIV': {\n        concept: 'PRESUMED SEVERE HIV',\n        priority: 3,\n        conditions: {\n            ageInMonths(age: number){\n                return age < 12 \n            },\n            selectedConditions: (conditions: Array<string>) => {\n                const pshdConditions = ConceptService.getConceptsByCategory('pshd_condition')\n                for (const pshdCondition in pshdConditions) {\n                    if (conditions.includes(pshdCondition)) return true\n                }\n                return false\n            },\n            testType(testType: string){\n                return testType === 'HIV rapid test'\n            },\n        }\n    },\n    \"Children under twelve who tested positive via HIV DNA Polymerase Chain Reaction test\": {\n        concept: 'HIV DNA polymerase chain reaction',\n        priority: 4,\n        conditions: {\n            ageInMonths: (age: number) => age < 12,\n            testType: (testType: string) => testType === \"HIV DNA polymerase chain reaction\",\n        }\n    },\n    \"Children who are less than 24 months\": {\n        concept: 'HIV infected',\n        priority: 5,\n        conditions: {\n            ageInMonths: (age: number) => age < 24\n        }\n    },\n    \"Children between 24 and 56 months who have stage 2 or 1 conditions\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 750',\n        priority: 6,\n        conditions: {\n            ageInMonths(age: number) {\n                return age >= 24 && age <= 56\n            },\n            cd4(cd4: number) {\n                return cd4 <= 750\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            },\n            stage(stage: number) {\n                return stage <= 2\n            }\n        }\n    },\n    \"Children with CD4 count less than 500 and have stage 1 and stage 2 conditions\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 500',\n        priority: 7,\n        conditions: {\n            cd4(cd4: number){\n                return cd4 <= 500\n            },\n            cd4Modifier(modifier: string){\n                return modifier === '<' || modifier === '='\n            },\n            stage(stage: number) {\n                return stage <= 2\n            }\n        }\n    },\n    \"Children over the date 2014-04-01 who are more than five years old and have cd4 count less than 500\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 500',\n        priority: 9,\n        conditions: {\n            date(date: string) {\n                return date >= '2014-04-01'\n            },\n            age(age: number) {\n                return age > 5\n            },\n            cd4(cd4: number) {\n                return cd4 <= 500\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    \"Children over date 2014-04-01 and less than Five years old\": {\n        concept: 'HIV infected',\n        priority: 10,\n        conditions: {\n            date(date: string) {\n                return date >= '2014-04-01'\n            },\n            age(age: number) {\n                return age <= 5\n            }\n        }\n    },\n    \"Asymptomatic patient with either stage one or stage two conditions\": {\n        concept: 'Asymptomatic',\n        priority: 11,\n        conditions: {\n            stage: (stage: number) => stage <= 2\n        }\n    }\n}\n\nexport const ADULT_ART_ELIGIBILITY: Record<string, GuideLineInterface> = {\n    'Has stage 4 conditions': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4\n        }\n    },\n    'Has HIV wasting syndrome identified in stage 3': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 2,\n        conditions: {\n            selectedConditions: (conditions: Array<string>) => {\n                const severeSymp = ConceptService.getConceptsByCategory('severe_hiv_wasting_syndrome')\n                const found = severeSymp.reduce((total, symp) => conditions.includes(symp.name) ? total + 1 : 0, 0)\n                return found >= 2\n            }\n        }\n    },\n    'Has stage 3 conditions': {\n        concept: 'WHO STAGE III ADULT',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3,\n        }\n    },\n    'CD4 less than 350 for adults before 2014': {\n        concept: 'cd4 less than or equal to 350',\n        priority: 4,\n        conditions: {\n            date(date: string) {\n                return date < '2014-04-01'\n            },\n            cd4(cd4: number) {\n                return cd4 <= 350\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 250 for adults after 2014': {\n        concept: 'cd4 less than or equal to 250',\n        priority: 4,\n        conditions: {\n            date(date: string) {\n                return date >= '2014-04-01'\n            },\n            cd4(cd4: number) {\n                return cd4 <= 250\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 350 for adults after 2014': {\n        concept: 'cd4 less than or equal to 350',\n        priority: 5,\n        conditions: {\n            date(date: string) {\n                return date >= '2014-04-01'\n            },\n            cd4(cd4: number) {\n                return cd4 <= 350\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 500 for adults after 2014': {\n        concept: 'cd4 less than or equal to 500',\n        priority: 6,\n        conditions: {\n            date(date: string) {\n                return date >= '2014-04-01'\n            },\n            cd4(cd4: number){\n                return cd4 <= 500\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'Women who are breast feeding': {\n        concept: 'BREASTFEEDING',\n        priority: 8,\n        conditions: {\n            gender(gender: string){\n                return gender === 'F'\n            },\n            breastFeeding(answer: string){\n                return  answer === 'Yes'\n            },\n            stage: (stage: number) => stage <= 2\n        }\n    },\n    'Women who are pregnant': {\n        concept: 'PATIENT PREGNANT',\n        priority: 7,\n        conditions: {\n            gender(gender: string) {\n                return gender === 'F'\n            },\n            pregnant(answer: string){\n                return answer === 'Yes'\n            },\n            stage(stage: number) {\n                return stage <= 2\n            },\n        }\n    },\n    \"Asymptomatic patient with either stage one or stage two conditions\": {\n        concept: 'Asymptomatic',\n        priority: 9,\n        conditions: {\n            stage: (stage: number) => stage <= 2,\n        }\n    }\n}\n","import { loadingController } from \"@ionic/vue\";\n\nexport const loader = {\n  /**\n   * show loading spinner\n   * \n   * @param message message to display while loading. default is 'Loading...'\n   * @returns {Promise<void>}\n   */\n  async show(message?: string): Promise<void> {\n    return (await loadingController.create({\n      message: message || \"Loading...\",\n      spinner: 'crescent',\n      translucent: true\n    })).present();\n  },\n\n  /**\n   * hide loading spinner\n   * \n   * @returns {Promise<boolean>}\n   * */\n  async hide(): Promise<boolean> {\n    return loadingController.dismiss();\n  }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}"],"sourceRoot":""}