{"version":3,"sources":["webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/EMC/views/ClinicRegistration.vue"],"names":["ClinicRegistrationService","AppEncounterService","constructor","patientID","providerID","_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_text_input","_component_ion_col","_component_DateInput","_component_yes_no_input","_component_SelectInput","_component_NumberInput","_component_ion_row","_component_ion_button","_component_ion_grid","_component_Layout","_openBlock","_createBlock","default","_withCtx","_createVNode","class","size","_","modelValue","form","arvNumber","$event","prefix","sitePrefix","disabled","isNewPatient","initialVisitDate","patientDob","today","shouldFollowUp","inline","receivedArvTreatmentBefore","value","_Fragment","key","dateLastTakenArvs","everRegisteredAtClinic","_createCommentVNode","artInitiationLocation","asyncOptions","getFacilities","allowCustom","artStartDate","initialWeight","min","allowUnknown","initialHeight","initialTBStatus","options","initialTbStatusOptions","tptHistory","tptHistoryOptions","tptDrugs","length","tptStartDate","includes","inhQty","rifapentineQty","threeHPQty","tptStartLocation","confirmatoryTest","HIVTestOptions","label","confirmatoryTestLocation","confirmatoryTestDate","onClick","onSubmit","color","onClear","$router","back","defineComponent","components","Layout","IonGrid","IonRow","IonCol","IonButton","IonTitle","TextInput","DateInput","YesNoInput","SelectInput","NumberInput","setup","route","useRoute","router","useRouter","patientId","ref","parseInt","params","id","toString","new","match","patient","customRegimenIngredients","registrationService","consultationService","ConsultationService","vitalsService","VitalsService","patientTypeService","PatientTypeService","dayjs","format","STANDARD_DATE_FORMAT","computed","date","getBirthdate","reactive","placeholder","required","validation","async","patients","Patientservice","findByOtherID","isEmpty","computedValue","agrees","tag","obs","buildGroupValueCoded","receivedTreatment","buildValueCoded","buildValueDate","f","StandardValidations","everRegistered","buildValueText","facility","location","weight","buildValueNumber","validateSeries","validator","height","status","history","amount","drug","find","d","name","buildObs","drug_id","test","patientType","watch","state","alertConfirmation","undefined","error","setDate","setSessionDate","submitForm","formData","computedData","createArvNumber","createEncounter","pTypeObs","resolveObs","saveObservationList","regObs","vitalsObs","consultationObs","patientProgram","PatientProgramService","getID","setProgramDate","enrollProgram","toastSuccess","push","onMounted","data","findByID","GLOBAL_PROP","getArvNumber","split","suggestedNumber","ProgramService","getNextSuggestedARVNumber","arv_number","replace","RegimenService","getCustomIngridients","then","drugs","__exports__","loader","message","loadingController","create","spinner","translucent","present","dismiss"],"mappings":"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","file":"js/chunk-4ed0fe0c.7cb6aebf.js","sourcesContent":["import { loadingController } from \"@ionic/vue\";\n\nexport const loader = {\n  /**\n   * show loading spinner\n   * \n   * @param message message to display while loading. default is 'Loading...'\n   * @returns {Promise<void>}\n   */\n  async show(message?: string): Promise<void> {\n    return (await loadingController.create({\n      message: message || \"Loading...\",\n      spinner: 'crescent',\n      translucent: true\n    })).present();\n  },\n\n  /**\n   * hide loading spinner\n   * \n   * @returns {Promise<boolean>}\n   * */\n  async hide(): Promise<boolean> {\n    return loadingController.dismiss();\n  }\n}\n","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" HIV Clinic Registration \")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Next\")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Clear\")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Back\")\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_text_input = _resolveComponent(\"text-input\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_DateInput = _resolveComponent(\"DateInput\")\n  const _component_yes_no_input = _resolveComponent(\"yes-no-input\")\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_Layout = _resolveComponent(\"Layout\")\n\n  return (_openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_grid, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_row, { class: \"his-card\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_col, { size: \"12\" }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_title, { class: \"ion-text-center ion-margin-vertical ion-padding-bottom bold\" }, {\n                    default: _withCtx(() => [\n                      _hoisted_1\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ion_row, { class: \"ion-margin-top ion-margin-bottom\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"5\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_text_input, {\n                            modelValue: _ctx.form.arvNumber,\n                            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (_ctx.form.arvNumber = $event)),\n                            form: _ctx.form,\n                            prefix: `${_ctx.sitePrefix}-ARV-`,\n                            disabled: !_ctx.isNewPatient\n                          }, null, 8, [\"modelValue\", \"form\", \"prefix\", \"disabled\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"7\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_DateInput, {\n                            modelValue: _ctx.form.initialVisitDate,\n                            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => (_ctx.form.initialVisitDate = $event)),\n                            \"min-date\": _ctx.patientDob,\n                            \"max-date\": _ctx.today,\n                            form: _ctx.form\n                          }, null, 8, [\"modelValue\", \"min-date\", \"max-date\", \"form\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"5\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.shouldFollowUp,\n                            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => (_ctx.form.shouldFollowUp = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"7\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.receivedArvTreatmentBefore,\n                            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => (_ctx.form.receivedArvTreatmentBefore = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      (_ctx.form.receivedArvTreatmentBefore.value === 'Yes')\n                        ? (_openBlock(), _createBlock(_Fragment, { key: 0 }, [\n                            _createVNode(_component_ion_col, {\n                              size: \"12\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_DateInput, {\n                                  modelValue: _ctx.form.dateLastTakenArvs,\n                                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => (_ctx.form.dateLastTakenArvs = $event)),\n                                  form: _ctx.form,\n                                  \"min-date\": _ctx.patientDob,\n                                  \"max-date\": _ctx.today\n                                }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_col, {\n                              size: \"12\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_yes_no_input, {\n                                  modelValue: _ctx.form.everRegisteredAtClinic,\n                                  \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => (_ctx.form.everRegisteredAtClinic = $event)),\n                                  inline: \"\"\n                                }, null, 8, [\"modelValue\"])\n                              ]),\n                              _: 1\n                            })\n                          ], 64 /* STABLE_FRAGMENT */))\n                        : _createCommentVNode(\"\", true),\n                      (_ctx.form.everRegisteredAtClinic.value === 'Yes')\n                        ? (_openBlock(), _createBlock(_Fragment, { key: 1 }, [\n                            _createVNode(_component_ion_col, {\n                              size: \"6\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_SelectInput, {\n                                  modelValue: _ctx.form.artInitiationLocation,\n                                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => (_ctx.form.artInitiationLocation = $event)),\n                                  form: _ctx.form,\n                                  asyncOptions: _ctx.getFacilities,\n                                  allowCustom: \"\"\n                                }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_col, {\n                              size: \"6\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_DateInput, {\n                                  modelValue: _ctx.form.artStartDate,\n                                  \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => (_ctx.form.artStartDate = $event)),\n                                  form: _ctx.form,\n                                  \"min-date\": _ctx.patientDob,\n                                  \"max-date\": _ctx.today\n                                }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_col, {\n                              size: \"3\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_NumberInput, {\n                                  modelValue: _ctx.form.initialWeight,\n                                  \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => (_ctx.form.initialWeight = $event)),\n                                  form: _ctx.form,\n                                  min: 1,\n                                  allowUnknown: \"\"\n                                }, null, 8, [\"modelValue\", \"form\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_col, {\n                              size: \"3\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_NumberInput, {\n                                  modelValue: _ctx.form.initialHeight,\n                                  \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => (_ctx.form.initialHeight = $event)),\n                                  form: _ctx.form,\n                                  min: 1,\n                                  allowUnknown: \"\"\n                                }, null, 8, [\"modelValue\", \"form\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_col, {\n                              size: \"6\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_SelectInput, {\n                                  modelValue: _ctx.form.initialTBStatus,\n                                  \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => (_ctx.form.initialTBStatus = $event)),\n                                  form: _ctx.form,\n                                  options: _ctx.initialTbStatusOptions\n                                }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_col, {\n                              size: \"6\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_SelectInput, {\n                                  modelValue: _ctx.form.tptHistory,\n                                  \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => (_ctx.form.tptHistory = $event)),\n                                  form: _ctx.form,\n                                  options: _ctx.tptHistoryOptions\n                                }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                              ]),\n                              _: 1\n                            }),\n                            (_ctx.tptDrugs.length)\n                              ? (_openBlock(), _createBlock(_Fragment, { key: 0 }, [\n                                  _createVNode(_component_ion_col, {\n                                    size: \"6\",\n                                    class: \"ion-margin-top ion-margin-bottom\"\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createVNode(_component_DateInput, {\n                                        modelValue: _ctx.form.tptStartDate,\n                                        \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => (_ctx.form.tptStartDate = $event)),\n                                        \"min-date\": _ctx.patientDob,\n                                        \"max-date\": _ctx.today,\n                                        form: _ctx.form\n                                      }, null, 8, [\"modelValue\", \"min-date\", \"max-date\", \"form\"])\n                                    ]),\n                                    _: 1\n                                  }),\n                                  (_ctx.tptDrugs.includes('INH or H (Isoniazid 300mg tablet)'))\n                                    ? (_openBlock(), _createBlock(_component_ion_col, {\n                                        key: 0,\n                                        size: \"6\",\n                                        class: \"ion-margin-top ion-margin-bottom\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createVNode(_component_NumberInput, {\n                                            modelValue: _ctx.form.inhQty,\n                                            \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => (_ctx.form.inhQty = $event)),\n                                            form: _ctx.form,\n                                            min: 1\n                                          }, null, 8, [\"modelValue\", \"form\"])\n                                        ]),\n                                        _: 1\n                                      }))\n                                    : _createCommentVNode(\"\", true),\n                                  (_ctx.tptDrugs.includes('Rifapentine (150mg)'))\n                                    ? (_openBlock(), _createBlock(_component_ion_col, {\n                                        key: 1,\n                                        size: \"6\",\n                                        class: \"ion-margin-top ion-margin-bottom\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createVNode(_component_NumberInput, {\n                                            modelValue: _ctx.form.rifapentineQty,\n                                            \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => (_ctx.form.rifapentineQty = $event)),\n                                            form: _ctx.form,\n                                            min: 1\n                                          }, null, 8, [\"modelValue\", \"form\"])\n                                        ]),\n                                        _: 1\n                                      }))\n                                    : _createCommentVNode(\"\", true),\n                                  (_ctx.tptDrugs.includes('INH 300 / RFP 300 (3HP)'))\n                                    ? (_openBlock(), _createBlock(_component_ion_col, {\n                                        key: 2,\n                                        size: \"6\",\n                                        class: \"ion-margin-top ion-margin-bottom\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createVNode(_component_NumberInput, {\n                                            modelValue: _ctx.form.threeHPQty,\n                                            \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => (_ctx.form.threeHPQty = $event)),\n                                            form: _ctx.form,\n                                            min: 1\n                                          }, null, 8, [\"modelValue\", \"form\"])\n                                        ]),\n                                        _: 1\n                                      }))\n                                    : _createCommentVNode(\"\", true),\n                                  _createVNode(_component_ion_col, {\n                                    size: \"6\",\n                                    class: \"ion-margin-top ion-margin-bottom\"\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createVNode(_component_SelectInput, {\n                                        modelValue: _ctx.form.tptStartLocation,\n                                        \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => (_ctx.form.tptStartLocation = $event)),\n                                        form: _ctx.form,\n                                        asyncOptions: _ctx.getFacilities,\n                                        allowCustom: \"\"\n                                      }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                                    ]),\n                                    _: 1\n                                  })\n                                ], 64 /* STABLE_FRAGMENT */))\n                              : _createCommentVNode(\"\", true)\n                          ], 64 /* STABLE_FRAGMENT */))\n                        : _createCommentVNode(\"\", true),\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_SelectInput, {\n                            modelValue: _ctx.form.confirmatoryTest,\n                            \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => (_ctx.form.confirmatoryTest = $event)),\n                            form: _ctx.form,\n                            options: _ctx.HIVTestOptions\n                          }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                        ]),\n                        _: 1\n                      }),\n                      (_ctx.form.confirmatoryTest.value.label !== 'Not done')\n                        ? (_openBlock(), _createBlock(_Fragment, { key: 2 }, [\n                            _createVNode(_component_ion_col, {\n                              size: \"6\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_SelectInput, {\n                                  modelValue: _ctx.form.confirmatoryTestLocation,\n                                  \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => (_ctx.form.confirmatoryTestLocation = $event)),\n                                  form: _ctx.form,\n                                  asyncOptions: _ctx.getFacilities,\n                                  allowCustom: \"\"\n                                }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_col, {\n                              size: \"6\",\n                              class: \"ion-margin-top ion-margin-bottom\"\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_DateInput, {\n                                  modelValue: _ctx.form.confirmatoryTestDate,\n                                  \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => (_ctx.form.confirmatoryTestDate = $event)),\n                                  form: _ctx.form,\n                                  \"min-date\": _ctx.patientDob,\n                                  \"max-date\": _ctx.today\n                                }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                              ]),\n                              _: 1\n                            })\n                          ], 64 /* STABLE_FRAGMENT */))\n                        : _createCommentVNode(\"\", true)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ion_button, {\n                    class: \"ion-margin-top ion-float-end\",\n                    size: \"large\",\n                    onClick: _ctx.onSubmit,\n                    color: \"success\"\n                  }, {\n                    default: _withCtx(() => [\n                      _hoisted_2\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]),\n                  _createVNode(_component_ion_button, {\n                    class: \"ion-margin-top ion-float-end\",\n                    size: \"large\",\n                    onClick: _ctx.onClear,\n                    color: \"warning\"\n                  }, {\n                    default: _withCtx(() => [\n                      _hoisted_3\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]),\n                  (!_ctx.isNewPatient)\n                    ? (_openBlock(), _createBlock(_component_ion_button, {\n                        key: 0,\n                        class: \"ion-margin-top ion-float-end\",\n                        size: \"large\",\n                        onClick: _cache[21] || (_cache[21] = $event => (_ctx.$router.back())),\n                        color: \"primary\"\n                      }, {\n                        default: _withCtx(() => [\n                          _hoisted_4\n                        ]),\n                        _: 1\n                      }))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport {  computed, defineComponent, onMounted, reactive, ref, watch } from \"vue\";\nimport Layout from \"@/apps/EMC/Components/Layout.vue\";\nimport { IonGrid, IonRow, IonCol, IonButton, IonTitle } from \"@ionic/vue\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\nimport {  alertConfirmation, toastSuccess } from \"@/utils/Alerts\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\nimport { isEmpty } from \"lodash\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport TextInput from \"../Components/inputs/TextInput.vue\";\nimport DateInput from \"../Components/inputs/DateInput.vue\"\nimport YesNoInput from \"../Components/inputs/YesNoInput.vue\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { ClinicRegistrationService } from \"@/apps/ART/services/registration_service\";\nimport SelectInput from \"../Components/inputs/SelectInput.vue\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport NumberInput from \"../Components/inputs/NumberInput.vue\";\nimport { initialTbStatusOptions, HIVTestOptions, tptHistoryOptions } from '@/apps/EMC/utils/DTFormElements'\nimport dayjs from \"dayjs\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { resolveObs, submitForm } from \"../utils/form\";\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { PatientProgramService } from \"@/services/patient_program_service\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { RegimenService } from \"@/services/regimen_service\";\n\nexport default defineComponent({\n  components: {\n    Layout,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n    IonTitle,\n    TextInput,\n    DateInput,\n    YesNoInput,\n    SelectInput,\n    NumberInput\n},\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const patientId = ref(parseInt(route.params.id.toString() || ''))\n    const isNewPatient = route.params.new.toString().match(/true/i) ? true : false\n    const patient = ref<Patientservice>()\n    const customRegimenIngredients = ref<any[]>([])\n    const sitePrefix = ref(\"\");\n    const registrationService = new ClinicRegistrationService(patientId.value, -1)\n    const consultationService = new ConsultationService(patientId.value, -1)\n    const vitalsService = new VitalsService(patientId.value, -1)\n    const patientTypeService = new PatientTypeService(patientId.value, -1);\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const patientDob = computed(() => {\n      const date = patient.value?.getBirthdate() \n      return date ? dayjs(date).format(STANDARD_DATE_FORMAT) : ''\n    })\n\n    const form = reactive<DTForm>({\n      arvNumber: {\n        value: '',\n        label: 'ARV Number',\n        placeholder: \"Enter ARV Number\",\n        required: true,\n        validation: async (arvNumber, form) => {\n          if(form.arvNumber.disabled) return null\n          const patients = await Patientservice.findByOtherID(4, `${sitePrefix.value}-ARV-${arvNumber.value}`);\n          return isEmpty(patients) ?  null : ['ARV Number already exists'];\n        },\n      },\n      initialVisitDate: {\n        value: '',\n        label: 'Initial Visit Date',\n        placeholder: \"Enter Initial Visit Date\",\n        required: true,\n      },\n      shouldFollowUp: {\n        value: '',\n        label: 'Agrees to follow up ?',\n        computedValue: (agrees: string) => ({\n          tag: 'registration',\n          obs: [\n            registrationService.buildGroupValueCoded('Agrees to followup', 'Home visit', agrees),\n            registrationService.buildGroupValueCoded('Agrees to followup', 'Phone', agrees),\n          ]\n        }),\n        required: true,\n      },\n      receivedArvTreatmentBefore: {\n        value: '',\n        label: 'Ever received ARVs for treatment or prophylaxis?',\n        computedValue: (receivedTreatment: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded('Ever received ART', receivedTreatment)\n        }),\n        required: true,\n      },\n      dateLastTakenArvs: {\n        value: '',\n        label: 'Date last taken ARVs',\n        placeholder: \"Enter Date last taken ARVs\",\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Date ART last taken', date)\n        }),\n        validation: async (date: Option, f: DTForm) => f.receivedArvTreatmentBefore.value === 'Yes' &&\n          StandardValidations.required(date),\n      },\n      everRegisteredAtClinic: {\n        value: '',\n        label: 'Ever registred at an ART clinic',\n        computedValue: (everRegistered: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded('Ever registered at ART clinic', everRegistered)\n        }),\n        validation: async (everRegistered: Option, f: DTForm) => f.receivedArvTreatmentBefore.value === 'Yes' &&\n          StandardValidations.required(everRegistered),\n      },\n      artInitiationLocation: {\n        value: '',\n        label: 'Location of ART Initiation',\n        computedValue: async (facility: Option) => {\n          return {\n            tag:'registration',\n            obs: registrationService.buildValueText('Location of ART initiation', facility.label)\n          }\n        },\n        validation: async (location: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' &&\n           StandardValidations.required(location)\n        }\n      },\n      artStartDate: {\n        value: '',\n        label: 'Date started ART',\n        placeholder: 'Date started ART',\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Date ART started', date)\n        }),\n        validation: async (date: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' &&\n           StandardValidations.required(date)\n        }\n      },\n      initialWeight: {\n        value: '',\n        label: 'Initial Weight',\n        placeholder: 'Enter weight',\n        computedValue: (weight: number) => ({\n          tag: 'vitals',\n          obs: vitalsService.buildValueNumber('weight', weight)\n        }),\n        validation: async (weight: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && StandardValidations.validateSeries([\n            () => StandardValidations.required(weight),\n            () => vitalsService.validator({...weight, label: 'Weight'})\n          ])\n        }\n      },\n      initialHeight: {\n        value: '',\n        label: 'Initial Height',\n        placeholder: 'Enter height',\n        computedValue: (height: number) => ({\n          tag: 'vitals',\n          obs: registrationService.buildValueNumber('Height', height)\n        }),\n        validation: async (height: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && StandardValidations.validateSeries([\n            () => StandardValidations.required(height),\n            () => vitalsService.validator({ ...height, label: 'Height' })\n          ])\n        }\n      },\n      initialTBStatus: {\n        value: '',\n        label: 'Initial TB Status',\n        placeholder: 'select TB status',\n        computedValue: (status: Option) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded(\"TB Status at Initiation\", status.label)\n        }),\n        validation: async (status: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && StandardValidations.required(status)\n        }\n      },\n      tptHistory: {\n        value: '',\n        label: \"TPT History\",\n        placeholder: \"Select TPT history\",\n        computedValue: (history: Option) => ({\n          tag: \"consultation\",\n          obs: consultationService.buildValueText(\"Previous TB treatment history\", history.label)\n        }),\n        validation: async (history, form) => {\n          return form.everRegisteredAtClinic.value === 'Yes' && \n            StandardValidations.required(history)\n        }\n      },\n      tptStartDate: {\n        value: '',\n        label: \"Date started TPT\",\n        validation: async (date, form) => {\n          return form.tptHistory?.value?.label?.match(/currently/i) && \n            StandardValidations.required(date)\n        }\n      },\n      inhQty: {\n        value: '',\n        label: \"INH Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && \n            (history.match(/ipt/i) || history.includes('3HP (RFP + INH)')) && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => {\n          const drug = customRegimenIngredients.value.find(d => d.name === 'INH or H (Isoniazid 300mg tablet)')\n          return {\n            tag: 'consultation',\n            obs:  consultationService.buildObs('TPT Drugs Received', {\n              'value_drug': drug?.drug_id || 0,\n              'value_datetime': form?.tptStartDate.value || null,\n              'value_numeric': amount || 0\n            })\n          }\n        },\n      },\n      rifapentineQty: {\n        value: '',\n        label: \"Rifapentine Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && history.includes('3HP (RFP + INH)') && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => {\n          const drug = customRegimenIngredients.value.find(d => d.name === 'Rifapentine (150mg)')\n          return {\n            tag: 'consultation',\n            obs: consultationService.buildObs('TPT Drugs Received', {\n              'value_drug': drug?.drug_id || 0,\n              'value_datetime': form?.tptStartDate.value || null,\n              'value_numeric': amount || 0\n            })\n          }\n        },\n      },\n      threeHPQty: {\n        value: '',\n        label: \"INH / RFP Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && history.includes('INH 300 / RFP 300 (3HP)') && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => {\n          const drug = customRegimenIngredients.value.find(d => d.name === 'INH 300 / RFP 300 (3HP)')\n          return {\n            tag: 'consultation',\n            obs: consultationService.buildObs('TPT Drugs Received', {\n              'value_drug': drug?.drug_id || 0,\n              'value_datetime': form?.tptStartDate.value || null,\n              'value_numeric': amount || 0\n            })\n          }\n        },\n      },\n      tptStartLocation: {\n        value: '',\n        label: \"TPT Transfer From\",\n        validation: async (date, form) => {\n          return form.tptHistory?.value?.label?.match(/currently/i) && \n            StandardValidations.required(date)\n        },\n        computedValue: (facility: Option) => ({\n          tag:'consultation',\n          obs: consultationService.buildValueText(\n            'Location TPT last received', facility.label\n          )\n        }),\n      },\n      confirmatoryTest: {\n        value: '',\n        label: 'Confirmatory Test',\n        placeholder: 'Select confirmatory test',\n        required: true,\n        computedValue(test: Option){\n          return {\n            tag: 'registration',\n            obs: registrationService.buildValueCoded('Confirmatory hiv test type', test.value)\n          }\n        }\n      },\n      confirmatoryTestLocation: {\n        value: '',\n        label: 'Location of Confirmatory',\n        placeholder: 'Select location',\n        validation: async (location: Option, f: DTForm) => {\n          return f.confirmatoryTest.value.label !== 'Not done' && StandardValidations.required(location)\n        },\n        computedValue(facility: Option){\n          return {\n            tag: 'registration',\n            obs: registrationService.buildValueText(\n              'Confirmatory HIV test location', facility.label\n            )\n          }\n        }\n      },\n      confirmatoryTestDate: {\n        value: '',\n        label: 'Confirmatory HIV Test Date',\n        validation: async (date: Option, f: DTForm) => {\n          return f.confirmatoryTest.value.label !== 'Not done' && StandardValidations.required(date)\n        },\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Confirmatory HIV test date', date)\n        }),\n      },\n      patientType: {\n        value: \"New patient\",\n        computedValue: (patientType: string) => ({\n          tag: 'patient type',\n          obs: patientTypeService.buildValueCoded('Type of patient', patientType)\n        }),\n      }\n    });\n\n    watch(form.receivedArvTreatmentBefore, state => {\n      if (state.value === 'No') {\n        form.everRegisteredAtClinic.value = ''\n      }\n    });\n\n    const tptDrugs = computed(() => {\n      const tptHistory = form.tptHistory.value?.label\n      if(tptHistory?.match(/currently/i)){\n        if(tptHistory.match(/ipt/i)) {\n          return [\"INH or H (Isoniazid 300mg tablet)\"]\n        } else if(tptHistory.includes(\"3HP (RFP + INH)\")){\n          return ['INH or H (Isoniazid 300mg tablet)', 'Rifapentine (150mg)']\n        } else if(tptHistory.includes(\"INH 300 / RFP 300 (3HP)\")){\n          return [\"INH 300 / RFP 300 (3HP)\"]\n        }\n      }\n      return []\n    })\n\n    const onClear = async () => {\n      if((await alertConfirmation('Are you sure you want to clear all fields?'))) {\n        for(const key in form) {\n          if(key === 'patientType') continue;\n          form[key].value = undefined\n          form[key].error = \"\"\n        }\n      }\n    }\n\n    const onSubmit = async () => {\n      patientTypeService.setDate(form.initialVisitDate.value)\n      registrationService.setDate(form.initialVisitDate.value)\n      vitalsService.setDate(form.initialVisitDate.value)\n      consultationService.setDate(form.initialVisitDate.value)\n      PatientTypeService.setSessionDate(form.initialVisitDate.value)\n      \n      await submitForm(form, async (formData, computedData) => {\n        if(!form.arvNumber.disabled && formData.arvNumber) {\n          await patient.value?.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`)\n        }\n\n        if(!form.arvNumber.disabled && formData.arvNumber) {\n          await patient.value?.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`)\n        }\n\n        await patientTypeService.createEncounter()\n        const pTypeObs = await resolveObs(computedData, 'patient type')\n        await patientTypeService.saveObservationList(pTypeObs)\n\n        await registrationService.createEncounter()\n        const regObs = await resolveObs(computedData, 'registration')\n        await registrationService.saveObservationList(regObs)\n\n        if(formData.everRegisteredAtClinic === 'Yes') {\n          await vitalsService.createEncounter()\n          const vitalsObs = await resolveObs(computedData, 'vitals')\n          await vitalsService.saveObservationList(vitalsObs)\n\n          await consultationService.createEncounter()\n          const consultationObs = await resolveObs(computedData, 'consultation')\n          await consultationService.saveObservationList(consultationObs)\n        }\n\n        // enroll patient into HIV program\n        if(isNewPatient) {\n          const patientProgram =  new PatientProgramService(patient.value!.getID())\n          patientProgram.setProgramDate(formData.initialVisitDate)\n          await patientProgram.enrollProgram();\n        }\n\n        await toastSuccess('Saved successfully')\n        router.push(`/emc/staging/${patientId.value}/${isNewPatient}`)\n      })\n    }\n\n    onMounted(async () => {\n      const data = await Patientservice.findByID(patientId.value)\n      patient.value = new Patientservice(data)\n      sitePrefix.value = await GLOBAL_PROP.sitePrefix();\n      const arvNumber = patient.value.getArvNumber()\n      if(arvNumber && arvNumber !== 'Unknown') {\n        form.arvNumber.value = arvNumber.split('-')[2]\n        form.arvNumber.disabled = true\n      } else {\n        const suggestedNumber = await ProgramService.getNextSuggestedARVNumber();\n        form.arvNumber.value = suggestedNumber.arv_number.replace(/^\\D+|\\s/g, \"\");\n      }\n      RegimenService.getCustomIngridients().then(drugs => customRegimenIngredients.value = drugs)\n    }) \n \n    return {\n      patient,\n      today,\n      patientDob,\n      form,\n      sitePrefix,\n      initialTbStatusOptions,\n      tptHistoryOptions,\n      HIVTestOptions,\n      isNewPatient,\n      tptDrugs,\n      getFacilities,\n      onClear,\n      onSubmit,\n    };\n  },\n});\n","import { render } from \"./ClinicRegistration.vue?vue&type=template&id=1e7ab36e&ts=true\"\nimport script from \"./ClinicRegistration.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicRegistration.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}