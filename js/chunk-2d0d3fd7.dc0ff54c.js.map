{"version":3,"sources":["webpack:///./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/EMC/Components/ClinicRegistration.vue"],"names":["_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_text_input","_component_ion_col","_component_DateInput","_component_yes_no_input","_component_SelectInput","_component_NumberInput","_component_ion_button","_component_ion_row","_openBlock","_createBlock","_Fragment","_createVNode","class","default","_withCtx","_","size","modelValue","form","arvNumber","$event","prefix","sitePrefix","disabled","isNewPatient","initialVisitDate","patientDob","today","shouldFollowUp","inline","receivedArvTreatmentBefore","value","key","dateLastTakenArvs","everRegisteredAtClinic","_createCommentVNode","artInitiationLocation","asyncOptions","getFacilities","allowCustom","artStartDate","initialWeight","min","allowUnknown","initialHeight","initialTBStatus","options","initialTbStatusOptions","tptHistory","tptHistoryOptions","tptDrugs","length","tptStartDate","includes","inhQty","rifapentineQty","threeHPQty","tptStartLocation","confirmatoryTest","HIVTestOptions","label","confirmatoryTestLocation","confirmatoryTestDate","onClick","onSubmit","color","onClear","$router","back","defineComponent","components","IonRow","IonCol","IonTitle","TextInput","DateInput","YesNoInput","SelectInput","NumberInput","props","patient","type","Object","required","Boolean","String","emits","setup","emit","customRegimenIngredients","ref","registrationService","ClinicRegistrationService","getID","consultationService","ConsultationService","vitalsService","VitalsService","patientTypeService","PatientTypeService","dayjs","format","STANDARD_DATE_FORMAT","computed","date","getBirthdate","reactive","placeholder","validation","async","isNumberErr","StandardValidations","isNumber","patients","Patientservice","findByOtherID","isEmpty","computedValue","agrees","tag","obs","buildGroupValueCoded","receivedTreatment","buildValueCoded","buildValueDate","f","everRegistered","buildValueText","facility","location","weight","buildValueNumber","validateSeries","validator","height","status","history","match","amount","drug","find","d","name","buildObs","drug_id","test","patientType","watch","state","alertConfirmation","undefined","error","EventBus","EmcEvents","ON_CLEAR","setDate","submitForm","formData","computedData","data","arvNumberEditable","onMounted","getArvNumber","split","suggestedNumber","ProgramService","getNextSuggestedARVNumber","arv_number","replace","RegimenService","getCustomIngridients","then","drugs","__exports__"],"mappings":"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","file":"js/chunk-2d0d3fd7.dc0ff54c.js","sourcesContent":["import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" HIV Clinic Registration \")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Next\")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Clear\")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Back\")\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_text_input = _resolveComponent(\"text-input\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_DateInput = _resolveComponent(\"DateInput\")\n  const _component_yes_no_input = _resolveComponent(\"yes-no-input\")\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_title, { class: \"ion-text-center ion-margin-vertical ion-padding-bottom bold\" }, {\n      default: _withCtx(() => [\n        _hoisted_1\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_row, { class: \"ion-margin-top ion-margin-bottom\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_col, {\n          size: \"5\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_text_input, {\n              modelValue: _ctx.form.arvNumber,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (_ctx.form.arvNumber = $event)),\n              form: _ctx.form,\n              prefix: `${_ctx.sitePrefix}-ARV-`,\n              disabled: !_ctx.isNewPatient\n            }, null, 8, [\"modelValue\", \"form\", \"prefix\", \"disabled\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ion_col, {\n          size: \"7\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_DateInput, {\n              modelValue: _ctx.form.initialVisitDate,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => (_ctx.form.initialVisitDate = $event)),\n              \"min-date\": _ctx.patientDob,\n              \"max-date\": _ctx.today,\n              form: _ctx.form\n            }, null, 8, [\"modelValue\", \"min-date\", \"max-date\", \"form\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ion_col, {\n          size: \"5\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_yes_no_input, {\n              modelValue: _ctx.form.shouldFollowUp,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => (_ctx.form.shouldFollowUp = $event)),\n              inline: \"\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ion_col, {\n          size: \"7\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_yes_no_input, {\n              modelValue: _ctx.form.receivedArvTreatmentBefore,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => (_ctx.form.receivedArvTreatmentBefore = $event)),\n              inline: \"\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _: 1\n        }),\n        (_ctx.form.receivedArvTreatmentBefore.value === 'Yes')\n          ? (_openBlock(), _createBlock(_Fragment, { key: 0 }, [\n              _createVNode(_component_ion_col, {\n                size: \"12\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DateInput, {\n                    modelValue: _ctx.form.dateLastTakenArvs,\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => (_ctx.form.dateLastTakenArvs = $event)),\n                    form: _ctx.form,\n                    \"min-date\": _ctx.patientDob,\n                    \"max-date\": _ctx.today\n                  }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"12\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_yes_no_input, {\n                    modelValue: _ctx.form.everRegisteredAtClinic,\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => (_ctx.form.everRegisteredAtClinic = $event)),\n                    inline: \"\"\n                  }, null, 8, [\"modelValue\"])\n                ]),\n                _: 1\n              })\n            ], 64 /* STABLE_FRAGMENT */))\n          : _createCommentVNode(\"\", true),\n        (_ctx.form.everRegisteredAtClinic.value === 'Yes')\n          ? (_openBlock(), _createBlock(_Fragment, { key: 1 }, [\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.artInitiationLocation,\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => (_ctx.form.artInitiationLocation = $event)),\n                    form: _ctx.form,\n                    asyncOptions: _ctx.getFacilities,\n                    allowCustom: \"\"\n                  }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DateInput, {\n                    modelValue: _ctx.form.artStartDate,\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => (_ctx.form.artStartDate = $event)),\n                    form: _ctx.form,\n                    \"min-date\": _ctx.patientDob,\n                    \"max-date\": _ctx.today\n                  }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"3\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_NumberInput, {\n                    modelValue: _ctx.form.initialWeight,\n                    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => (_ctx.form.initialWeight = $event)),\n                    form: _ctx.form,\n                    min: 1,\n                    allowUnknown: \"\"\n                  }, null, 8, [\"modelValue\", \"form\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"3\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_NumberInput, {\n                    modelValue: _ctx.form.initialHeight,\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => (_ctx.form.initialHeight = $event)),\n                    form: _ctx.form,\n                    min: 1,\n                    allowUnknown: \"\"\n                  }, null, 8, [\"modelValue\", \"form\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.initialTBStatus,\n                    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => (_ctx.form.initialTBStatus = $event)),\n                    form: _ctx.form,\n                    options: _ctx.initialTbStatusOptions\n                  }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.tptHistory,\n                    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => (_ctx.form.tptHistory = $event)),\n                    form: _ctx.form,\n                    options: _ctx.tptHistoryOptions\n                  }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                ]),\n                _: 1\n              }),\n              (_ctx.tptDrugs.length)\n                ? (_openBlock(), _createBlock(_Fragment, { key: 0 }, [\n                    _createVNode(_component_ion_col, {\n                      size: \"6\",\n                      class: \"ion-margin-top ion-margin-bottom\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_DateInput, {\n                          modelValue: _ctx.form.tptStartDate,\n                          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => (_ctx.form.tptStartDate = $event)),\n                          \"min-date\": _ctx.patientDob,\n                          \"max-date\": _ctx.today,\n                          form: _ctx.form\n                        }, null, 8, [\"modelValue\", \"min-date\", \"max-date\", \"form\"])\n                      ]),\n                      _: 1\n                    }),\n                    (_ctx.tptDrugs.includes('INH or H (Isoniazid 300mg tablet)'))\n                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                          key: 0,\n                          size: \"6\",\n                          class: \"ion-margin-top ion-margin-bottom\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_NumberInput, {\n                              modelValue: _ctx.form.inhQty,\n                              \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => (_ctx.form.inhQty = $event)),\n                              form: _ctx.form,\n                              min: 1\n                            }, null, 8, [\"modelValue\", \"form\"])\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    (_ctx.tptDrugs.includes('Rifapentine (150mg)'))\n                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                          key: 1,\n                          size: \"6\",\n                          class: \"ion-margin-top ion-margin-bottom\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_NumberInput, {\n                              modelValue: _ctx.form.rifapentineQty,\n                              \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => (_ctx.form.rifapentineQty = $event)),\n                              form: _ctx.form,\n                              min: 1\n                            }, null, 8, [\"modelValue\", \"form\"])\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    (_ctx.tptDrugs.includes('INH 300 / RFP 300 (3HP)'))\n                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                          key: 2,\n                          size: \"6\",\n                          class: \"ion-margin-top ion-margin-bottom\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_NumberInput, {\n                              modelValue: _ctx.form.threeHPQty,\n                              \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => (_ctx.form.threeHPQty = $event)),\n                              form: _ctx.form,\n                              min: 1\n                            }, null, 8, [\"modelValue\", \"form\"])\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    _createVNode(_component_ion_col, {\n                      size: \"6\",\n                      class: \"ion-margin-top ion-margin-bottom\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_SelectInput, {\n                          modelValue: _ctx.form.tptStartLocation,\n                          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => (_ctx.form.tptStartLocation = $event)),\n                          form: _ctx.form,\n                          asyncOptions: _ctx.getFacilities,\n                          allowCustom: \"\"\n                        }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                      ]),\n                      _: 1\n                    })\n                  ], 64 /* STABLE_FRAGMENT */))\n                : _createCommentVNode(\"\", true)\n            ], 64 /* STABLE_FRAGMENT */))\n          : _createCommentVNode(\"\", true),\n        _createVNode(_component_ion_col, {\n          size: \"6\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_SelectInput, {\n              modelValue: _ctx.form.confirmatoryTest,\n              \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => (_ctx.form.confirmatoryTest = $event)),\n              form: _ctx.form,\n              options: _ctx.HIVTestOptions\n            }, null, 8, [\"modelValue\", \"form\", \"options\"])\n          ]),\n          _: 1\n        }),\n        (_ctx.form.confirmatoryTest.value.label !== 'Not done')\n          ? (_openBlock(), _createBlock(_Fragment, { key: 2 }, [\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.confirmatoryTestLocation,\n                    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => (_ctx.form.confirmatoryTestLocation = $event)),\n                    form: _ctx.form,\n                    asyncOptions: _ctx.getFacilities,\n                    allowCustom: \"\"\n                  }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DateInput, {\n                    modelValue: _ctx.form.confirmatoryTestDate,\n                    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => (_ctx.form.confirmatoryTestDate = $event)),\n                    form: _ctx.form,\n                    \"min-date\": _ctx.patientDob,\n                    \"max-date\": _ctx.today\n                  }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                ]),\n                _: 1\n              })\n            ], 64 /* STABLE_FRAGMENT */))\n          : _createCommentVNode(\"\", true),\n        _createVNode(_component_ion_col, {\n          size: \"12\",\n          class: \"ion-margin-top\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-top ion-float-right\",\n              size: \"large\",\n              onClick: _ctx.onSubmit,\n              color: \"success\"\n            }, {\n              default: _withCtx(() => [\n                _hoisted_2\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-top ion-float-right\",\n              size: \"large\",\n              color: \"warning\",\n              onClick: _ctx.onClear\n            }, {\n              default: _withCtx(() => [\n                _hoisted_3\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            (!_ctx.isNewPatient)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  class: \"ion-margin-top ion-float-right\",\n                  size: \"large\",\n                  onClick: _cache[21] || (_cache[21] = $event => (_ctx.$router.back())),\n                  color: \"primary\"\n                }, {\n                  default: _withCtx(() => [\n                    _hoisted_4\n                  ]),\n                  _: 1\n                }))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64 /* STABLE_FRAGMENT */))\n}","\nimport {  computed, defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { IonRow, IonCol, IonTitle } from \"@ionic/vue\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport {  alertConfirmation } from \"@/utils/Alerts\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\nimport { isEmpty } from \"lodash\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport TextInput from \"../Components/inputs/TextInput.vue\";\nimport DateInput from \"../Components/inputs/DateInput.vue\"\nimport YesNoInput from \"../Components/inputs/YesNoInput.vue\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { ClinicRegistrationService } from \"@/apps/ART/services/registration_service\";\nimport SelectInput from \"../Components/inputs/SelectInput.vue\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport NumberInput from \"../Components/inputs/NumberInput.vue\";\nimport { initialTbStatusOptions, HIVTestOptions, tptHistoryOptions } from '@/apps/EMC/utils/DTFormElements'\nimport dayjs from \"dayjs\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { submitForm } from \"../utils/form\";\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { RegimenService } from \"@/services/regimen_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\n\nexport default defineComponent({\n  components: {\n    IonRow,\n    IonCol,\n    IonTitle,\n    TextInput,\n    DateInput,\n    YesNoInput,\n    SelectInput,\n    NumberInput\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    },\n    isNewPatient: {\n      type: Boolean,\n      default: true,\n    },\n    sitePrefix: {\n      type: String,\n      required: true\n    }\n  },\n  emits: [\"onValue\", \"onNext\"],\n  setup(props, { emit }) {\n    const customRegimenIngredients = ref<any[]>([])\n    const registrationService = new ClinicRegistrationService(props.patient.getID(), -1)\n    const consultationService = new ConsultationService(props.patient.getID(), -1)\n    const vitalsService = new VitalsService(props.patient.getID(), -1)\n    const patientTypeService = new PatientTypeService(props.patient.getID(), -1);\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const patientDob = computed(() => {\n      const date = props.patient.getBirthdate() \n      return date ? dayjs(date).format(STANDARD_DATE_FORMAT) : ''\n    })\n\n    const form = reactive<DTForm>({\n      arvNumber: {\n        value: '',\n        label: 'ARV Number',\n        placeholder: \"Enter ARV Number\",\n        required: true,\n        validation: async (arvNumber, form) => {\n          if(form.arvNumber.disabled) return null\n          const isNumberErr = StandardValidations.isNumber(arvNumber)\n          if(isNumberErr !== null) return isNumberErr\n          const patients = await Patientservice.findByOtherID(4, `${props.sitePrefix}-ARV-${arvNumber.value}`);\n          return isEmpty(patients) ?  null : ['ARV Number already exists'];\n        },\n      },\n      initialVisitDate: {\n        value: '',\n        label: 'Registration Date',\n        required: true,\n      },\n      shouldFollowUp: {\n        value: '',\n        label: 'Agrees to follow up ?',\n        computedValue: (agrees: string) => ({\n          tag: 'registration',\n          obs: [\n            registrationService.buildGroupValueCoded('Agrees to followup', 'Home visit', agrees),\n            registrationService.buildGroupValueCoded('Agrees to followup', 'Phone', agrees),\n          ]\n        }),\n        required: true,\n      },\n      receivedArvTreatmentBefore: {\n        value: '',\n        label: 'Ever received ARVs for treatment or prophylaxis?',\n        computedValue: (receivedTreatment: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded('Ever received ART', receivedTreatment)\n        }),\n        required: true,\n      },\n      dateLastTakenArvs: {\n        value: '',\n        label: 'Date last taken ARVs',\n        placeholder: \"Enter Date last taken ARVs\",\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Date ART last taken', date)\n        }),\n        validation: async (date: Option, f: DTForm) => f.receivedArvTreatmentBefore.value === 'Yes' &&\n          StandardValidations.required(date),\n      },\n      everRegisteredAtClinic: {\n        value: '',\n        label: 'Ever registred at an ART clinic',\n        computedValue: (everRegistered: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded('Ever registered at ART clinic', everRegistered)\n        }),\n        validation: async (everRegistered: Option, f: DTForm) => f.receivedArvTreatmentBefore.value === 'Yes' &&\n          StandardValidations.required(everRegistered),\n      },\n      artInitiationLocation: {\n        value: '',\n        label: 'Location of ART Initiation',\n        computedValue: async (facility: Option) => {\n          return {\n            tag:'registration',\n            obs: registrationService.buildValueText('Location of ART initiation', facility.label)\n          }\n        },\n        validation: async (location: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' &&\n           StandardValidations.required(location)\n        }\n      },\n      artStartDate: {\n        value: '',\n        label: 'Date started ART',\n        placeholder: 'Date started ART',\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Date ART started', date)\n        }),\n        validation: async (date: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' &&\n           StandardValidations.required(date)\n        }\n      },\n      initialWeight: {\n        value: '',\n        label: 'Initial Weight',\n        placeholder: 'Enter weight',\n        computedValue: (weight: number) => ({\n          tag: 'vitals',\n          obs: vitalsService.buildValueNumber('weight', weight)\n        }),\n        validation: async (weight: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && StandardValidations.validateSeries([\n            () => StandardValidations.required(weight),\n            () => vitalsService.validator({...weight, label: 'Weight'})\n          ])\n        }\n      },\n      initialHeight: {\n        value: '',\n        label: 'Initial Height',\n        placeholder: 'Enter height',\n        computedValue: (height: number) => ({\n          tag: 'vitals',\n          obs: registrationService.buildValueNumber('Height', height)\n        }),\n        validation: async (height: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && StandardValidations.validateSeries([\n            () => StandardValidations.required(height),\n            () => vitalsService.validator({ ...height, label: 'Height' })\n          ])\n        }\n      },\n      initialTBStatus: {\n        value: '',\n        label: 'Initial TB Status',\n        placeholder: 'select TB status',\n        computedValue: (status: Option) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded(\"TB Status at Initiation\", status.label)\n        }),\n        validation: async (status: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && StandardValidations.required(status)\n        }\n      },\n      tptHistory: {\n        value: '',\n        label: \"TPT History\",\n        placeholder: \"Select TPT history\",\n        computedValue: (history: Option) => ({\n          tag: \"consultation\",\n          obs: consultationService.buildValueText(\"Previous TB treatment history\", history.label)\n        }),\n        validation: async (history, form) => {\n          return form.everRegisteredAtClinic.value === 'Yes' && \n            StandardValidations.required(history)\n        }\n      },\n      tptStartDate: {\n        value: '',\n        label: \"Date started TPT\",\n        validation: async (date, form) => {\n          return form.tptHistory?.value?.label?.match(/currently/i) && \n            StandardValidations.required(date)\n        }\n      },\n      inhQty: {\n        value: '',\n        label: \"INH Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && \n            (history.match(/ipt/i) || history.includes('3HP (RFP + INH)')) && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => {\n          const drug = customRegimenIngredients.value.find(d => d.name === 'INH or H (Isoniazid 300mg tablet)')\n          return {\n            tag: 'consultation',\n            obs:  consultationService.buildObs('TPT Drugs Received', {\n              'value_drug': drug?.drug_id || 0,\n              'value_datetime': form?.tptStartDate.value || null,\n              'value_numeric': amount || 0\n            })\n          }\n        },\n      },\n      rifapentineQty: {\n        value: '',\n        label: \"Rifapentine Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && history.includes('3HP (RFP + INH)') && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => {\n          const drug = customRegimenIngredients.value.find(d => d.name === 'Rifapentine (150mg)')\n          return {\n            tag: 'consultation',\n            obs: consultationService.buildObs('TPT Drugs Received', {\n              'value_drug': drug?.drug_id || 0,\n              'value_datetime': form?.tptStartDate.value || null,\n              'value_numeric': amount || 0\n            })\n          }\n        },\n      },\n      threeHPQty: {\n        value: '',\n        label: \"INH / RFP Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && history.includes('INH 300 / RFP 300 (3HP)') && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => {\n          const drug = customRegimenIngredients.value.find(d => d.name === 'INH 300 / RFP 300 (3HP)')\n          return {\n            tag: 'consultation',\n            obs: consultationService.buildObs('TPT Drugs Received', {\n              'value_drug': drug?.drug_id || 0,\n              'value_datetime': form?.tptStartDate.value || null,\n              'value_numeric': amount || 0\n            })\n          }\n        },\n      },\n      tptStartLocation: {\n        value: '',\n        label: \"TPT Transfer From\",\n        validation: async (date, form) => {\n          return form.tptHistory?.value?.label?.match(/currently/i) && \n            StandardValidations.required(date)\n        },\n        computedValue: (facility: Option) => ({\n          tag:'consultation',\n          obs: consultationService.buildValueText(\n            'Location TPT last received', facility.label\n          )\n        }),\n      },\n      confirmatoryTest: {\n        value: '',\n        label: 'Confirmatory Test',\n        placeholder: 'Select confirmatory test',\n        required: true,\n        computedValue(test: Option){\n          return {\n            tag: 'registration',\n            obs: registrationService.buildValueCoded('Confirmatory hiv test type', test.value)\n          }\n        }\n      },\n      confirmatoryTestLocation: {\n        value: '',\n        label: 'Location of Confirmatory',\n        placeholder: 'Select location',\n        validation: async (location: Option, f: DTForm) => {\n          return f.confirmatoryTest.value.label !== 'Not done' && StandardValidations.required(location)\n        },\n        computedValue(facility: Option){\n          return {\n            tag: 'registration',\n            obs: registrationService.buildValueText(\n              'Confirmatory HIV test location', facility.label\n            )\n          }\n        }\n      },\n      confirmatoryTestDate: {\n        value: '',\n        label: 'Confirmatory HIV Test Date',\n        validation: async (date: Option, f: DTForm) => {\n          return f.confirmatoryTest.value.label !== 'Not done' && StandardValidations.required(date)\n        },\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Confirmatory HIV test date', date)\n        }),\n      },\n      patientType: {\n        value: \"New patient\",\n        computedValue: (patientType: string) => ({\n          tag: 'patient type',\n          obs: patientTypeService.buildValueCoded('Type of patient', patientType)\n        }),\n      }\n    });\n\n    watch(form.receivedArvTreatmentBefore, state => {\n      if (state.value === 'No') {\n        form.everRegisteredAtClinic.value = ''\n      }\n    });\n\n    const tptDrugs = computed(() => {\n      const tptHistory = form.tptHistory.value?.label\n      if(tptHistory?.match(/currently/i)){\n        if(tptHistory.match(/ipt/i)) {\n          return [\"INH or H (Isoniazid 300mg tablet)\"]\n        } else if(tptHistory.includes(\"3HP (RFP + INH)\")){\n          return ['INH or H (Isoniazid 300mg tablet)', 'Rifapentine (150mg)']\n        } else if(tptHistory.includes(\"INH 300 / RFP 300 (3HP)\")){\n          return [\"INH 300 / RFP 300 (3HP)\"]\n        }\n      }\n      return []\n    })\n\n    const onClear = async () => {\n      if((await alertConfirmation('Are you sure you want to clear all fields?'))) {\n        for(const key in form) {\n          if(key === 'patientType') continue;\n          form[key].value = undefined\n          form[key].error = \"\"\n        }\n      }\n      EventBus.emit(EmcEvents.ON_CLEAR)\n    }\n\n    const onSubmit = async () => {\n      patientTypeService.setDate(form.initialVisitDate.value)\n      registrationService.setDate(form.initialVisitDate.value)\n      vitalsService.setDate(form.initialVisitDate.value)\n      consultationService.setDate(form.initialVisitDate.value)\n      \n      await submitForm(form, async (formData, computedData) => {\n        emit(\"onValue\", {\n          type: 'registration',\n          data: {\n            formData,\n            computedData,\n            arvNumberEditable: !form.arvNumber.disabled\n          }\n        })\n        emit(\"onNext\")\n      })\n    }\n\n    onMounted(async () => {\n      const arvNumber = props.patient.getArvNumber()\n      if(arvNumber && arvNumber !== 'Unknown') {\n        form.arvNumber.value = arvNumber.split('-')[2]\n        form.arvNumber.disabled = true\n      } else {\n        const suggestedNumber = await ProgramService.getNextSuggestedARVNumber();\n        form.arvNumber.value = suggestedNumber.arv_number.replace(/^\\D+|\\s/g, \"\");\n      }\n      RegimenService.getCustomIngridients().then(drugs => customRegimenIngredients.value = drugs)\n    }) \n \n    return {\n      today,\n      patientDob,\n      form,\n      initialTbStatusOptions,\n      tptHistoryOptions,\n      HIVTestOptions,\n      tptDrugs,\n      getFacilities,\n      onClear,\n      onSubmit,\n    };\n  },\n});\n","import { render } from \"./ClinicRegistration.vue?vue&type=template&id=f8c8516c&ts=true\"\nimport script from \"./ClinicRegistration.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicRegistration.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}