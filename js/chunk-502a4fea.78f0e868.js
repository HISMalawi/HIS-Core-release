(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-502a4fea"],{7365:function(e,t,i){"use strict";i("14d9"),i("13d5");var s,a=i("7a23"),o=i("ad60"),n=i("2ef0"),r=i("0fa1"),l=i("7f35"),c=i("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(s||(s={}));const u=e=>c["b"].toStandardHisDisplayFormat(e),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(l["a"])("Data Integrity Issue Found","Patient died on "+u(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?s.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?s.CHANGE_PATIENT_OUTCOME:s.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const i=await Object(l["a"])("Data integrity issue found","",`Session date ${u(t)} is less than birth date of ${u(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===i?s.CHANGE_SESSION_DATE:s.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:i,apiDate:a})=>{const o=await Object(l["c"])("Please select a provider for "+t,`BDE: ${u(i)} | Current: ${u(a)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:s.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:s.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}};var h=i("c21d"),p=i("7920"),v=i("b5e4"),f=i("8e8b"),m=i("b432"),b=i("5a0c"),T=i.n(b),_=i("cc6f"),y=i("2ed9"),I=Object(a["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],encounterStartTime:null,facts:{age:-1,gender:"",birthDate:"",sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:"",village:"",district:"",currentTA:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():f["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,Object(n["isEmpty"])(this.patient)||Object(m["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0,this.setStartTime()}).catch(e=>console.log(e))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{setStartTime(){this.encounterStartTime=(new Date).getTime()},goOffline(){return!m["c"].value||m["b"].value},isOnline(){return m["c"].value},isOfflineMode(){return m["b"].value},initOfflineData(){var e;const t=Object(m["a"])().findByID(this.offlineID),i=null===t||void 0===t||null===(e=t.personParams)||void 0===e?void 0:e.person;i&&(this.facts.birthDate=i.birthdate,this.facts.age=T()(o["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.district=i.current_district,this.facts.village=i.current_village,this.facts.currentTA=i.current_traditional_authority,this.facts.gender=i.gender,this.ready=!0,this.setStartTime())},async saveFormEncounterAndProceed(e={}){let t="Pending",i=!1,s=null;const a=(new Date).getTime(),o=(a-this.encounterStartTime)/1e3,n=o/60;try{const t=await _["a"].buildValueText("Device",Object(y["f"])()),i=await _["a"].buildValueNumber("Review Time",n);s=[...await this.resolveObs(e.computedData),t,i]}catch(r){return console.error(""+r),Object(v["e"])("Unable to resolve observations")}if(!this.isOfflineMode()){try{const a=new _["a"](this.patientID,e.encounterTypeID,this.providerID);await a.createEncounter()&&await a.saveObservationList(s)&&(t="Success"),"function"===typeof e.callback&&await e.callback(a),i=!0}catch(r){i=!1,/NetworkError|Failed to fetch/i.test(""+r)?t="NetworkError":(t="Exception",console.error("Exception while saving an encounter: "+r))}if("Exception"===t)return Object(v["c"])("An error has occured!")}Object(m["a"])().saveObsOffline({observations:s,id:this.offlineID,uploadStatus:t,encounterName:this.$route.name,encounterTypeID:e.encounterTypeID,meta:e.formData,labOrders:e.labOrders,created:i},i),e.skipNextTask||this.nextTask()},runflowState(e,t=null){const i={};if(i[s.SET_PROVIDER]=e=>{const[t]=e.split(" "),i=Object(n["find"])(this.providers,{username:t});return i&&(this.providerID=i.person_id),s.CONTINUE},i[s.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),s.EXIT),i[s.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),s.EXIT),i[s.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),s.EXIT),e in i)return i[e](t)},async checkEncounterGuidelines(){const e=Object(h["a"])(this.facts,d);for(const n in e){var t,i;const r=e[n];if(null!==r&&void 0!==r&&null!==(t=r.actions)&&void 0!==t&&t.alert){var a;const e=this.runflowState(await(null===r||void 0===r||null===(a=r.actions)||void 0===a?void 0:a.alert(this.facts)));if(e===s.EXIT)return}if(null!==r&&void 0!==r&&null!==(i=r.actions)&&void 0!==i&&i.selection){var o;const e=await(null===r||void 0===r||null===(o=r.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await f["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=e.programID===o["a"].getProgramID(),this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(v["c"])(""+e)}this.facts.currentTA=this.patient.getCurrentTA(),this.facts.district=this.patient.getCurrentDistrict(),this.facts.village=this.patient.getCurrentVillage(),this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await f["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const i=e.username.toUpperCase(),s=t.username.toUpperCase();return i<s?-1:i>s?1:0}).map(e=>{var t;let i=""+e.username;if(!Object(n["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var s;const[t]=(null===(s=e.person)||void 0===s?void 0:s.names)||[];i+=` (${t.given_name} ${t.family_name})`}return i}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>"string"===typeof e||"number"===typeof e?{label:e,value:e}:e)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){try{const e=this.offlineID||this.patientID;await Object(r["b"])(e,this.$router,this.$route)}catch(e){console.error("Workflow error "+e),this.gotoPatientDashboard()}},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},toConditionalOptions(e){const t=[];for(const i of e)("boolean"!==typeof i[1]||i[1])&&t.push(this.toOption(i[0]));return t},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const i=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const i=t.obs?t.obs:t;return Array.isArray(i)?e=e.concat(i):"function"===typeof i?e.push(i()):e.push(i),e},[]);return Promise.all(i)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(i){return!1}},validateSeries(e){try{for(const t in e){const i=e[t]();if(i)return i}}catch(t){return[t]}}}});const g=I;t["a"]=g},"78a8":function(e,t,i){"use strict";i.r(t);var s=i("7a23");function a(e,t,i,a,o,n){const r=Object(s["resolveComponent"])("his-standard-form"),l=Object(s["resolveComponent"])("ion-page");return Object(s["openBlock"])(),Object(s["createBlock"])(l,null,{default:Object(s["withCtx"])(()=>[Object(s["createVNode"])(r,{formLabel:"Testing",fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}i("13d5"),i("14d9");var o=i("7365"),n=i("d95e"),r=i("d867"),l=i("cc6f");class c extends l["a"]{constructor(e,t=-1){super(e,197,t)}getRecentAccesspoint(){return this.getFirstValueCoded("HTS Access Type")}}var u=i("7f35"),d=i("74f4"),h=i("8e8b"),p=i("c731"),v=i("2ef0"),f=i("0011"),m=i("cd10"),b=i("85d6"),T=i("b5e4"),_=Object(s["defineComponent"])({components:{IonPage:r["D"]},mixins:[o["a"]],data:()=>({service:{},clientAge:-1}),watch:{ready:{handler(e){e&&(this.service=new c(this.patientID,this.providerID),this.fields=[this.accessPointTypeField(),this.facilityAccessPointField(),this.communityAccessPoints(),this.testsOfferedField(),this.lastHivTestResultField(),this.lastHivTestTypeField(),this.lastTimeHIVTestedField(),this.arvHistoryField(),this.drugTakenField(),this.mostRecentDrugHiddenField(),this.timeSinceDrugTaken(),this.clientRiskCategoryField(),this.testResultsField(),this.hivTestKitDetailsField(),this.hivResultHiddenField(),this.hivPatientCategoryField()])},immediate:!0}},methods:{onFinish(e,t){this.saveFormEncounterAndProceed({encounterTypeID:this.service.encounterTypeID,formData:e,computedData:t,callback:async()=>{try{await new d["a"](this.patientID).enrollProgram(),h["a"].invalidate("PATIENT_PROGRAM")}catch(e){console.log("Program enrollment error: "+e)}}})},threeTierHIVtestNotComplete(e){let t=!1,i=!1;for(const a of e){var s;"test_1"===a.other.id&&"Positive"===a.value?t=!0:/test_2|test_1_repeat|test_3/i.test(""+(null===a||void 0===a||null===(s=a.other)||void 0===s?void 0:s.id))&&""===a.value&&!a.disabled&&(i=!0)}return t&&i},validateTimeUnit(e){const t=90,i=12,s=24;return parseInt(""+e.other.value)<=0&&!/day/i.test(e.other.timeUnit)?[`Enter ${e.other.timeUnit} greater than zero`]:"Days"===e.other.timeUnit&&parseInt(""+e.other.value)>t?[`Enter ${e.other.timeUnit} less than ${t}, use Weeks Instead`]:"Weeks"===e.other.timeUnit&&parseInt(""+e.other.value)>i?[`Enter ${e.other.timeUnit} less than ${i}, use Months Instead`]:"Months"===e.other.timeUnit&&parseInt(""+e.other.value)>s?[`Enter ${e.other.timeUnit} less than ${s}, use Years Instead`]:e.other.value.length>1&&"0"===e.other.value[0]?[`Value ${e.other.value} is invalid!`]:new Date(e.other.date)<new Date(this.facts.birthDate)?[`${e.label} is greater than client's age of ${this.facts.age} Years`]:null},inclonclusiveResultDialog(){return Object(u["a"])("Reschedule test","","HIV result is inconclusive, schedule another test in 2 weeks",[{name:"Ok",slot:"start"}])},testOffered(e,t){return e.tests_offered.some(e=>e.value===t)},result(e,t){return Object(v["find"])(e.test_results,{other:{id:t}})||{}},accessPointTypeField(){return{id:"accesspoint_type",helpText:"Access point type",type:n["b"].TT_SELECT,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueCoded("HTS Access Type",e.value)}),options:()=>[{label:"Health Facility",value:"Health Facility"},{label:"Community",value:"Community"},{label:"Facility Referred from Community",value:"Health Facility"}]}},facilityAccessPointField(){return{id:"facility_access_points",helpText:"Health facility access points",type:n["b"].TT_SELECT_GRID,isRequired:()=>!0,condition:e=>"Health Facility"===e.accesspoint_type.value,finalComputedValue:e=>({obs:this.service.buildValueText("Location where test took place",""+e.value)}),config:{columnsPerRow:2},options:()=>[{label:"1 | VCT",value:"VCT"},{label:"2 | ANC",value:"ANC First Visit"},{label:"3 | Inpatient",value:"Inpatient"},{label:"4 | STI",value:"STI"},{label:"5 | PMTCT-Follow-up (ANC FUP, Mat, Post-nat, BF)",value:"PMTCT FUP"},{label:"6 | Index",value:"Index"},{label:"7 | Paediatric",value:"Paediatric"},{label:"8 | VMMC",value:"VMMC"},{label:"9 | Malnutrition",value:"Malnutrition"},{label:"10 | TB",value:"TB"},{label:"11 | OPD",value:"OPD"},{label:"12 | Other PITC (PrEP, dental e.t.c)",value:"Other"},{label:"18 | SNS (Social Network Strategies)",value:"SNS"}]}},communityAccessPoints(){return{id:"community_access_points",helpText:"Community access points",type:n["b"].TT_SELECT,condition:e=>"Community"===e.accesspoint_type.value,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueText("Location where test took place",""+e.value)}),options:()=>[{label:"13 | VCT",value:"VCT"},{label:"14 | Index",value:"Index"},{label:"15 | VMMC",value:"VMMC"},{label:"16 | Other",value:"Other"},{label:"17 | SNS",value:"SNS"},{label:"19 | Mobile",value:"Mobile"}]}},testsOfferedField(){let e=["HIV","Syphilis","Hepatitis B"];return{id:"tests_offered",helpText:"Tests to be offered today?",type:n["b"].TT_MULTIPLE_SELECT,init:async()=>{try{const{getUserProp:t}=Object(b["a"])(),i=await t("HTS_PROGRAMS"),s=i.split(",").filter(e=>/HIV|syphilis|hepatitis/i.test(e)).map(e=>e.replace(/test/i,"").trim());s.length>=1&&(e=s)}catch(t){return console.error(t),!1}return!0},isRequired:()=>!0,condition:()=>e.length>1,defaultOutput:()=>this.mapStrToOptions(e),options:()=>this.mapStrToOptions(e),config:{buildOptionsOnce:!0}}},lastHivTestResultField(){return{id:"last_hiv_result",helpText:"Last HIV Test",type:n["b"].TT_SELECT,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueCoded("Previous HIV Test Results",e.value)}),options:()=>this.toConditionalOptions([["Never Tested"],["Negative"],["Positive"],["Exposed infant"],["Invalid or inconclusive"]])}},lastHivTestTypeField(){return{id:"last_hiv_perfomed",helpText:"Last HIV test performed",type:n["b"].TT_SELECT,isRequired:()=>!0,condition:e=>!["Never Tested","Exposed infant"].includes(e.last_hiv_result.value),finalComputedValue:e=>({obs:this.service.buildValueCoded("Previous HIV test done",e.value)}),defaultOutput:e=>{if(/exposed infant/i.test(e.last_hiv_result.value))return this.toOption("Professional")},options:e=>this.toConditionalOptions([["Self"],["Initial professional",!/Negative|Inconclusive/i.test(e.last_hiv_result.value)],["Professional"]])}},lastTimeHIVTestedField(){return{id:"last_time_hiv_tested",helpText:"Time since last HIV test",type:n["b"].TT_AGE_INPUT,condition:e=>e.last_hiv_result.value&&"Never Tested"!=e.last_hiv_result.value,isRequired:()=>!0,beforeNext:async(e,t)=>(e.other.monthsAgoInt>=12&&!this.testOffered(t,"HIV")&&await Object(u["a"])("Recommendation Alert","","Please consider testing client for HIV",[{name:"Ok",slot:"start",color:"primary"}]),!0),validation:e=>this.validateTimeUnit(e),finalComputedValue:e=>({obs:this.service.buildObs("Time of HIV test",{value_datetime:e.other.date,value_text:e.value})}),config:{excludeUnits:["Hours"]}}},arvHistoryField(){return{id:"last_taken_drugs",helpText:"Ever taken the following drugs?",type:n["b"].TT_MULTIPLE_YES_NO,isRequired:()=>!0,finalComputedValue:e=>({obs:e.map(e=>this.service.buildValueCoded(e.other.concept,e.value))}),options:e=>e.last_taken_drugs?e.last_taken_drugs:[this.toYesNoOption("PrEP or infant NVP",{concept:"Taken Prep before"}),this.toYesNoOption("ART",{concept:"Taken ARV Before"}),this.toYesNoOption("PEP",{concept:"Taken PEP before"})]}},drugTakenField(){return{id:"drug_taken",helpText:"Most recent drug taken",type:n["b"].TT_SELECT,isRequired:()=>!0,condition:e=>{let t=0;for(const i of e.last_taken_drugs){if("ART"===i.label&&"Yes"===i.value)return!1;"Yes"===i.value&&++t}return t>1},defaultOutput:e=>{const t=e.last_taken_drugs.find(e=>"ART"===e.label);if("Yes"===(null===t||void 0===t?void 0:t.value))return this.toOption("ART")},finalComputedValue:e=>({obs:this.service.buildValueCoded("Most recent drug taken",e.value)}),options:e=>e.last_taken_drugs.filter(e=>"Yes"===e.value).map(e=>this.toOption(e.label))}},mostRecentDrugHiddenField(){return{id:"most_recent_drug",helpText:"Most recent drug",type:n["b"].TT_HIDDEN,condition:e=>1===e.last_taken_drugs.filter(e=>"Yes"===e.value).length,defaultValue:e=>Object(v["find"])(e.last_taken_drugs,{value:"Yes"}),finalComputedValue:e=>({obs:this.service.buildValueCoded("Most recent drug taken",e.value)})}},timeSinceDrugTaken(){return{id:"time_since_last_drug_taken",helpText:"Time since last taken medication",type:n["b"].TT_AGE_INPUT,condition:e=>e.last_taken_drugs.some(e=>"Yes"===e.value),finalComputedValue:e=>({obs:this.service.buildObs("Time since last taken medication",{value_text:e.value+" ago",value_datetime:e.other.date})}),validation:e=>this.validateTimeUnit(e),isRequired:()=>!0,config:{excludeUnits:["Hours"]}}},clientRiskCategoryField(){return{id:"client_risk_category",helpText:"Client Risk Category",type:n["b"].TT_SELECT,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueCoded("client risk category",e.value)}),options:()=>this.mapStrToOptions(["Low risk","On-going risk","High risk event in last 3 months","Risk assessment not done"])}},hivTestKitDetailsField(){return{id:"test_kit",helpText:"Kit information",type:n["b"].TT_INPUT_ARRAY,condition:e=>e.test_results.filter(e=>""!=e.value).some(e=>!(e.other.expiryDate&&e.other.lotNo)),config:{columns:[{label:"Kit Name"},{label:"Kit Lot No."},{label:"Kit Expiry Date"}]},summaryMapValue:e=>({label:"Kit: "+e.label,value:"Lot No: "+(e.value||e.other.fields[1].value)}),validation:e=>{const t=e.map(e=>e.other.fields),i=t.some(e=>{const t=e.filter(e=>""!=e.value).length;return t>0&&t<3});if(i)return["Some rows have incomplete data!"];const s=t.some(e=>e.some(e=>""===e.value));return s?["Some rows are missing data"]:null},finalComputedValue:e=>({obs:e.map(e=>e.other.fields).map(async e=>{const[t,...i]=e.filter(e=>"function"===typeof e.other.obs).map(e=>e.other.obs(e));return{...await t,child:await Promise.all(i)}})}),defaultOutput:e=>{const t=e.test_results.filter(e=>""!=e.value);if(t.every(e=>e.other.expiryDate&&e.other.lotNo))return t.map(e=>({label:e.label,value:e.other.lotNo,other:{fields:[{label:"Kit name",value:e.label,other:{obs:()=>this.service.buildValueText("Kit name",e.label)}},{label:"Kit Lot No",value:e.other.lotNo,other:{obs:()=>this.service.buildValueText("Kit lot number",e.other.lotNo)}},{label:"Kit expiry date",value:e.other.expiryDate,other:{obs:()=>this.service.buildValueDate("kit expiry date",e.other.expiryDate)}}]}}))},options:async e=>{const t=Array.isArray(e.test_results)?e.test_results:[],i=e=>({label:"Kit Name",value:e,clearable:!1,other:{usefontBold:!0,obs:e=>this.service.buildValueText("Kit name",e.label)}}),s=e=>({label:"Kit Lot No.",value:e,other:{obs:e=>this.service.buildValueText("Kit lot number",e.value),onclick:e=>{Object(p["b"])({id:"lot",helpText:"Enter Lot Number",type:n["b"].TT_TEXT,isRequired:()=>!0},t=>{e.value=t.value})}}}),a=e=>({label:"Kit Expiry Date",value:e,other:{obs:e=>this.service.buildValueDate("kit expiry date",e.value),onclick:e=>{Object(p["b"])({id:"end_user",helpText:"Kit Expiry Date",type:n["b"].TT_FULL_DATE,isRequired:()=>!0,validation:e=>new Date(e.label)<new Date(this.service.date)?["Expiry date cannot be less than current date "+Object(f["g"])(this.service.date)]:null},t=>{e.value=t.value})}}}),o=null===e.test_kit?[]:e.test_kit;return t.filter(e=>""!=e.value).map(e=>{const t=Object(v["find"])(o,{label:e.label});return t||{label:e.label,value:"",other:{fields:[i(e.other.shortName),s(e.other.lotNo),a(e.other.expiryDate)]}}})}}},testResultsField(){const{getLotNo:e,getExpiryDate:t,initKits:i}=Object(m["b"])(),s=(e,t,i)=>!!Object(v["find"])(e,{value:i,other:{id:t}});return{id:"test_results",helpText:"Test results",type:n["b"].TT_MULTIPLE_YES_NO,config:{requireAllValues:!1},summaryMapValue:e=>{const t={Positive:"Reactive",Negative:"Non-reactive"};if(""!=e.value)return{label:e.label,value:t[e.value]||e.value}},beforeNext:async(e,t)=>{const i=s(e,"test_2","Negative")&&s(e,"test_1_repeat","Positive")||s(e,"test_2","Positive")&&s(e,"test_3","Negative");if(/inconclusive/i.test(t.last_hiv_result.value)&&i)return await Object(u["a"])("Inconclusive Re-Test Result","","Please collect DBS sample.",[{name:"Ok",slot:"start"}]),!0;if(i)return await this.inclonclusiveResultDialog(),!0;const a=s(e,"test_1","Positive")&&s(e,"test_2","Positive")&&s(e,"test_3","Positive");return a&&this.facts.age<=0&&await Object(u["a"])("<12 months old all HIV tests reactive","","Please collect DBS sample for EID",[{name:"Ok",slot:"start"}]),!("Community"!=t.accesspoint_type.value&&this.threeTierHIVtestNotComplete(e)&&!await Object(T["a"])("Are you sure you want to save incomplete HIV results?",{header:"Incomplete HIV results!"}))},onValueUpdate:(e,t,i)=>{if(this.testOffered(i,"HIV")&&"Health Facility"===i.accesspoint_type.value){const t=[...e],i=s(t,"test_1","Positive"),a=s(t,"test_2","Positive"),o=(e,i)=>{t.forEach(t=>{t.other.id===e&&(t.disabled=i,i&&(t.value=""))})};return i?(o("test_2",!1),i&&a?(o("test_3",!1),o("test_1_repeat",!0),t):(i&&!a&&e.some(e=>"test_2"===e.other.id&&""!=e.value)&&(o("test_1_repeat",!1),o("test_3",!0)),t)):(o("test_2",!0),o("test_3",!0),o("test_1_repeat",!0),t)}return e},validation:e=>!e||e.some(e=>{var t;return/syphilis|hepatitis|test_1/i.test(""+(null===e||void 0===e||null===(t=e.other)||void 0===t?void 0:t.id))&&""===e.value&&!e.disabled})?["Result entry incomplete!"]:null,finalComputedValue:e=>({obs:e.filter(e=>e.value&&"function"===typeof e.other.obs).map(e=>e.other.obs(e))}),init:async()=>(await i(),!0),condition:e=>e.tests_offered.length,options:i=>{const s=(e={})=>({label:e.name,value:"",disabled:"boolean"===typeof(null===e||void 0===e?void 0:e.disabled)&&e.disabled,other:{id:(null===e||void 0===e?void 0:e.id)||"",concept:(null===e||void 0===e?void 0:e.concept)||"",shortName:(null===e||void 0===e?void 0:e.shortName)||"",category:(null===e||void 0===e?void 0:e.category)||"",expiryDate:(null===e||void 0===e?void 0:e.expiryDate)||"",lotNo:(null===e||void 0===e?void 0:e.lotNo)||"",obs:"function"===typeof(null===e||void 0===e?void 0:e.obs)?e.obs:void 0,accessPoint:(null===e||void 0===e?void 0:e.accessPoint)||"*",values:[{label:"Reactive",value:"Positive"},{label:"Non-reactive",value:"Negative"}]}}),a=[s({id:"test_1",name:"HIV Test 1 (Determine)",category:"HIV",shortName:"Determine",lotNo:e(m["a"].DETERMINE),expiryDate:t(m["a"].DETERMINE),concept:"Test 1",obs:e=>this.service.buildValueCoded(e.other.concept,e.value)}),s({id:"test_2",name:"HIV Test 2 (Unigold)",category:"HIV",disabled:!0,accessPoint:"Health Facility",shortName:"Unigold",concept:"Test 2",lotNo:e(m["a"].UNIGOLD),expiryDate:t(m["a"].UNIGOLD),obs:e=>this.service.buildValueCoded(e.other.concept,e.value)}),s({id:"test_1_repeat",name:"HIV Test 1 (Determine) Repeat",category:"HIV",disabled:!0,shortName:"Determine (Repeat)",accessPoint:"Health Facility",concept:"Immediate Repeat Test 1 Result",lotNo:e(m["a"].DETERMINE),expiryDate:t(m["a"].DETERMINE),obs:e=>this.service.buildValueCoded(e.other.concept,e.value)}),s({id:"test_3",name:"HIV Test 3 (Bioline)",category:"HIV",disabled:!0,shortName:"Bioline",accessPoint:"Health Facility",concept:"Test 3",lotNo:e(m["a"].BIOLINE),expiryDate:t(m["a"].BIOLINE),obs:e=>this.service.buildValueCoded(e.other.concept,e.value)}),s({id:"syphilis",name:"Syphilis Test Result",category:"Syphilis",shortName:"Syphilis",concept:"Syphilis Test Result",lotNo:e(m["a"].SYPHILIS),expiryDate:t(m["a"].SYPHILIS),obs:e=>this.service.buildValueCoded(e.other.concept,e.value)}),s({id:"hepatitis",name:"Hepatitis B Test Result",category:"Hepatitis B",shortName:"Hepatitis B",concept:"Hepatitis B Test Result",lotNo:e(m["a"].HEPATITIS),expiryDate:t(m["a"].HEPATITIS),obs:e=>this.service.buildValueCoded(e.other.concept,e.value)})],o=i.accesspoint_type.value,n=Array.isArray(i.test_results)?i.test_results:[],r=a.reduce((e,t)=>{const i=Object(v["find"])(n,{label:t.label});return i?("*"!=i.other.accessPoint&&i.other.accessPoint!=o&&(i.value=""),e.push(i)):e.push(t),e},[]);return i.tests_offered.reduce((e,t)=>{const i=r.filter(e=>e.other.category===t.value&&(e.other.accessPoint===o||"*"===e.other.accessPoint));return i.length?e.concat(i):e},[])}}},hivResultHiddenField(){let e="";return{id:"hiv_result",helpText:"HIV Result",type:n["b"].TT_HIDDEN,appearInSummary:()=>!1,condition:e=>this.testOffered(e,"HIV"),onload:t=>{let i=null!=t.last_hiv_perfomed,s=null!=t.last_hiv_result,a="",o="",n="",r="";const l=t.test_results||[],c="Community"===t.accesspoint_type.value,u=()=>{var e;return null===(e=t.last_hiv_result)||void 0===e?void 0:e.value},d=()=>{var e;return null===(e=t.last_hiv_perfomed)||void 0===e?void 0:e.value};l.forEach(e=>{switch(e.other.id){case"test_1":a=e.value;break;case"test_2":o=e.value;break;case"test_3":n=e.value;break;case"test_1_repeat":r=e.value;break}});const h=()=>s&&i&&"Positive"===u()&&"Professional"===d()&&("Negative"===a||"Negative"===o||"Negative"===n),p={Incomplete:()=>["Community"!=t.accesspoint_type.value,this.threeTierHIVtestNotComplete(l)],Negative:()=>[!h(),"Negative"===a||"Negative"===o||"Negative"===n||"Negative"===r],Positive:()=>[!c,"Positive"===n],Inconclusive:()=>[!c,h()||"Negative"===o&&"Positive"===r||"Positive"===o&&"Negative"===n],"Positive Initial Professional":()=>[c,"Positive"===a]};e=Object.keys(p).reduce((e,t)=>p[t]().every(Boolean)?t:e,"Not indicated")},defaultValue:()=>{if(e)return this.toOption(e)},finalComputedValue:()=>{if(e)return{obs:this.service.buildValueCoded("HIV status",e)}}}},hivPatientCategoryField(){let e="N/A";return{id:"patient_category",helpText:"Result given to client",type:n["b"].TT_HIDDEN,onload:t=>{if(!t.hiv_result)return;const i=t.hiv_result.value,s=this.facts.age,a=t.last_hiv_result.value,o=null!=t.last_hiv_perfomed?t.last_hiv_perfomed.value:"",n=null!=t.last_time_hiv_tested?t.last_time_hiv_tested.other.monthsAgoInt:-1,r={"New Positive":["Positive"===i,/never tested|negative|exposed|inconclusive/i.test(a)||"Positive"===a&&/initial professional|self/i.test(o)&&n<=12],"New exposed infant":[s<=0,"Positive"===i],"Positive Re-test":["Positive"===i,"Positive"===a,"Professional"===o,n<=12],"Inconclusive Re-test":["Professional"===o,n<=12,"Inconclusive"===i],"New Negative":["Negative"===i],"New Inconclusive":["Inconclusive"===i,/self/i.test(o)&&/invalid/i.test(a)||/never tested|negative|exposed infant/i.test(a)||"Positive"===a&&/self|initial professional/i.test(o)]};e=Object.keys(r).reduce((e,t)=>r[t].every(Boolean)?t:e,"N/A")},defaultValue:()=>{if("N/A"!=e)return this.toOption(e)},finalComputedValue:()=>{if("N/A"!=e)return{obs:this.service.buildValueCoded("HIV group",e)}},condition:e=>e.hiv_result.value}}}}),y=i("6b0d"),I=i.n(y);const g=I()(_,[["render",a]]);t["default"]=g},7920:function(e,t,i){"use strict";var s=i("7a23");function a(e,t,i,a,o,n){return Object(s["openBlock"])(),Object(s["createBlock"])(Object(s["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=i("9441"),n=Object(s["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),r=i("6b0d"),l=i.n(r);const c=l()(n,[["render",a]]);t["a"]=c},c21d:function(e,t,i){"use strict";i.d(t,"a",(function(){return n}));i("14d9");function s(e,t){const i=[],s=[-1,"",null,void 0];for(const a in t){if(!(a in e))continue;const o=e[a];s.includes(o)?i.push(!1):i.push(t[a](o,e))}return i.every(Boolean)}function a(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function o(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function n(e,t,i="",n="",r="priority"){const l=[];for(const a in t){const o=t[a],r=[o.target&&i&&o.target!=i,o.targetEvent&&n&&o.targetEvent!=n];r.some(Boolean)||s(e,o.conditions)&&(o.title=a,o.description&&(o.description.text=o.description.info(e)),l.push(o))}return"priority"===r?a(l):o(l)}},cd10:function(e,t,i){"use strict";i.d(t,"a",(function(){return s})),i.d(t,"b",(function(){return l}));var s,a=i("1c74"),o=i("2ef0"),n=i("7a23"),r=i("85d6");function l(){const e=Object(n["ref"])([]),{getUserProp:t,setUserProp:i}=Object(r["a"])(),l=async()=>{try{const e=await t("HTS_PROGRAMS");return(""+(e||"")).split(",").map(e=>e.trim())}catch(e){console.error(""+e)}return[]},c=async()=>{const i=[{kitName:s.UNIGOLD,lotNo:"",expiryDate:"",testGroup:"profession_hiv_kit",visible:!0,userProp:"HIV Test"},{kitName:s.DETERMINE,lotNo:"",expiryDate:"",testGroup:"profession_hiv_kit",visible:!0,userProp:"HIV Test"},{kitName:s.BIOLINE,lotNo:"",expiryDate:"",testGroup:"profession_hiv_kit",visible:!0,userProp:"HIV Test"},{kitName:s.HIV_SELF_KIT,lotNo:"",expiryDate:"",visible:!0},{kitName:s.SYPHILIS,lotNo:"",expiryDate:"",visible:!0,userProp:"Syphilis Test"},{kitName:s.HEPATITIS,lotNo:"",expiryDate:"",visible:!0,userProp:"Hepatitis B Test"}];try{const a=await l(),n=await t(s.TEST_KIT_USER_PROPERTY),r=JSON.parse(n||"");i.forEach(e=>{e.userProp&&!Object(o["isEmpty"])(a)&&(e.visible=a.includes(e.userProp));const t=Object(o["find"])(r,{kitName:e.kitName});t&&(e.lotNo=t.lotNo,e.expiryDate=t.expiryDate)}),e.value=i.filter(e=>e.visible)}catch(a){e.value=i,console.error(""+a)}},u=t=>{const i=Object(o["find"])(e.value,{kitName:t});return i?new Date(i.expiryDate)<=new Date(a["e"].getSessionDate())?"":i.lotNo:""},d=t=>{const i=Object(o["find"])(e.value,{kitName:t});return i?new Date(i.expiryDate)<=new Date(a["e"].getSessionDate())?"":i.expiryDate:""},h=()=>i(s.TEST_KIT_USER_PROPERTY,JSON.stringify(e.value));return{kits:e,initKits:c,saveKits:h,getLotNo:u,getExpiryDate:d}}(function(e){e["TEST_KIT_USER_PROPERTY"]="hts_user_assigned_kits",e["HIV_SELF_KIT"]="HIV self-kit",e["SYPHILIS"]="Syphilis",e["HEPATITIS"]="Hepatitis B",e["BIOLINE"]="Bioline",e["DETERMINE"]="Determine",e["UNIGOLD"]="Unigold"})(s||(s={}))}}]);
//# sourceMappingURL=chunk-502a4fea.78f0e868.js.map