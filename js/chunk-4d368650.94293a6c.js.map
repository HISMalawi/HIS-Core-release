{"version":3,"sources":["webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/ART/views/encounters/hypertension_diagnosis.vue"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","ConsultationService","AppEncounterService","constructor","patientID","providerID","getFamilyPlanningMethods","orders","DrugOrderService","getAllDrugOrders","rifapentine","isoniazid","reduce","quantities","order","name","drug","match","quantity","e","console","error","obs","ObservationService","getFirstObs","value_text","obsInValidPeriod","getDrugSideEffects","getJson","getProgramID","date","getClient","getFirstValueCoded","req","id","isEmpty","lastScreened","duration","dayjs","diff","secondCheck","getFirstValueText","isTL","value_coded","tlObs","fpObs","drugs","uniqueDrugs","forEach","drug_inventory_id","familyPlanningMethods","label","values","familyPlanningLogic","selected","map","data","value","isChecked","disabled","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","Service","postJson","dispensations","getSessionDate","pageSize","drugID","params","patientId","EstimationFieldType","getYearField","showUnknown","primaryFunctions","push","helpText","appearInSummary","type","FieldType","TT_TEXT","config","customKeyboard","getMonthField","TT_SELECT","options","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","s","parseInt","async","getDefaultDate","form","field","datePart","defaultValue","year","month","day","split","d","HisDate","toStandardHisDisplayFormat","validateMinMax","computed","minDate","min","Date","maxDate","max","generateDateFields","refDate","fullDate","yearValue","monthValue","dayValue","yearID","monthID","dayID","ageEstimateID","durationEstimateID","estimation","allowUnknown","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","f","includes","condition","buildHelpTextDate","part","parts","default","partValues","dpart","wl","undefined","join","init","updateHelpTextOnValue","proxyID","unload","v","toString","validation","c","required","StandardValidations","isNaN","minYear","getYear","summaryMapValue","summaryLabel","_","ref","computedValue","val","computeValue","isEstimate","beforeNext","keyboardActions","valueEstimateCondition","estimateType","conditions","estimationFieldType","every","Boolean","ageEstimateRegex","AGE_ESTIMATE_FIELD","subtract","MONTH_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","skipSummary","onFinishAction","onFinish","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","consultation","watch","ready","handler","this","getFields","immediate","methods","computedData","createEncounter","resolveObs","saveObservationList","$router","back","yesNoOptions","Validation","buildValueCoded","has_hypertension","buildValueDate","__exports__"],"mappings":"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","file":"js/chunk-4d368650.94293a6c.js","sourcesContent":["import { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport MonthOptions from \"@/utils/HisFormHelpers/MonthOptions\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport HisDate, { STANDARD_DATE_FORMAT } from \"@/utils/Date\"\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\"\nimport { NUMBER_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport { NUMBERS_WITHOUT_NA_UNKNOWN } from '../../components/Keyboard/HisKbConfigurations';\nimport dayjs from \"dayjs\"\nimport { Service } from \"@/services/service\"\n\nexport enum EstimationFieldType {\n    AGE_ESTIMATE_FIELD = \"age-estimate-field\",\n    MONTH_ESTIMATE_FIELD = \"month-period-estimate-field\"\n}\n\nexport interface EstimationInterface {\n    estimationFieldType?: EstimationFieldType;\n    allowUnknown: boolean; \n    allowUnknownMonthDay?: boolean;\n}\n\nexport interface DateFieldInterface {\n    id: string;\n    helpText: string;\n    init?: (f: any, c: any) => boolean | Promise<boolean>;\n    summaryLabel?: string;\n    condition?: Function;\n    required?: boolean;\n    defaultValue?: Function;\n    beforeNext?: Function;\n    minDate?(formData: any, computeForm: any): string;\n    maxDate?(formData: any, computeForm: any): string | null;\n    unload?(data: any, state: string, formData: any,  computeForm: any): void; \n    computeValue: Function;\n    appearInSummary?: Function;\n    estimation: EstimationInterface;\n    config?: any;\n}\n\nexport function getYearField(id: string, name: string, showUnknown=true): Field {\n    const primaryFunctions = []\n    if (showUnknown) primaryFunctions.push('UNKNOWN')\n    return {\n        id,\n        helpText: `${name} Year`,\n        appearInSummary: () => false,\n        type: FieldType.TT_TEXT,\n        config: {\n            customKeyboard: [\n                NUMBER_PAD_LO,\n                [\n                    primaryFunctions,\n                    ['DELETE']\n                ]\n            ]\n        }\n    }\n}\n\nexport function getMonthField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Month`,\n        appearInSummary: () => false,\n        type: FieldType.TT_SELECT,\n        options: () => MonthOptions\n    }\n}\n\nexport function getDayField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Day`,\n        type: FieldType.TT_MONTHLY_DAYS,\n        appearInSummary: () => false\n    }\n}\n\nexport function getMonthDurationEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Estimated period`,\n        type: FieldType.TT_SELECT,\n        appearInSummary: () => false,\n        options: () => ([\n            { label: '6 months ago', value: 180 },\n            { label: '12 months ago', value: 365 },\n            { label: '18 months ago', value: 540 },\n            { label: '24 months ago', value: 730 },\n            { label: 'Over 2 years ago', value: 730 }\n        ])\n    }\n}\n\nexport function getAgeEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Age Estimate`,\n        type: FieldType.TT_NUMBER,\n        appearInSummary: () => false,\n        config: {\n            keypad: NUMBERS_WITHOUT_NA_UNKNOWN\n        }\n    }\n}\n\nfunction appendLeadingZero(s: string) {\n    return parseInt(s) < 10 ? `0${s}` : s\n}\n\nasync function getDefaultDate(form: any, field: DateFieldInterface, datePart: 'Year' | 'Month' | 'Day') {\n    if (field.defaultValue) {\n        const date = await field.defaultValue(form)\n        if (date) {\n            const [year, month, day] = date.split('-')\n            switch(datePart) {\n                case 'Year':\n                    return year || ''\n                case 'Month':\n                    return parseInt(month) || ''\n                case 'Day':\n                    return parseInt(day) || ''    \n            }\n        }\n    }\n    return ''\n}\n\nfunction d(date: string) {\n    return HisDate.toStandardHisDisplayFormat(date)\n}\n\nfunction validateMinMax(date: string, field: DateFieldInterface, form: any, computed: any) {\n    if (field.minDate) {\n        const min = field.minDate(form, computed)\n        if (new Date(date) < new Date(min)) {\n            return [`${d(date)} is less than minimum date of ${d(min)}`]\n        }\n    }\n    if (field.maxDate) {\n        const max = field.maxDate(form, computed)\n        if (max && new Date(date) > new Date(max)) {\n            return [`${d(date)} is greater than max date of  ${d(max)}`]\n        }\n    }\n}\n/**\n * This Jungle of code generates Fields of Year, Month and Day.\n * \n * if you're brave please refactor this. Just dont break anything Ok!\n * @param field \n * @param refDate \n * @returns \n */\nexport function generateDateFields(field: DateFieldInterface, refDate=''): Array<Field> {\n    let fullDate = ''\n    let yearValue = ''\n    let monthValue = ''\n    let dayValue = ''\n\n    const yearID = `year_${field.id}`\n    const monthID = `month_${field.id}`\n    const dayID = `day_${field.id}`\n    const ageEstimateID = `age_estimate_${field.id}`\n    const durationEstimateID = `duration_estimate_${field.id}`\n\n    const year = getYearField(yearID, field.helpText, field.estimation.allowUnknown)\n    const month = getMonthField(monthID, field.helpText)\n    const day = getDayField(dayID, field.helpText)\n\n    const ageEstimate = getAgeEstimateField(ageEstimateID, field.helpText)\n    const durationEstimate = getMonthDurationEstimateField(durationEstimateID, field.helpText)\n\n    const estimateMonthOrDay = typeof field.estimation.allowUnknownMonthDay === 'boolean'\n        && field.estimation.allowUnknownMonthDay\n\n    const datePartCondition = (f: any) => {\n        if (f[yearID] && f[yearID].value) {\n            if (['Unknown'].includes(f[yearID].value)) {\n                return false\n            }\n        }\n        return field.condition ? field.condition(f) : true\n    }\n    /**\n     * Generates fulldate based on current date part, it's value and previously recorded date parts.\n     * @param value\n     * @param part\n     * @returns\n     */\n    const buildHelpTextDate = (value: any, part: 'month' | 'year' | 'day') => {\n        const parts = [\n            { type: 'year', value: yearValue, default: 'YYYY' },\n            { type: 'month', value: monthValue, default: 'MM' },\n            { type: 'day', value: dayValue, default: 'DD' },\n        ]\n        return parts.reduce((partValues: any, dpart: any) => {\n            const wl = [null, undefined, 'Unknown', '']\n            if (part === dpart.type) {\n                if (wl.includes(value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(value)\n                }\n            } else {\n                if (wl.includes(dpart.value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(dpart.value)\n                }\n            }\n            return partValues\n        }, []).join('-')\n    }\n\n    if (typeof field.init === 'function') year.init = field.init\n    \n    // YEAR CONFIG\n    year.updateHelpTextOnValue = (data: any) => `${year.helpText} (${buildHelpTextDate(data?.label, 'year')})`\n\n    year.proxyID = field.id\n\n    year.unload = (v: Option) => yearValue = v.value.toString()\n \n    year.config = { ...year.config, ...field.config }\n\n    year.defaultValue = (f: any) => getDefaultDate(f, field, 'Year')\n\n    year.condition = (f: any) => field.condition \n        ? field.condition(f) \n        : true\n\n    year.validation = (v: Option, f: any, c: any) => {\n        if (field.required && StandardValidations.required(v)) {\n            return ['Year cannot be empty']\n        }\n        const year = v ? v.value : ''\n        if (!field.estimation.allowUnknown \n            && year.toString().match(/unknown/i)) {\n            return ['Value unknown is not permitted']\n        }\n    \n        if (year && !['Unknown'].includes(year as string)\n            && isNaN(year as number)\n            || year < 1900) {\n            return ['Invalid Year']\n        }\n\n        if (year && typeof field.minDate === 'function') {\n            const minYear = HisDate.getYear(field.minDate(f, c)) \n            if (parseInt(year as any) < minYear) {\n                return [`Year of ${year} is less than Minimum year of ${minYear}`]\n            }\n        }\n\n        if (year && typeof field.maxDate === 'function') {\n            const max = field.maxDate(f, c)\n            if (max && year > HisDate.getYear(max)) {\n                return [`Year of ${year} exceeds Maximum year of ${HisDate.getYear(max)}`]\n            }\n        }\n\n        return null\n    }\n    /**\n     * Year Proxy field will be our reference point of \n     * how data should appear on the summary\n     * @returns \n     */\n    year.summaryMapValue = () => ({\n        label: field.summaryLabel || field.helpText, \n        value: fullDate ? d(fullDate) : 'Unknown'\n    })\n\n    // To avoid the year from appearing on the summary, \n    // match the ref against the proxyID itself\n    year.appearInSummary = (_: any, ref: string) => ref === field.id\n\n    /**\n     * This helps to keep computeValue of the dateProxy up-to-date when year changes\n     * @param val \n     * @returns \n     */\n    year.computedValue = (val: Option) => {\n        if (fullDate) {\n            const [_, month, day] = fullDate.split('-')\n            fullDate = `${val.value}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n        if (val && val.value === 'Unknown') {\n            fullDate = ''\n            return field.computeValue('Unknown', false)\n        }\n    }\n\n    // MONTH CONFIG\n    month.updateHelpTextOnValue = (data: any) => `${month.helpText} (${buildHelpTextDate(data?.label, 'month')})`\n\n    month.proxyID = field.id\n\n    month.unload = (v: Option) => monthValue = appendLeadingZero(v.value.toString())\n\n    month.condition = (f: any) =>  datePartCondition(f)\n\n    month.validation = (v: Option) => StandardValidations.required(v)\n\n    month.defaultValue = (f: any) => getDefaultDate(f, field, 'Month')\n\n    // Add Unknown value to trigger default estimated Month\n    if (estimateMonthOrDay) {\n        month.options = () => [...MonthOptions, { label: 'Unknown', value: 'Unknown'}]\n    }\n\n    /**\n     *\n     * This helps to keep compute value up to date when month changes\n     * @param val\n     * @returns\n     */\n    month.computedValue = (val: Option, f: any) => {\n        // Estimate Month and Day when Month Value is Unknown\n        if (`${val.value}`.match(/unknown/i)) {\n            fullDate = `${f[yearID].value}-07-15`\n            return field.computeValue(fullDate, true)\n        }\n        // Default date behaviour\n        if (fullDate) {\n            const [year, _, day] = fullDate.split('-')\n            const month = appendLeadingZero(`${val.value}`)\n            fullDate = `${year}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n    }\n    // DAY CONFIG\n    day.proxyID = field.id\n\n    day.updateHelpTextOnValue = (data: any) => `${day.helpText} (${buildHelpTextDate(data?.label, 'day')})`\n\n    day.condition = (f: any) => !`${f[monthID].value}`.match(/unknown/i) && datePartCondition(f) \n\n    day.validation =  (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Day is required for date']\n        }\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    day.defaultValue = (f: any) => getDefaultDate(f, field, 'Day')\n\n    day.computedValue = (v: Option) => {\n        const isEstimate = `${v.value}`.match(/unknown/i) ? true : false\n        // Use 15 as default value if day is estimated\n        dayValue = isEstimate ? '15' :  appendLeadingZero(`${v.value}`)\n        fullDate = `${yearValue}-${monthValue}-${dayValue}`\n        return field.computeValue(fullDate, isEstimate)\n    }\n\n    day.unload = (d: any, s: any, f: any, c: any) => {\n        if (field.unload) field.unload(d, s, f, c)\n    }\n\n    day.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    day.config = { \n        // Monthly days shown on the Day component depends on this configuration\n        // to show approprite days based on specific year and month calendar\n        year: (f: any) => f[yearID].value,\n        month: (f: any) => f[monthID].value\n    }\n    // If not configured to do estimates, dont show Unknown Button which appears by default\n    // on MonthlyDay component.\n    if (!estimateMonthOrDay) day.config.keyboardActions = []\n\n    const valueEstimateCondition = (f: any, estimateType: EstimationFieldType) => {\n        const conditions = [\n            f[yearID].value === 'Unknown',\n            field.condition ? field.condition(f) : true,\n            field.estimation.estimationFieldType === estimateType\n        ]\n        return conditions.every(Boolean)\n    }\n\n    // AGE ESTIMATE CONFIG\n    ageEstimate.proxyID = field.id\n\n    ageEstimate.validation = (v: Option, f: any, c: any) => {\n        if (v && v.value > 300) {\n            return ['Age estimate is too high and exceeding hard limit of 300']\n        }\n        if (isNaN(parseInt(v.value.toString()))) {\n            return ['Please enter a valid number']\n        }\n        const ageEstimateRegex = /^(12[0-7]|1[01][0-9]|[1-9]?[0-9])$/\n        if(!v.value.toString().match(ageEstimateRegex) ){\n            return ['Not a valid age estimate'] \n        }\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    ageEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.AGE_ESTIMATE_FIELD\n    ) \n\n    ageEstimate.computedValue = (val: Option) => {\n        const year = dayjs(Service.getSessionDate())\n            .subtract(val.value as number, 'years')\n            .year()\n        fullDate = `${year}-07-15`\n        return field.computeValue(fullDate, true)\n    }\n\n    ageEstimate.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    // DURATION ESTIMATE\n    durationEstimate.proxyID = field.id\n\n    durationEstimate.validation = (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Please select an estimate']\n        }\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    durationEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.MONTH_ESTIMATE_FIELD\n    ) \n\n    durationEstimate.computedValue = (val: Option) => {\n        fullDate = dayjs(Service.getSessionDate())\n            .subtract(val.value as number, 'day')\n            .format(STANDARD_DATE_FORMAT)\n        return field.computeValue(fullDate, true)\n    }\n\n    durationEstimate.beforeNext = (_: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    return [\n        year,\n        month,\n        day,\n        ageEstimate,\n        durationEstimate\n    ]\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    skipSummary: true,\n    onFinishAction: _ctx.onFinish\n  }, null, 8, [\"fields\", \"onFinishAction\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\";\nimport { ObservationService } from \"@/services/observation_service\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    consultation: {} as any\n  }),\n  watch: {\n    ready: {\n      handler(ready: boolean) {\n        if (ready)  {\n          this.consultation = new ConsultationService(this.patientID, this.providerID)\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      await this.consultation.createEncounter();\n      const obs = await this.resolveObs(computedData)\n      await this.consultation.saveObservationList(obs)\n      this.$router.back()\n    },\n    getFields(): Field[] {\n      return [\n        {\n          id: \"has_hypertension\",\n          helpText: \"Does the patient have hypertension\",\n          type: FieldType.TT_SELECT,\n          options: () => this.yesNoOptions(),\n          validation: (val: any) => Validation.required(val),\n          computedValue: (v: Option) => ObservationService.buildValueCoded(\"Patient has hypertension\", `${v.value}`),\n        },\n        ...generateDateFields(\n          {\n            condition: (f: any) => f.has_hypertension.value === 'Yes',\n            id: \"hypertension_diagnosis\",\n            helpText: \"Date the patient was diagnosed with hypertension\",\n            required: true,\n            estimation: {\n              allowUnknown: false\n            },\n            computeValue: (date: string) =>  ObservationService.buildValueDate(\"Hypertension diagnosis date\", date)\n          },\n          ConsultationService.getSessionDate()\n        )\n      ]\n    }\n  }\n})\n","import { render } from \"./hypertension_diagnosis.vue?vue&type=template&id=2396c654&ts=true\"\nimport script from \"./hypertension_diagnosis.vue?vue&type=script&lang=ts\"\nexport * from \"./hypertension_diagnosis.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}