{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/ART/views/encounters/Reception.vue"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","activeField","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","ReceptionService","AppEncounterService","constructor","patientID","providerID","super","this","sitePrefix","getSitePrefix","GLOBAL_PROP","createArvNumber","identifier","ProgramService","postJson","buildArvNumber","arv","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","reception","hasARVNumber","suggestedNumber","patientType","watch","ready","handler","getFields","immediate","methods","formData","computedData","encounter","createEncounter","toastWarning","registrationObs","resolveObs","obs","saveObservationList","capture_arv","value","arv_number","Store","invalidate","toastSuccess","guardianPresent","find","who_is_present","label","isEmpty","patient","getGuardian","$router","push","nextTask","id","helpText","type","FieldType","TT_MULTIPLE_YES_NO","validation","val","Validation","required","neitherOr","anyEmpty","computedValue","d","tag","map","other","buildValueCoded","concept","onValueUpdate","async","options","active","o","form","property","values","yesNoOptions","TT_SELECT","requireNext","init","ARVNumber","getPatientIdentifier","PatientTypeService","loadPatientType","condition","getType","TT_TEXT","loadSitePrefix","j","getNextSuggestedARVNumber","replace","f","defaultValue","config","prependValue","artApp","HisApp","getActiveApp","programPatientIdentifiers","arvType","prefix","__exports__"],"mappings":"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","file":"js/chunk-2d0d6f04.0203b7e6.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"activeField\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\n\nexport class ReceptionService extends AppEncounterService {\n    sitePrefix: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 51, providerID) //TODO: Use encounter type reference name'\n        this.sitePrefix = ''\n    }\n\n    getSitePrefix() {\n        return this.sitePrefix\n    }\n\n    async loadSitePrefix() {\n        this.sitePrefix = await GLOBAL_PROP.sitePrefix();\n    }\n\n    createArvNumber(identifier: string) {\n        return ProgramService.postJson(\"/patient_identifiers/\", {\n            'patient_id': this.patientID,  \n            'identifier_type': 4,\n            identifier,\n        })\n    }\n\n    buildArvNumber(arv: number) {\n        return `${this.sitePrefix}-ARV-${arv}`    \n    }\n}\n","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { ReceptionService } from \"@/apps/ART/services/reception_service\"\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { toastWarning, toastSuccess } from \"@/utils/Alerts\"\nimport EncounterMixinVue from '../../../../views/EncounterMixin.vue'\nimport HisApp from \"@/apps/app_lib\"\nimport { find, isEmpty } from \"lodash\";\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    reception: {} as any,\n    activeField: \"\",\n    hasARVNumber: true,\n    suggestedNumber: \"\" as any,\n    patientType: {} as any,\n  }),\n  watch: {\n    ready: {\n      handler(ready: any) {\n        if (!ready) return\n        this.reception = new ReceptionService(this.patientID, this.providerID)\n        this.fields = this.getFields();\n      },\n      immediate: true\n    },\n  },\n  methods: {\n    async onFinish(formData: any, computedData: any) {\n      const encounter = await this.reception.createEncounter()\n\n      if (!encounter) return toastWarning('Unable to create encounter')\n\n      const registrationObs = await this.resolveObs(computedData, 'obs')\n\n      const obs = await this.reception.saveObservationList(registrationObs)\n\n      if (!obs) return toastWarning('Unable to create Obs')\n\n      if (formData.capture_arv && formData.capture_arv.value === 'Yes') {\n        const arv = await this.reception.createArvNumber(computedData.arv_number)\n        if (!arv) return toastWarning('Unable to save Arv number')\n        Store.invalidate('ACTIVE_PATIENT')\n      }\n      toastSuccess('Encounter created')\n      const guardianPresent = find(formData.who_is_present, { value: 'Yes', label: 'Guardian present?'})\n      if (guardianPresent) {\n        if (isEmpty((await this.patient.getGuardian()))) {\n          return this.$router.push(`/guardian/registration/${this.patientID}`)\n        } \n      }\n      this.nextTask()\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"who_is_present\",\n          helpText: \"HIV reception\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          validation: (val: any) => Validation.required(val) || Validation.neitherOr(val) || Validation.anyEmpty(val),\n          computedValue: (d: Array<Option>) => {\n            return {\n              tag: 'obs',\n              obs: d.map(({ other, value }: Option) => this.reception.buildValueCoded(other.concept, value))\n            }\n          },\n          onValueUpdate: async (options: Option[], active: Option) => {\n            return options.map(o => {\n              if (active.label != o.label && active.value === 'No') {\n                o.value = \"Yes\"\n              }\n              return o\n            })\n          },\n          options: (form: any) => {\n            if (form.who_is_present) return form.who_is_present as Option[]\n            return [\n              {\n                label: \"Patient present?\",\n                value: \"\",\n                other: {\n                  concept: \"Patient Present\",\n                  property: \"patient_present\",\n                  values: this.yesNoOptions(),\n                },\n              },\n              {\n                label: \"Guardian present?\",\n                value: \"\",\n                other: {\n                  concept: \"Guardian Present\",\n                  property: \"guardian_present\",\n                  values: this.yesNoOptions(),\n                },\n              }\n            ]\n          }\n        },\n        {\n          id: \"capture_arv\",\n          helpText: \"Capture ARV Number?\",\n          type: FieldType.TT_SELECT,\n          requireNext: true,\n          init: async() => {\n            const ARVNumber = this.patient.getPatientIdentifier(4);\n            if (ARVNumber === \"\") this.hasARVNumber = false;\n            this.patientType = new PatientTypeService(this.patientID, this.providerID);\n            await this.patientType.loadPatientType()\n            return true\n          },\n          condition: () => !this.hasARVNumber && this.patientType.getType() === \"New patient\",\n          validation: (val: any) => Validation.required(val),\n          options: () => this.yesNoOptions(),\n        },\n        {\n          id: \"arv_number\",\n          helpText: \"ART number\",\n          type: FieldType.TT_TEXT,\n          init: async() => {\n            await this.reception.loadSitePrefix()\n            if (!this.hasARVNumber) {\n              const j = await ProgramService.getNextSuggestedARVNumber();\n              this.suggestedNumber = j.arv_number.replace(/^\\D+|\\s/g, \"\");\n            }\n            return true\n          },\n          computedValue: ({ value }: Option) => {\n            return value\n          },\n          validation: (val: any) => Validation.required(val),\n          condition: (f: any) => !this.hasARVNumber && f.capture_arv.value === \"Yes\",\n          defaultValue: () => this.suggestedNumber,\n          config: {\n            prependValue: () => {\n              const artApp = HisApp.getActiveApp()\n              if (artApp && artApp.programPatientIdentifiers) {\n                const arvType = artApp.programPatientIdentifiers['ARV Number']\n                return arvType.prefix()\n              }\n              return ''\n            }\n          }\n        }\n      ]\n    }\n  }\n});\n","import { render } from \"./Reception.vue?vue&type=template&id=73d30112&ts=true\"\nimport script from \"./Reception.vue?vue&type=script&lang=ts\"\nexport * from \"./Reception.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}