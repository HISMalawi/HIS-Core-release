(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-21649554"],{"12c7":function(i,e,t){"use strict";t.r(e);var n=t("7a23");function a(i,e,t,a,s,r){const o=Object(n["resolveComponent"])("his-standard-form");return Object(n["openBlock"])(),Object(n["createBlock"])(o,{skipSummary:!0,activeField:i.fieldComponent,onOnIndex:e[0]||(e[0]=e=>i.fieldComponent=""),fields:i.fields},null,8,["activeField","fields"])}var s=t("2ef0"),r=t("d95e"),o=t("d867"),l=t("23e6"),c=t("ade3"),d=t("1c74"),m=t("b89f"),h=t("d1ca");class u extends d["e"]{constructor(){super(),Object(c["a"])(this,"patientID",void 0),Object(c["a"])(this,"activePrefix",void 0),Object(c["a"])(this,"dormantPrefix",void 0),this.patientID=0,this.activePrefix="",this.dormantPrefix=""}getActivePrx(){return this.activePrefix}getDormantPrx(){return this.dormantPrefix}getPatientID(){return this.patientID}setPatientID(i){this.patientID=i}formatNumber(i){const e=i.search(this.activePrefix)>=0?this.activePrefix:i.search(this.dormantPrefix)>=0?this.dormantPrefix:"";return e?i.substring(e.length,i.length):i}async loadFilingPrefix(){const i=await h["b"].filingNumberPrefix();if(i){const[e,t]=i.split(",");this.activePrefix=e,this.dormantPrefix=t}}isActiveFilingNum(i){return!!i.match(new RegExp(this.activePrefix,"i"))}isDormantFilingNum(i){return!!i.match(new RegExp(this.dormantPrefix,"i"))}async assignFilingNumber(){return d["e"].postJson(`patients/${this.patientID}/filing_number`,{})}async getFilingNumber(i){const e=`${this.activePrefix}${i}`,t=await d["e"].getJson("search/patients/by_identifier",{type_id:17,identifier:e});return t?t.map(i=>{const t=new l["a"](i);return{identifier:e,patient_id:t.getID(),given_name:t.getGivenName(),family_name:t.getFamilyName(),state:"N/A",appointment_date:""}}):[]}archiveFilingNumber(){return d["e"].getJson("archive_active_filing_number",{patient_id:this.patientID})}archivePatient(i,e){return d["e"].postJson("swap_active_number",{primary_patient_id:this.patientID,secondary_patient_id:i,identifier:e})}getArchivingCandidates(i=0,e=10){return d["e"].getJson("archiving_candidates",{page:i,page_size:e})}getPastFilingNumbers(){return d["e"].getJson(`patients/${this.patientID}/past_filing_numbers`)}printFilingNumber(){const i=new m["a"];return i.printLbl(`patients/${this.patientID}/labels/filing_number`)}}var g=t("7920"),p=t("2706"),f=t("b5e4"),b=t("9283"),v=t("10be"),F=t("0fa1"),N=t("8e8b"),D=Object(n["defineComponent"])({components:{HisStandardForm:g["a"]},data:()=>({service:{},patient:{},fieldComponent:"",fields:[],nextWorkflowRouteName:"",filingNumberAssignment:{}}),watch:{$route:{async handler({query:i,params:e}){if(e&&e.patient_id&&(this.service=new u,this.service.setPatientID(e.patient_id),this.patient=await this.getPatient(e.patient_id),await this.service.loadFilingPrefix()),i){if(this.fields=[this.getFilingNumberField(),this.getCandidateSelectionField(),this.getFilingNumberHistoryField()],"true"===i.archive)return void await this.archiveFilingNumber();"true"===i.assign&&await this.onAssignFilingNumber(),"true"===i.trail&&(this.fieldComponent="view_filing_history"),i.next_workflow_task&&(this.nextWorkflowRouteName=i.next_workflow_task)}},immediate:!0,deep:!0}},methods:{toFID(i){return this.service.formatNumber(i)},async onAssignFilingNumber(){const i=await this.newFilingNumber();i?(this.filingNumberAssignment=i,this.fieldComponent="filing_number_management",N["a"].invalidate("ACTIVE_PATIENT")):(this.fieldComponent="select_candidate_to_swap",Object(f["e"])("Out of filing numbers, Please select eligible candidate"))},async newFilingNumber(){const i={primary:{label:"Dormant → Active",value:this.patient.name,other:{activeNumber:this.patient.filingID?this.toFID(this.patient.filingID):"N/A",dormantNumber:"N/A"}},archived:{label:"Active → Dormant",value:"N/A",other:{activeNumber:"N/A",dormantNumber:"N/A"}}};if(this.service.isActiveFilingNum(this.patient.filingID))return i;await this.presentLoading();const e=await this.service.assignFilingNumber();if(o["Y"].dismiss(),!Object(s["isEmpty"])(e)){if(i.primary.other={activeNumber:this.toFID(e.new_identifier.identifier),dormantNumber:this.service.isDormantFilingNum(this.patient.filingID)?this.toFID(this.patient.filingID):"N/A"},!Object(s["isEmpty"])(e.archived_identifier)){const t=await this.getPatient(e.archived_identifier.patient_id);i.archived={label:"Active → Dormant",value:t.name,other:{activeNumber:this.toFID(e.archived_identifier.identifier),dormantNumber:this.toFID(e.new_identifier.identifier)}}}return i}},async swapExistingFilingNumbers(i){const e=await this.service.archivePatient(i.patient_id,i.identifier);if(e)return{primary:{label:"Dormant → Active",value:this.patient.name,other:{activeNumber:this.toFID(e.active_number),dormantNumber:this.toFID(this.patient.filingID)||"N/A"}},archived:{label:"Active → Dormant",value:`${i.given_name} ${i.family_name}`,other:{patientID:i.patient_id,activeNumber:this.toFID(e.dormant_number),dormantNumber:this.toFID(e.active_number)}}}},async presentLoading(i="Please wait..."){const e=await o["Y"].create({message:i,backdropDismiss:!1});await e.present()},async getPatient(i){const e=await l["a"].findByID(i);if(e){const i=new l["a"](e);return{id:i.getID(),filingID:i.getFilingNumber(),name:`${i.getGivenName()} ${i.getFamilyName()}`}}return{}},async archiveFilingNumber(){await this.presentLoading("Archiving filing number");try{await this.service.archiveFilingNumber(),await this.service.printFilingNumber(),N["a"].invalidate("ACTIVE_PATIENT")}catch(i){Object(f["c"])(""+i)}await o["Y"].dismiss(),this.$router.back()},async filingNumberSearchKeypad(){const i=await o["ab"].create({component:v["a"],backdropDismiss:!1,cssClass:"keypad-modal",componentProps:{title:"Find Active number",strictNumbers:!1,onKeyPress:()=>{}}});await i.present();const{data:e}=await i.onDidDismiss();return e},async getArchivingCandidates(i=0){const e=await this.service.getArchivingCandidates(i);return this.formatCandidateOptions(e)},formatCandidateOptions(i){return i.map(i=>({label:`${i.given_name} ${i.family_name} (${i.state})`,value:i.identifier,other:{data:i,list:[{label:"Filing #",value:this.toFID(i.identifier),style:{color:"green",fontWeight:"bold"}},{label:"Given name",value:i.given_name},{label:"Family name",value:i.family_name},{label:"Outcome",value:i.state.match(/trans/i)?"TO":i.state.match(/stop/i)?"Tx stopped":i.state},{label:"LAD",value:b["b"].toStandardHisDisplayFormat(i.appointment_date)}]}}))},getFilingNumberHistoryField(){return{id:"view_filing_history",type:r["b"].TT_TABLE_VIEWER,helpText:"Filing Number Trail",condition:()=>!1,options:async()=>{const i=["Status","Filing #","Date Created","Date voided"],e=await this.service.getPastFilingNumbers(),t=e.map(i=>{const e=0===i.voided;return[e?"Active":"Voided",this.toFID(i.identifier),b["b"].toStandardHisDisplayFormat(i.date_created),e?"N/A":b["b"].toStandardHisDisplayFormat(i.date_voided)]});return[{label:"Filing Number Trail",value:"Trail",other:{columns:i,rows:t}}]},config:{toolbarInfo:[{label:"Current filing #",value:this.toFID(this.patient.filingID)},{label:"Status",value:this.service.isActiveFilingNum(this.patient.filingID)?"Active":this.service.isDormantFilingNum(this.patient.filingID)?"Dormant":"N/A"}],hiddenFooterBtns:["Clear","Next","Back","Finish"],footerBtns:[{name:"Get filing #",slot:"end",state:{visible:{default:()=>this.service.isDormantFilingNum(this.patient.filingID)}},onClick:async()=>await this.onAssignFilingNumber()}]}}},getCandidateSelectionField(){let i={},e=0,t="",n=[];return{id:"select_candidate_to_swap",type:r["b"].TT_CARD_SELECTOR,helpText:"Filing Number (Archive)",condition:()=>!1,validation:i=>p["a"].required(i),onload:e=>i=e,onValue:async i=>{if(i){const e=await Object(f["a"])("Do you want to archive "+i.value);if(e){const e=await this.swapExistingFilingNumbers(i.other.data);if(e)return this.filingNumberAssignment=e,this.fieldComponent="filing_number_management",!0}}return!1},options:()=>this.getArchivingCandidates(),config:{hiddenFooterBtns:["Clear","Back","Finish","Next"],footerBtns:[{name:"Reset",slot:"end",color:"warning",state:{visible:{default:()=>!!t}},onClick:()=>{t="",i.listData=n,n=[]}},{name:"Specify",slot:"end",color:"success",onClick:async()=>{if(t=await this.filingNumberSearchKeypad(),t){const e=await this.service.getFilingNumber(t);n=[...i.listData],i.listData=this.formatCandidateOptions(e)}}},{name:"Previous batch",slot:"end",state:{visible:{default:()=>!t},disabled:{default:()=>e<=0}},onClick:async()=>{e-=1,i.listData=await this.getArchivingCandidates(e)}},{name:"Next batch",slot:"end",state:{visible:{default:()=>!t},disabled:{default:()=>i.listData&&i.listData.length<=1}},onClick:async()=>{e+=1,i.listData=await this.getArchivingCandidates(e)}}]}}},getFilingNumberField(){return{id:"filing_number_management",type:r["b"].TT_FILING_NUMBER_VIEW,helpText:"Filing Number Management",onload:async()=>await this.service.printFilingNumber(),condition:()=>!1,options:()=>[this.filingNumberAssignment.primary,this.filingNumberAssignment.archived],config:{hiddenFooterBtns:["Cancel","Clear","Next"],footerBtns:[{name:"Print #",slot:"start",onClick:async()=>this.service.printFilingNumber()},{name:"Print Dormant#",slot:"start",state:{visible:{default:()=>{var i;return!(null===(i=this.filingNumberAssignment)||void 0===i||null===(i=i.archived)||void 0===i||null===(i=i.other)||void 0===i||!i.patientID)}}},onClick:async()=>{const i=new u;i.setPatientID(this.filingNumberAssignment.archived.other.patientID),await i.printFilingNumber()}},{name:"Continue",color:"success",slot:"end",onClick:()=>Object(F["b"])(this.patient.id,this.$router,this.$route)}]}}}}}),_=t("6b0d"),y=t.n(_);const w=y()(D,[["render",a]]);e["default"]=w},7920:function(i,e,t){"use strict";var n=t("7a23");function a(i,e,t,a,s,r){return Object(n["openBlock"])(),Object(n["createBlock"])(Object(n["resolveDynamicComponent"])(i.formType),{fields:i.fields,skipSummary:i.skipSummary,activeField:i.activeField,cancelDestinationPath:i.cancelDestinationPath,onOnFinish:i.onFinish,onFinish:i.onFinishAction,onOnIndex:i.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var s=t("9441"),r=Object(n["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:s["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(i,e){this.$emit("onFinish",i,e)},onIndex(i){this.$emit("onIndex",i)}}}),o=t("6b0d"),l=t.n(o);const c=l()(r,[["render",a]]);e["a"]=c}}]);
//# sourceMappingURL=chunk-21649554.17a56ce8.js.map