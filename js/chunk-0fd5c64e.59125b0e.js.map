{"version":3,"sources":["webpack:///./src/apps/OPD/services/patient_complaints_service.ts","webpack:///./src/components/DataViews/LabOrderModal.vue?fbb9","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?37b1","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?9af6","webpack:///./src/components/DataViews/LabOrderModal.vue?6b70","webpack:///./src/apps/ART/services/lab_order_service.ts","webpack:///./src/components/DataViews/LabOrderModal.vue","webpack:///./src/components/DataViews/LabOrderModal.vue?ba1e","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?f38f","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?28e7","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?b251","webpack:///./src/apps/OPD/views/encounters/Complaints.vue","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?67d0"],"names":["PatientComplaintsService","AppEncounterService","constructor","patientID","providerID","super","complaintType","filter","ConceptService","getConceptSet","getObs","getConceptID","this","date","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","async","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","facts","isEnrolledInProgam","formLabel","ready","watch","handler","route","params","patient_id","toUpperCase","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","programID","ProgramService","getProgramID","e","console","error","toastDanger","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","loadingController","create","backdropDismiss","message","present","nextTask","getTop","v","dismiss","yesNoOptions","toYesNoOption","values","mapOptions","options","option","toConditionalOptions","final","yesNoUnknownOptions","resolveObs","obs","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","style","background","height","_hoisted_5","_hoisted_6","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_checkbox","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_radio","_component_ion_radio_group","_component_ion_button","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_footer","_createElementBlock","_Fragment","_createVNode","_withCtx","_createTextVNode","_","size","overflowY","_renderList","testTypes","key","disabled","activeIndex","isOrderComplete","detail","_toDisplayString","modelValue","isChecked","$event","onIonChange","onSelectTest","selectedOrders","extendedLabsEnabled","_createCommentVNode","specimens","onClick","addSpecimen","reasons","finalOrders","specimen","reason","removeOrder","currentIndex","postActivities","closeModal","LabOrderService","activities","testFilters","appActivities","getActivities","ART_GLOBAL_PROP","extendedLabEnabled","testName","event","$nextTick","checked","OrderService","getSpecimens","tests","getTestTypes","t","concept_id","orders","encounter","createEncounter","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","toastWarning","invalidate","canPrintOrders","alertConfirmation","confirmBtnLabel","cancelBtnLabel","printOrders","modalController","PrintoutService","forEach","url","element","order_id","printLbl","mounted","content","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonLabel","IonList","IonItem","IonCheckbox","IonRadioGroup","IonRow","_component_his_standard_form","_component_ion_page","onSubmit","_component_his_radiology_picker","onOnValue","onValue","emitedSelectedOptions","IonFooter","HisRadiologyPicker","mixins","EncounterMixinVue","radiologyService","isPacsEnabled","isReady","PatientRadiologyService","OPD_GLOBAL_PROP","isPACsEnabled","selected","buildValueCoded","parent","child","buildValueCodedFromConceptId","getSelected","obsObj","savedObsData","saveObservationList","submitToPacs","log","IonPage","complaintsService","todaysDate","ObservationService","presentingComplaints","radiologyBtnName","hasTriageComplaints","getTriagePresentingComplaints","getFields","complaints","component","LabOrderModal","cssClass","onDidDismiss","radiology","fetchLatestTriageEncounter","encounters","EncounterService","getEncounters","todayPresentingComplaints","el","toStandardHisFormat","encounter_datetime","observations","buildResults","columns","group","rows","item","obs_group_id","value_text","id","helpText","FieldType","TT_TABLE_VIEWER","config","hiddenFooterBtns","TT_COMPLAINTS_PICKER","validation","Validation","computedValue","showRadiologyOdersBtn","disableBackBtn","footerBtns","visible","launchOrderSelection","visibleOnStateChange","launchRadiologyOrderSelection","TT_SUMMARY","buildSummaryResults","OPDComplaint","triageComplaint"],"mappings":"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","file":"js/chunk-0fd5c64e.59125b0e.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\n\nexport class PatientComplaintsService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 122, providerID) \n  }\n\n  static async getComplaintsList(complaintType: string, filter = '') {\n    return ConceptService.getConceptSet(complaintType, filter) \n  }\n  async fetchLatestTriageEncounter() { \n   return await PatientComplaintsService.getObs({\n        'concept_id': ConceptService.getConceptID(\"History of COVID-19 contact\") ,\n        'start_date': this.date,\n        'end_date': this.date,\n        'person_id': this.patientID,\n    })\n  }\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LabOrderModal.vue?vue&type=style&index=0&id=9adaf5e2&scoped=true&lang=css\"","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\nimport { loadingController } from '@ionic/core'\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            isEnrolledInProgam: false as boolean,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        formLabel: '' as string,\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.formLabel = `${route.name}`.toUpperCase()\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.isEnrolledInProgam = program.programID === ProgramService.getProgramID()\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: Array<string | Option>) {\n            return items.map(i => typeof i === 'string' || typeof i === 'number'  \n                ?  { label: i, value: i } : i \n            )\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        async nextTask() {\n            (await loadingController.create({\n                backdropDismiss: false,\n                message: 'Checking Next task..'\n            })).present()\n            try {\n                await nextTask(this.patientID, this.$router, this.$route)\n            } catch (e) {\n                console.error(e)\n            }\n            loadingController.getTop().then(v => v && loadingController.dismiss())\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });        \n        },\n        toConditionalOptions(options: Array<Array<string | boolean | undefined>>) {\n            const final: Option[] = []\n            for(const option of options) {\n                if (typeof option[1] === 'boolean') {\n                    if (option[1]) final.push(this.toOption(option[0] as string))\n                    continue\n                }\n                final.push(this.toOption(option[0] as string))\n            }\n            return final\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Complaints.vue?vue&type=style&index=0&id=14155b15&lang=css\"","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9adaf5e2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"ion-margin-bottom\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Select specimen \", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Main test(s) reason \", -1))\nconst _hoisted_4 = { style: {background: 'lightyellow', height: '34vh'} }\nconst _hoisted_5 = { class: \"his-sm-text\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Test\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Specimen\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Reason\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\")\n  ])\n], -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")!\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Lab orders\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"6\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'75vh'} }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testTypes, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            class: \"his-sm-text\",\n                            key: data,\n                            disabled: _ctx.activeIndex !== null && _ctx.activeIndex !== index && !_ctx.isOrderComplete,\n                            detail: \"\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, { \"text-wrap\": \"\" }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(data.name), 1)\n                                ]),\n                                _: 2\n                              }, 1024),\n                              _createVNode(_component_ion_checkbox, {\n                                modelValue: data.isChecked,\n                                \"onUpdate:modelValue\": ($event: any) => ((data.isChecked) = $event),\n                                slot: \"start\",\n                                onIonChange: (e) => _ctx.onSelectTest(data.name, index, e)\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\"])\n                            ]),\n                            _: 2\n                          }, 1032, [\"disabled\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.activeIndex != null && _ctx.selectedOrders.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'79vh'}\n                    }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", _hoisted_1, [\n                          (!_ctx.extendedLabsEnabled)\n                            ? (_openBlock(), _createBlock(_component_ion_list, { key: 0 }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_radio_group, {\n                                    modelValue: _ctx.testTypes[_ctx.activeIndex]['specimen'],\n                                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['specimen']) = $event))\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _hoisted_2,\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.specimens, (data) => {\n                                        return (_openBlock(), _createBlock(_component_ion_item, { key: data }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_component_ion_label, null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(data.name), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024),\n                                            _createVNode(_component_ion_radio, {\n                                              slot: \"start\",\n                                              value: data.name,\n                                              onClick: ($event: any) => (_ctx.addSpecimen(data))\n                                            }, null, 8, [\"value\", \"onClick\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      }), 128))\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"modelValue\"])\n                                ]),\n                                _: 1\n                              }))\n                            : _createCommentVNode(\"\", true),\n                          _createVNode(_component_ion_radio_group, {\n                            modelValue: _ctx.testTypes[_ctx.activeIndex]['reason'],\n                            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['reason']) = $event))\n                          }, {\n                            default: _withCtx(() => [\n                              _hoisted_3,\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.reasons, (data) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  class: \"his-sm-text\",\n                                  key: data\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(data), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_radio, {\n                                      slot: \"start\",\n                                      value: data\n                                    }, null, 8, [\"value\"])\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              }), 128))\n                            ]),\n                            _: 1\n                          }, 8, [\"modelValue\"])\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_4, [\n                          _createElementVNode(\"table\", _hoisted_5, [\n                            _hoisted_6,\n                            _createElementVNode(\"tbody\", null, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.finalOrders, (data, index) => {\n                                return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.name), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.specimen || 'N/A'), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.reason), 1),\n                                  _createElementVNode(\"td\", null, [\n                                    _createVNode(_component_ion_button, {\n                                      onClick: ($event: any) => (_ctx.removeOrder(data.currentIndex)),\n                                      slot: \"end\",\n                                      color: \"danger\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"X\")\n                                      ]),\n                                      _: 2\n                                    }, 1032, [\"onClick\"])\n                                  ])\n                                ]))\n                              }), 128))\n                            ])\n                          ])\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postActivities,\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.finalOrders.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.closeModal([]))),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class LabOrderService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 57, providerID);\n  }\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonCheckbox,\n  IonRadioGroup,\n  IonRow,\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { alertConfirmation, toastWarning } from \"@/utils/Alerts\"\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport ART_GLOBAL_PROP from \"@/apps/ART/art_global_props\"\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    activities: {\n      type: Object as PropType<ActivityInterface[]>,\n      required: true\n    },\n    testFilters: {\n      type: Array    \n    },\n    title: {\n      type: String, \n      default: \"\"\n    },\n  },\n  watch: {\n    activities: {\n      handler(activities: Array<ActivityInterface>){\n        if (activities) {\n          this.appActivities = [...activities]\n          this.getActivities();\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    this.extendedLabsEnabled = await ART_GLOBAL_PROP.extendedLabEnabled()\n  },\n  methods: {\n    async onSelectTest(testName: string, index: number, event: any) {\n      this.$nextTick(async () => {\n        this.testTypes[index]['isChecked'] = event.target.checked;\n        if(this.testTypes[index]['isChecked']){\n          this.specimens = await OrderService.getSpecimens(testName);\n          this.testTypes[index]['currentIndex'] = index;\n          this.activeIndex = index;\n        } else {\n          this.removeOrder(index)\n        }\n      })\n    },\n    async getActivities() {\n     const tests = await OrderService.getTestTypes();\n     this.testTypes = tests.map((t: any, i: any) => {\n        t.index = t.name === 'HIV viral load' ? (t.index = 0) : (t.index = i + 1)\n        return t\n     })\n     .sort((a: any, b: any) => a.index < b.index ? 0 : 1)\n     .filter((t: any) => Array.isArray(this.testFilters) ? this.testFilters.includes(t.name) : true)\n    },\n    removeOrder(index: number) {\n      this.testTypes[index]['isChecked'] = false;\n      this.testTypes[index]['reason'] = null;\n      this.testTypes[index]['specimen'] = null;\n      this.testTypes[index]['specimenConcept'] = null\n      this.activeIndex = null\n      this.specimens = []\n    },\n    addSpecimen(data: any) {\n      this.testTypes[this.activeIndex]['specimenConcept'] = data.concept_id;\n    },\n    async postActivities() {\n      const patientID= `${this.$route.params.patient_id}`;\n      const orders = new LabOrderService(parseInt(patientID), -1); //TODO: get selected provider for this encounter\n      const encounter = await orders.createEncounter();\n\n      if(encounter) {\n        const formattedOrders = await OrderService.buildLabOrders(encounter, this.finalOrders);\n        const d =await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n        \n        if(!d) return toastWarning('Unable to save lab orders')\n\n        Store.invalidate('PATIENT_LAB_ORDERS')\n        const canPrintOrders = await alertConfirmation('Lab orders and encounter created!, print out your last orders?', { \n          confirmBtnLabel: 'Yes',\n          cancelBtnLabel: 'No'\n        })\n        if(canPrintOrders) await this.printOrders(d)\n        else await this.closeModal(d)\n      }\n    },\n    async closeModal(orders: []) {\n      await modalController.dismiss(orders)\n    },\n    async printOrders(orders: any) {\n      const p = new PrintoutService();\n      await orders.forEach(async (element: any) => {\n        const url = `lab/labels/order?order_id=${element.order_id}`\n        await p.printLbl(url);\n      });\n      await modalController.dismiss(orders)\n    },\n  },\n  computed: {\n    isOrderComplete(): boolean {\n      if(this.extendedLabsEnabled){\n        return !!this.testTypes[this.activeIndex]['reason'] \n      }\n      return (this.testTypes[this.activeIndex]['specimenConcept'] || this.testTypes[this.activeIndex]['specimen']) \n        && this.testTypes[this.activeIndex]['reason'] \n    },\n    selectedOrders(): any {\n      return this.testTypes.filter((data: any) => data.isChecked === true);\n    },\n    finalOrders(): any {\n      return this.selectedOrders.filter((data: any) => {\n        return data.reason && (data.specimen && !this.extendedLabsEnabled \n          || this.extendedLabsEnabled)\n      } )\n    }\n  },\n  mounted() {\n    this.getActivities();\n  },\n  data() {\n    return {\n      content: \"Content\",\n      extendedLabsEnabled: false as boolean,\n      appActivities: [] as Array<ActivityInterface>,\n      testTypes: [] as any,\n      specimens: [],\n      reasons: ['Routine', 'Targeted', 'Confirmatory', 'Stat', 'Repeat / Missing'],\n      activeIndex: null as any\n    };\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    IonCheckbox,\n    IonRadioGroup,\n    IonRow,\n  },\n});\n","import { render } from \"./LabOrderModal.vue?vue&type=template&id=9adaf5e2&scoped=true&ts=true\"\nimport script from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./LabOrderModal.vue?vue&type=style&index=0&id=9adaf5e2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9adaf5e2\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_radiology_picker = _resolveComponent(\"his-radiology-picker\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Radiology Examination\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_his_radiology_picker, { onOnValue: _ctx.onValue }, null, 8, [\"onOnValue\"])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.onSubmit())),\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.emitedSelectedOptions.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.closeModal())),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  IonFooter,\n} from \"@ionic/vue\";\nimport { defineComponent } from 'vue'\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\";\nimport HisRadiologyPicker from '@/components/FormElements/HisRadiologyPicker.vue'\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  components: { \n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonFooter,\n    HisRadiologyPicker\n  },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false,\n    emitedSelectedOptions: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onValue(selected: any) {\n      this.emitedSelectedOptions = selected\n    },\n    async getSelected() {\n      return this.emitedSelectedOptions.map(async (option: any) => ({\n        ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n        child: [(await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))]\n      }))\n    },\n    async onSubmit(){\n      if(!isEmpty(this.emitedSelectedOptions)) {\n        this.closeModal()\n        let data = await this.getSelected()\n        data = await Promise.all(data)\n        await this.radiologyService.createEncounter()\n        const obsObj = await this.radiologyService.obsObj(data) \n        const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n        await this.radiologyService.printOrders(savedObsData, this.patient)\n        if(this.isPacsEnabled) {\n          try {\n            await this.radiologyService.submitToPacs(savedObsData, this.patient)\n          } catch (error) {\n            console.log(error)\n          }\n        }\n      }\n    },\n    async closeModal() {\n      await modalController.dismiss([])\n    }\n  },\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=3afcbe1c&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientComplaintsService } from \"@/apps/OPD/services/patient_complaints_service\";\nimport LabOrderModal from \"@/components/DataViews/LabOrderModal.vue\"\nimport radiology from \"@/apps/OPD/views/encounters/modals/radiology.vue\"\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { modalController, IonPage } from '@ionic/vue';\nimport { ObservationService } from \"@/services/observation_service\"\nimport { EncounterService } from '@/services/encounter_service'\nimport HisDate from \"@/utils/Date\"\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\n\nexport default defineComponent({\n  components: { HisStandardForm, IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    complaintsService: {} as any,\n    todaysDate: ObservationService.getSessionDate(),\n    presentingComplaints: \"\" as any,\n    isPacsEnabled: false,\n    radiologyBtnName: 'Radiology Order',\n    hasTriageComplaints: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.complaintsService = new PatientComplaintsService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n          this.hasTriageComplaints = await this.getTriagePresentingComplaints()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){     \n      const data = await Promise.all(computedData.complaints)   \n      await this.complaintsService.createEncounter()    \n      await this.complaintsService.saveObservationList(data)\n      this.nextTask()        \n    },\n    async launchOrderSelection() {\n      const modal = await modalController.create({\n        component: LabOrderModal,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async launchRadiologyOrderSelection() {\n      const modal = await modalController.create({\n        component: radiology,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async getTriagePresentingComplaints(){\n      const data =  await this.complaintsService.fetchLatestTriageEncounter();\n      if(!(data.length > 0)){ return false;}\n\n      const encounters = await EncounterService.getEncounters(this.patientID, this.todaysDate)\n      const todayPresentingComplaints = encounters.filter(function (el: any){\n        return el.type.name == \"TRIAGE PRESENTING COMPLAINTS\" &&\n        HisDate.toStandardHisFormat(el.encounter_datetime) == ObservationService.getSessionDate() \n      });\n      if(!(todayPresentingComplaints.length > 0)) {return false;}\n\n      this.presentingComplaints =   todayPresentingComplaints[0].observations;\n      return true;\n    },\n    buildResults() {\n      const columns = [ 'Group','Presenting complaints'];\n      let group = \"\";\n      let rows =this.presentingComplaints.map((item: any) =>{\n        if(item.obs_group_id != null)\n          return [group,item.value_text]\n\n        group = item.value_text;\n      });\n      rows = rows.filter((el: any) =>{\n        return el != undefined\n      })\n      this.presentingComplaints = rows;\n      return [\n        {\n          label: '',\n          value: '',\n          other: { columns, rows},\n        },\n      ];\n    },\n\n    getFields(): Array<Field>{\n      return [\n        {\n          id: \"triage_complaints\",\n          helpText: \"Triaging Complaints\",\n          condition: () => this.hasTriageComplaints,\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'complaints',\n          helpText: 'Presenting Complaints',\n          type: FieldType.TT_COMPLAINTS_PICKER,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.complaintsService.buildValueCoded('Presenting complaint', option.other.parent)),\n              child: [(await this.complaintsService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))]\n            }))\n          },\n          config: {\n            hiddenFooterBtns: [ this.showRadiologyOdersBtn(), this.disableBackBtn()],\n            footerBtns: [\n              {\n                name: \"Lab Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              },\n              {\n                name: this.radiologyBtnName,\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchRadiologyOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              }\n            ],\n          }\n        },\n        {\n          id: \"all_presenting_complaints\",\n          helpText: \"Summary\",\n          condition: () => this.presentingComplaints.length > 0,\n          type: FieldType.TT_SUMMARY,\n          options: (d: any, b: any) => this.buildSummaryResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ]\n    },\n    showRadiologyOdersBtn() {\n      if(this.isPacsEnabled) {\n        return ''\n      } else return this.radiologyBtnName\n    },\n    buildSummaryResults(data: any) {\n      const OPDComplaint = data.complaints.map((value: any)=>{\n        return {\n          'label': \"OPD Complaints\",\n          'value': value.label,\n        };\n      })\n      const triageComplaint = this.presentingComplaints.map((value: any)=>{\n        return {\n          'label': 'Triaging Complaints',\n          'value': value[1],\n        };\n      })\n      return OPDComplaint.concat(triageComplaint);\n    },\n    disableBackBtn() {\n      if(this.hasTriageComplaints) {\n        return ''\n      } else return 'Back'\n    }\n  }\n})\n","import { render } from \"./Complaints.vue?vue&type=template&id=14155b15&ts=true\"\nimport script from \"./Complaints.vue?vue&type=script&lang=ts\"\nexport * from \"./Complaints.vue?vue&type=script&lang=ts\"\n\nimport \"./Complaints.vue?vue&type=style&index=0&id=14155b15&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}