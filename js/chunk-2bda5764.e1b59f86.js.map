{"version":3,"sources":["webpack:///./src/apps/OPD/services/patient_radiology_service.ts","webpack:///./src/components/FormElements/HisRadiologyPicker.vue?e101","webpack:///./src/components/FormElements/HisRadiologyPicker.vue","webpack:///./src/components/FormElements/HisRadiologyPicker.vue?0672","webpack:///./src/components/FormElements/HisRadiologyPicker.vue?bc84"],"names":["PatientRadiologyService","patientID","providerID","patientId","path","Service","getJson","data","patient","this","getRadiologyObs","getID","length","getThirdpartyApps","thirdpartyapps","url","app","name","isEmpty","savedObsData","order","accessionNumber","children","accession_number","Promise","all","map","value_text","obs_id","orders","patientData","getFullName","getAge","getBirthdate","getGender","getNationalID","getEncounterID","getDate","provider","getUserName","getUserID","getUserRoles","postJson","getAccesionNumber","lastAccessionNumber","observations","concept_id","ConceptService","getConceptName","child","value_coded","push","printService","PrintoutService","patientNationalId","patientName","urls","fullXrayOrder","HisDate","toStandardHisDisplayFormat","obs_datetime","batchPrintLbls","radiologyType","filter","getConceptSet","AppEncounterService","_withId","_withScopeId","_pushScopeId","_hoisted_1","style","_popScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_text","_resolveComponent","_component_ion_label","_component_ion_chip","_component_ion_col","_component_ion_row","_component_ion_item","_component_ion_list","_component_ion_checkbox","_component_ion_grid","_component_view_port","_openBlock","_createBlock","_createVNode","showFull","showKeyboard","default","size","_Fragment","_renderList","checkedItems","item","index","key","color","onClick","$event","uncheck","class","_createTextVNode","_toDisplayString","label","_","overflowY","height","margin","listData","getSpecificRadiologyOrders","value","detail","ActiveCategory","activeCategoryItems","entry","isChecked","slot","modelValue","onIonChange","e","onselect","disabled","_createCommentVNode","defineComponent","components","IonCheckbox","IonText","IonChip","mixins","SelectMixin","radiologyOrdersList","methods","init","$emit","getRadiologyList","mapListToOptions","getChecked","option","event","$nextTick","opt","target","checked","onValue","ok","onValueUpdate","category","radiologyOrders","list","other","parent","forEach","group","computed","watch","clear","mounted","activated","__exports__"],"mappings":"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","file":"js/chunk-2bda5764.e1b59f86.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\nimport { PrintoutService } from \"@/services/printout_service\";\nimport { Service } from \"@/services/service\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\n\nexport class PatientRadiologyService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 121, providerID) \n  }\n\n  static async getRadiologyList(radiologyType: string, filter = '') {\n    return ConceptService.getConceptSet(radiologyType, filter) \n  }\n\n  async getRadiologyObs(patientId: number) {\n    try {\n      const path = 'radiology/radiology_orders?patient_id='+patientId\n      const data = await Service.getJson(path)\n      return data\n    } catch (error) {\n      return 0\n    }\n  }\n\n  async showPreviousRadiolgy(patient: any): Promise<boolean> {\n    if ( (await this.getRadiologyObs(patient.getID())).length > 0 ) {\n      return true\n    }\n    return false\n  }\n\n  async getPreviousRadiologyExaminations(patient: any): Promise<any>{\n    const thirdpartyapps  =  await Service.getThirdpartyApps()\n    let url = '' \n    for (const app of thirdpartyapps) {\n      if(app.name == 'pacs') {\n        url = app.url\n      }\n    }\n    if (isEmpty(url)) {\n      url = `opd/encounters/radiology/${this.patientID}`\n    }\n    const data =  await this.getRadiologyObs(patient.getID())\n    if(!(data.length > 0)) { \n      return false;\n    } else {\n      return { data: data, url: url}\n    }\n  }\n\n  async submitToPacs(savedObsData: any, patient: any) {\n    let accessionNumber\n    for(const order of savedObsData) {\n      accessionNumber = order.children[0].accession_number\n    }\n    const orders = await Promise.all(savedObsData.map(async (order: any) => ({\n      \"main_value_text\": order.value_text,\n      \"obs_id\": order.obs_id,\n      \"sub_value_text\": order.children[0].value_text\n    })))\n    const patientData = {\n      \"patient_name\": patient.getFullName(),\n      \"patientAge\": patient.getAge(),\n      \"patientDOB\": patient.getBirthdate(),\n      \"patientGender\": patient.getGender(),\n      \"national_id\": patient.getNationalID(),\n      \"person_id\": patient.getID(),\n      \"encounter_id\": this.getEncounterID(),\n      \"date_created\": this.getDate(),\n      \"accession_number\": accessionNumber\n    }\n    const provider = {\n      \"username\": Service.getUserName(),\n      \"userID\": Service.getUserID(),\n      \"userRoles\": Service.getUserRoles(),\n    }\n    return Service.postJson(`radiology/radiology_orders`, {\n      'patient_details': patientData,\n      'physician_details': provider,\n      'radiology_orders': orders\n    }) \n  }\n\n  async getAccesionNumber() {\n    return (await Service.getJson(`sequences/next_accession_number`))['accession_number']\n  }\n\n  async obsObj(data: Array<any>) {\n    const lastAccessionNumber = await this.getAccesionNumber()\n    const observations = [] as Array<any>\n    for (const order of data) {\n      observations.push(\n        {\n          'concept_id': order.concept_id, \n          'value_text':  await ConceptService.getConceptName(order.child.concept_id),\n          child: {\n            'concept_id': order.child.concept_id,\n            'accession_number': lastAccessionNumber,\n            'value_text': await ConceptService.getConceptName(order.child.value_coded)\n          }\n        }\n      )\n    }\n    return observations\n  } \n\n  async printOrders(orders: any, patient: Patientservice) {\n    const printService = new PrintoutService()\n    const patientNationalId = patient.getNationalID()\n    const patientName = patient.getFullName()\n    const urls: string[] = [];\n    for(const order of orders) {\n      const fullXrayOrder = order.value_text +\": \"+ order.children[0].value_text\n      urls.push(`/radiology/barcode`\n        + `?accession_number=${order.children[0].accession_number}`\n        + `&patient_national_id=${patientNationalId}`\n        + `&patient_name=${patientName}`\n        + `&radio_order=${fullXrayOrder}`\n        + `&date_created=${HisDate.toStandardHisDisplayFormat(order.obs_datetime)}`\n      )\n    }\n\n    await printService.batchPrintLbls(urls, true)\n  }\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-b17197ee\")\n\n_pushScopeId(\"data-v-b17197ee\")\nconst _hoisted_1 = { style: {} }\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_text = _resolveComponent(\"ion-text\")\n  const _component_ion_label = _resolveComponent(\"ion-label\")\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_item = _resolveComponent(\"ion-item\")\n  const _component_ion_list = _resolveComponent(\"ion-list\")\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_view_port = _resolveComponent(\"view-port\")\n\n  return (_openBlock(), _createBlock(\"div\", null, [\n    _createVNode(_component_view_port, {\n      showFull: !_ctx.showKeyboard,\n      style: {\"padding\":\"0\"}\n    }, {\n      default: _withId(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withId(() => [\n                _createVNode(_component_ion_col, { size: \"12\" }, {\n                  default: _withId(() => [\n                    (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.checkedItems, (item, index) => {\n                      return (_openBlock(), _createBlock(\"span\", { key: index }, [\n                        _createVNode(_component_ion_chip, {\n                          color: \"danger\",\n                          onClick: $event => (_ctx.uncheck(item))\n                        }, {\n                          default: _withId(() => [\n                            _createVNode(_component_ion_label, null, {\n                              default: _withId(() => [\n                                _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                  default: _withId(() => [\n                                    _createTextVNode(_toDisplayString(item.label), 1 /* TEXT */)\n                                  ]),\n                                  _: 2\n                                }, 1024)\n                              ]),\n                              _: 2\n                            }, 1024)\n                          ]),\n                          _: 2\n                        }, 1032, [\"onClick\"])\n                      ]))\n                    }), 128 /* KEYED_FRAGMENT */))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_row, null, {\n              default: _withId(() => [\n                _createVNode(_component_ion_col, { size: \"4\" }, {\n                  default: _withId(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'80vh', margin: 0} }, {\n                      default: _withId(() => [\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.listData, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            key: index,\n                            onClick: $event => (_ctx.getSpecificRadiologyOrders(data.value)),\n                            detail: true,\n                            color: _ctx.ActiveCategory === data.label ? 'lightblue':''\n                          }, {\n                            default: _withId(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withId(() => [\n                                  _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                    default: _withId(() => [\n                                      _createTextVNode(_toDisplayString(data.label), 1 /* TEXT */)\n                                    ]),\n                                    _: 2\n                                  }, 1024)\n                                ]),\n                                _: 2\n                              }, 1024)\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\", \"color\"]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.ActiveCategory)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'78vh'}\n                    }, {\n                      default: _withId(() => [\n                        _createVNode(\"div\", _hoisted_1, [\n                          _createVNode(_component_ion_list, { class: \"view-port-content\" }, {\n                            default: _withId(() => [\n                              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.activeCategoryItems, (entry, index) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  key: index,\n                                  color: entry.isChecked ? 'lightblue':''\n                                }, {\n                                  default: _withId(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withId(() => [\n                                        _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                          default: _withId(() => [\n                                            _createTextVNode(_toDisplayString(entry.label), 1 /* TEXT */)\n                                          ]),\n                                          _: 2\n                                        }, 1024)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_checkbox, {\n                                      slot: \"end\",\n                                      modelValue: entry.isChecked,\n                                      \"onUpdate:modelValue\": $event => (entry.isChecked = $event),\n                                      onIonChange: (e) => _ctx.onselect(entry, e),\n                                      disabled: entry?.disabled\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\", \"disabled\"])\n                                  ]),\n                                  _: 2\n                                }, 1032, [\"color\"]))\n                              }), 128 /* KEYED_FRAGMENT */))\n                            ]),\n                            _: 1\n                          })\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"showFull\"])\n  ]))\n})","\nimport { Option } from \"../Forms/FieldInterface\";\nimport { defineComponent } from \"vue\";\nimport { IonCheckbox, IonText, IonChip } from \"@ionic/vue\";\nimport SelectMixin from \"@/components/FormElements/SelectMixin.vue\"\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\"\nimport { isEmpty } from \"lodash\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\n\nexport default defineComponent({\n  components: { IonCheckbox, IonText, IonChip },\n  name: \"HisRadiologyPicker\",\n  mixins: [SelectMixin],\n  data: () => ({\n    radiologyOrdersList: {} as Record<string, Option[]>,\n    ActiveCategory: '',\n  }),\n  methods: {\n    async init() {\n      this.$emit('onFieldActivated', this)\n      const data = await PatientRadiologyService.getRadiologyList('Radiology Orders')\n      this.listData = this.mapListToOptions(data)\n      this.$emit('onValue', this.getChecked(this.radiologyOrdersList))\n    },\n    async onselect(option: Option, event: any){\n      this.$nextTick(async ()=> {\n        const opt = {...option}\n        opt.isChecked = event.target.checked\n\n        if (this.onValue && opt.isChecked) {\n          const ok = await this.onValue(opt)\n          if (!ok) {\n            return event.target.checked = false\n          }\n        }\n        if (this.onValueUpdate) {\n          this.radiologyOrdersList = await this.onValueUpdate({...this.radiologyOrdersList}, opt)\n        }\n        this.$emit('onValue', this.getChecked(this.radiologyOrdersList))\n      })\n    },\n    async getSpecificRadiologyOrders(category: string) {\n      if (!(category in this.radiologyOrdersList)) {\n        const radiologyOrders = await PatientRadiologyService.getRadiologyList(category)\n        this.radiologyOrdersList[category] = this.mapListToOptions(radiologyOrders, category)\n      }\n      this.ActiveCategory = category\n    },\n    mapListToOptions(list: ConceptName[], category = ''){\n      if(isEmpty(list)) return []\n      return list.map(item => {\n        const option: Option = {\n          label: item.name,\n          value: item.name,\n          isChecked: false,\n          other: item\n        }\n        if(category) option.other.parent = category\n        return option\n      })\n    },\n    uncheck(option: Option){\n      this.radiologyOrdersList[option.other.parent].forEach(opt => {\n        if(opt.label === option.label) opt.isChecked = false\n      })\n    },\n    getChecked(list: Record<string, Option[]>) {\n      const checkedItems: Array<Option> = [];\n      for (const group in list) {\n        checkedItems.push(\n          ...list[group].filter(option => option.isChecked)\n        )\n      }\n\n      return checkedItems\n    },\n  },\n  computed: {\n    checkedItems(): Option[] {\n      return this.getChecked(this.radiologyOrdersList)\n    },\n    activeCategoryItems(): Option[] {\n      return this.radiologyOrdersList[this.ActiveCategory]\n    }\n  },\n  watch: {\n    clear(){\n      for (const group in this.radiologyOrdersList) {\n        this.radiologyOrdersList[group] = this.radiologyOrdersList[group].map(option => {\n          option.isChecked = false\n          return option\n        })\n      }\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  activated() {\n    this.init()\n  }\n})\n","import { render } from \"./HisRadiologyPicker.vue?vue&type=template&id=b17197ee&scoped=true&ts=true\"\nimport script from \"./HisRadiologyPicker.vue?vue&type=script&lang=ts\"\nexport * from \"./HisRadiologyPicker.vue?vue&type=script&lang=ts\"\n\nimport \"./HisRadiologyPicker.vue?vue&type=style&index=0&id=b17197ee&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b17197ee\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./HisRadiologyPicker.vue?vue&type=style&index=0&id=b17197ee&scoped=true&lang=css\""],"sourceRoot":""}