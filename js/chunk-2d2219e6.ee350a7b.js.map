{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/pepfar/TxCurrMl.vue?0e1f","webpack:///./src/apps/ART/views/reports/pepfar/TxCurrMl.vue","webpack:///./src/apps/ART/views/reports/pepfar/TxCurrMl.vue?ac87"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","period","rows","fields","columns","config","showIndex","reportPrefix","onReportConfiguration","onPeriod","_","defineComponent","mixins","ReportMixin","components","ReportTemplate","IonPage","data","drillData","table","thTxt","indexLabel","cohort","created","this","getDateDurationFields","methods","report","TxReportService","setOccupation","occupation","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","getTxMlReport","setRows","setTotalMaleRow","setMaternalRows","drilldown","patients","context","asyncRows","async","getTxMMDClientLevelData","remapTxClientLevelData","map","d","drugs","drug","tableView","name","quantity","dose","dataView","td","id","tdDate","dob","dispenseDate","join","value","length","tdLink","drilldownAsyncRows","aggregate","gender","indicator","Object","values","reduce","c","indexOf","drill","label","push","indicators","aggregated","maternalStatus","getMaternalStatus","uniq","totals","cur","groupBy","all","i","fP","s","filter","patient","includes","allPregnant","FBf","concat","FP","fnP","AGE_GROUPS","group","fullGender","formatGender","cohortData","drillContext","drillable","e","__exports__"],"mappings":"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","file":"js/chunk-2d2219e6.ee350a7b.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        period: _ctx.period,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        config: {\n                showIndex: true\n            },\n        reportPrefix: \"PEPFAR\",\n        onReportConfiguration: _ctx.onPeriod\n      }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport { TxReportService } from '@/apps/ART/services/reports/tx_report_service'\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { IonPage } from \"@ionic/vue\"\nimport { AGE_GROUPS } from \"@/apps/ART/services/reports/patient_report_service\"\nimport { uniq } from 'lodash'\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate, IonPage },\n    data: () => ({\n        title: 'PEPFAR Curr Ml Report',\n        rows: [] as Array<any>,\n        drillData: {} as any,\n        columns: [\n            [\n                table.thTxt('Age group'),\n                table.thTxt('Gender'),\n                table.thTxt('Died'),\n                table.thTxt('IIT <3 mo'),\n                table.thTxt('IIT 3-5 mo'),\n                table.thTxt('IIT 6+ mo'),\n                table.thTxt('Transferred out'),\n                table.thTxt('Refused (Stopped)')\n            ]\n        ],\n        indexLabel:[\n            'Died',\n            'IIT <3 mo',\n            'IIT 3-5 mo',\n            'IIT 6+ mo',\n            'Tranferred out',\n            'Refused (Stopped)'\n        ],\n        cohort: {} as any\n    }),\n    created() {\n        this.fields = this.getDateDurationFields()\n    },\n    methods: {\n        async onPeriod(_: any, config: any) {\n            this.rows = []\n            this.report = new TxReportService()\n            this.report.setOccupation(config.occupation)\n            this.report.setStartDate(config.start_date)\n            this.report.setEndDate(config.end_date)\n            this.period = this.report.getDateIntervalPeriod()\n            this.cohort = await this.report.getTxMlReport()\n            this.setRows('F')\n            this.setRows('M')\n            this.setTotalMaleRow()\n            this.setMaternalRows()\n        },\n        drilldown(patients: Array<number>, context: string) {\n            const columns = [\n                [\n                    table.thTxt('ARV#'),\n                    table.thTxt('DOB'),\n                    table.thTxt('Dispensed'),\n                    table.thTxt('ARVs')\n                ]\n            ]\n            const asyncRows = async () => {\n                if (context in this.drillData) return this.drillData[context]\n\n                const data = await this.report.getTxMMDClientLevelData(patients)\n\n                if (!data) return []\n\n                const rows = this.report\n                    .remapTxClientLevelData(data)\n                    .map((d: any) => {\n                        const drugs: any = d.drugs.map((drug: any) => {\n                            const tableView = `\n                                <table style='width: 100%;'> \n                                    <td style='width: 65%;'>${drug.name}</td>\n                                    <td style='width: 30%;'>(${drug.quantity}, ${drug.dose} a day)</td>\n                                </table>`\n                            const dataView = `${drug.name} (Quantity: ${drug.quantity} Dose: ${drug.dose})`\n                            return { tableView, dataView }\n                        })\n                        return [\n                            table.td(d.id || 'N/A'),\n                            table.tdDate(d.dob),\n                            table.tdDate(d.dispenseDate),\n                            table.td(drugs.map((d: any) => d.tableView).join('<p/>'), \n                            { \n                                value: drugs.map((d: any) => d.dataView).join('|')\n                            })\n                        ]\n                    })\n                this.drillData[context] = rows\n                return rows\n            }\n            if (patients.length <= 0) {\n                return table.td(0)\n            }\n            return table.tdLink(patients.length, () => this.drilldownAsyncRows(context, columns, asyncRows))\n        },\n        aggregate(gender: 'M' | 'F', indicator: string): Array<any> {\n            return Object.values(this.cohort).reduce((patients: any, c: any) => {\n                return c[gender] ? [...c[gender][this.indexLabel.indexOf(indicator)], ...patients] : patients\n            }, []) as Array<any>\n        },\n        setTotalMaleRow() {\n            const drill = (label: string) => this.drilldown(this.aggregate('M', label), label)\n            this.rows.push([\n                table.td('All'),\n                table.td('Male'),\n                drill('Died'),\n                drill('IIT <3 mo'),\n                drill('IIT 3-5 mo'),\n                drill('IIT 6+ mo'),\n                drill('Tranferred out'),\n                drill('Refused (Stopped)')\n            ])\n        },\n        async setMaternalRows() {\n            const indicators = this.indexLabel.reduce((aggregated: any, indicator: string) => [\n                ...aggregated, { indicator, data: this.aggregate('F', indicator)}\n            ], [])\n    \n            const maternalStatus = await this.report.getMaternalStatus(\n                uniq(indicators.reduce((totals: any, cur: any) => [...totals, ...cur.data], []).map((id: number) => id))\n            )\n\n            const groupBy = (indicator: string) => indicators.reduce(\n                (all: any, i: any) => i.indicator === indicator ? [...all, ...i.data] : all, []\n            )\n\n            const fP = (s: 'FP' | 'FBf', indicator: string) => {\n                return this.drilldown(\n                    groupBy(indicator).filter((patient: any) => maternalStatus[s].includes(patient)), `All ${indicator} Female Pregnant`\n                )\n            }\n\n            const allPregnant = maternalStatus.FBf.concat(maternalStatus.FP)\n\n            const fnP = (indicator: string) => {\n                return this.drilldown(\n                    groupBy(indicator).filter((patient: any) => !allPregnant.includes(patient)), `All ${indicator} Female not pregnant`\n                )\n            }\n\n            this.rows.push([\n                table.td('All'),\n                table.td('FP'),\n                fP('FP', 'Died'),\n                fP('FP', 'IIT <3 mo'),\n                fP('FP', 'IIT 3-5 mo'),\n                fP('FP', 'IIT 6+ mo'),\n                fP('FP', 'Tranferred out'),\n                fP('FP', 'Refused (Stopped)')\n            ])\n            this.rows.push([\n                table.td('All'),\n                table.td('FNP'),\n                fnP('Died'),\n                fnP('IIT <3 mo'),\n                fnP('IIT 3-5 mo'),\n                fnP('IIT 6+ mo'),\n                fnP('Tranferred out'),\n                fnP('Refused (Stopped)')\n            ])\n            this.rows.push([\n                table.td('All'),\n                table.td('FBF'),\n                fP('FBf', 'Died'),\n                fP('FBf', 'IIT <3 mo'),\n                fP('FBf', 'IIT 3-5 mo'),\n                fP('FBf', 'IIT 6+ mo'),\n                fP('FBf', 'Tranferred out'),\n                fP('FBf', 'Refused (Stopped)')\n            ])\n        },\n        setRows(gender: string) {\n            for(const i in AGE_GROUPS) {\n                const group = AGE_GROUPS[i]\n                const fullGender = this.formatGender(gender);\n                try {\n                    const cohortData = this.cohort[group][gender]\n                    const drillContext = `${fullGender}s ${group}`\n                    const drillable = cohortData.map(\n                        (d: Array<number>, i: number) => this.drilldown(d, `${drillContext} ${this.indexLabel[i]}`)\n                    )\n                    this.rows.push([\n                        table.td(group),\n                        table.td(fullGender),\n                        ...drillable\n                    ])\n                }catch(e) {\n                    this.rows.push([\n                        table.td(group), \n                        table.td(fullGender), \n                        table.td(0), \n                        table.td(0), \n                        table.td(0), \n                        table.td(0), \n                        table.td(0), \n                        table.td(0) \n                    ])\n                }\n            }\n        }\n    }\n})\n","import { render } from \"./TxCurrMl.vue?vue&type=template&id=ba2cfcaa&ts=true\"\nimport script from \"./TxCurrMl.vue?vue&type=script&lang=ts\"\nexport * from \"./TxCurrMl.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}