{"version":3,"sources":["webpack:///./src/apps/OPD/services/patient_complaints_service.ts","webpack:///./src/components/DataViews/LabOrderModal.vue?a0e7","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?83cf","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?0184","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/DataViews/LabOrderModal.vue?028e","webpack:///./src/components/DataViews/LabOrderModal.vue","webpack:///./src/components/DataViews/LabOrderModal.vue?f7ba","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?d086","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?689f","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?c1b6","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?0f87","webpack:///./src/apps/OPD/views/encounters/Complaints.vue","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?b3bc"],"names":["PatientComplaintsService","AppEncounterService","constructor","patientID","providerID","super","complaintType","filter","ConceptService","getConceptSet","getObs","getConceptID","this","date","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","async","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","offlineID","patient","fields","encounterStartTime","facts","age","gender","isEnrolledInProgam","village","district","currentTA","formLabel","ready","created","$route","params","patient_id","parseInt","goOffline","initOfflineData","Store","get","then","patientData","isEmpty","Offline","cachePatient","setEncounterFacts","checkEncounterGuidelines","setStartTime","catch","e","console","log","computed","cancelDestination","patientDashboardUrl","methods","Date","getTime","isOnline","isOfflineMode","offline","findByID","person","personParams","birthdate","dayjs","ProgramService","getSessionDate","diff","current_district","current_village","current_traditional_authority","status","obs","endTime","elapsedTime","minutes","userAgentObs","buildValueText","getPlatformName","durationObs","buildValueNumber","resolveObs","computedData","error","toastWarning","enc","encounterTypeID","createEncounter","saveObservationList","callback","test","toastDanger","saveObsOffline","observations","id","uploadStatus","meta","formData","labOrders","skipNextTask","nextTask","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","program","programID","getProgramID","getCurrentTA","getCurrentDistrict","getCurrentVillage","getCachedApiDate","getBirthdate","getAge","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","yesNoOptions","toYesNoOption","values","mapOptions","options","option","toConditionalOptions","final","yesNoUnknownOptions","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","key","_hoisted_3","_hoisted_4","_createElementVNode","_hoisted_5","_hoisted_6","style","background","height","_hoisted_7","_hoisted_8","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_checkbox","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_text","_component_BarcodeInput","_component_ion_radio","_component_ion_radio_group","_component_ion_button","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_footer","_createElementBlock","_Fragment","_createVNode","_withCtx","_createTextVNode","_","size","overflowY","_renderList","testTypes","disabled","activeIndex","isOrderComplete","detail","_toDisplayString","modelValue","isChecked","$event","onIonChange","onSelectTest","selectedOrders","canScanDBS","accessionNumber","onOnScan","barcode","onScanEIDbarcode","_createCommentVNode","extendedLabsEnabled","specimens","onClick","addSpecimen","testReasons","finalOrders","specimen","reason","removeOrder","currentIndex","postActivities","closeModal","activities","testFilters","watch","handler","appActivities","getActivities","immediate","ART_GLOBAL_PROP","extendedLabEnabled","verifyingBarcode","loadingController","create","message","present","barcodeOk","trim","getTop","v","dismiss","OrderService","accessionNumExists","testName","event","$nextTick","checked","getSpecimens","tests","getTestTypes","vlIndex","findIndex","viralLoad","splice","sorted","t","concept_id","orders","LabOrderService","encounter","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","invalidate","canPrintOrders","alertConfirmation","confirmBtnLabel","cancelBtnLabel","printOrders","modalController","PrintoutService","forEach","url","element","order_id","printLbl","match","reasons","mounted","content","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonLabel","IonList","IonItem","BarcodeInput","IonCheckbox","IonRadioGroup","IonRow","_component_his_standard_form","_component_ion_page","onSubmit","_component_his_radiology_picker","onOnValue","onValue","emitedSelectedOptions","IonFooter","HisRadiologyPicker","mixins","EncounterMixinVue","radiologyService","isPacsEnabled","isReady","PatientRadiologyService","OPD_GLOBAL_PROP","isPACsEnabled","deep","selected","buildValueCoded","parent","child","buildValueCodedFromConceptId","getSelected","obsObj","savedObsData","submitToPacs","IonPage","complaintsService","todaysDate","ObservationService","presentingComplaints","radiologyBtnName","hasTriageComplaints","getTriagePresentingComplaints","getFields","complaints","component","LabOrderModal","backdropDismiss","cssClass","onDidDismiss","radiology","fetchLatestTriageEncounter","encounters","EncounterService","getEncounters","todayPresentingComplaints","el","toStandardHisFormat","encounter_datetime","buildResults","columns","group","rows","item","obs_group_id","value_text","helpText","FieldType","TT_TABLE_VIEWER","config","hiddenFooterBtns","TT_COMPLAINTS_PICKER","validation","Validation","computedValue","showRadiologyOdersBtn","disableBackBtn","footerBtns","visible","launchOrderSelection","visibleOnStateChange","launchRadiologyOrderSelection","TT_SUMMARY","buildSummaryResults","OPDComplaint","triageComplaint"],"mappings":"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","file":"js/chunk-3c08b0d8.decc5541.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\n\nexport class PatientComplaintsService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 122, providerID) \n  }\n\n  static async getComplaintsList(complaintType: string, filter = '') {\n    return ConceptService.getConceptSet(complaintType, filter) \n  }\n  async fetchLatestTriageEncounter() { \n   return await PatientComplaintsService.getObs({\n        'concept_id': ConceptService.getConceptID(\"History of COVID-19 contact\") ,\n        'start_date': this.date,\n        'end_date': this.date,\n        'person_id': this.patientID,\n    })\n  }\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LabOrderModal.vue?vue&type=style&index=0&id=37bf0aff&scoped=true&lang=css\"","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger, toastWarning } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\nimport { Offline, isOfflineMode, isOnline } from '@/composables/offline'\nimport dayjs from 'dayjs'\nimport { AppEncounterService } from '@/services/app_encounter_service'\nimport { ObsValue } from '@/services/observation_service'\nimport { getPlatformName } from '@/composables/usePlatform'\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        offlineID: null as any,\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        encounterStartTime: null as any,\n        facts: {\n            age: -1 as number,\n            gender: '' as string,\n            birthDate: '' as string,\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            isEnrolledInProgam: false as boolean,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            outcome: '' as string,\n            outcomeStartDate: '' as string,\n            village: '' as string,\n            district: '' as string,\n            currentTA: '' as string,\n        },\n        formLabel: '' as string,\n        ready: false\n    }),\n    created() {\n        if (this.$route.params.patient_id) {\n            this.offlineID = this.$route.params.patient_id\n            this.patientID = parseInt(`${this.$route.params.patient_id}`);\n            if (this.goOffline()) {\n                this.initOfflineData()\n            } else {\n                Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                    .then(patientData => {\n                        this.patient = patientData\n                        if (!isEmpty(this.patient)) {\n                            Offline().cachePatient(this.patient)\n                        }\n                        this.setEncounterFacts().then(() => {\n                            this.checkEncounterGuidelines().then(() => {\n                                this.ready = true\n                                this.setStartTime()\n                            }).catch((e) => console.log(e))\n                        }).catch(() => {\n                            if (this.goOffline()) {\n                                this.initOfflineData()\n                            }\n                        })\n                    })\n            }\n        }\n    },\n    computed: {\n        cancelDestination(): string { return this.patientDashboardUrl() }\n    },\n    methods: {\n        setStartTime() {\n            this.encounterStartTime = new Date().getTime()\n        },\n        goOffline(){\n            return !isOnline.value || isOfflineMode.value\n        },\n        isOnline() {\n            return isOnline.value\n        },\n        isOfflineMode() {\n            return isOfflineMode.value\n        },\n        initOfflineData() {\n            const offline = Offline().findByID(this.offlineID)\n            const person = offline?.personParams?.person\n            if (!person) return\n            this.facts.birthDate = person.birthdate\n            this.facts.age = dayjs(ProgramService.getSessionDate()).diff(\n                this.facts.birthDate, 'years'\n            )\n            this.facts.district = person.current_district\n            this.facts.village = person.current_village\n            this.facts.currentTA = person.current_traditional_authority\n            this.facts.gender = person.gender\n            this.ready = true\n            this.setStartTime()\n        },\n        async saveFormEncounterAndProceed(params={} as any) {\n            let status = 'Pending'\n            let created = false\n            let obs = null\n            const endTime = new Date().getTime();\n            const elapsedTime = (endTime - this.encounterStartTime) / 1000; // Time in seconds\n            const minutes = elapsedTime / 60;\n            try {\n                const userAgentObs = await AppEncounterService.buildValueText(\n                    'Device', getPlatformName()\n                )\n                const durationObs = await AppEncounterService.buildValueNumber(\n                    'Review Time', minutes\n                )\n                obs = [...(await this.resolveObs(params.computedData)), userAgentObs, durationObs]\n            } catch (e) {\n                console.error(`${e}`)\n                return toastWarning(\"Unable to resolve observations\")\n            }\n            if (!this.isOfflineMode()) {\n                try {\n                    const enc = new AppEncounterService(\n                        this.patientID,\n                        params.encounterTypeID, \n                        this.providerID\n                    )\n                    if ((await enc.createEncounter())) {\n                        if ((await enc.saveObservationList(obs as ObsValue[]))) {\n                            status = 'Success'\n                        }\n                    }\n                    if (typeof params.callback === 'function') {\n                        await params.callback(enc)\n                    }\n                    created = true\n                } catch (e) {\n                    created = false\n                    if (/NetworkError|Failed to fetch/i.test(`${e}`)) {\n                        status = 'NetworkError'\n                    } else {\n                        status = 'Exception'\n                        console.error(`Exception while saving an encounter: ${e}`)\n                    }\n                }\n                if (status === 'Exception') {\n                    return toastDanger(\"An error has occured!\")\n                }\n            }\n            Offline().saveObsOffline({\n                observations: obs,\n                id: this.offlineID,\n                uploadStatus: status,\n                encounterName: this.$route.name,\n                encounterTypeID: params.encounterTypeID,\n                meta: params.formData,\n                labOrders: params.labOrders,\n                created\n            }, created)\n            if (!params.skipNextTask) this.nextTask()\n        },\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.isEnrolledInProgam = program.programID === ProgramService.getProgramID()\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.currentTA = this.patient.getCurrentTA()\n            this.facts.district = this.patient.getCurrentDistrict()\n            this.facts.village = this.patient.getCurrentVillage()\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.age = this.patient.getAge()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: Array<string | Option>) {\n            return items.map(i => typeof i === 'string' || typeof i === 'number'  \n                ?  { label: i, value: i } : i \n            )\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.$route.params.patient_id}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        async nextTask() {\n            try {\n                const id = this.offlineID || this.patientID\n                await nextTask(id, this.$router, this.$route)\n            } catch (e) {\n                console.error(\"Workflow error \" +  e)\n                this.gotoPatientDashboard()\n            }\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });        \n        },\n        toConditionalOptions(options: Array<Array<string | boolean | undefined>>) {\n            const final: Option[] = []\n            for(const option of options) {\n                if (typeof option[1] === 'boolean') {\n                    if (option[1]) final.push(this.toOption(option[0] as string))\n                    continue\n                }\n                final.push(this.toOption(option[0] as string))\n            }\n            return final\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/brian/projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-37bf0aff\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"ion-margin-bottom\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"his-md-text side-title\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Select specimen \", -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Main test(s) reason \", -1))\nconst _hoisted_6 = { style: {background: 'lightyellow', height: '34vh'} }\nconst _hoisted_7 = { class: \"his-sm-text\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Test\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Specimen\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Reason\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\")\n  ])\n], -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_text = _resolveComponent(\"ion-text\")!\n  const _component_BarcodeInput = _resolveComponent(\"BarcodeInput\")!\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")!\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Lab orders\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"6\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'75vh'} }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testTypes, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            class: \"his-sm-text\",\n                            key: data,\n                            disabled: _ctx.activeIndex !== null && _ctx.activeIndex !== index && !_ctx.isOrderComplete,\n                            detail: \"\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, { \"text-wrap\": \"\" }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(data.name), 1)\n                                ]),\n                                _: 2\n                              }, 1024),\n                              _createVNode(_component_ion_checkbox, {\n                                modelValue: data.isChecked,\n                                \"onUpdate:modelValue\": ($event: any) => ((data.isChecked) = $event),\n                                slot: \"start\",\n                                onIonChange: (e) => _ctx.onSelectTest(data.name, index, e)\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\"])\n                            ]),\n                            _: 2\n                          }, 1032, [\"disabled\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.activeIndex != null && _ctx.selectedOrders.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'79vh'}\n                    }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", _hoisted_1, [\n                          (_ctx.canScanDBS && /hiv viral load/i.test(_ctx.testTypes[_ctx.activeIndex].name))\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n                                _createElementVNode(\"div\", _hoisted_3, [\n                                  _createTextVNode(\" Barcode ID: \"),\n                                  _createVNode(_component_ion_text, {\n                                    color: _ctx.testTypes[_ctx.activeIndex].accessionNumber ? 'success' : 'dark'\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createElementVNode(\"b\", null, _toDisplayString(_ctx.testTypes[_ctx.activeIndex].accessionNumber || 'None'), 1)\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"color\"])\n                                ]),\n                                _createVNode(_component_BarcodeInput, {\n                                  size: \"small\",\n                                  onOnScan: _cache[0] || (_cache[0] = (barcode) => _ctx.onScanEIDbarcode(barcode))\n                                })\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          (!_ctx.extendedLabsEnabled)\n                            ? (_openBlock(), _createBlock(_component_ion_list, { key: 1 }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_radio_group, {\n                                    modelValue: _ctx.testTypes[_ctx.activeIndex]['specimen'],\n                                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['specimen']) = $event))\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _hoisted_4,\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.specimens, (data) => {\n                                        return (_openBlock(), _createBlock(_component_ion_item, { key: data }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_component_ion_label, null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(data.name), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024),\n                                            _createVNode(_component_ion_radio, {\n                                              slot: \"start\",\n                                              value: data.name,\n                                              onClick: ($event: any) => (_ctx.addSpecimen(data))\n                                            }, null, 8, [\"value\", \"onClick\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      }), 128))\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"modelValue\"])\n                                ]),\n                                _: 1\n                              }))\n                            : _createCommentVNode(\"\", true),\n                          _createVNode(_component_ion_radio_group, {\n                            modelValue: _ctx.testTypes[_ctx.activeIndex]['reason'],\n                            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['reason']) = $event))\n                          }, {\n                            default: _withCtx(() => [\n                              _hoisted_5,\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testReasons, (data) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  class: \"his-sm-text\",\n                                  key: data\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(data), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_radio, {\n                                      slot: \"start\",\n                                      value: data\n                                    }, null, 8, [\"value\"])\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              }), 128))\n                            ]),\n                            _: 1\n                          }, 8, [\"modelValue\"])\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_6, [\n                          _createElementVNode(\"table\", _hoisted_7, [\n                            _hoisted_8,\n                            _createElementVNode(\"tbody\", null, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.finalOrders, (data, index) => {\n                                return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.name), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.specimen || 'N/A'), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.reason), 1),\n                                  _createElementVNode(\"td\", null, [\n                                    _createVNode(_component_ion_button, {\n                                      onClick: ($event: any) => (_ctx.removeOrder(data.currentIndex)),\n                                      slot: \"end\",\n                                      color: \"danger\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"X\")\n                                      ]),\n                                      _: 2\n                                    }, 1032, [\"onClick\"])\n                                  ])\n                                ]))\n                              }), 128))\n                            ])\n                          ])\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postActivities,\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.finalOrders.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.closeModal([]))),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonCheckbox,\n  IonRadioGroup,\n  IonRow,\nloadingController,\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { alertConfirmation, toastDanger, toastWarning } from \"@/utils/Alerts\"\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport ART_GLOBAL_PROP from \"@/apps/ART/art_global_props\"\nimport Store from \"@/composables/ApiStore\"\nimport { findIndex } from \"lodash\";\nimport BarcodeInput from \"@/components/BarcodeInput.vue\"\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    activities: {\n      type: Object as PropType<ActivityInterface[]>,\n      required: true\n    },\n    testFilters: {\n      type: Array    \n    },\n    title: {\n      type: String, \n      default: \"\"\n    },\n  },\n  watch: {\n    activities: {\n      handler(activities: Array<ActivityInterface>){\n        if (activities) {\n          this.appActivities = [...activities]\n          this.getActivities();\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    this.extendedLabsEnabled = await ART_GLOBAL_PROP.extendedLabEnabled()\n    this.canScanDBS = await ART_GLOBAL_PROP.canScanDBS()\n  },\n  methods: {\n    async onScanEIDbarcode(barcode: string) {\n      this.verifyingBarcode = !this.verifyingBarcode;\n      if (this.verifyingBarcode) return\n      (await loadingController.create({ message: `Checking ${barcode}`})).present()\n      this.testTypes[this.activeIndex]['accessionNumber'] = null\n      // Expected barcode examples: L5728043 or 57280438\n      const barcodeOk = /^([A-Z]{1})?[0-9]{7,8}$/i.test(`${barcode}`.trim())\n      if (!barcodeOk) {\n        toastWarning(\"Invalid Barcode\")\n        this.verifyingBarcode = false\n        loadingController.getTop().then(v => v && loadingController.dismiss())\n        return ;\n      }\n      /**\n       * Verify with API if barcode was already used:\n      */\n      try {\n        if (!(await OrderService.accessionNumExists(barcode))) {\n          this.testTypes[this.activeIndex]['accessionNumber'] = barcode\n        } else {\n          toastWarning(`Barcode ${barcode} was already used`)\n        }\n      } catch (e) {\n        toastDanger(\"Failed to confirm barcode \" + barcode + \", Please try again later\", 8000)  \n      }\n      this.verifyingBarcode = false\n      loadingController.getTop().then(v => v && loadingController.dismiss())\n    },\n    async onSelectTest(testName: string, index: number, event: any) {\n      this.$nextTick(async () => {\n        this.testTypes[index]['isChecked'] = event.target.checked;\n        if(this.testTypes[index]['isChecked']){\n          this.specimens = await OrderService.getSpecimens(testName);\n          this.testTypes[index]['currentIndex'] = index;\n          this.activeIndex = index;\n        } else {\n          this.removeOrder(index)\n        }\n      })\n    },\n    async getActivities() {\n      const tests: Array<any> = await OrderService.getTestTypes();\n      const vlIndex = findIndex(tests, {name: \"HIV viral load\"})\n      const viralLoad = vlIndex !== -1 ? tests.splice(vlIndex, 1) : null;\n      const sorted = tests.sort((a: any, b: any) => `${a.name}`.toUpperCase() > `${b.name}`.toUpperCase() ? 1: -1)\n        .filter((t: any) => Array.isArray(this.testFilters) ? this.testFilters.includes(t.name) : true)\n      this.testTypes = viralLoad ? [...viralLoad, ...sorted] : sorted\n    },\n    removeOrder(index: number) {\n      this.testTypes[index]['isChecked'] = false;\n      this.testTypes[index]['reason'] = null;\n      this.testTypes[index]['specimen'] = null;\n      this.testTypes[index]['specimenConcept'] = null\n      this.testTypes[index]['accessionNumber'] = null\n      this.activeIndex = null\n      this.specimens = []\n    },\n    addSpecimen(data: any) {\n      this.testTypes[this.activeIndex]['specimenConcept'] = data.concept_id;\n    },\n    async postActivities() {\n      const patientID= `${this.$route.params.patient_id}`;\n      const orders = new LabOrderService(parseInt(patientID), -1); //TODO: get selected provider for this encounter\n      const encounter = await orders.createEncounter();\n\n      if(encounter) {\n        const formattedOrders = await OrderService.buildLabOrders(encounter, this.finalOrders);\n        const d =await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n        \n        if(!d) return toastWarning('Unable to save lab orders')\n\n        Store.invalidate('PATIENT_LAB_ORDERS')\n        const canPrintOrders = await alertConfirmation('Lab orders and encounter created!, print out your last orders?', { \n          confirmBtnLabel: 'Yes',\n          cancelBtnLabel: 'No'\n        })\n        if(canPrintOrders) await this.printOrders(d)\n        else await this.closeModal(d)\n      }\n    },\n    async closeModal(orders: []) {\n      await modalController.dismiss(orders)\n    },\n    async printOrders(orders: any) {\n      const p = new PrintoutService();\n      await orders.forEach(async (element: any) => {\n        const url = `lab/labels/order?order_id=${element.order_id}`\n        await p.printLbl(url);\n      });\n      await modalController.dismiss(orders)\n    },\n  },\n  computed: {\n    isOrderComplete(): boolean {\n      if (typeof this.activeIndex != 'number') {\n        return false\n      }\n      if (this.canScanDBS && /hiv viral load/i.test(this.testTypes[this.activeIndex]['name']) && \n        !this.testTypes[this.activeIndex]['accessionNumber']) {\n          return false\n      }\n      if(this.extendedLabsEnabled){\n        return !!this.testTypes[this.activeIndex]['reason'] \n      }\n      return (this.testTypes[this.activeIndex]['specimenConcept'] || this.testTypes[this.activeIndex]['specimen']) \n        && this.testTypes[this.activeIndex]['reason'] \n    },\n    selectedOrders(): any {\n      return this.testTypes.filter((data: any) => data.isChecked === true);\n    },\n    finalOrders(): any {\n      return this.selectedOrders.filter((data: any) => {\n        if (this.canScanDBS && /hiv viral load/i.test(data.name) && !data.accessionNumber) {\n          return false\n        }\n        return data.reason && (data.specimen && !this.extendedLabsEnabled \n          || this.extendedLabsEnabled)\n      })\n    },\n    testReasons(): Array<string> {\n      return this.testTypes[this.activeIndex].name.match(/Viral load/i)\n        ? this.reasons.concat(['Follow up after Low Level Viremia', 'Follow up after High Viral Load'])\n        : this.reasons\n    }\n  },\n  mounted() {\n    this.getActivities();\n  },\n  data() {\n    return {\n      canScanDBS: false,\n      verifyingBarcode: false,\n      content: \"Content\",\n      extendedLabsEnabled: false as boolean,\n      appActivities: [] as Array<ActivityInterface>,\n      testTypes: [] as any,\n      specimens: [],\n      reasons: ['Routine', 'Targeted', 'Confirmatory', 'Stat', 'Repeat / Missing'],\n      activeIndex: null as any\n    };\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    BarcodeInput,\n    IonCheckbox,\n    IonRadioGroup,\n    IonRow,\n  },\n});\n","import { render } from \"./LabOrderModal.vue?vue&type=template&id=37bf0aff&scoped=true&ts=true\"\nimport script from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./LabOrderModal.vue?vue&type=style&index=0&id=37bf0aff&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/brian/projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-37bf0aff\"]])\n\nexport default __exports__","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Complaints.vue?vue&type=style&index=0&id=0c1313b4&lang=css\"","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_radiology_picker = _resolveComponent(\"his-radiology-picker\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Radiology Examination\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_his_radiology_picker, { onOnValue: _ctx.onValue }, null, 8, [\"onOnValue\"])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.onSubmit())),\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.emitedSelectedOptions.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.closeModal())),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  IonFooter,\n} from \"@ionic/vue\";\nimport { defineComponent } from 'vue'\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\";\nimport HisRadiologyPicker from '@/components/FormElements/HisRadiologyPicker.vue'\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  components: { \n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonFooter,\n    HisRadiologyPicker\n  },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false,\n    emitedSelectedOptions: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onValue(selected: any) {\n      this.emitedSelectedOptions = selected\n    },\n    async getSelected() {\n      return this.emitedSelectedOptions.map(async (option: any) => ({\n        ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n        child: [await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id)]\n      }))\n    },\n    async onSubmit(){\n      if(!isEmpty(this.emitedSelectedOptions)) {\n        this.closeModal()\n        let data = await this.getSelected()\n        data = await Promise.all(data)\n        await this.radiologyService.createEncounter()\n        const obsObj = await this.radiologyService.obsObj(data) \n        const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n        await this.radiologyService.printOrders(savedObsData, this.patient)\n        if(this.isPacsEnabled) {\n          try {\n            await this.radiologyService.submitToPacs(savedObsData, this.patient)\n          } catch (error) {\n            console.log(error)\n          }\n        }\n      }\n    },\n    async closeModal() {\n      await modalController.dismiss([])\n    }\n  },\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=1ee1c833&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/brian/projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientComplaintsService } from \"@/apps/OPD/services/patient_complaints_service\";\nimport LabOrderModal from \"@/components/DataViews/LabOrderModal.vue\"\nimport radiology from \"@/apps/OPD/views/encounters/modals/radiology.vue\"\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { modalController, IonPage } from '@ionic/vue';\nimport { ObservationService } from \"@/services/observation_service\"\nimport { EncounterService } from '@/services/encounter_service'\nimport HisDate from \"@/utils/Date\"\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\n\nexport default defineComponent({\n  components: { HisStandardForm, IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    complaintsService: {} as any,\n    todaysDate: ObservationService.getSessionDate(),\n    presentingComplaints: \"\" as any,\n    isPacsEnabled: false,\n    radiologyBtnName: 'Radiology Order',\n    hasTriageComplaints: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.complaintsService = new PatientComplaintsService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n          this.hasTriageComplaints = await this.getTriagePresentingComplaints()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){     \n      const data = await Promise.all(computedData.complaints)   \n      await this.complaintsService.createEncounter()    \n      await this.complaintsService.saveObservationList(data)\n      this.nextTask()        \n    },\n    async launchOrderSelection() {\n      const modal = await modalController.create({\n        component: LabOrderModal,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async launchRadiologyOrderSelection() {\n      const modal = await modalController.create({\n        component: radiology,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async getTriagePresentingComplaints(){\n      const data =  await this.complaintsService.fetchLatestTriageEncounter();\n      if(!(data.length > 0)){ return false;}\n\n      const encounters = await EncounterService.getEncounters(this.patientID, this.todaysDate)\n      const todayPresentingComplaints = encounters.filter(function (el: any){\n        return el.type.name == \"TRIAGE PRESENTING COMPLAINTS\" &&\n        HisDate.toStandardHisFormat(el.encounter_datetime) == ObservationService.getSessionDate() \n      });\n      if(!(todayPresentingComplaints.length > 0)) {return false;}\n\n      this.presentingComplaints =   todayPresentingComplaints[0].observations;\n      return true;\n    },\n    buildResults() {\n      const columns = [ 'Group','Presenting complaints'];\n      let group = \"\";\n      let rows =this.presentingComplaints.map((item: any) =>{\n        if(item.obs_group_id != null)\n          return [group,item.value_text]\n\n        group = item.value_text;\n      });\n      rows = rows.filter((el: any) =>{\n        return el != undefined\n      })\n      this.presentingComplaints = rows;\n      return [\n        {\n          label: '',\n          value: '',\n          other: { columns, rows},\n        },\n      ];\n    },\n\n    getFields(): Array<Field>{\n      return [\n        {\n          id: \"triage_complaints\",\n          helpText: \"Triaging Complaints\",\n          condition: () => this.hasTriageComplaints,\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'complaints',\n          helpText: 'Presenting Complaints',\n          type: FieldType.TT_COMPLAINTS_PICKER,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.complaintsService.buildValueCoded('Presenting complaint', option.other.parent)),\n              child: [await this.complaintsService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id)]\n            }))\n          },\n          config: {\n            hiddenFooterBtns: [ this.showRadiologyOdersBtn(), this.disableBackBtn()],\n            footerBtns: [\n              {\n                name: \"Lab Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              },\n              {\n                name: this.radiologyBtnName,\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchRadiologyOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              }\n            ],\n          }\n        },\n        {\n          id: \"all_presenting_complaints\",\n          helpText: \"Summary\",\n          condition: () => this.presentingComplaints.length > 0,\n          type: FieldType.TT_SUMMARY,\n          options: (d: any, b: any) => this.buildSummaryResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ]\n    },\n    showRadiologyOdersBtn() {\n      if(this.isPacsEnabled) {\n        return ''\n      } else return this.radiologyBtnName\n    },\n    buildSummaryResults(data: any) {\n      const OPDComplaint = data.complaints.map((value: any)=>{\n        return {\n          'label': \"OPD Complaints\",\n          'value': value.label,\n        };\n      })\n      const triageComplaint = this.presentingComplaints.map((value: any)=>{\n        return {\n          'label': 'Triaging Complaints',\n          'value': value[1],\n        };\n      })\n      return OPDComplaint.concat(triageComplaint);\n    },\n    disableBackBtn() {\n      if(this.hasTriageComplaints) {\n        return ''\n      } else return 'Back'\n    }\n  }\n})\n","import { render } from \"./Complaints.vue?vue&type=template&id=0c1313b4&ts=true\"\nimport script from \"./Complaints.vue?vue&type=script&lang=ts\"\nexport * from \"./Complaints.vue?vue&type=script&lang=ts\"\n\nimport \"./Complaints.vue?vue&type=style&index=0&id=0c1313b4&lang=css\"\n\nimport exportComponent from \"/home/brian/projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}