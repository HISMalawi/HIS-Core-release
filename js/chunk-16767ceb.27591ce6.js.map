{"version":3,"sources":["webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/apps/ART/views/ARTStock/verification.vue?8b4e","webpack:///./src/apps/ART/views/ARTStock/verification.vue","webpack:///./src/apps/ART/views/ARTStock/verification.vue?34aa"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","defineComponent","name","components","TouchScreenForm","emits","data","props","type","Function","Boolean","default","String","Object","required","methods","formData","computedData","this","$emit","i","__exports__","_component_his_standard_form","_resolveComponent","HisStandardForm","drugs","selectedDrugs","barcode","stockService","items","enter_batches","errors","index","length","element","value","vals","StockService","getPackSize","drug_id","reason","f","updateItem","push","shortName","toastSuccess","$router","toastDanger","getFields","id","helpText","FieldType","TT_FULL_DATE","validation","val","Validation","TT_BATCH_VERIFICATION","options","TT_SELECT","label","TT_TABLE_VIEWER","d","buildResults","config","hiddenFooterBtns","columns","rows","map","j","toNumString","HisDate","toStandardHisDisplayFormat","expiry_date","other","prepDrugs","formdata","forEach","batchNumber","drugID","expiry","parseInt","tabs","tins","date","selectAll","listData","l","isChecked","formatDrugs","drugList","drug","created"],"mappings":"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","file":"js/chunk-16767ceb.27591ce6.js","sourcesContent":["import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true\n  }, null, 8, [\"fields\", \"activeField\", \"onFinishAction\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport HisDate from \"@/utils/Date\";\nimport  { StockService } from \"./stock_service\";\nimport { toastDanger, toastSuccess } from \"@/utils/Alerts\";\nimport { toNumString } from \"@/utils/Strs\";\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  data: () => ({\n    activeField: \"\",\n    fields: [] as any,\n    drugs: [] as any,\n    selectedDrugs: [] as any,\n    barcode: \"\",\n    stockService: {} as any\n  }),\n\n  methods: {\n    async onFinish(formData: any) {\n      const items = formData.enter_batches;\n      const errors = [];\n      for (let index = 0; index < items.length; index++) {\n        const element = items[index].value;\n        const vals = {\n                \"current_quantity\": element['current_quantity'] * StockService.getPackSize(element.drug_id),\n                \"reason\": formData.reason.value\n            };\n            const f = await this.stockService.updateItem(element['id'], vals)\n            if(!f) {\n              errors.push('could not stock for ' + items[index].shortName);\n            }\n      }\n      if (errors.length === 0) {\n        toastSuccess(\"Stock succesfully updated\");\n        this.$router.push(\"/\");\n      } else {\n        toastDanger(\"Could not save stock\");\n      }\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"date\",\n          helpText: \"Verfication Date\",\n          type: FieldType.TT_FULL_DATE,\n          validation: (val: Option) => Validation.required(val),\n        },\n        {\n          id: \"enter_batches\",\n          helpText: \"Batch entry\",\n          type: FieldType.TT_BATCH_VERIFICATION,\n          options: () => this.drugs,\n          validation: (val: Option) => Validation.required(val),\n        },\n        {\n          id: \"reason\",\n          helpText: \"Select reason\",\n          type: FieldType.TT_SELECT,\n          validation: (val: Option) => Validation.required(val),\n          options: () => [\n            {\n              label: \"Monthly stock take\",\n              value: \"Monthly stock take\",\n            },\n            {\n              label: \"Audit\",\n              value: \"Audit\",\n            },\n            {\n              label: \"Adhoc (due to stock imbalance)\",\n              value: \"Adhoc (due to stock imbalance)\",\n            },\n            {\n              label: \"Supervision\",\n              value: \"Supervision\",\n            },\n            {\n              label: \"Handover\",\n              value: \"Handover\",\n            },\n          ],\n        },\n        {\n          id: \"verification_summary\",\n          helpText: \"Summary\",\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(d.enter_batches),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ];\n    },\n    buildResults(drugs: any) {\n      const columns = [\n        \"Drug\",\n        \"Total units\",\n        \"Expiry date\",\n      ];\n      const rows = drugs.map((j: any) => {\n        const d = j.value;\n        return [\n          d.shortName,\n          toNumString(d['current_quantity']),\n          HisDate.toStandardHisDisplayFormat(d.expiry_date),\n        ];\n      });\n      return [\n        {\n          label: \"Confirm entry\",\n          value: \"Table\",\n          other: { columns, rows },\n        },\n      ];\n    },\n    prepDrugs(formdata: any) {\n      const items: any[] = [];\n      const barcode = this.barcode;\n      \n      formdata.enter_batches.value.forEach((element: any) => {\n        items.push({\n          'batch_number': element.batchNumber,\n          items: [\n            {\n              'barcode': barcode,\n              'drug_id': element.drugID,\n              'expiry_date': element.expiry,\n              'quantity': parseInt(element.tabs) * parseInt(element.tins),\n              'delivery_date': formdata.date.value,\n            },\n          ],\n        });\n      });\n      return items;\n    },\n    selectAll(listData: Array<Option>) {\n      return listData.map((l) => {\n        l.isChecked = true;\n        return l;\n      });\n    },\n    formatDrugs() {\n      return this.stockService.drugList().map((drug: any) => {\n        return {\n          label: drug.shortName,\n          value: drug,\n        };\n      });\n    },\n  },\n  created() {\n    this.stockService = new StockService();\n    this.fields = this.getFields();\n    this.drugs = this.formatDrugs();\n  },\n});\n","import { render } from \"./verification.vue?vue&type=template&id=4e221e52&ts=true\"\nimport script from \"./verification.vue?vue&type=script&lang=ts\"\nexport * from \"./verification.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}