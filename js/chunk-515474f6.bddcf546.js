(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-515474f6"],{"0605":function(e,t,i){"use strict";i.r(t);var a=i("7a23");function n(e,t,i,n,o,s){const r=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(r,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!1,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}var o=i("d95e"),s=i("7920"),r=i("2706"),l=i("7365"),c=i("cc6f");class u extends c["a"]{constructor(e,t){super(e,182,t)}async getSummary(){const e=await this.getFirstValueCoded("Screening results"),t=await this.getFirstValueCoded("Directly observed treatment option"),i=await this.getFirstValueCoded("Referral reason");return{"Screening Result":e,"Treatment Type":t,"Referral Reason":i||"N/A"}}}var d=i("b5e4"),p=i("ad60"),h=i("9ceb"),m=i("8158"),f=Object(a["defineComponent"])({mixins:[l["a"]],components:{HisStandardForm:s["a"]},data:()=>({reception:{},summaryData:{},referralReason:""}),watch:{patient:{async handler(){this.reception=new u(this.patientID,this.providerID),this.summaryData=await this.reception.getSummary(),await this.setReason(),this.fields=this.getFields()},deep:!0}},methods:{async setReason(){const e=await this.reception.getFirstValueCoded("Referral reason");this.referralReason=e||"N/A"},showSampleCollected(){const e=["Large Lesion (>75%)","Suspect cancer","Further Investigation and Management"];return e.includes(this.referralReason)},async onFinish(e,t){const i=await this.reception.createEncounter(),a=await this.resolveObs({...t});if(await this.reception.saveObservationList(a),!i)return Object(d["e"])("Unable to create encounter");const n=p["a"].getProgramID(),o=await p["a"].getProgramWorkflows(p["a"].getProgramID()),s={};o.forEach(e=>{e.states.forEach(e=>{const t=e.program_workflow_state_id,i=e.concept.concept_names[0].name;s[i]=t})});const r=e.patient_outcome?e.patient_outcome.value:"Continue follow-up",l=await m["a"].getConceptID(r);s[r]=l;const c={location_id:p["a"].getLocationName(),state:s[r],date:p["a"].getSessionDate()};console.log("STATE ",c);const u=await p["a"].createState(this.patientID,n,c);if(!u)return Object(d["e"])("Unable to update state");this.nextTask()},getFields(){return[{id:"screening_summary",helpText:"Screening Summary",type:o["b"].TT_DATA_TABLE,config:{rows:()=>Object.keys(this.summaryData).map(e=>[h["a"].td(e),h["a"].td(this.summaryData[e])]),dataTableConfig:{showIndex:!1}}},{id:"type_of_referral",helpText:"Type of referral visit",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>[{label:"Initial/1st visit to referral facility",value:"Initial visit"},{label:"Follow-up visit",value:"Follow-up"}],computedValue:e=>({obs:this.reception.buildValueCoded("Referral reason",e.value)})},{id:"cervix_screening_assessment",helpText:"Cervix Screening Assessment",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>[{label:"STI Infection",value:"STI Infection"},{label:"VIA Negative",value:"VIA Negative"},{label:"VIA Positive",value:"VIA Positive"},{label:"PAP Smear Normal",value:"PAP Smear Normal"},{label:"PAP Smear Abnormal",value:"PAP Smear Abnormal"},{label:"No Visible Lesion (After Speculum)",value:"No visible Lesion"},{label:"Suspected Cancer",value:"Suspected Cancer"}],computedValue:e=>({obs:this.reception.buildValueCoded("Cervix screening assessment",e.value)})},{id:"are_figo_staging_results_available",helpText:"Are FIGO staging results available?",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>this.yesNoOptions(),computedValue:e=>({obs:this.reception.buildValueCoded("Are FIGO staging results available",e.value)})},{id:"figo_staging_results",helpText:"FIGO staging results",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),condition:e=>"Yes"===e.are_figo_staging_results_available.value,options:()=>this.mapOptions(["Cervical stage 1","Cervical stage 2","Cervical stage 3","Cervical stage 4"]),computedValue:e=>({obs:this.reception.buildValueCoded("FIGO staging of cervical cancer",e.label)})},{id:"type_of_sample_collected",helpText:"Type of sample collected",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>this.mapOptions(["Punch Biopsy","LLETZ/LEEP Sample","Cone Biopsy Sample"]),computedValue:e=>({obs:this.reception.buildValueCoded("Sample",e.label)})},{id:"are_histological_results_after_lletz_available",helpText:"Are Histological results after LLETZ available?",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>this.yesNoOptions(),computedValue:e=>({obs:this.reception.buildValueCoded("Are Histological results after LLETZ available",e.label)})},{id:"histology_results_after_lletz",helpText:"Histology Results After LLETZ",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),condition:e=>"Yes"===e.are_histological_results_after_lletz_available.value,options:()=>this.mapOptions(["Normal","Chronic Cervicitis","Schistosomiasis","Tuberculosis(TB)","CIN 1","CIN 2","CIN 3","Carcinoma in Situ","Invasive cancer of cervix"]),computedValue:e=>({obs:this.reception.buildValueCoded("Sample",e.label)})},{id:"complications_during_lletz_leep_biopsy",helpText:"Complications During LLETZ/LEEP Biopsy",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>[{label:"None (N/A)",value:"None"},{label:"Excessive Bleeding or pain",value:"Excessive Bleeding or pain"}],computedValue:e=>({obs:this.reception.buildValueCoded("Complications During LLETZ/LEEP Biopsy",e.value)})},{id:"complications_after_lletz_leep_biopsy",helpText:"Complications After LLETZ/LEEP Biopsy",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>[{label:"None (N/A)",value:"None"},{label:"Excessive Bleeding or pain",value:"Excessive Bleeding or pain"}],computedValue:e=>({obs:this.reception.buildValueCoded("Complications After LLETZ/LEEP Biopsy",e.value)})},{id:"treatment_provided",helpText:"Treatment Provided",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>this.mapOptions(["Hysterectomy","Chemotherapy","Palliative Care","LLETZ/LEEP"]),computedValue:e=>({obs:this.reception.buildValueCoded("Treatment",e.label)})},{id:"recommended_care_after_lletz_histology",helpText:"Recommended Care After LLETZ Histology",type:o["b"].TT_SELECT,validation:e=>r["a"].required(e),condition:()=>"Same day treatment"!==this.summaryData["Treatment Type"],options:()=>this.mapOptions(["Hysterectomy","Trachelectomy","Discharged","Continue follow-up"]),computedValue:e=>({obs:this.reception.buildValueCoded("Recommended Care After LLETZ Histology",e.label)})},{id:"patient_outcome",helpText:"Patient outcome",type:o["b"].TT_SELECT,condition:()=>"Same day treatment"!==this.summaryData["Treatment Type"],validation:e=>r["a"].required(e),options:()=>this.mapOptions(["On-going Palliative Care","No Dysplasia/Cancer","Death"])}]}}}),v=i("6b0d"),b=i.n(v);const g=b()(f,[["render",n]]);t["default"]=g},7365:function(e,t,i){"use strict";i("14d9"),i("13d5");var a,n=i("7a23"),o=i("ad60"),s=i("2ef0"),r=i("0fa1"),l=i("7f35"),c=i("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(a||(a={}));const u=e=>c["b"].toStandardHisDisplayFormat(e),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(l["a"])("Data Integrity Issue Found","Patient died on "+u(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?a.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?a.CHANGE_PATIENT_OUTCOME:a.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const i=await Object(l["a"])("Data integrity issue found","",`Session date ${u(t)} is less than birth date of ${u(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===i?a.CHANGE_SESSION_DATE:a.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:i,apiDate:n})=>{const o=await Object(l["c"])("Please select a provider for "+t,`BDE: ${u(i)} | Current: ${u(n)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:a.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:a.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}};var p=i("c21d"),h=i("7920"),m=i("b5e4"),f=i("8e8b"),v=i("b432"),b=i("5a0c"),g=i.n(b),T=i("cc6f"),y=i("2ed9"),_=Object(n["defineComponent"])({components:{HisStandardForm:h["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],encounterStartTime:null,facts:{npid:"",givenName:"",familyName:"",age:-1,gender:"",birthDate:"",birthEstimated:!1,sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:"",village:"",district:"",currentTA:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():f["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,Object(s["isEmpty"])(this.patient)||Object(v["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0,this.setStartTime()}).catch(e=>console.log(e))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{setStartTime(){this.encounterStartTime=(new Date).getTime()},goOffline(){return!v["c"].value||v["b"].value},isOnline(){return v["c"].value},isOfflineMode(){return v["b"].value},initOfflineData(){var e,t,i;const a=Object(v["a"])().findByID(this.offlineID),n=null===a||void 0===a||null===(e=a.personParams)||void 0===e?void 0:e.person;n&&(this.facts.birthDate=n.birthdate,this.facts.age=g()(o["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.birthEstimated=(null===a||void 0===a||null===(t=a.personParams)||void 0===t?void 0:t.person.birthdate_estimated)||!1,this.facts.npid=null===a||void 0===a||null===(i=a.personParams)||void 0===i?void 0:i.npid,this.facts.givenName=n.given_name,this.facts.familyName=n.family_name,this.facts.district=n.current_district,this.facts.village=n.current_village,this.facts.currentTA=n.current_traditional_authority,this.facts.gender=n.gender,this.ready=!0,this.setStartTime())},async saveFormEncounterAndProceed(e={}){let t="Pending",i=!1,a=null;const n=(new Date).getTime(),o=(n-this.encounterStartTime)/1e3,s=o/60;try{const n=await T["a"].buildValueText("Device",Object(y["f"])()),o=await T["a"].buildValueNumber("Review Time",s);a=[...await this.resolveObs(e.computedData),n,o],Object(v["a"])().saveObsOffline({observations:a,id:this.offlineID,uploadStatus:t,encounterName:this.$route.name,encounterTypeID:e.encounterTypeID,meta:e.formData,labOrders:e.labOrders,created:i},i),Object(v["a"])().synchronizeRecord(this.offlineID),e.skipNextTask||this.nextOfflineFlow()}catch(r){return console.error(""+r),Object(m["e"])("Unable to resolve observations")}},runflowState(e,t=null){const i={};if(i[a.SET_PROVIDER]=e=>{const[t]=e.split(" "),i=Object(s["find"])(this.providers,{username:t});return i&&(this.providerID=i.person_id),a.CONTINUE},i[a.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),a.EXIT),i[a.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),a.EXIT),i[a.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),a.EXIT),e in i)return i[e](t)},async checkEncounterGuidelines(){const e=Object(p["a"])(this.facts,d);for(const s in e){var t,i;const r=e[s];if(null!==r&&void 0!==r&&null!==(t=r.actions)&&void 0!==t&&t.alert){var n;const e=this.runflowState(await(null===r||void 0===r||null===(n=r.actions)||void 0===n?void 0:n.alert(this.facts)));if(e===a.EXIT)return}if(null!==r&&void 0!==r&&null!==(i=r.actions)&&void 0!==i&&i.selection){var o;const e=await(null===r||void 0===r||null===(o=r.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await f["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=e.programID===o["a"].getProgramID(),this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(m["c"])(""+e)}this.facts.npid=this.patient.getNationalID(),this.facts.givenName=this.patient.getGivenName(),this.facts.familyName=this.patient.getFamilyName(),this.facts.currentTA=this.patient.getCurrentTA(),this.facts.district=this.patient.getCurrentDistrict(),this.facts.village=this.patient.getCurrentVillage(),this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await f["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const i=e.username.toUpperCase(),a=t.username.toUpperCase();return i<a?-1:i>a?1:0}).map(e=>{var t;let i=""+e.username;if(!Object(s["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var a;const[t]=(null===(a=e.person)||void 0===a?void 0:a.names)||[];i+=` (${t.given_name} ${t.family_name})`}return i}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>"string"===typeof e||"number"===typeof e?{label:e,value:e}:e)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},nextOfflineFlow(){const e=Object(v["a"])().nextPatientWorkflowActivity(this.patientID);return e&&e.patientUrl?this.$router.push(`${e.patientUrl}/${this.patientID}`):this.$router.push("/patient/dashboard/"+this.patientID)},async nextTask(){try{const e=this.offlineID||this.patientID;await Object(r["b"])(e,this.$router,this.$route)}catch(e){console.error("Workflow error "+e),this.gotoPatientDashboard()}},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},toConditionalOptions(e){const t=[];for(const i of e)("boolean"!==typeof i[1]||i[1])&&t.push(this.toOption(i[0]));return t},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const i=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const i=t.obs?t.obs:t;return Array.isArray(i)?e=e.concat(i):"function"===typeof i?e.push(i()):e.push(i),e},[]);return Promise.all(i)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(i){return!1}},validateSeries(e){try{for(const t in e){const i=e[t]();if(i)return i}}catch(t){return[t]}}}});const D=_;t["a"]=D},7920:function(e,t,i){"use strict";var a=i("7a23");function n(e,t,i,n,o,s){return Object(a["openBlock"])(),Object(a["createBlock"])(Object(a["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=i("9441"),s=Object(a["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),r=i("6b0d"),l=i.n(r);const c=l()(s,[["render",n]]);t["a"]=c},c21d:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));i("14d9");function a(e,t){const i=[],a=[-1,"",null,void 0];for(const n in t){if(!(n in e))continue;const o=e[n];a.includes(o)?i.push(!1):i.push(t[n](o,e))}return i.every(Boolean)}function n(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function o(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function s(e,t,i="",s="",r="priority"){const l=[];for(const n in t){const o=t[n],r=[o.target&&i&&o.target!=i,o.targetEvent&&s&&o.targetEvent!=s];r.some(Boolean)||a(e,o.conditions)&&(o.title=n,o.description&&(o.description.text=o.description.info(e)),l.push(o))}return"priority"===r?n(l):o(l)}}}]);
//# sourceMappingURL=chunk-515474f6.bddcf546.js.map