{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/Examination.vue?591c","webpack:///./src/apps/ANC/Services/anc_examination_service.ts","webpack:///./src/apps/ANC/Views/Encounters/Examination.vue","webpack:///./src/apps/ANC/Views/Encounters/Examination.vue?02c1","webpack:///./src/apps/ANC/Services/anc_current_pregnancy.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","fields","skipSummary","onFinishAction","onFinish","cancelDestinationPath","cancelDestination","_","FUNDAL_CM_TO_WEEKS","AncExaminationService","patientID","providerID","gestationWeeks","this","getEquivalentFundalHeight","AppEncounterService","getJson","programID","res","dateofLmp","p","AncCurrentPregnancyService","parseInt","calculateWeekOfFirstVisit","fundalHeight","cm","weeks","defineComponent","components","IonPage","mixins","EncounterMixinVue","data","service","watch","ready","handler","loadPregnancyStatus","getFields","immediate","methods","computedData","createEncounter","resolveObs","saveObservationList","nextTask","diagnosisOptions","onMap","ConceptService","getConceptsByCategory","name","map","c","toOption","isChecked","id","helpText","type","FieldType","TT_SELECT","validation","v","Validation","required","computedValue","buildValueCoded","value","options","yesNoOptions","buildValueText","condition","f","ultrasound","label","mapStrToOptions","TT_GROUP_SELECTOR","validateSeries","other","subGroupOptions","isEmpty","subGroupOptionValue","subgroupTitle","obs","push","concept","presentation","TT_NUMBER","dynamicHelpText","title","beforeNext","match","includes","alertConfirmation","expectedFundalHeight","expectedFundalHeightForGestationWeeks","val","rangeOf","buildValueNumber","buildObs","config","keypad","NUMBERS_WITH_UNKNOWN","min","max","ok","fetal_heart_beat","fetal_movement_felt","yesNoUnknownOptions","TT_MULTIPLE_SELECT","d","onValueUpdate","listData","l","o","footerBtns","slot","onClickComponentEvents","refreshOptions","onClick","__exports__","program","PatientProgramService","enrollProgram","setStateDate","date","setStateId","updateState","lnmpDate","theDate","Date","setDate","getDate","today","s","String","Math","floor","period","dayjs","subtract","endOf","format","setMonth","getMonth","month","AppendleadingZero","day","getFullYear"],"mappings":"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","file":"js/chunk-590f9388.8cd678e9.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { AncCurrentPregnancyService } from \"@/apps/ANC/Services/anc_current_pregnancy\";\n\nexport const FUNDAL_CM_TO_WEEKS: Record<string, number> = {\n  '12' : 13,\n  '13' : 14,\n  '14' : 16,\n  '15' : 17,\n  '16' : 18,\n  '17' : 19,\n  '18' : 20,\n  '19' : 21,\n  '20' : 22,\n  '21' : 24,\n  '22' : 25,\n  '23' : 25, // Not in the actual CM to Weeks chart reference documentation in clinics..\n  '24' : 27,\n  '25' : 28,\n  '26' : 29,\n  '27' : 30,\n  '28' : 32,\n  '29' : 33,\n  '30' : 34,\n  '31' : 35,\n  '32' : 36,\n  '33' : 37,\n  '34' : 38,\n  '35' : 39,\n  '36' : 40,\n  '37' : 42\n}\n\nexport class AncExaminationService extends AppEncounterService {\n  gestationWeeks: number;\n  constructor(patientID: number, providerID: number){\n    super(patientID, 98, providerID)\n    this.gestationWeeks = 0\n  }\n\n  expectedFundalHeightForGestationWeeks() {\n    return this.getEquivalentFundalHeight(this.gestationWeeks)\n  }\n\n  async loadPregnancyStatus() {\n    const res = await AppEncounterService.getJson(`programs/${this.programID}/patients/${this.patientID}`)\n    if (res) {\n      const dateofLmp = res['date_of_lnmp']\n      if (dateofLmp) {\n        const p = new AncCurrentPregnancyService(this.patientID, this.providerID)\n        this.gestationWeeks = parseInt(p.calculateWeekOfFirstVisit(res['date_of_lnmp']))\n      }\n    }\n  }\n\n  getEquivalentFundalWeeks(fundalHeight: number): number {\n    if (fundalHeight < 12) {\n      return FUNDAL_CM_TO_WEEKS['12']\n    }\n    if (fundalHeight > 37) {\n      return FUNDAL_CM_TO_WEEKS['37']\n    }\n    return FUNDAL_CM_TO_WEEKS[fundalHeight]\n  }\n\n  getEquivalentFundalHeight(gestationWeeks: number) {\n    for (const cm in FUNDAL_CM_TO_WEEKS) {\n      const weeks = FUNDAL_CM_TO_WEEKS[cm]\n      if (gestationWeeks <= weeks) { \n        return parseInt(cm)\n      }\n    }\n    return gestationWeeks > 42 ? 37 : gestationWeeks < 13 ? 12 : 0\n  }\n}\n","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { AncExaminationService } from \"@/apps/ANC/Services/anc_examination_service\"\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { ConceptService } from '@/services/concept_service'\nimport { isEmpty } from 'lodash'\nimport { alertConfirmation } from '@/utils/Alerts'\nimport { NUMBERS_WITH_UNKNOWN } from \"@/components/Keyboard/HisKbConfigurations\"\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    service: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n            this.service = new AncExaminationService(this.patientID, this.providerID)\n            await this.service.loadPregnancyStatus()\n            this.fields = this.getFields() as Field[]\n        } \n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      await this.service.createEncounter()\n      await this.service.saveObservationList((await this.resolveObs(computedData)))\n      this.nextTask()\n    },\n    diagnosisOptions(onMap: (item: Option) => Option) {\n        return [...ConceptService.getConceptsByCategory('anc_diagnosis'),{ name: 'None'}]\n            .map((c: any) => (onMap({\n                ...this.toOption(c.name), isChecked: false \n            })))\n    },\n    getFields() {\n      return [\n        {\n          id: 'ultrasound',\n          helpText: 'Ultrasound scan results available',\n          type: FieldType.TT_SELECT,\n          validation: (v: Option) => Validation.required(v),\n          computedValue: (v: Option) => this.service.buildValueCoded(\n            'Ultrasound', v.value\n          ),\n          options: () => this.yesNoOptions()\n        },\n        {\n            id: 'multiple_gestation',\n            helpText: 'Number of fetuses',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Multiple gestation', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => [\n                { label: 'One', value: 1 },\n                { label: 'Two', value: 2 },\n                { label: 'Three', value: 3 },\n                { label: 'Four', value: 4 },\n                { label: 'Unknown', value: 'Unknown' }\n            ]\n        },\n        {\n            id: 'liquor',\n            helpText: 'Liquor',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'LIQUOR', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.mapStrToOptions([\n                'Adequate',\n                'Not adequate',\n                'Unknown'\n            ])\n        },\n        {\n            id: 'lie',\n            helpText: 'Lie',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Lie', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.mapStrToOptions([\n                'Longitudinal',\n                'Transverse',\n                'Unknown'\n            ])\n        },\n        {\n            id: 'fetal_heart_movement_seen',\n            helpText: 'Fetal heart movement seen',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueCoded(\n                'Fetal heart movement seen', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'presentation',\n            helpText: 'Presentation',\n            type: FieldType.TT_GROUP_SELECTOR,\n            validation: (v: Option) => this.validateSeries([\n                () => Validation.required(v),\n                () => {\n                    /**\n                     * Validate if Presentation's value is selected\n                     */\n                    if (v && !v.value) {\n                        return [`Presentation cannot be Empty!`]\n                    } \n                    return null\n                },\n                () => {\n                    /**\n                     * Validate if option has subgroup options but value is not selected\n                     */\n                    if (v && v?.other?.subGroupOptions && isEmpty(v?.other?.subGroupOptionValue)) {\n                        return [`${v?.other?.subgroupTitle || 'Subgroup'} has no value selected`]\n                    }\n                    return null\n                },\n                () => {\n                    /**\n                     * Validate if the subgroup with Options has selected items\n                     */\n                    if (v && !isEmpty(v?.other?.subGroupOptionValue) \n                        && !isEmpty(v?.other?.subGroupOptionValue?.other?.options)\n                        && !v?.other?.subGroupOptionValue?.value) {\n                            return [`${v?.other?.subGroupOptionValue?.label}'s value isnt selected`]\n                        }\n                    return null\n                }\n            ]),\n            computedValue: (v: Option) => {\n                const obs = [this.service.buildValueText('Presentation', v.label)]\n                if (v?.other?.subGroupOptionValue?.value) {\n                    obs.push(this.service.buildValueText(\n                        'Position', v?.other?.subGroupOptionValue?.value\n                    ))\n                }\n                return obs\n            },\n            options: (f: any) => {\n                const toOption = (label: string, value='',other={}) => ({\n                    label, value, other\n                })\n                const subGroupOptions = [\n                    toOption('Vertex', '', {\n                        options: this.mapStrToOptions([\n                            'Left Occipito Anterior',\n                            'Left Occipito Transverse',\n                            'Left Occipito Posterior',\n                            'Right Occipito Anterior',\n                            'Right Occipito Transverse',\n                            'Right Occipito Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    this.toOption('Oblique'),\n                    this.toOption('Transverse'),\n                    this.toOption('Breech',{\n                        options: this.mapStrToOptions([\n                            'Left Sacro Anterior',\n                            'Left Sacro Transverse',\n                            'Left Sacro Posterior',\n                            'Right Sacro Anterior',\n                            'Right Sacro Transverse',\n                            'Right Sacro Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Face', '', {\n                        concept: 'Position',\n                        options: this.mapStrToOptions([\n                            'Left Mento Anterior',\n                            'Left Mento Transverse',\n                            'Left Mento Posterior',\n                            'Right Mento Anterior',\n                            'Right Mento Transverse',\n                            'Right Mento Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Shoulder', '', {\n                        options: this.mapStrToOptions([\n                            'Left Acromion Dorsal Anterior',\n                            'Left Acromion Dorsal Transverse',\n                            'Left Acromion Dorsal Posterior',\n                            'Right Acromion Dorsal Anterior',\n                            'Right Acromion Dorsal Transverse',\n                            'Right Acromion Dorsal Posterior',\n                            'Unknown'\n                        ])\n                    })\n                ]\n                return f.presentation  ? f.presentation : [\n                    toOption('Cephalic', '', {\n                        subGroupOptions,\n                        subgroupTitle: 'Cephalic Position',\n                        options: this.mapStrToOptions([\n                            'Right Occipito Anterior',\n                            'Left Occipito Anterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Breech', '', {\n                        subGroupOptions,\n                        subgroupTitle: 'Breech Position',\n                        options: this.mapStrToOptions([\n                            'Right Sacro Anterior',\n                            'Left Sacro Anterior',\n                            'Unknown'\n                        ]),\n                    }),\n                    this.toOption('Ball'),\n                    this.toOption('Nil palpable')\n                ] as Option[]\n            }\n        },\n        {\n            id: 'enter_fundal_height',\n            helpText: 'Fundal height (cm)',\n            type: FieldType.TT_NUMBER,\n            dynamicHelpText: () => {\n                const title = 'Fundal height (cm)'\n                if (this.service.gestationWeeks) {\n                    return `${title} (${this.service.gestationWeeks}wks/${this.service.getEquivalentFundalHeight(this.service.gestationWeeks)} cm)`\n                }\n                return title\n            },\n            beforeNext: async (v: Option, f: any) => {\n                if (v && `${v.value}`.match(/unknown/i) && !['Nil palpable', 'Ball'].includes(f.presentation.value)) {\n                    return (await alertConfirmation(`Do you want to proceed with Unknown Fundal height?`)) ? true : false\n                }\n                const expectedFundalHeight = this.service.expectedFundalHeightForGestationWeeks()\n                const val: string | number = v ? parseInt(v.value as string) : -1\n                if (this.service.gestationWeeks && (v && typeof val === 'number') \n                    && (val < expectedFundalHeight || val > expectedFundalHeight)) {\n                    return (await alertConfirmation(`\n                        Fundal height is not equal to expected ${expectedFundalHeight} cm from gestation weeks of ${this.service.gestationWeeks} .\n                        Are you sure about this value?`\n                    )) ? true : false\n                }\n                return true\n            },\n            validation: (v: Option) => this.validateSeries([\n                () => Validation.required(v),\n                () => v && !`${v.value}`.match(/unknown/i) \n                    ? Validation.rangeOf(v, 10, 45) \n                    : null\n            ]),\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown' \n                    ? this.service.buildValueNumber('Fundus', v.value as number)\n                    : this.service.buildObs('Fundus', {\n                        'value_coded': v.value,\n                        'value_numeric': 0\n                    })\n            },\n            config: {\n                keypad: NUMBERS_WITH_UNKNOWN\n            }\n        },\n        {\n            id: 'fetal_heart_beat',\n            helpText: 'Fetal heart beat',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Fetal Heart Beat', v.value),\n            options: () => this.mapStrToOptions([\n                'Heard',\n                'Not heard'\n            ])\n        },\n        {\n            id: 'fetal_heart_rate',\n            helpText: 'Fetal heart rate',\n            type: FieldType.TT_NUMBER,\n            validation: (v: Option) => Validation.required(v),\n            beforeNext: async (v: Option) => {\n                const min = 120\n                const max = 140\n                const val: string | number = v ? parseInt(v.value as string) : -1\n                if (v && typeof val === 'number') {\n                    if (val < min || val > max) {\n                        const ok = await alertConfirmation(`\n                            The value is out of Range of ${min} - ${max}.\n                            Are you sure about this value?`\n                        )\n                        return ok ? true : false\n                    }\n                }\n                return true\n            },\n            condition: (f: any) => f.fetal_heart_beat.value === 'Heard',\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown'\n                    ? this.service.buildValueNumber('Fetal heart movement seen', `${v.value}`)\n                    : this.service.buildObs('Fetal heart movement seen', {\n                        'value_numeric': 0, 'value_coded': v.value\n                    })\n            },\n            config: {\n                keypad: NUMBERS_WITH_UNKNOWN\n            }\n        },\n        {\n            id: 'enter_fetal_movement',\n            helpText: 'Fetal movement heard',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueCoded(\n                'Fetal movement heard', `${v.value}`),\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'fetal_movement_felt',\n            helpText: 'Fetal movement felt',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            condition: (f: any) => !['Ball', 'Nil palpable'].includes(f.presentation.label),\n            computedValue: (v: Option) => this.service.buildValueCoded('Fetal movement felt', `${v.value}`),\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'last_fmf',\n            helpText: 'Last fetal movement felt (in Weeks)',\n            type: FieldType.TT_NUMBER,\n            validation: (v: Option) => Validation.required(v),\n            condition: (f: any) => f.fetal_movement_felt.value != 'Unknown',\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown'\n                    ? this.service.buildValueNumber('Last Fetal movement felt', v.value as number)\n                    : this.service.buildObs('Last Fetal movement felt', {\n                        'value_numeric': 0, 'value_coded': v.value\n                    })\n            },\n            options: () => this.yesNoUnknownOptions()\n        },\n        {\n            id: 'diagnosis',\n            helpText: 'Diagnosis',\n            type: FieldType.TT_MULTIPLE_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option[]) => {\n                if (v && v.map(d => d.value).includes('None')) {\n                    return []\n                }\n                return v.map(d => this.service.buildValueCoded(d.label, 'Yes'))\n            },\n            onValueUpdate(listData: Option[], value: Option) {\n                return listData.map(l => {\n                    if (value.value === 'None' && l.value !='None') {\n                        l.isChecked = false\n                    }\n                    if (value.value != 'None' && value.isChecked && l.value === 'None') {\n                        l.isChecked = false\n                    }\n                    return l\n                })\n            },\n            options: () => this.diagnosisOptions(o => o),\n            config: {\n                footerBtns: [\n                    {\n                        name: \"None\",\n                        slot: \"end\",\n                        onClickComponentEvents: {\n                            refreshOptions: () => {\n                                return this.diagnosisOptions(o => {\n                                    o.isChecked = o.label === 'None'\n                                    return o\n                                })\n                            }\n                        },\n                        onClick: () => 'None'\n                    }\n                ]\n            }\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Examination.vue?vue&type=template&id=64dbe1c6&ts=true\"\nimport script from \"./Examination.vue?vue&type=script&lang=ts\"\nexport * from \"./Examination.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { PatientProgramService } from \"@/services/patient_program_service\"\nimport dayjs from \"dayjs\";\nimport { AppendleadingZero } from \"@/utils/Strs\";\n\nexport class AncCurrentPregnancyService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 81, providerID)\n    }\n\n    async enrollPatient() {\n        const program = new PatientProgramService(this.patientID)\n        /**\n         * TODO: Check if patient is already enrolled first\n        */\n        await program.enrollProgram()\n        program.setStateDate(this.date)\n        program.setStateId(118) //Currently on treatment state... Please remove this ID hack if you can\n        await program.updateState()\n    }\n\n    calculateWeekOfFirstVisit(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        const today: any = new Date(this.getDate());\n        const s = today - theDate;\n        return String(Math.floor(s / (24 * 60 * 60 * 7 * 1000)));\n    }\n\n    calculateGestationDateFromPeriod(period: number) {\n        return dayjs(this.date).subtract(period, 'months').endOf('month').format('YYYY-MM-DD')\n    }\n\n    estimateDelieveryDate(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        theDate.setMonth(theDate.getMonth() + 9);\n        const month = AppendleadingZero(theDate.getMonth()+1)\n        const day = AppendleadingZero(theDate.getDate())\n        return `${theDate.getFullYear()}-${month}-${day}`\n    }\n}\n"],"sourceRoot":""}