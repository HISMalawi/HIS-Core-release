(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-155b4dd8"],{7365:function(e,t,i){"use strict";i("13d5");var s,n=i("7a23"),o=i("ad60"),a=i("2ef0"),r=i("0fa1"),l=i("7f35"),u=i("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(s||(s={}));const c=e=>u["b"].toStandardHisDisplayFormat(e),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(l["a"])("Data Integrity Issue Found","Patient died on "+c(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?s.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?s.CHANGE_PATIENT_OUTCOME:s.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const i=await Object(l["a"])("Data integrity issue found","",`Session date ${c(t)} is less than birth date of ${c(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===i?s.CHANGE_SESSION_DATE:s.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:i,apiDate:n})=>{const o=await Object(l["c"])("Please select a provider for "+t,`BDE: ${c(i)} | Current: ${c(n)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:s.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:s.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}};var h=i("c21d"),p=i("7920"),v=i("b5e4"),T=i("8e8b"),m=i("fe70"),_=Object(n["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,birthDate:"",outcome:"",outcomeStartDate:""},formLabel:"",ready:!1}),watch:{$route:{handler(e){e.params.patient_id&&this.patientID!=e.params.patient_id&&(this.formLabel=(""+e.name).toUpperCase(),this.patientID=parseInt(e.params.patient_id),T["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0})})}))},immediate:!0,deep:!0}},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{runflowState(e,t=null){const i={};if(i[s.SET_PROVIDER]=e=>{const[t]=e.split(" "),i=Object(a["find"])(this.providers,{username:t});return i&&(this.providerID=i.person_id),s.CONTINUE},i[s.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),s.EXIT),i[s.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),s.EXIT),i[s.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),s.EXIT),e in i)return i[e](t)},async checkEncounterGuidelines(){const e=Object(h["a"])(this.facts,d);for(const a in e){var t,i;const r=e[a];if(null!==r&&void 0!==r&&null!==(t=r.actions)&&void 0!==t&&t.alert){var n;const e=this.runflowState(await(null===r||void 0===r||null===(n=r.actions)||void 0===n?void 0:n.alert(this.facts)));if(e===s.EXIT)return}if(null!==r&&void 0!==r&&null!==(i=r.actions)&&void 0!==i&&i.selection){var o;const e=await(null===r||void 0===r||null===(o=r.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await T["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=e.programID===o["a"].getProgramID(),this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(v["c"])(""+e)}this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await T["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const i=e.username.toUpperCase(),s=t.username.toUpperCase();return i<s?-1:i>s?1:0}).map(e=>{var t;let i=""+e.username;if(!Object(a["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var s;const[t]=(null===(s=e.person)||void 0===s?void 0:s.names)||[];i+=` (${t.given_name} ${t.family_name})`}return i}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>"string"===typeof e||"number"===typeof e?{label:e,value:e}:e)},patientDashboardUrl(){return"/patient/dashboard/"+this.patientID},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){(await m["d"].create({backdropDismiss:!1,message:"Checking Next task.."})).present();try{await Object(r["b"])(this.patientID,this.$router,this.$route)}catch(e){console.error(e)}m["d"].getTop().then(e=>e&&m["d"].dismiss())},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},toConditionalOptions(e){const t=[];for(const i of e)("boolean"!==typeof i[1]||i[1])&&t.push(this.toOption(i[0]));return t},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const i=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const i=t.obs?t.obs:t;return Array.isArray(i)?e=e.concat(i):"function"===typeof i?e.push(i()):e.push(i),e},[]);return Promise.all(i)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(i){return!1}},validateSeries(e){try{for(const t in e){const i=e[t]();if(i)return i}}catch(t){return[t]}}}});const f=_;t["a"]=f},"78a8":function(e,t,i){"use strict";i.r(t);var s=i("7a23");function n(e,t,i,n,o,a){const r=Object(s["resolveComponent"])("his-standard-form"),l=Object(s["resolveComponent"])("ion-page");return Object(s["openBlock"])(),Object(s["createBlock"])(l,null,{default:Object(s["withCtx"])(()=>[Object(s["createVNode"])(r,{formLabel:"Testing",fields:e.fields,onFinishAction:e.onFinish,onOnIndex:t[1]||(t[1]=t=>e.fieldComponent=""),activeField:e.fieldComponent,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","activeField","cancelDestinationPath"])]),_:1})}i("13d5");var o=i("7365"),a=i("d95e"),r=i("8a30"),l=i("cc6f");class u extends l["a"]{constructor(e,t=-1){super(e,197,t)}}var c=i("b5e4"),d=i("7f35"),h=i("2ef0"),p=i("74f4"),v=i("8e8b"),T=Object(s["defineComponent"])({components:{IonPage:r["D"]},mixins:[o["a"]],data:()=>({service:{},fieldComponent:"",hivTestRepeatCounter:0}),watch:{ready:{handler(e){e&&(this.service=new u(this.patientID,this.providerID),this.fields.push(this.accessPointTypeField()),this.fields.push(this.facilityAccessPointField()),this.fields.push(this.communityAccessPoints()),this.fields.push(this.testsOfferedField()),this.fields=this.fields.concat([this.lastHivTestResultField(),this.lastHivTestTypeField(),this.lastTimeHIVTestedField(),this.arvHistoryField(),this.drugTakenField(),this.timeSinceDrugTaken(),this.todayHivTestField(),this.clientRiskCategoryField(),this.hivTestOneField(),this.hivTestTwoField(),this.hivTestThreeField(),this.hivResultHiddenField(),this.recencyTestConsetField(),this.recencyTestField(),this.isDBSsampleCollected(),this.dbsSpecimenID()]),this.fields.push(this.hepatitisBField()),this.fields.push(this.syphilisResultField()),this.fields.push(this.resultGivenToClientField()))},immediate:!0}},methods:{async onFinish(e,t){const i=await this.resolveObs(t);await this.service.createEncounter(),await this.service.saveObservationList(i),this.facts.isEnrolledInProgam||(await new p["a"](this.patientID).enrollProgram(),v["a"].invalidate("PATIENT_PROGRAM")),this.nextTask()},inclonclusiveResultDialog(){return Object(d["a"])("Reschedule test","","HIV result is inconclusive, schedule another test in 2 weeks",[{name:"Ok",slot:"start"}])},testOffered(e,t){return e.tests_offered.some(e=>e.value===t)},accessPointTypeField(){return{id:"accesspoint_type",helpText:"Access point type",type:a["b"].TT_SELECT,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueCoded("HTS Access Type",e.value)}),options:()=>this.mapStrToOptions(["Health Facility","Community"])}},facilityAccessPointField(){return{id:"facility_access_points",helpText:"Health facility access points",type:a["b"].TT_SELECT,isRequired:()=>!0,condition:e=>"Health Facility"===e.accesspoint_type.value,finalComputedValue:e=>({obs:this.service.buildValueText("Location where test took place",e.value)}),options:()=>this.toConditionalOptions([["VCT"],["ANC First Visit"],["Inpatient"],["STI"],["PMTCT FUP",this.patient.isFemale()],["Index"],["Paediatric"],["VMMC",this.patient.isMale()],["Malnutrition"],["TB"],["OPD"],["Other PITC"],["SNS"]])}},communityAccessPoints(){return{id:"community_access_points",helpText:"Community access points",type:a["b"].TT_SELECT,condition:e=>"Community"===e.accesspoint_type.value,isRequired:()=>!0,finalComputedValue:e=>({obs:this.service.buildValueText("Location where test took place",e.value)}),options:()=>this.toConditionalOptions([["VCT"],["Index"],["VMMC",this.patient.isMale()],["Other"],["SNS"],["Mobile"]])}},testsOfferedField(){return{id:"tests_offered",helpText:"Tests to be offered today?",type:a["b"].TT_MULTIPLE_SELECT,isRequired:()=>!0,beforeNext:async e=>!e.some(e=>"HIV"===e.value)||!!await Object(c["a"])("Does client consent for HIV testing?"),options:e=>{const t=t=>{const i=!!e.tests_offered&&e.tests_offered.some(e=>e.value===t);return{label:t,value:t,isChecked:i}};return[t("HIV"),t("Syphilis"),t("Hepatitis B")]}}},lastHivTestResultField(){return{id:"last_hiv_result",helpText:"Last HIV Test Results",type:a["b"].TT_SELECT,isRequired:()=>!0,condition:e=>this.testOffered(e,"HIV"),finalComputedValue:e=>({obs:this.service.buildValueCoded("Previous HIV Test Results",e.value)}),options:()=>this.toConditionalOptions([["Never Tested"],["Negative"],["Positive"],["Exposed infant",this.patient.getAge()>14],["Inconclusive"]])}},lastHivTestTypeField(){return{id:"last_hiv_perfomed",helpText:"Last HIV test performed",type:a["b"].TT_SELECT,isRequired:()=>!0,condition:e=>"Never Tested"!=e.last_hiv_result.value,finalComputedValue:e=>({obs:this.service.buildValueCoded("Previous HIV test done",e.value)}),options:e=>this.toConditionalOptions([["Self","Last Exposed infant"!=e.last_hiv_result.value],["Professional"]])}},lastTimeHIVTestedField(){return{id:"last_time_hiv_tested",helpText:"Time since last HIV test",type:a["b"].TT_AGE_INPUT,condition:e=>!!e.last_hiv_perfomed.value,isRequired:()=>!0,beforeNext:async e=>{const t=[/day/i.test(""+e.value)&&e.other.value>=365,/week/i.test(""+e.value)&&e.other.value>=52,/month/i.test(""+e.value)&&e.other.value>=12,/year/i.test(""+e.value)&&e.other.value>=1].some(Boolean);return t&&await Object(d["a"])("INFO","","Client is eligible for an HIV test",[{name:"Ok",slot:"start",color:"success"}]),!0},validation:e=>parseInt(""+e.other.value)<=0?["Enter a number greater than zero"]:e.other.value.length>1&&"0"===e.other.value[0]?[`Value ${e.other.value} is invalid!`]:null,finalComputedValue:e=>({obs:this.service.buildValueText("Time of HIV test",e.value+" ago")}),config:{excludeUnits:["Hours"]}}},arvHistoryField(){return{id:"arv_receipt",helpText:"Drug history",type:a["b"].TT_YES_NO,isRequired:()=>!0,condition:e=>this.testOffered(e,"HIV"),finalComputedValue:e=>({obs:this.service.buildValueCoded("Antiretroviral medication history",e)}),options:()=>[{label:"Ever taken ARV or PrEP/PEP before?",value:"",values:this.yesNoOptions()}]}},drugTakenField(){return{id:"drug_taken",helpText:"Drug taken",type:a["b"].TT_MULTIPLE_SELECT,isRequired:()=>!0,condition:e=>"Yes"===e.arv_receipt,finalComputedValue:e=>({obs:e.map(e=>this.service.buildValueCoded("Given drugs",e.value))}),options:()=>this.mapStrToOptions(["Prep or infant NVP","ARV","PEP"])}},timeSinceDrugTaken(){return{id:"time_since_last_drug_taken",helpText:"Time since last taken medication",type:a["b"].TT_AGE_INPUT,condition:e=>e.drug_taken.length,finalComputedValue:e=>({obs:this.service.buildValueText("Time since last taken medication",e.value+" ago")}),isRequired:()=>!0,config:{excludeUnits:["Hours"]}}},clientRiskCategoryField(){return{id:"client_risk_category",helpText:"Client Risk Category",type:a["b"].TT_SELECT,isRequired:()=>!0,condition:e=>this.testOffered(e,"HIV"),finalComputedValue:e=>({obs:this.service.buildValueCoded("client risk category",e.value)}),options:()=>this.mapStrToOptions(["Low risk","On-going risk","High risk event in last 3 months","Risk assessment not done"])}},todayHivTestField(){return{id:"today_hiv_test",helpText:"Type of HIV Test being performed today",type:a["b"].TT_SELECT,isRequired:()=>!0,condition:e=>this.testOffered(e,"HIV"),finalComputedValue:e=>({obs:this.service.buildValueCoded("Type of HIV test",e.value)}),options:e=>{const t="Health Facility"===e.accesspoint_type.value;return this.toConditionalOptions([["Initial HIV test"],["Confirmatory HIV test",t],["Retesting",t]])}}},hivTestOneField(){const e="HIV Test 1";let t={},i=e;return{id:"hiv_test_one",helpText:e,type:a["b"].TT_SELECT,dynamicHelpText:()=>(this.hivTestRepeatCounter&&(i=`${e} (Repeat: ${this.hivTestRepeatCounter})`),i),updateHelpTextOnValue:t=>null===t||this.hivTestRepeatCounter<=0?e:i,summaryMapValue:(e,t,i)=>i.summary,isRequired:()=>!0,onClear:()=>this.hivTestRepeatCounter=0,condition:e=>e.today_hiv_test.value,onConditionFalse:()=>this.hivTestRepeatCounter=0,computedValue:i=>{let s=i.value;return this.hivTestRepeatCounter>0?(s="Positive"===i.value?"Inconclusive":i.value,t["Repeat "+e]={formData:i,obs:this.service.buildValueCoded("Immediate Repeat Test 1 Result",s)}):(t={},t[e]={obs:this.service.buildValueCoded("Test 1",i.value),formData:i}),Object.keys(t).reduce((e,i)=>(e.obs.push(t[i].obs),e.summary.push({label:i,value:t[i].formData.value}),e),{result:s,obs:[],summary:[]})},options:()=>this.mapStrToOptions(["Positive","Negative"]),config:{onInitValue:(e,t,i)=>this.hivTestRepeatCounter>0&&!/inconclusive/i.test(i.hiv_test_one.result)?null:e,overrideDefaultFooterBtns:{nextBtn:{onClick:e=>{this.hivTestRepeatCounter>=1&&"Positive"===e.hiv_test_one.value&&this.inclonclusiveResultDialog(),this.fieldComponent="_NEXT_FIELD_"}}}}}},hivTestTwoField(){const e="HIV Test 2";let t={},i=e;return{id:"hiv_test_two",helpText:e,type:a["b"].TT_SELECT,dynamicHelpText:()=>(this.hivTestRepeatCounter&&(i=`${e} (Repeat: ${this.hivTestRepeatCounter})`),i),updateHelpTextOnValue:t=>null===t||this.hivTestRepeatCounter<=0?e:i,onClear:()=>this.hivTestRepeatCounter=0,isRequired:()=>!0,condition:(e,t)=>!/inconclusive/i.test(t.hiv_test_one.result)&&/positive/i.test(t.hiv_test_one.result)&&/facility/i.test(e.accesspoint_type.value),summaryMapValue:(e,t,i)=>i.summary,defaultOutput:(e,t)=>this.hivTestRepeatCounter>0&&/inconclusive|negative/i.test(t.hiv_test_one.result)?e.hiv_test_two:null,defaultComputedOutput:(e,i)=>this.hivTestRepeatCounter>0&&/inconclusive|negative/i.test(i.hiv_test_one.result)?i.hiv_test_two:(t={},null),computedValue:i=>(this.hivTestRepeatCounter>0&&!Object(h["isEmpty"])(t)?t["Repeat "+e]={formData:i,obs:this.service.buildValueCoded("Immediate Repeat Test 2 Result",i.value)}:(t={},t[e]={obs:this.service.buildValueCoded("Test 2",i.value),formData:i}),Object.keys(t).reduce((e,i)=>(e.obs.push(t[i].obs),e.summary.push({label:i,value:t[i].formData.value}),e),{obs:[],summary:[]})),options:()=>this.mapStrToOptions(["Positive","Negative"]),config:{overrideDefaultFooterBtns:{nextBtn:{onClick:e=>{this.hivTestRepeatCounter<1&&"Negative"===e.hiv_test_two.value?(Object(c["e"])("Repeating test one for Negative result.."),++this.hivTestRepeatCounter,this.fieldComponent="hiv_test_one"):(1===this.hivTestRepeatCounter&&"Negative"===e.hiv_test_two.value&&this.inclonclusiveResultDialog(),this.fieldComponent="_NEXT_FIELD_")}}}}}},hivTestThreeField(){return{id:"hiv_test_three",helpText:"HIV Test 3",type:a["b"].TT_SELECT,isRequired:()=>!0,beforeNext:(e,t)=>("Negative"===e.value&&"Positive"===t.hiv_test_one.value&&this.inclonclusiveResultDialog(),!0),condition:e=>"Positive"===e.hiv_test_two.value,computedValue:e=>({obs:this.service.buildValueCoded("Test 3",e.value)}),options:()=>this.mapStrToOptions(["Positive","Negative"])}},hivResultHiddenField(){return{id:"hiv_result",helpText:"HIV Result",type:a["b"].TT_HIDDEN,condition:e=>this.testOffered(e,"HIV"),defaultValue:(e,t)=>{let i="";const s=[t.hiv_test_one&&/inconclusive/i.test(t.hiv_test_one.result),"Positive"===e.hiv_test_one.value&&e.hiv_test_two&&"Negative"===e.hiv_test_two.value,"Positive"===e.hiv_test_one.value&&e.hiv_test_three&&"Negative"===e.hiv_test_three.value].some(Boolean);return s?i="Inconclusive":e.hiv_test_three?i=e.hiv_test_three.value:e.hiv_test_one&&(i=e.hiv_test_one.value),this.toOption(i)},computedValue:e=>({resultTurple:["HIV",e.value],obs:this.service.buildValueCoded("HIV status",e.value)})}},recencyTestConsetField(){return{id:"recency_test_consent",helpText:"Consent",type:a["b"].TT_YES_NO,isRequired:()=>!0,condition:e=>"Positive"===e.hiv_test_two.value,finalComputedValue:e=>({obs:this.service.buildValueCoded("Patient consents to recency test",e)}),options:()=>[{label:"Does client consent for Recency Testing?",value:"",values:this.yesNoOptions()}]}},recencyTestField(){return{id:"recency_test",helpText:"Recency Test",type:a["b"].TT_SELECT,isRequired:()=>!0,condition:e=>"Yes"===e.recency_test_consent,finalComputedValue:e=>({obs:this.service.buildValueCoded("Recency Test",e.value)}),options:()=>this.mapStrToOptions(["Long-Term","Recent",{label:"Negative (Invalid)",value:"Invalid"},"Not Done"])}},isDBSsampleCollected(){return{id:"dbs_sample_collection",helpText:"DBS Sample",type:a["b"].TT_YES_NO,isRequired:()=>!0,condition:e=>"Recent"===e.recency_test.value,finalComputedValue:e=>({obs:this.service.buildValueCoded("Is DBS Sample Collected",e)}),options:()=>[{label:"Is DBS Sample Collected?",value:"",values:this.yesNoOptions()}]}},dbsSpecimenID(){return{id:"dbs_specimen_id",helpText:"DBS Specimen ID",type:a["b"].TT_TEXT,condition:e=>"Yes"===e.dbs_sample_collection,finalComputedValue:e=>({obs:this.service.buildValueText("DBS Specimen ID",e.value)}),validation:e=>/^[A-Z]{2}[0-9]{5}$/i.test(""+e.value)?null:[`Invalid DBS Specimen ID "${e.value}". Expected format of 2 Letters and 5 Digits`],isRequired:()=>!0}},hepatitisBField(){return{id:"hepatitis_b_result",helpText:"Hepatitis B Result",type:a["b"].TT_SELECT,isRequired:()=>!0,condition:e=>this.testOffered(e,"Hepatitis B"),computedValue:e=>({resultTurple:["Hepatitis B",e.value],obs:this.service.buildValueCoded("Hepatitis B Test Result",e.value)}),options:()=>this.mapStrToOptions(["Positive","Negative"])}},syphilisResultField(){return{id:"syphilis_result",helpText:"Syphilis Result",type:a["b"].TT_SELECT,isRequired:()=>!0,condition:e=>this.testOffered(e,"Syphilis"),computedValue:e=>({resultTurple:["Syphilis",e.value],obs:this.service.buildValueCoded("Syphilis Test Result",e.value)}),options:()=>this.mapStrToOptions(["Positive","Negative"])}},resultGivenToClientField(){return{id:"result_given_to_client",helpText:"Results Given to Client",type:a["b"].TT_TABLE_VIEWER,appearInSummary:()=>!1,options:(e,t)=>[{label:"",value:"",other:{rows:Object.values(t).reduce((e,t)=>(null!==t&&t.resultTurple&&e.push(t.resultTurple),e),[])}}]}}}}),m=i("d959"),_=i.n(m);const f=_()(T,[["render",n]]);t["default"]=f},7920:function(e,t,i){"use strict";var s=i("7a23");function n(e,t,i,n,o,a){return Object(s["openBlock"])(),Object(s["createBlock"])(Object(s["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,8,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=i("9441"),a=Object(s["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),r=i("d959"),l=i.n(r);const u=l()(a,[["render",n]]);t["a"]=u},c21d:function(e,t,i){"use strict";function s(e,t){const i=[],s=[-1,"",null,void 0];for(const n in t){if(!(n in e))continue;const o=e[n];s.includes(o)?i.push(!1):i.push(t[n](o,e))}return i.every(Boolean)}function n(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function o(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function a(e,t,i="",a="",r="priority"){const l=[];for(const n in t){const o=t[n],r=[o.target&&i&&o.target!=i,o.targetEvent&&a&&o.targetEvent!=a];r.some(Boolean)||s(e,o.conditions)&&(o.title=n,o.description&&(o.description.text=o.description.info(e)),l.push(o))}return"priority"===r?n(l):o(l)}i.d(t,"a",(function(){return a}))}}]);
//# sourceMappingURL=chunk-155b4dd8.672d72fa.js.map