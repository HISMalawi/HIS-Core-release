{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?e144","webpack:///./src/apps/ART/services/reports/art_report_service.ts","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/apps/ART/services/reports/patient_report_service.ts","webpack:///./src/apps/ART/views/reports/inconsistencies/PatientVisitStats.vue?672a","webpack:///./src/apps/ART/views/reports/inconsistencies/PatientVisitStats.vue","webpack:///./src/apps/ART/views/reports/inconsistencies/PatientVisitStats.vue?524e"],"names":["defineComponent","data","fields","report","reportReady","period","startDate","endDate","customFileName","drillDownCache","methods","formatGender","gender","toGenderString","toDate","date","HisDate","toStandardHisDisplayFormat","sortByArvNumber","attr","sort","a","b","getArvInt","e","console","error","arv","split","arvNumStr","arvNumInt","parseInt","tdARV","params","table","td","sortValue","this","confirmPatient","patient","$router","push","drilldownAsyncRows","title","columns","asyncRows","canExport","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","modal","present","drilldownData","rows","rowParser","getDefaultDrillDownTable","thTxt","tableRows","ARV_NUM_INDEX","t","map","defaultRow","id","index","isArray","num","key","rest","Patientservice","findByID","row","getArvNumber","getGender","tdDate","getBirthdate","toString","tdBtn","path","Promise","all","runTableDrill","drill","values","length","tdLink","getQuaterOptions","quarters","ArtReportService","getReportQuarters","q","label","name","value","start","other","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","getSessionDate","minDate","helpText","type","FieldType","TT_SELECT","condition","validation","val","Validation","required","options","items","generateDateFields","f","quarter","estimation","allowUnknown","computeValue","unload","d","s","c","end_date","_","start_date","__exports__","programID","getProgramID","url","getJson","buildRequest","config","payload","year","daysInMonth","m","dayjs","startMonth","endMonth","qtr","end","qtrBounds","getQuarterBounds","getFullYear","Date","qtrName","maxQuarters","qtrs","currDate","currYear","curYr","getMonth","getDate","currentQtr","getQtrByDate","i","buildQtrObj","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinishAction","onOnIndex","onIndex","components","TouchScreenForm","emits","props","Function","Boolean","default","String","Object","formData","computedData","$emit","AGE_GROUPS","PatientReportService","range","getReport","outcome","_hoisted_1","_createTextVNode","_hoisted_2","class","_hoisted_3","_component_his_standard_form","_resolveComponent","_component_ion_title","_component_ion_toolbar","_component_ion_header","_component_ApexChart","_component_view_port","_component_ion_content","_component_ion_button","_component_ion_footer","_component_ion_page","_Fragment","_withDirectives","_createVNode","onPeriod","_vShow","canShowReport","_withCtx","width","height","chartType","chartOptions","series","onClick","pointSelection","color","slot","size","_createCommentVNode","ApexChart","IonPage","IonHeader","IonTitle","IonToolbar","IonContent","IonFooter","IonButton","ViewPort","HisStandardForm","mixins","ReportMixin","patientPresent","guardianPresent","bothPresent","text","yaxis","plotAreaHeight","xaxis","created","conf","presentLoading","setStartDate","setEndDate","getPatientVisitTypes","res","buildSeries","loadingController","message","backdropDismiss","loading","dataPointIndex","seriesIndex","sIndex","raw","visitDates","uniq","keys","setValueGroup","group","comparator","entries","filter","v","patient_present","guardian_present","sortSeries","valueGroup","getTime","sortData","guardian"],"mappings":"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","file":"js/chunk-373eba62.4194b7c1.js","sourcesContent":["\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport { toGenderString } from \"@/utils/Strs\"\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            return toGenderString(gender)\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const [prfx, art, arvNumStr] = arv.split('-')\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            const [oldIndex, ...rest] = this.drillDownCache[key]\n                            return [index, ...rest] // Assign new index number and maintain patient record\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport dayjs from \"dayjs\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport class ArtReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    quarter: string\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.quarter = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setQuarter(quarter: string) {\n        this.quarter = quarter\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.quarter) {\n            payload['quarter'] = this.quarter\n        }\n        return { ...payload, ...config }\n    }\n\n    static getQuarterBounds(year: number) {\n        const daysInMonth = (m: string) => dayjs(`${year}-${m}-01`).daysInMonth()\n        const startMonth = (m: string) => `${year}-${m}-01 00:00`\n        const endMonth = (m: string) => `${year}-${m}-${daysInMonth(m)} 00:00`\n\n        return {\n            'Q1': {\n                qtr: 1,\n                start: startMonth('01'),\n                end: endMonth('03')\n            },\n            'Q2': {\n                qtr: 2,\n                start: startMonth('04'),\n                end: endMonth('06')\n            },\n            'Q3': {\n                qtr: 3,\n                start: startMonth('07'),\n                end: endMonth('09')\n            },\n            'Q4': {\n                qtr: 4,\n                start: startMonth('10'),\n                end: endMonth('12')\n            }\n        }\n    }\n\n    static getQtrByDate(date: Date) {\n        const qtrBounds: any = this.getQuarterBounds(date.getFullYear())\n        for(const qtr in qtrBounds) {\n            const { start, end } = qtrBounds[qtr]\n            if (date >= new Date(start) && date <= new Date(end)) {\n                return qtrBounds[qtr]\n            }\n        }\n        return null\n    }\n\n    static buildQtrObj(qtrName: string, year: number): QuarterInterface {\n        const qtrBounds: any = this.getQuarterBounds(year)\n        const { start, end } = qtrBounds[qtrName]\n        return {\n            start,\n            end,\n            name: `${qtrName} ${year}`,\n        }\n    }\n\n    static getReportQuarters(maxQuarters=5) {\n        const qtrs: QuarterInterface[] = [];\n        let currDate = new Date();\n        let currYear = currDate.getFullYear();\n        const curYr = currYear\n        \n        currDate = new Date(`${curYr}-${currDate.getMonth() + 1}-${currDate.getDate()} 00:00`);\n        const currentQtr = this.getQtrByDate(currDate);\n        let qtr = currentQtr.qtr;\n        let i = 0;\n\n        if (qtr === 4) qtrs.push(this.buildQtrObj('Q1', currYear + 1))\n\n        while (i < maxQuarters) {\n          // Add following quarter\n          if (i === 0 && qtr < 4) qtrs.push(this.buildQtrObj(`Q${qtr + 1}`, currYear))\n\n          qtrs.push(this.buildQtrObj(`Q${qtr}`, currYear))\n          qtr = qtr > 0 ? (qtr -= 1) : qtr;\n          currYear = qtr == 0 ? currYear - 1 : currYear;\n          qtr =  qtr == 0 ? ( qtr += 4) : qtr;\n          i++;\n        }\n        return qtrs;\n    }\n}\n","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ArtReportService } from \"./art_report_service\";\n\nexport const AGE_GROUPS = [\n    '<1 year',\n    '1-4 years', \n    '5-9 years', \n    '10-14 years', \n    '15-19 years', \n    '20-24 years', \n    '25-29 years', \n    '30-34 years', \n    '35-39 years', \n    '40-44 years', \n    '45-49 years', \n    '50-54 years',\n    '55-59 years',\n    '60-64 years',\n    '65-69 years',\n    '70-74 years',\n    '75-79 years',\n    '80-84 years',\n    '85-89 years',\n    '90 plus years'\n]\n\nexport class PatientReportService extends ArtReportService {\n    constructor() {\n        super()\n    }\n    \n    getBookedAppointments(date: string) {\n        return ArtReportService.getJson(`programs/${this.programID}/scheduled_appointments`, { date })\n    }\n\n    getViralLoadResults(range: string) {\n        return this.getReport(`/programs/${this.programID}/reports/high_vl_patients`, { range })\n    }\n\n    getOtherOutcome(outcome: string) {\n        return this.getReport('patient_outcome_list', { outcome })\n    }\n\n    getPatientVisitTypes() {\n        return this.getReport('patient_visit_types')\n    }\n\n    getClientsDueForVl() {\n        return this.getReport('clients_due_vl')\n    }\n\n    getClientRentention() {\n        return this.getReport(`/programs/${this.programID}/reports/retention`)\n    }\n\n    getExternalConsultationClients() {\n        return this.getReport(`${this.programID}/external_consultation_clients`)\n    }\n\n    getMissedAppointments() {\n        return this.getReport('missed_appointments')\n    }\n\n    getPregnantWomen() {\n        return this.getReport(`/programs/${this.programID}/reports/pregnant_patients`)\n    }\n\n    getArchivingCandidates() {\n        return ArtReportService.getJson(`programs/${this.programID}/reports/archiving_candidates`, { \n            'start_date': this.date\n        })\n    }\n\n    getIncompleteVisits() {\n        return this.getReport('incomplete_visits', {\n            \"tool_name\": \"INCOMPLETE VISITS\",\n        })\n    }\n}\n","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Patient visit report \")\nconst _hoisted_2 = { class: \"view-port-content\" }\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Finish \")\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ApexChart = _resolveComponent(\"ApexChart\")\n  const _component_view_port = _resolveComponent(\"view-port\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _withDirectives(_createVNode(_component_his_standard_form, {\n      onOnFinish: _ctx.onPeriod,\n      skipSummary: true,\n      fields: _ctx.fields\n    }, null, 8, [\"onOnFinish\", \"fields\"]), [\n      [_vShow, !_ctx.canShowReport]\n    ]),\n    (_ctx.canShowReport)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 0 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_title, null, {\n                      default: _withCtx(() => [\n                        _hoisted_1\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_view_port, null, {\n                  default: _withCtx(() => [\n                    _createVNode(\"div\", _hoisted_2, [\n                      _createVNode(_component_ApexChart, {\n                        width: _ctx.width,\n                        height: _ctx.height,\n                        type: _ctx.chartType,\n                        options: _ctx.chartOptions,\n                        series: _ctx.series,\n                        onClick: _ctx.pointSelection\n                      }, null, 8, [\"width\", \"height\", \"type\", \"options\", \"series\", \"onClick\"])\n                    ])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_button, {\n                      slot: \"end\",\n                      size: \"large\",\n                      \"router-link\": \"/\",\n                      color: \"success\"\n                    }, {\n                      default: _withCtx(() => [\n                        _hoisted_3\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64 /* STABLE_FRAGMENT */))\n}","\nimport { defineComponent } from 'vue'\nimport {\n    IonPage,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonContent,\n    IonFooter,\n    IonButton,\n    loadingController\n} from \"@ionic/vue\"\nimport ViewPort from \"@/components/DataViews/ViewPort.vue\"\nimport { PatientReportService } from \"@/apps/ART/services/reports/patient_report_service\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport { uniq } from 'lodash';\nimport ApexChart from \"vue3-apexcharts\";\n\nexport default defineComponent({\n    components: {\n        ApexChart,\n        IonPage,\n        IonHeader,\n        IonTitle,\n        IonToolbar,\n        IonContent,\n        IonFooter,\n        IonButton,\n        ViewPort,\n        HisStandardForm\n    },\n    mixins: [ReportMixin],\n    data: () => ({\n        chartType: 'area',\n        height: '100%',\n        width: '100%',\n        canShowReport: false,\n        report: {} as any,\n        series: [] as any,\n        patientPresent: {} as any,\n        guardianPresent: {} as any,\n        bothPresent: {} as any,\n        chartOptions: {\n            title : {\n                text: \"HIV Reception encounters\"\n            },\n            yaxis: {\n                title: { \n                    text: \"Number of clients\"\n                },\n                plotAreaHeight: 800,\n            },\n            xaxis: {\n                type: 'datetime'\n            }\n        } as any\n    }),\n    created() {\n        this.fields = this.getDateDurationFields()\n    },\n    methods: {\n        async onPeriod(_: any, conf: any) {\n            await this.presentLoading()\n            this.canShowReport = true\n            this.report = new PatientReportService()\n            this.report.setStartDate(conf.start_date)\n            this.report.setEndDate(conf.end_date)\n            const res = await this.report.getPatientVisitTypes()\n            this.series = this.buildSeries(res)\n            loadingController.dismiss()\n        },\n        async presentLoading() {\n            const loading = await loadingController\n                .create({\n                    message: 'Please wait...',\n                    backdropDismiss: false\n                })\n            await loading.present()\n        },\n        pointSelection(e: any, c: any, config: any) {\n            try {\n                const { dataPointIndex, seriesIndex } = config\n                const sIndex = seriesIndex <= 0 ? 0 : seriesIndex\n                this.runTableDrill(this.series[sIndex].raw[dataPointIndex])\n            } catch (e) {\n                //TODO\n            }\n        },\n        buildSeries(data: any) {\n            const visitDates: string[] = uniq(Object.keys(data))\n            const setValueGroup = (\n                date: string,\n                group: Record<string, any>,\n                comparator: any) => {\n\n                if (!(date in group)) group[date] = []\n\n                const values = Object.entries(data[date])\n                    .filter(([_, v]: any) => comparator(\n                        v.patient_present,\n                        v.guardian_present\n                    ))\n                    .map(([patient]) => patient)\n\n                group[date] = [...group[date], ...values]\n                return group\n            }\n\n            const sortSeries = (valueGroup: any) => {\n                return visitDates.map((date: string) => [\n                    new Date(date).getTime(), \n                    valueGroup[date].length\n                ])\n            }\n\n            const sortData = (valueGroup: any) => visitDates.map((date: string) => valueGroup[date])\n    \n            for(const date in data) {\n                setValueGroup(date, this.patientPresent, (patient: any, guardian: any) => {\n                    return patient && !guardian\n                })\n                setValueGroup(date, this.guardianPresent, (patient: any, guardian: any) => {\n                    return !patient && guardian\n                })\n                setValueGroup(date, this.bothPresent, (patient: any, guardian: any) => {\n                    return patient && guardian\n                })\n            }\n\n            return [\n                {\n                    name: 'Patient present',\n                    raw: sortData(this.patientPresent),\n                    data: sortSeries(this.patientPresent)\n                },\n                {\n                    name: 'Guardian present',\n                    raw: sortData(this.guardianPresent),\n                    data: sortSeries(this.guardianPresent)\n                },\n                {\n                    name: 'Both patient and guardian present',\n                    raw: sortData(this.bothPresent),\n                    data: sortSeries(this.bothPresent)\n                }\n            ]\n        }\n    }\n})\n","import { render } from \"./PatientVisitStats.vue?vue&type=template&id=2fbacc90&ts=true\"\nimport script from \"./PatientVisitStats.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientVisitStats.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}