{"version":3,"sources":["webpack:///./src/apps/OPD/views/reports/moh/IDSR/IDSRTableTemplate.vue?e910","webpack:///./src/apps/OPD/views/reports/moh/IDSR/IDSRTableTemplate.vue","webpack:///./src/apps/OPD/views/reports/moh/IDSR/IDSRTableTemplate.vue?6f3c","webpack:///./src/apps/OPD/services/idsr_service.ts","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/apps/OPD/views/reports/moh/IDSR/IDSRMonthly.vue?5a57","webpack:///./src/apps/OPD/views/reports/moh/IDSR/IDSRMonthly.vue","webpack:///./src/apps/OPD/views/reports/moh/IDSR/IDSRMonthly.vue?1b77","webpack:///./src/apps/OPD/views/reports/ReportMixin.vue","webpack:///./src/apps/OPD/views/reports/ReportMixin.vue?c14d","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue?88ad","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue?9f3c","webpack:///./src/apps/OPD/services/opd_report_service.ts"],"names":["_hoisted_1","class","style","render","_ctx","_cache","$props","$setup","$data","$options","_component_report_table","_resolveComponent","_openBlock","_createBlock","_createVNode","columns","rows","config","tableCssTheme","defineComponent","components","ReportTable","data","conditions","lessThanFiveYears","greaterAndEqualFiveYears","total","table","thTxt","colspan","sortable","exportable","props","methods","renderResults","report","IDSRReportService","Conditions","this","params","length","buildRows","onDownload","getCSVString","CSVString","dayjs","format","Service","getCoreVersion","getApiVersion","epiweek","getLocationName","getSiteUUID","csvData","Blob","type","reportTitle","quarter","navigator","msSaveBlob","link","document","createElement","href","window","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","forEach","condition","push","td","id","textAlign","name","buildRow","lessThanFiveYearsPatientIds","greaterThanEqualFiveYears","greaterThanEqualFiveYearsPatientIds","totalPatientIds","count","patientIds","tdLink","onDrillDown","watch","immediate","handler","__exports__","regenerate","getReport","request","all","Object","entries","key","value","temp","item","key1","value1","conditionDetails","IDSRConditionsObj","epiWeeks","getJson","epiWeeksObj","reverse","dates","split","startDate","endDate","txt","start","end","months","_payload","monthandyear","startandendmonths","trim","OpdReportService","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","Function","Boolean","default","String","required","formData","computedData","$emit","i","_hoisted_2","_component_ion_loading","_component_his_standard_form","_component_idsr_h","_component_monthly","_component_ion_content","_component_his_footer","_component_ion_page","_Fragment","isLoading","message","reportReady","_createCommentVNode","onPeriod","_withCtx","componentKey","reportName","rangeLabel","range","ref","periodLabel","periodDates","clinicName","totalOPDVisits","TotalOPDVisits","idsr","month","_","btns","mixins","ReportMixinVue","IonLoading","IdsrH","Monthly","HisStandardForm","HisFooter","IonPage","IonContent","computedFormData","reportID","created","getBtns","getMonthlyFields","form","setRegenerate","setEpiWeek","idsrmonth","label","setStartDate","HisDate","toStandardHisFormat","other","setEndDate","getReportPeriod","requestIDSRMonthly","getAttendance","visits","console","log","size","slot","color","visible","onClick","rep","$refs","exportToCustomPDF","$router","path","period","customFileName","drillDownCache","toDate","date","toStandardHisDisplayFormat","confirmPatient","patient","title","printW","open","content","getElementById","write","innerHTML","setTimeout","print","close","conditionName","isEmpty","rowParser","ids","Promise","map","Patientservice","findByID","personDetails","getGivenName","getFamilyName","getGender","getAge","getPhoneNumber","getCurrentDistrict","getCurrentVillage","getClosestLandmark","tdBtn","modalController","dismiss","drilldownData","drilldownAsyncRows","asyncRows","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","modal","present","getDefaultDrillDownTable","tableRows","defaultRow","index","row","getArvNumber","tdDate","getBirthdate","toString","runTableDrill","drill","values","getEpiweeksFields","helpText","FieldType","TT_SELECT","validation","val","Validation","options","getReportEpiWeeks","items","q","moment","getReportMonths","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","minDate","maxDate","getSessionDate","quarters","getReportQuarters","generateDateFields","f","estimation","allowUnknown","computeValue","unload","d","s","c","end_date","start_date","reportparams","Number","mounted","initTable","newValue","oldValue","tableHeaders","LA_TYPES","one","two","three","four","NCD_TYPES","MENTAL_HEALTH_DIAGNOSIS","programID","getProgramID","url","printService","PrintoutService","keys","v","printLbl","Url","parameterizeObjToString","buildRequest","payload","minDuration","year","getCurrentYear"],"mappings":"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","file":"js/chunk-28bcfd49.08d4e048.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"my-table\",\n  style: {\"margin\":\"auto\",\"width\":\"95%\",\"margin-top\":\"3%\",\"margin-bottom\":\"3%\"}\n}\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_table = _resolveComponent(\"report-table\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_report_table, {\n      columns: _ctx.columns,\n      rows: _ctx.rows,\n      config: {tableCssTheme: _ctx.tableCssTheme}\n    }, null, 8, [\"columns\", \"rows\", \"config\"])\n  ]))\n}","\n/* eslint-disable @typescript-eslint/camelcase */\nimport { defineComponent } from 'vue'\nimport { IDSRReportService } from \"@/apps/OPD/services/idsr_service\"\nimport { Service } from \"@/services/service\"\nimport dayjs from 'dayjs';\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n  components: { ReportTable },\n  data: function(){\n    return {\n      conditions: [] as any,\n      lessThanFiveYears: \" < 5 yrs \",\n      greaterAndEqualFiveYears: \" >= 5 yrs \",\n      total: ' Total ',\n      tableCssTheme: 'opd-report-theme',\n      rows: [] as RowInterface[][],\n      columns: [\n      [\n        table.thTxt('', {\n          colspan: 2,\n          sortable: false,\n          exportable: false \n        }),\n        table.thTxt('Out-patient Cases', {\n          colspan: 3,\n          sortable: false,\n          exportable: false \n        }),\n      ],\n      [\n        table.thTxt(''),\n        table.thTxt('Diseases/Events/Conditions'),\n        table.thTxt('< 5 yrs'),\n        table.thTxt('>= 5 yrs'),\n        table.thTxt('Total'),\n      ]\n    ] as ColumnInterface[][],\n    }\n  },\n  props: ['params', 'epiweek', 'quarter','onDrillDown'],\n  methods: {\n   renderResults() {\n     const report = new IDSRReportService()\n     const Conditions = report.renderResults(this.params)\n     if(Conditions.length){\n      this.conditions = Conditions\n      this.rows = this.buildRows(Conditions)\n     }\n   },\n   onDownload() {\n     const report = new IDSRReportService()\n     let {CSVString} = report.getCSVString(this.conditions)\n     CSVString += `\n          Date Created: ${dayjs().format('DD/MMM/YYYY HH:MM:ss')}\n          His-Core Version: ${Service.getCoreVersion()}\n          API Version: ${Service.getApiVersion()}\n          Report Period: ${this.epiweek}\n          Site: ${Service.getLocationName()}\n          Site UUID: ${Service.getSiteUUID()}`\n          ;\n      const csvData = new Blob([CSVString], { type: \"text/csv;charset=utf-8;\" });\n      //IE11 & Edge\n      const reportTitle = `${Service.getLocationName()} Weekly IDSR report ${this.quarter}`;\n      if (navigator.msSaveBlob) {\n        navigator.msSaveBlob(csvData, 'exportFilename');\n      } else {\n        //In FF link must be added to DOM to be clicked\n        const link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(csvData);\n        link.setAttribute(\"download\", `${reportTitle}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n   },\n   buildRows(data: any): RowInterface[][] {\n     const rows: RowInterface[][] = []\n     data.forEach((condition: { \n       id: number;\n       name: string;\n       lessThanFiveYears: number;\n       greaterThanEqualFiveYears: number;\n       total: number;\n       lessThanFiveYearsPatientIds: any;\n       greaterThanEqualFiveYearsPatientIds: any;\n       totalPatientIds: any;\n       }) => {\n        rows.push([\n          table.td(condition.id, {style: {textAlign: 'left'}}),\n          table.td(condition.name, {style: {textAlign: 'left'}}),\n          this.buildRow(this.lessThanFiveYears+'('+condition.name+')', condition.lessThanFiveYears, condition.lessThanFiveYearsPatientIds),\n          this.buildRow(this.greaterAndEqualFiveYears+'('+condition.name+')', condition.greaterThanEqualFiveYears, condition.greaterThanEqualFiveYearsPatientIds),\n          this.buildRow(this.total+'('+condition.name+')', condition.total, condition.totalPatientIds)\n        ])\n     })\n     return rows\n   },\n   buildRow(name: string, count: any, patientIds: any) {\n    if (typeof(count) == 'string') {\n      return table.td('')\n    }\n    if (!(count > 0)) {\n      return table.td(0)\n     } else {\n      return table.tdLink(\n      count,\n      async () =>  this.onDrillDown(name, patientIds)\n      )\n     }\n   }\n  },\n  watch: {\n    params: {\n      immediate: true,\n      handler() {\n        this.renderResults();\n      }\n    }\n  }\n})\n","import { render } from \"./IDSRTableTemplate.vue?vue&type=template&id=34feb6ec&ts=true\"\nimport script from \"./IDSRTableTemplate.vue?vue&type=script&lang=ts\"\nexport * from \"./IDSRTableTemplate.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { OpdReportService } from \"./opd_report_service\";\nimport moment from \"dayjs\"\nimport { Service } from \"@/services/service\";\n\nexport interface CohortValidationInterface {\n    param: number | string;\n    error: (indicator: number, param: number) => string;\n    check: (indicator: number, param: number) => boolean;\n}\n\nexport interface CommonInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport class IDSRReportService extends OpdReportService {\n    regenerate: boolean;\n    constructor() {\n        super()\n        this.regenerate = false\n    }\n\n    setRegenerate(regenerate: boolean) {\n        this.regenerate = regenerate\n    }\n\n    requestIDSRWeekly() {\n        return this.getReport('generate_weekly_idsr_report', {\n            request: 'true',\n        })\n    }\n\n    requestIDSRMonthly() {\n        return this.getReport('generate_monthly_idsr_report', {\n            request: 'true',\n        })\n    }\n\n    renderResults(params: any) {\n        const all = []\n        let count = 1\n        for (const [key, value] of Object.entries(params)) {\n            const temp: any = []\n            const condition: any = value\n            const item = {\n                id: 0,\n                name: '',\n                lessThanFiveYears: '',\n                lessThanFiveYearsPatientIds: '',\n                greaterThanEqualFiveYears: '',\n                greaterThanEqualFiveYearsPatientIds: '',\n                total: 0,\n                totalPatientIds: ''\n            }\n            item.name = key\n            let total = 0\n            item.id = count\n            count += 1 \n            for (const [key1, value1] of Object.entries(condition)) {\n                const conditionDetails: any = value1\n                if (conditionDetails != null) {\n                    total +=conditionDetails.length;\n                    item.total = total\n                    if(conditionDetails.length) {\n                        temp.push(...conditionDetails)\n                        item.totalPatientIds = temp\n                    }\n                    if (key1 == '<5yrs') {\n                    item.lessThanFiveYears = conditionDetails.length\n                    item.lessThanFiveYearsPatientIds = conditionDetails\n                    }\n                if (key1 == '>=5yrs') {\n                item.greaterThanEqualFiveYears = conditionDetails.length\n                item.greaterThanEqualFiveYearsPatientIds = conditionDetails\n                }\n            }\n          }\n          all.push(item)\n        }\n        return all\n    }\n\n    getCSVString(IDSRConditionsObj: any) {\n        let CSVString = `Diseases/Events/Conditions, <5 yrs, >=5 yrs, Total,\\n`\n        for(const condition of IDSRConditionsObj) {\n            CSVString += `${condition.name},${condition.lessThanFiveYears},${condition.greaterThanEqualFiveYears},${condition.total},\\n`  \n        }\n        return {CSVString}\n    }\n\n    static async getReportEpiWeeks() {\n        const epiWeeks: Array<CommonInterface> = []\n        const epiWeeksObj = await Service.getJson('get_weeks')\n        epiWeeksObj.reverse().forEach( (item: any) => { \n            const dates = item[1].split(\" \")\n            const startDate = dates[0]\n            const endDate = dates[2]\n            const txt = item[0].split('W')\n            const name = txt[0] +\"/W\"+ txt[1]\n            epiWeeks.push({ name: name, start: startDate, end: endDate })\n        })\n        return epiWeeks\n    }\n\n    static async getReportMonths() {\n        const months: Array<CommonInterface> = []\n        const epiWeeksObj = await Service.getJson('get_months')\n        epiWeeksObj.forEach( (item: any) => {\n            const _payload = item[1];\n            const monthandyear = _payload[0]\n            const startandendmonths = _payload[1];\n            const dates = startandendmonths.split(\"to\");\n            months.push({ name: monthandyear, start: dates[0], end: dates[1].trim() })\n        })\n        return months\n    }\n}\n","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { id: \"report-content\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"div\", { id: \"print\" }, null, -1)\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_loading = _resolveComponent(\"ion-loading\")\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_idsr_h = _resolveComponent(\"idsr-h\")\n  const _component_monthly = _resolveComponent(\"monthly\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_his_footer = _resolveComponent(\"his-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_loading, {\n      \"is-open\": _ctx.isLoading,\n      message: \"Please wait...\"\n    }, null, 8, [\"is-open\"]),\n    (!_ctx.reportReady)\n      ? (_openBlock(), _createBlock(_component_his_standard_form, {\n          key: 0,\n          onOnFinish: _ctx.onPeriod,\n          skipSummary: true,\n          fields: _ctx.fields\n        }, null, 8, [\"onOnFinish\", \"fields\"]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.reportReady)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 1 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createVNode(\"div\", _hoisted_1, [\n                  _createVNode(_component_idsr_h, {\n                    key: _ctx.componentKey,\n                    reportName: _ctx.reportName,\n                    rangeLabel: _ctx.rangeLabel,\n                    range: _ctx.range,\n                    ref: \"header\",\n                    periodLabel: _ctx.periodLabel,\n                    periodDates: _ctx.periodDates,\n                    clinicName: _ctx.clinicName,\n                    totalOPDVisits: _ctx.TotalOPDVisits\n                  }, null, 8, [\"reportName\", \"rangeLabel\", \"range\", \"periodLabel\", \"periodDates\", \"clinicName\", \"totalOPDVisits\"]),\n                  _createVNode(_component_monthly, {\n                    key: _ctx.componentKey,\n                    onDrillDown: _ctx.onDrillDown,\n                    params: _ctx.idsr,\n                    month: _ctx.range,\n                    ref: \"rep\"\n                  }, null, 8, [\"onDrillDown\", \"params\", \"month\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, { btns: _ctx.btns }, null, 8, [\"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    _hoisted_2\n  ], 64 /* STABLE_FRAGMENT */))\n}","\nimport { defineComponent } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport { IonPage, IonContent, IonLoading } from \"@ionic/vue\"\nimport { Field } from '@/components/Forms/FieldInterface'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport ReportMixinVue from \"../../ReportMixin.vue\";\nimport { IDSRReportService } from \"@/apps/OPD/services/idsr_service\"\nimport IdsrH from \"@/apps/OPD/views/reports/moh/MOHReportHeader.vue\"\nimport Monthly from \"@/apps/OPD/views/reports/moh/IDSR/IDSRTableTemplate.vue\"\nimport HisDate from \"@/utils/Date\"\n\nexport default defineComponent({\n  mixins: [ReportMixinVue],\n  components: { IonLoading, IdsrH, Monthly, HisStandardForm, HisFooter, IonPage, IonContent },\n  data: () => ({\n    formData: {} as any,\n    componentKey: 0 as number,\n    computedFormData: {} as any,\n    idsr: {} as any,\n    btns: [] as Array<any>,\n    isLoading: false as boolean,\n    fields: [] as Array<Field>,\n    reportID: -1 as any,\n    periodLabel: 'Month Dates',\n    periodDates: '' as string,\n    reportName: 'MONTHLY DISEASE SURVEILLANCE REPORT',\n    rangeLabel: 'Month',\n    range: '' as string,\n    TotalOPDVisits: 0 as number,\n    clinicName: IDSRReportService.getLocationName(),\n    reportReady: false as boolean,\n  }),\n  created() {\n    this.btns = this.getBtns()\n    this.fields = this.getMonthlyFields()\n  },\n  methods: {\n    async onPeriod(form: any, config: any, regenerate = false) {\n      this.componentKey += 1\n      this.formData = form\n      this.computedFormData = config\n      this.reportReady = true\n      this.isLoading = true\n      this.report = new IDSRReportService()\n      this.report.setRegenerate(regenerate)\n      this.report.setEpiWeek(form.idsrmonth.label)\n      this.report.setStartDate(HisDate.toStandardHisFormat(form.idsrmonth.other.start))\n      this.report.setEndDate(HisDate.toStandardHisFormat(form.idsrmonth.other.end))\n      this.periodDates = this.report.getReportPeriod()\n      this.range = form.idsrmonth.label.split(\" \")[0]\n      try {\n        const idsr = await this.report.requestIDSRMonthly()\n        const visits = await this.report.getAttendance()\n        if (idsr && visits) {\n          this.reportID = \"data\"\n          this.TotalOPDVisits = visits.length\n          this.idsr = idsr\n        }\n      } catch (error) {\n        console.log(error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n    getBtns() {\n      return [\n        {\n          name: \"CSV\",\n          size: \"large\",\n          slot: \"start\",\n          color: \"primary\",\n          visible: true,\n          onClick: async () => {\n            const rep = this.$refs.rep as any\n            rep.onDownload()\n          }\n        },\n        {\n          name: \"PDF\",\n          size: \"large\",\n          slot: \"start\",\n          color: \"primary\",\n          visible: true,\n          onClick: () => this.exportToCustomPDF('Print IDSR Monthly Report')\n        },\n        {\n          name: \"Back\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"warning\",\n          visible: true,\n          onClick: () => this.reportReady = false\n        },\n        {\n          name: \"Refresh\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"warning\",\n          visible: true,\n          onClick: async () => await this.onPeriod(this.formData, this.computedFormData, true)\n        },\n        {\n          name: \"Finish\",\n          size: \"large\",\n          slot: \"end\",\n          color: \"success\",\n          visible: true,\n          onClick: () => this.$router.push({ path: '/' })\n        }\n      ]\n    },\n  }\n})\n","import { render } from \"./IDSRMonthly.vue?vue&type=template&id=4feb94da&ts=true\"\nimport script from \"./IDSRMonthly.vue?vue&type=script&lang=ts\"\nexport * from \"./IDSRMonthly.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { OpdReportService } from \"@/apps/OPD/services/opd_report_service\"\nimport { IDSRReportService } from \"@/apps/OPD/services/idsr_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport moment from \"dayjs\"\nimport { Service } from '@/services/service';\nimport { isEmpty } from 'lodash'\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async exportToCustomPDF(title: string) {\n            const printW = open('', '', 'width:1024px, height:768px')\n            const content = document.getElementById('report-content')\n            if (content && printW) {\n                printW.document.write(`\n                    <html>\n                    <head>\n                        <title>${title}</title>\n                        <link rel=\"stylesheet\" media=\"print\" href=\"/assets/css/cohort.css\" />\n                    </head>\n                    <body>\n                        ${content.innerHTML}\n                    </body>\n                    </html>\n                `)\n                setTimeout(() => { printW.print(); printW.close() }, 3500)\n            }\n        },\n        async onDrillDown(conditionName: string, patientIds: number[]) {\n            if(isEmpty(patientIds)) return\n            const columns = [[\n                table.thTxt('First name'),\n                table.thTxt('Last name'),\n                table.thTxt('Gender'),\n                table.thTxt('Age'),\n                table.thTxt('Phone'),\n                table.thTxt('Address'),\n                table.thTxt('Action')\n            ]]\n            const rowParser = async (ids: number[]) => {\n                return await Promise.all(ids.map(async (id) => {\n                const personDetails = await Patientservice.findByID(id)\n                const patient = new Patientservice(personDetails)\n                return [\n                    table.td(patient.getGivenName()),\n                    table.td(patient.getFamilyName()),\n                    table.td(patient.getGender()),\n                    table.td(patient.getAge()),\n                    table.td(patient.getPhoneNumber()),\n                    table.td(`${patient.getCurrentDistrict()}, ${patient.getCurrentVillage()}, ${patient.getClosestLandmark()}`),\n                    table.tdBtn('Select', async () => {\n                    await modalController.dismiss({})\n                    this.$router.push({ path: `/patient/dashboard/${id}`})\n                    })\n                ]\n                })) \n            }\n            return this.drilldownData(conditionName, columns, patientIds, rowParser)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = (tableRows: Array<any[]>) => {\n                return tableRows.map(async (defaultRow: Array<any>) => {\n                    const [index, id ] = defaultRow\n                    if (id in this.drillDownCache) {\n                        //const [oldIndex, ...rest] = this.drillDownCache[id]\n                        return [index] // Assign new index number and maintain patient record\n                    } \n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = [\n                        index,\n                        table.td(patient.getArvNumber()), \n                        table.td(patient.getGender()), \n                        table.tdDate(patient.getBirthdate().toString()),\n                        table.tdBtn('Show', async () => {\n                            await modalController.dismiss({})\n                            this.$router.push({ path: `/patient/dashboard/${id}`})\n                        })\n                    ]\n                    this.drillDownCache[id] = row\n                    return row\n                })\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getEpiweeksFields(): Array<Field> {\n            return [\n                {\n                    id: 'epiweek',\n                    helpText: 'Select EPI week',\n                    type: FieldType.TT_SELECT,\n                    validation: (val: Option) => Validation.required(val),\n                    options: async () => {\n                        const epiWeeks = await IDSRReportService.getReportEpiWeeks()\n                        const items: Array<Option> = epiWeeks.map((q: any) => ({\n                            label: q.name +' - ('+ moment(q.start).format('DD/MMM/YYYY') +' - '+ moment(q.end).format('DD/MMM/YYYY')+')',\n                            value: q.start,\n                            other: q\n                        }))\n                        return items\n                    }\n                },\n            ]\n        },\n        getMonthlyFields(): Array<Field> {\n            return [\n                {\n                    id: 'idsrmonth',\n                    helpText: 'Select Month',\n                    type: FieldType.TT_SELECT,\n                    validation: (val: Option) => Validation.required(val),\n                    options: async () => {\n                        const epiWeeks = await IDSRReportService.getReportMonths()\n                        const items: Array<Option> = epiWeeks.map((q: any) => ({\n                            label: q.name +' - ('+ moment(q.start).format('DD/MMM/YYYY') +' - '+ moment(q.end).format('DD/MMM/YYYY')+')',\n                            value: q.start,\n                            other: q\n                        }))\n                        return items\n                    }\n                },\n            ]\n        },\n        getDateDurationFields(useQuarter=false, setCustomQuarterPeriod=false, maxQuarter=5): Array<Field> {\n            const minDate = '2001-01-01'\n            const maxDate = Service.getSessionDate()\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = OpdReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { style: {\"margin\":\"auto\",\"width\":\"95%\",\"margin-top\":\"1%\"} }\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_table = _resolveComponent(\"report-table\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_report_table, {\n      columns: _ctx.columns,\n      rows: _ctx.rows,\n      config: {tableCssTheme: _ctx.tableCssTheme}\n    }, null, 8, [\"columns\", \"rows\", \"config\"])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n    components: { ReportTable },\n    props: {\n      clinicName: {\n        type: String,\n        default: ''\n      },\n      reportparams: {\n        type: Object,\n        required: true\n      },\n      totalOPDVisits: {\n        type: Number,\n        required: true\n      },\n      reportName: {\n        type: String,\n        required: true\n      },\n      periodLabel: {\n        type: String,\n        required: true\n      },\n      periodDates: {\n        type: String,\n        required: true\n      },\n      rangeLabel: {\n        type: String,\n        required: true\n      },\n      range: {\n        type: String,\n        required: true\n      },\n    },\n    data: function() {\n      return {\n        tableCssTheme: 'opd-report-theme',\n        rows: [] as RowInterface[][],\n        columns: [\n            [\n              table.thTxt(this.reportName, {\n                colspan: 2,\n                sortable: false,\n                exportable: false \n              })\n            ]\n        ] as ColumnInterface[][],\n      }\n    },\n    mounted() {\n      this.initTable()\n    },\n    watch: {\n       totalOPDVisits(newValue, oldValue) {\n         this.initTable()\n       }\n    },\n    methods: {\n      initTable() {\n        const rows: RowInterface[][] = []\n        const tableHeaders = [\n          {\n            name: 'Country:',\n            value: 'Malawi',\n          },\n          {\n            name: 'Reporting Facility Name:',\n            value: this.clinicName\n          },\n          {\n            name: this.rangeLabel+':',\n            value: this.range\n          },\n          {\n            name: this.periodLabel+':',\n            value: this.periodDates\n          },\n          {\n            name: 'Total OPD Visits:',\n            value: this.totalOPDVisits\n          }\n\n        ]\n        tableHeaders.forEach(item => {\n          if(item.name !== 'undefined:') {\n                rows.push([\n                    table.td(item.name, {style: {textAlign: 'left'}}),\n                    table.td(item.value, {style: {textAlign: 'left'}}),\n                ])\n          }\n        })\n        this.rows = rows\n      }\n    }\n  })\n  ","import { render } from \"./MOHReportHeader.vue?vue&type=template&id=3d81af96&ts=true\"\nimport script from \"./MOHReportHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./MOHReportHeader.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport { PrintoutService } from '@/services/printout_service';\nimport Url from \"@/utils/Url\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport const AGE_GROUPS = [\n    '0-5 months', '6-11 months',\n    '12-23 months', '2-4 years', \n    '5-9 years', '10-14 years', \n    '15-17 years', '18-19 years', \n    '20-24 years', '25-29 years', \n    '30-34 years', '35-39 years', \n    '40-44 years', '45-49 years', \n    '50 plus years'\n]\n\nexport const OTHER_AGE_GROUPS = [\n    '<1 year', '1-4 years',\n    '5-9 years', '10-14 years',\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\nexport const LA_TYPES: Record<string, string> = {\n    one: 'AL 1', \n    two: 'AL 2', \n    three: 'AL 3', \n    four: 'LA 4'\n}\n\nexport const NCD_TYPES = [\n    'Diabetes',\n    'Hypertension',\n    'Stroke',\n    'Suspected cancer',\n    'Confirmed cancer',\n    'Palliative cancer',\n    'Asthma',\n    'Depression',\n    'Acute psychosis',\n    'Chronic psychosis',\n    'Epilepsy'\n]\n\nexport const MENTAL_HEALTH_DIAGNOSIS = [\n    'Organic mental disorder (Chronic)',\n    'Organic mental disorder (acute)',\n    'Alcohol use mental disorder',\n    'Drug use mental disorder',\n    'Schizophrenia',\n    'Acute and transient psychotic disorder',\n    'Schizo-affective disorder',\n    'Mood-affective disorder (MANIC)',\n    'Mood-affective disorder (BIPOLAR)',\n    'Mood-affective disorder (DEPRESSION)',\n    'Anxiety disorder',\n    'Stress reaction adjustment disorder',\n    'Dissociative conversion disorder',\n    'Somatoform disorder',\n    'Puerperal mental disorder',\n    'Personality/Behaviour disorder',\n    'Mental retardation',\n    'Psychological mental disorder',\n    'Hyperkinetic conduct disorder',\n    'Epilepsy'\n]\n\nexport class OpdReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    epiweek: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.epiweek = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPatientsWithNIDs() {\n        return this.getReport('with_nids')\n    }\n\n    getClinicRegistrations(){\n        return this.getReport('registration');\n    }\n\n    getAttendance(){\n        return this.getReport(`programs/${this.programID}/reports/attendance`)\n    }\n\n    getDrugsGivenWithoutPrescription() {\n        return this.getReport('drugs_given_without_prescription')\n    }\n\n    getDrugsGivenWithPrescription() {\n        return this.getReport('drugs_given_with_prescription')\n    }\n\n    getDiagnosis(){\n        const url = `programs/${this.programID}/reports/diagnosis`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n\n    getDiagnosisByAddress(){\n        return this.getReport('diagnosis_by_address')\n    }\n\n    getLaPrescriptions(){\n        const url = `programs/${this.programID}/reports/la_prescriptions`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            \n        })\n    }\n\n    printLaReport(data: Record<string, any>){\n        const printService = new PrintoutService()\n        const url = `programs/${this.programID}/barcodes/la_report`\n        const params: Record<string, any> = {\n            \"date[start]\": this.startDate,\n            \"date[end]\": this.endDate\n        }\n        Object.keys(LA_TYPES).forEach((v, i) => {\n            i++\n            params[`${i}[prescription]`] = data[`total_la_${v}_prescribed_drugs`]\n            params[`${i}[dispensed]`] = data[`total_la_${v}_dispensed_drugs`]\n        })\n        return printService.printLbl(`${url}?${Url.parameterizeObjToString(params)}`)\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setEpiWeek(epiweek: string) {\n        this.epiweek = epiweek\n    }\n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.epiweek) {\n            payload['epiweek'] = this.epiweek\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}