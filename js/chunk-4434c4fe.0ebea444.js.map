{"version":3,"sources":["webpack:///./src/views/Confirmation.vue?92f5","webpack:///./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/Confirmation.vue"],"names":["_withId","_withScopeId","_pushScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_createTextVNode","_hoisted_4","_hoisted_5","_createVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_popScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_col","_resolveComponent","_component_ion_row","_component_ion_toolbar","_component_ion_header","_component_confirmation_card","_component_ion_content","_component_ion_button","_component_ion_spinner","_component_ion_footer","_component_ion_page","_openBlock","_createBlock","default","translucent","_toDisplayString","demographics","patientName","birthdate","gender","_","ancestryDistrict","ancestryTA","ancestryVillage","currentDistrict","currentTA","currentVillage","_Fragment","_renderList","cards","card","index","key","title","label","items","values","isLoading","color","size","disabled","facts","patientFound","isAdmin","onClick","onVoid","anc","canInitiateNewPregnancy","slot","onInitiateNewAncPregnancy","_createCommentVNode","isReady","nextTask","name","TargetEvent","FlowState","CONFIRMATION_PAGE_GUIDELINES","weight","targetEvent","ONLOAD","actions","alert","action","infoActionSheet","SEARCH_BY_NAME","GO_HOME","conditions","globalProperties","ddeEnabled","yes","tableActionSheet","invalidDemographics","GO_BACK","hasInvalidDemographics","scannedNpid","dde","voidedNpids","cols","rows","VIEW_MERGE_AUDIT_FOR_NPID","localNpidDiff","remoteNpidDiff","CREATE_NPID_WITH_REMOTE_DIFF","ASSIGN_NPID","currentNpid","npid","isUnknownOrEmpty","npidHasOverFiveDuplicates","isTrue","RESOLVE_DUPLICATE_NPIDS","npidHasDuplicates","ON_CONTINUE","CONTINUE","FORCE_EXIT","currentOutcome","outcome","patientType","contextualBtn","ADD_AS_DRUG_REFILL","ADD_AS_EXTERNAL_CONSULTATION","ADD_AS_NEW_PATIENT","programName","type","includes","ENROLL","EXIT","enrolledInProgram","enrolled","ACTIVATE_FN","identifiers","useFilingNumbers","UPDATE_DMG","patientIsComplete","isFound","diffRows","diffRowColors","UPDATE_LOCAL_DDE_DIFFS","REFRESH_DDE_DEMOGRAPHICS","hasDemographicConflict","PRINT_NPID","match","RegExp","hasInvalidNpid","userRoles","roles","hasHighViralLoad","isHigh","lmpMonths","INITIATE_ANC_PREGNANCY","currentPregnancyIsOverdue","g","toLowerCase","AncPregnancyStatusService","AppEncounterService","constructor","patientID","providerID","info","ProgramService","getProgramInformation","date_of_lnmp","lmp","dayjs","today","date","diff","getLmpInMonths","createEncounter","saveValueCodedObs","defineComponent","components","IonContent","IonHeader","IonFooter","IonPage","IonToolbar","IonSpinner","IonRow","IonCol","IonButton","ConfirmationCard","defineAsyncComponent","data","app","program","patient","localPatient","ddeInstance","useDDE","programInfo","programs","localDiffs","givenName","familyName","landmark","phoneNumber","created","this","initCards","HisApp","getActiveApp","mounted","updateCards","PatientDemographicsExchangeService","setGlobalPropertyFacts","then","query","$route","isEmpty","person_id","patient_barcode","findAndSetPatient","computed","HisDate","toStandardHisDisplayFormat","UserService","methods","i","confirmationSummary","cardItems","keys","Object","length","cardData","catch","e","console","error","c","val","init","asyncValue","value","staticValue","orders","OrderService","getOrders","getID","vlOrders","getViralLoadOrders","isHighViralLoadResult","tests","result","id","req","searchNpid","Patientservice","findByID","findByNpid","handleSearchResults","toastDanger","results","IncompleteEntityError","entity","BadRequestError","Array","isArray","errors","msg","entities","setInvalidParametersFacts","Store","set","setPatientFacts","factPromises","push","setProgramFacts","setDDEFacts","setAncFacts","setViralLoadStatus","getNationalID","validateNpid","Promise","all","setVoidedNpidFacts","onEvent","getDocID","errorExceptions","map","entries","join","reloadPatient","undefined","getFullName","getGivenName","getFamilyName","getAttribute","getGender","getBirthdate","getHomeDistrict","getHomeTA","getHomeVillage","getCurrentDistrict","getCurrentTA","getCurrentVillage","getIdentifiers","get","applicationName","pregnancyIsOverdue","buildDDEDiffs","diffs","comparisons","refs","ref","diffIndexes","indexes","k","local","remote","rowColors","PatientProgramService","getProgram","isValueEmpty","getUserRoles","r","role","ObservationService","getFirstValueCoded","localAndRemoteDiffs","getLocalAndRemoteDiffs","formatDiffValuesByType","warn","findVoidedIdentifier","d","p","async","$router","assignNpid","modalController","dismiss","toastWarning","callback","findings","matchToGuidelines","finding","state","runFlowState","alertConfirmation","initiateNewAncPregnancy","createNewPregnancyStatus","states","back","enrollProgram","printNpid","delayPromise","createNPID","toastSuccess","alreadyAssigned","res","reassignNpid","PatientPrintoutService","printNidLbl","refreshDemographics","createPatientType","updateLocalDifferences","PatientTypeService","savePatientType","popVoidReason","voidPatient","reason","__exports__","modal","optionsActionSheet","selection","isCondition","ignored","prop","every","Boolean","sortByPriority","sort","a","b","priority","sortByWeight","guidelines","target","sortBy","matches","guidelineIndex","targetValidations","some","description","text"],"mappings":"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","file":"js/chunk-4434c4fe.0ebea444.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Confirmation.vue?vue&type=style&index=0&id=0492b742&scoped=true&lang=css\"","import { toDisplayString as _toDisplayString, createVNode as _createVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-0492b742\")\n\n_pushScopeId(\"data-v-0492b742\")\nconst _hoisted_1 = { class: \"tool-bar-medium-card\" }\nconst _hoisted_2 = { class: \"his-sm-text\" }\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Patient Name: \")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode()\nconst _hoisted_5 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_6 = { class: \"his-sm-text\" }\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Birthdate: \")\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode()\nconst _hoisted_9 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_10 = { class: \"his-sm-text\" }\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"Gender: \")\nconst _hoisted_12 = { class: \"tool-bar-medium-card\" }\nconst _hoisted_13 = { class: \"his-sm-text\" }\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\"Ancestry district: \")\nconst _hoisted_15 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_16 = { class: \"his-sm-text\" }\nconst _hoisted_17 = /*#__PURE__*/_createTextVNode(\"Ancestry TA: \")\nconst _hoisted_18 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_19 = { class: \"his-sm-text\" }\nconst _hoisted_20 = /*#__PURE__*/_createTextVNode(\"Ancestry village: \")\nconst _hoisted_21 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_22 = { class: \"tool-bar-medium-card\" }\nconst _hoisted_23 = { class: \"his-sm-text\" }\nconst _hoisted_24 = /*#__PURE__*/_createTextVNode(\"Current District:\")\nconst _hoisted_25 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_26 = { class: \"his-sm-text\" }\nconst _hoisted_27 = /*#__PURE__*/_createTextVNode(\"Current TA: \")\nconst _hoisted_28 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_29 = { class: \"his-sm-text\" }\nconst _hoisted_30 = /*#__PURE__*/_createTextVNode(\"Current Village: \")\nconst _hoisted_31 = /*#__PURE__*/_createVNode(\"p\", null, null, -1)\nconst _hoisted_32 = /*#__PURE__*/_createTextVNode(\" Cancel \")\nconst _hoisted_33 = /*#__PURE__*/_createTextVNode(\"Void Client\")\nconst _hoisted_34 = /*#__PURE__*/_createTextVNode(\" New Pregnancy \")\nconst _hoisted_35 = /*#__PURE__*/_createTextVNode(\" Continue \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_confirmation_card = _resolveComponent(\"confirmation-card\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_spinner = _resolveComponent(\"ion-spinner\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withId(() => [\n      _createVNode(_component_ion_header, { translucent: true }, {\n        default: _withId(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withId(() => [\n              _createVNode(_component_ion_row, null, {\n                default: _withId(() => [\n                  _createVNode(_component_ion_col, null, {\n                    default: _withId(() => [\n                      _createVNode(\"div\", _hoisted_1, [\n                        _createVNode(\"span\", _hoisted_2, [\n                          _hoisted_3,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.demographics.patientName), 1)\n                        ]),\n                        _hoisted_4,\n                        _hoisted_5,\n                        _createVNode(\"span\", _hoisted_6, [\n                          _hoisted_7,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.birthdate), 1)\n                        ]),\n                        _hoisted_8,\n                        _hoisted_9,\n                        _createVNode(\"span\", _hoisted_10, [\n                          _hoisted_11,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.demographics.gender), 1)\n                        ])\n                      ])\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ion_col, null, {\n                    default: _withId(() => [\n                      _createVNode(\"div\", _hoisted_12, [\n                        _createVNode(\"span\", _hoisted_13, [\n                          _hoisted_14,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.demographics.ancestryDistrict), 1)\n                        ]),\n                        _hoisted_15,\n                        _createVNode(\"span\", _hoisted_16, [\n                          _hoisted_17,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.demographics.ancestryTA), 1)\n                        ]),\n                        _hoisted_18,\n                        _createVNode(\"span\", _hoisted_19, [\n                          _hoisted_20,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.demographics.ancestryVillage), 1)\n                        ]),\n                        _hoisted_21\n                      ])\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ion_col, null, {\n                    default: _withId(() => [\n                      _createVNode(\"div\", _hoisted_22, [\n                        _createVNode(\"span\", _hoisted_23, [\n                          _hoisted_24,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.demographics.currentDistrict), 1),\n                          _hoisted_25\n                        ]),\n                        _createVNode(\"span\", _hoisted_26, [\n                          _hoisted_27,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.demographics.currentTA), 1),\n                          _hoisted_28\n                        ]),\n                        _createVNode(\"span\", _hoisted_29, [\n                          _hoisted_30,\n                          _createVNode(\"b\", null, _toDisplayString(_ctx.demographics.currentVillage), 1),\n                          _hoisted_31\n                        ])\n                      ])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_row, null, {\n            default: _withId(() => [\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.cards, (card, index) => {\n                return (_openBlock(), _createBlock(_component_ion_col, {\n                  \"size-md\": \"4\",\n                  \"size-sm\": \"12\",\n                  key: index\n                }, {\n                  default: _withId(() => [\n                    _createVNode(_component_confirmation_card, {\n                      key: `card-${index}`,\n                      title: card.label,\n                      items: card.values,\n                      isLoading: card.isLoading\n                    }, null, 8, [\"title\", \"items\", \"isLoading\"])\n                  ]),\n                  _: 2\n                }, 1024))\n              }), 128 /* KEYED_FRAGMENT */))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n            default: _withId(() => [\n              _createVNode(_component_ion_button, {\n                color: \"danger\",\n                size: \"large\",\n                \"router-link\": \"/\"\n              }, {\n                default: _withId(() => [\n                  _hoisted_32\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_button, {\n                disabled: !(_ctx.facts.patientFound && _ctx.isAdmin),\n                color: \"danger left\",\n                size: \"large\",\n                onClick: _ctx.onVoid\n              }, {\n                default: _withId(() => [\n                  _hoisted_33\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"]),\n              (_ctx.facts.anc.canInitiateNewPregnancy)\n                ? (_openBlock(), _createBlock(_component_ion_button, {\n                    key: 0,\n                    slot: \"end\",\n                    size: \"large\",\n                    onClick: _ctx.onInitiateNewAncPregnancy\n                  }, {\n                    default: _withId(() => [\n                      _hoisted_34\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]))\n                : _createCommentVNode(\"\", true),\n              _createVNode(_component_ion_button, {\n                disabled: !_ctx.facts.patientFound || _ctx.facts.patientFound && !_ctx.isReady,\n                slot: \"end\",\n                color: \"success\",\n                size: \"large\",\n                onClick: _ctx.nextTask\n              }, {\n                default: _withId(() => [\n                  (!_ctx.isReady)\n                    ? (_openBlock(), _createBlock(_component_ion_spinner, {\n                        key: 0,\n                        name: \"crescent\"\n                      }))\n                    : _createCommentVNode(\"\", true),\n                  _hoisted_35\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n})","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\"\nimport HisApp from \"@/apps/app_lib\"\nimport { defineAsyncComponent, defineComponent } from \"vue\";\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { UserService } from \"@/services/user_service\";\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport { Patientservice } from \"@/services/patient_service\";\nimport { PatientProgramService } from \"@/services/patient_program_service\"\nimport { alertConfirmation, toastDanger, toastSuccess, toastWarning } from \"@/utils/Alerts\"\nimport { Patient } from \"@/interfaces/patient\"\nimport {\n  IonContent,\n  IonHeader,\n  IonFooter,\n  IonPage,\n  IonToolbar,\n  IonRow,\n  IonCol,\n  IonSpinner,\n  IonButton,\n  modalController\n} from \"@ionic/vue\";\nimport {\n  FlowState, \n  TargetEvent,\n  CONFIRMATION_PAGE_GUIDELINES\n} from \"@/guidelines/confirmation_page_guidelines\"\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\nimport { PatientDemographicsExchangeService } from \"@/services/patient_demographics_exchange_service\"\nimport { IncompleteEntityError, BadRequestError } from \"@/services/service\"\nimport { OrderService } from \"@/services/order_service\";\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { ObservationService } from \"@/services/observation_service\";\nimport { delayPromise } from \"@/utils/Timers\";\nimport { AncPregnancyStatusService } from \"@/apps/ANC/Services/anc_pregnancy_status_service\"\nimport popVoidReason from \"@/utils/ActionSheetHelpers/VoidReason\";\nimport { isUnknownOrEmpty, isValueEmpty } from \"@/utils/Strs\";\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  name: \"Patient Confirmation\",\n  components: {\n    IonContent,\n    IonHeader,\n    IonFooter,\n    IonPage,\n    IonToolbar,\n    IonSpinner,\n    IonRow,\n    IonCol,\n    IonButton,\n    ConfirmationCard: defineAsyncComponent(()=>import(\"@/components/Cards/PatientConfirmationCards.vue\")),\n  },\n  data: () => ({\n    app: {} as any,\n    program: {} as any,\n    patient: {} as any,\n    localPatient: {} as any, // Patient found without dde\n    ddeInstance: {} as any,\n    useDDE: false as boolean,\n    programInfo: {} as any,\n    isReady: false as boolean,\n    cards: [] as any[],\n    facts: {\n      hasHighViralLoad: false as boolean,\n      patientFound: false as boolean,\n      npidHasDuplicates: false as boolean,\n      npidHasOverFiveDuplicates: false as boolean,\n      userRoles: [] as string[],\n      scannedNpid: '' as string,\n      currentNpid: '' as string,\n      hasInvalidNpid: false as boolean,\n      enrolledInProgram: false as boolean,\n      programName: 'N/A' as string,\n      currentOutcome: '' as string,\n      programs: [] as string[],\n      identifiers: [] as string[],\n      patientType: 'N/A' as string,\n      anc: {\n        lmpMonths: -1,\n        canInitiateNewPregnancy: false,\n        currentPregnancyIsOverdue: false\n      },\n      dde: {\n        localNpidDiff: '',\n        remoteNpidDiff: '',\n        voidedNpids: {\n         cols: [] as string[],\n         rows: [] as any\n        },\n        hasDemographicConflict: false,\n        localDiffs: {},\n        diffRows: [],\n        diffRowColors: [] as Array<{indexes: number[]; class: string}>\n      } as any,\n      demographics: {\n        patientIsComplete: false as boolean,\n        hasInvalidDemographics: false as boolean,\n        invalidDemographics: [] as string[],\n        givenName: '' as string,\n        familyName: '' as string,\n        patientName: '' as string,\n        landmark: '' as string,\n        phoneNumber: '' as string,\n        currentDistrict: '' as string,\n        currentTA: '' as string,\n        currentVillage: '' as string,\n        ancestryDistrict: '' as string,\n        ancestryTA: '' as string,\n        ancestryVillage: '' as string,\n        gender: '' as string,\n        birthdate: '' as string,\n      } as any,\n      globalProperties: {\n        useFilingNumbers: false,\n        ddeEnabled: false\n      } as any\n    }\n  }),\n  created() {\n    this.initCards()\n    this.app = HisApp.getActiveApp() || {}\n  },\n  mounted() {\n    if (this.app) {\n      this.updateCards()\n      this.ddeInstance = new PatientDemographicsExchangeService()\n      this.setGlobalPropertyFacts().then(() => {\n        const query = this.$route.query\n        if (!isEmpty(query) && (query.person_id || query.patient_barcode)) {\n          this.findAndSetPatient(query.person_id as any, query.patient_barcode as any)\n        }\n      })\n    }\n  },\n  computed: {\n    demographics(): any {\n      return this.facts.demographics\n    },\n    birthdate(): string {\n      return HisDate.toStandardHisDisplayFormat(\n        this.facts.demographics.birthdate\n      )\n    },\n    isAdmin() {\n      return UserService.isAdmin()\n    }\n  },\n  methods: {\n    initCards() {\n      for(let i=0; i < 6; i++) {\n        this.cards[i] = {\n          label: '-',\n          isLoading: true,\n          values: []\n        }\n      }\n    },\n    async updateCards() {\n      if (typeof this.app.confirmationSummary === 'function') {\n        const cardItems: any = this.app.confirmationSummary(\n          this.patient, this.program, this.facts\n        )\n        const keys: any = Object.keys(cardItems)\n        for(let i = 0; i < this.cards.length; i++) {\n          const cardData = keys[i] ? cardItems[keys[i]]() : []\n          this.cards[i] = {\n            label: keys[i] || '-',\n            isLoading: false,\n            values: cardData\n          }\n          if (typeof cardData === 'object' && cardData.then) {\n            this.cards[i].isLoading = true\n            if (!isEmpty(this.patient)) {\n              cardData.then((data: any) => {\n                this.cards[i].isLoading = false\n                this.cards[i].values = data\n              }).catch((e: any) => {\n                this.cards[i].isLoading = false\n                console.error(`${e}`)\n              })\n            }\n          } else {\n            // Render static label value pairs\n            for (let c=0; c < cardData.length; ++c) {\n              const val = cardData[c]\n              this.cards[i].values[c] = val\n              if (!isEmpty(this.patient)) {\n                if (typeof val.init === 'function') {\n                  await val.init()\n                }\n                if (typeof val.asyncValue === 'function') {\n                  val.asyncValue().then((val: any) => {\n                    this.cards[i].values[c].value = val\n                  }).catch((e: any) => {\n                    this.cards[i].values[c].value = '_ERROR_'  \n                    console.error(`${e}`)\n                  })\n                } else if (typeof val.staticValue === 'function') {\n                  this.cards[i].values[c].value = val.staticValue()\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async setViralLoadStatus() {\n      const orders = await OrderService.getOrders(this.patient.getID())      \n      if(!isEmpty(orders)){\n        const vlOrders = OrderService.getViralLoadOrders(orders)\n        if(!isEmpty(vlOrders)){\n          this.facts.hasHighViralLoad = OrderService.isHighViralLoadResult(vlOrders[0].tests[0].result[0])\n        }\n      }      \n    },\n    /**\n     * Resolve patient by either patient ID or NpID.\n     * Note: \n     *  - DDE Service only supports NPID search.\n    */\n    async findAndSetPatient(id: number | undefined, npid: string | undefined) {\n      let req = null\n      this.isReady = false\n      this.localPatient = {} // Patient found without using DDE\n      if (!this.facts.scannedNpid) {\n        this.facts.scannedNpid = npid || ''\n      }\n      if (this.useDDE && npid) {\n        req = this.ddeInstance.searchNpid(npid)\n      } else if (id) {\n        req = Patientservice.findByID(id)\n      } else {\n        req = Patientservice.findByNpid(npid as string)\n      }\n      this.handleSearchResults(req)\n        .then(() => this.isReady = true)\n        .catch((e) => toastDanger(`${e}`, 300000))\n    },\n    /**\n     * Handle search result promises and handle entity related errors.\n     * This is also an entrypoint to initialise Ui Data and facts\n     */\n    async handleSearchResults(patient: Promise<Patient | Patient[]>) {\n      let results: Patient[] | Patient = []\n      try {\n        results = await patient as Patient[] | Patient\n      } catch (e) {\n        // [DDE] A person might have missing attributes such as home_village, \n        // or home_ta.\n        if (e instanceof IncompleteEntityError && !isEmpty(e.entity)) {\n          results = e.entity\n        } else if (e instanceof BadRequestError && Array.isArray(e.errors)) {\n          const [msg, ...entities] = e.errors\n          if (typeof msg === 'string' && msg === \"Invalid parameter(s)\") {\n            this.setInvalidParametersFacts(entities)\n          }\n        } else {\n          toastDanger(`${e}`, 300000)\n        }\n      }\n\n      // Use local patient if available if DDE never found them\n      if (isEmpty(results) && !isEmpty(this.localPatient)) results = this.localPatient\n      \n      if(Array.isArray(results) && results.length > 1){\n        this.facts.npidHasDuplicates = results.length <= 5\n        this.facts.npidHasOverFiveDuplicates = results.length > 5\n      } else {\n        this.facts.patientFound = !isEmpty(results)\n      }\n\n      if (this.facts.patientFound) {\n        this.patient = new Patientservice(\n          Array.isArray(results)\n            ? results[0]\n            : results\n          )\n        this.updateCards()\n        Store.set('ACTIVE_PATIENT', this.patient)\n        this.setPatientFacts()\n        const factPromises = []\n        factPromises.push(this.setProgramFacts())\n        if (this.useDDE) {\n          factPromises.push(this.setDDEFacts())\n        } \n        if (this.facts.programName === 'ANC') {\n          factPromises.push(this.setAncFacts())\n        }\n        if (this.facts.programName === 'ART') {\n          factPromises.push(this.setViralLoadStatus())\n        }\n        this.facts.currentNpid = this.patient.getNationalID()\n        factPromises.push(this.validateNpid())\n        await Promise.all(factPromises)\n      } else {\n        // [DDE] a user might scan a deleted npid but might have a newer one.\n        // The function below checks for newer version\n        if (this.facts.scannedNpid) this.setVoidedNpidFacts(this.facts.scannedNpid)\n      }\n      this.onEvent(TargetEvent.ONLOAD)\n        .then(() => this.isReady = true)\n        .catch(e => { toastDanger(`${e}`, 300000); this.isReady = true })\n    },\n    async validateNpid () {\n      if(this.useDDE){\n        this.facts.hasInvalidNpid = !this.patient.getDocID() || (\n          this.patient.getDocID() && isUnknownOrEmpty(this.patient.getNationalID())\n        )\n      } else {\n        const results = await Patientservice.findByNpid(this.facts.currentNpid, {\"page_size\": 2})\n        this.facts.hasInvalidNpid = Array.isArray(results) && results.length > 1\n      }\n    },\n    /**\n     * DDE sometimes sends 400 bad request which contains\n     * a list of invalid demographic attributes \n     */\n    setInvalidParametersFacts(errorExceptions: any) {\n      this.facts.demographics.hasInvalidDemographics = true\n      // Create a turple of attribute and error pairs\n      this.facts.demographics.invalidDemographics =\n        errorExceptions.map((e: any) => {\n          const data = Object.entries(e)\n          const entity = data[0][0]\n          const errors = data[0][1] as string[]\n          return [entity, errors.join(', ')]\n        })      \n    },\n    /**\n     * Reloads patient facts and information.\n     * Note: Use this when you know the patient is loaded\n     */\n    reloadPatient() {\n      return this.findAndSetPatient(this.patient.getID(), undefined)\n    },\n    /**\n     * Facts are used by the Guideline Engine to crosscheck \n     * conditions to execute. The more the data the better\n     * the decision support. These facts are also presented \n     * on the User interface\n    */\n    setPatientFacts() {\n      this.facts.demographics.patientIsComplete = this.patient.patientIsComplete()\n      this.facts.demographics.patientName = this.patient.getFullName()\n      this.facts.demographics.givenName = this.patient.getGivenName()\n      this.facts.demographics.familyName = this.patient.getFamilyName()\n      this.facts.demographics.landmark = this.patient.getAttribute(19)\n      this.facts.demographics.phoneNumber = this.patient.getAttribute(12)\n      this.facts.demographics.gender = this.patient.getGender()\n      this.facts.demographics.birthdate = this.patient.getBirthdate()\n      this.facts.demographics.ancestryDistrict = this.patient.getHomeDistrict()\n      this.facts.demographics.ancestryTA = this.patient.getHomeTA()\n      this.facts.demographics.ancestryVillage = this.patient.getHomeVillage()\n      this.facts.demographics.currentDistrict = this.patient.getCurrentDistrict()\n      this.facts.demographics.currentTA = this.patient.getCurrentTA()\n      this.facts.demographics.currentVillage = this.patient.getCurrentVillage()\n      this.facts.identifiers = this.patient.getIdentifiers()\n        .map((id: any) => id.type.name)\n    },\n    async setGlobalPropertyFacts() {\n      this.facts.globalProperties.ddeEnabled = await Store.get('IS_DDE_ENABLED')\n      this.useDDE = this.facts.globalProperties.ddeEnabled\n      if (this.app.applicationName === 'ART') {\n        this.facts.globalProperties.useFilingNumbers = await Store.get('IS_ART_FILING_NUMBER_ENABLED')\n      }\n    },\n    async setAncFacts() {\n      const anc = new AncPregnancyStatusService(this.patient.getID(), -1)\n      this.facts.anc.canInitiateNewPregnancy = await anc.canInitiateNewPregnancy()\n      this.facts.anc.currentPregnancyIsOverdue = await anc.pregnancyIsOverdue()\n      this.facts.anc.lmpMonths = await anc.getLmpInMonths()\n    },\n    buildDDEDiffs(diffs: any) {\n      const comparisons: Array<string[]> = []\n      const refs: any = {\n        givenName : { label: 'First Name', ref: 'given_name' },\n        familyName: { label: 'Last Name', ref: 'family_name'},\n        birthdate: { label: 'Birthdate', ref: 'birthdate'},\n        gender: { label: 'Gender', ref: 'gender' },\n        phoneNumber: {label: 'Phone number', ref: 'phone_number'},\n        ancestryDistrict: { label: 'Home District', ref: 'home_district'},\n        ancestryTA: { label: 'Home TA', ref: 'home_traditional_authority'},\n        ancestryVillage: { label: 'Home Village', ref: 'home_village'},\n        currentDistrict: { label: 'Current District', ref: 'current_district'},\n        currentTA: { label: 'Current TA', ref: 'current_traditional_authority'},\n        currentVillage: { label: 'Current Village', ref: 'current_village'}\n      }\n      let index = 0\n      const diffIndexes: any = { indexes: [], class: 'his-empty-set-color'}\n\n      for(const k in refs) {\n        let local = this.facts.demographics[k]\n        let remote = local\n\n        if (refs[k].ref in diffs) {\n          diffIndexes.indexes.push(index)\n          local = diffs[refs[k].ref].local\n          remote = diffs[refs[k].ref].remote\n        }\n\n        comparisons.push([\n          refs[k].label,\n          local,\n          remote\n        ])\n        ++index\n      }\n      return {comparisons, rowColors: [diffIndexes]}\n    },\n    async setProgramFacts() {\n      this.facts.programName = this.app.applicationName\n      try {\n        this.program = new PatientProgramService(this.patient.getID())\n        this.programInfo = await this.program.getProgram()\n        Store.set('PATIENT_PROGRAM', this.programInfo)\n        const { program, outcome }: any =  this.programInfo\n        this.facts.enrolledInProgram = !(isValueEmpty(program) || program.match(/n\\/a/i))\n        this.facts.currentOutcome = outcome\n        this.facts.userRoles = UserService.getUserRoles().map((r: any) => r.role)\n        this.facts.patientType = (await ObservationService.getFirstValueCoded(\n          this.patient.getID(), 'Type of patient')) || 'N/A'\n      } catch (e) {\n        console.error(`${e}`)\n      }\n    },\n    /**\n     * Set dde facts if service is enabled.\n     * Please Note that DDE has to be configured per Program in the backend.\n     * If a program isnt configured for DDE, it crashes by default hence \n     * exception handling is required\n     */\n    async setDDEFacts() {\n      try {\n        const localAndRemoteDiffs = (await this.ddeInstance.getLocalAndRemoteDiffs())?.diff\n        this.facts.dde.localDiffs = this.ddeInstance.formatDiffValuesByType(\n          localAndRemoteDiffs, 'local'\n        )\n        const { comparisons, rowColors } = this.buildDDEDiffs(localAndRemoteDiffs)\n        this.facts.dde.diffRows = comparisons\n        this.facts.dde.diffRowColors = rowColors\n        if (localAndRemoteDiffs.npid) {\n          const {local, remote} = localAndRemoteDiffs.npid\n          this.facts.dde.localNpidDiff = local\n          this.facts.dde.remoteNpidDiff = remote\n          delete localAndRemoteDiffs.npid\n        }\n        this.facts.dde.hasDemographicConflict = !isEmpty(localAndRemoteDiffs)\n      } catch (e) {\n        console.warn(e)\n      }\n    },\n    async setVoidedNpidFacts(npid: string) {\n      const cols = [\n        'Name', 'Birthdate', 'Gender', 'Ancestry Home', 'CurrentID', 'Action'\n      ]\n      let rows = []\n      const req = await this.ddeInstance.findVoidedIdentifier(npid)\n      if (req) {\n        rows = req.map((d: any) => {\n          const p = new Patientservice(d)\n          return [\n            p.getFullName(),\n            p.getBirthdate(),\n            p.getGender(),\n            p.getHomeTA(),\n            p.getNationalID(),\n            {\n              type: 'button',\n              name: 'Select',\n              action: async () => {\n                if (!p.patientIsComplete()) {\n                  return this.$router.push(`/patient/registration?edit_person=${p.getID()}`)\n                } else if (p.getNationalID().match(/unknown/i) || !p.getDocID()) {\n                  try {\n                    await p.assignNpid()\n                    await this.findAndSetPatient(p.getID(), undefined)\n                    return modalController.dismiss()\n                  } catch (e) {\n                    toastWarning('Failed to assign npid to patient with unknown npid.')\n                    return console.error(e)\n                  }\n                }\n                await modalController.dismiss()\n                await this.findAndSetPatient(undefined, p.getNationalID())\n              }\n            }\n          ]\n        })\n        this.facts.dde.voidedNpids.cols = cols\n        this.facts.dde.voidedNpids.rows = rows\n      }\n    },\n    /**\n     * Executes CONFIRMATION_PAGE GUIDELINES with given TargetEvent\n    */\n    async onEvent(targetEvent: TargetEvent, callback={}) {\n      const findings = matchToGuidelines(\n        this.facts, CONFIRMATION_PAGE_GUIDELINES, '', targetEvent, 'weight'\n      )\n      for(const index in findings) {\n        const finding = findings[index]\n        if (finding?.actions?.alert) {\n          const state = await finding?.actions?.alert(this.facts)\n          if ((await this.runFlowState(state))\n              === FlowState.FORCE_EXIT) {\n              return false \n            }\n        }\n      }\n      if (typeof callback === 'function') callback()\n    },\n    async onInitiateNewAncPregnancy() {\n      if ((await alertConfirmation('Are you sure you want to initiate new pregnancy?'))) {\n        if ((await this.initiateNewAncPregnancy())) {\n          this.facts.anc.canInitiateNewPregnancy = false\n          this.facts.anc.currentPregnancyIsOverdue = false\n          this.nextTask()\n        } else {\n          toastWarning('Unable to initiate new pregnancy')\n        }\n      }\n    },\n    initiateNewAncPregnancy() {\n      return new AncPregnancyStatusService(this.patient.getID(), -1).createNewPregnancyStatus()\n    },\n    /**\n     * Maps FlowStates defined in the Guideline to\n     * Functions definitions that are executed.\n     */\n    async runFlowState(state: FlowState) {\n      const states: Record<string, Function> = {}\n      states[FlowState.GO_HOME] = () => {\n          this.$router.push('/')\n          return FlowState.FORCE_EXIT\n      }\n      states[FlowState.GO_BACK] = () => {\n        this.$router.back()\n        return FlowState.FORCE_EXIT\n      }\n      states[FlowState.ENROLL] = () => {\n        return this.program.enrollProgram()\n      }\n      states[FlowState.ACTIVATE_FN] = () => {\n        this.$router.push(`/art/filing_numbers/${this.patient.getID()}?assign=true`)\n        return FlowState.FORCE_EXIT\n      }\n      states[FlowState.UPDATE_DMG] = () => {\n        this.$router.push(`/patient/registration?edit_person=${this.patient.getID()}`)\n        return FlowState.FORCE_EXIT\n      }\n      states[FlowState.PRINT_NPID] = async () => {\n        await this.ddeInstance.printNpid(this.patient.getID())\n        await delayPromise(1800)\n        return FlowState.CONTINUE\n      }\n      states[FlowState.CREATE_NPID_WITH_REMOTE_DIFF] = async () => {\n        const npid = this.facts.dde.remoteNpidDiff\n        try {\n          if (npid && (await this.ddeInstance.createNPID(npid))) {\n            this.facts.scannedNpid = npid\n            this.facts.currentNpid = npid\n            this.facts.dde.localNpidDiff = npid\n            toastSuccess('Remote NPID successfully updated')\n            await delayPromise(300)\n            await this.ddeInstance.printNpid()\n            await this.findAndSetPatient(undefined, npid)\n            return FlowState.FORCE_EXIT\n          }\n        } catch (e) {\n          const alreadyAssigned = /Identifier already assigned to another patient/i\n          if (e instanceof BadRequestError && e.errors.join(',').match(alreadyAssigned)) {\n            const res = await this.ddeInstance.reassignNpid(this.patient.getDocID())\n            if (res) {\n              this.patient = new Patientservice(res)\n              toastSuccess('Patient has been reassigned NPID')\n              await delayPromise(300)\n              await this.ddeInstance.printNpid()\n              await this.findAndSetPatient(undefined, this.patient.getNationalID())\n              return FlowState.FORCE_EXIT\n            }\n          }\n          toastDanger(`Unable to assign NPID: ${e}`)\n        }\n      }\n      states[FlowState.ASSIGN_NPID] = async () => {\n        await this.patient.assignNpid()\n        await (new PatientPrintoutService(this.patient.getID())).printNidLbl()\n        await delayPromise(300)\n        await this.reloadPatient()\n        return FlowState.FORCE_EXIT\n      },\n      states[FlowState.INITIATE_ANC_PREGNANCY] = async () => {\n        await this.initiateNewAncPregnancy()\n        return FlowState.CONTINUE\n      }\n      states[FlowState.VIEW_MERGE_AUDIT_FOR_NPID] = () => {\n        this.$router.push(`/merge/rollback/${this.facts.scannedNpid}`)\n        return FlowState.FORCE_EXIT\n      }\n      states[FlowState.RESOLVE_DUPLICATE_NPIDS] = () => {\n        this.$router.push(`/npid/duplicates/${this.facts.scannedNpid}`)\n        return FlowState.FORCE_EXIT\n      }\n      states[FlowState.REFRESH_DDE_DEMOGRAPHICS] = async () => {\n        await this.ddeInstance.refreshDemographics()\n        await this.reloadPatient()\n        return FlowState.FORCE_EXIT\n      }\n      states[FlowState.ADD_AS_DRUG_REFILL] = async () => {\n        await this.createPatientType('Drug Refill')\n        return FlowState.CONTINUE\n      }\n      states[FlowState.ADD_AS_NEW_PATIENT] = async () => {\n        await this.createPatientType('New patient')\n        return FlowState.CONTINUE\n      }\n      states[FlowState.ADD_AS_EXTERNAL_CONSULTATION] = async () => {\n        await this.createPatientType('External consultation')\n        return FlowState.CONTINUE\n      }\n      states[FlowState.SEARCH_BY_NAME] = () => {\n        this.$router.push('/patient/registration')\n        return FlowState.FORCE_EXIT\n      }\n      states[FlowState.UPDATE_LOCAL_DDE_DIFFS] = async () => {\n        await this.ddeInstance.updateLocalDifferences(\n          this.facts.dde.localDiffs\n        )\n        await this.reloadPatient()\n        return FlowState.FORCE_EXIT\n      }\n      if (state in states) {\n        try {\n          return await states[state]()\n        }catch(e) {\n          toastDanger(`${e}`)\n        }\n      }\n      return state\n    },\n    async createPatientType(patientType: 'Drug Refill' | 'External consultation' | 'New patient') {\n      const type = new PatientTypeService(this.patient.getID(), -1)\n      await type.createEncounter()\n      await type.savePatientType(patientType)\n    },\n    async onVoid() {\n      popVoidReason(async (reason: string) => {\n        try {\n          await Patientservice.voidPatient(this.patient.getID(), reason)\n          this.$router.push('/')\n        } catch (e) {\n          toastDanger(`${e}`)\n        }\n      }, 'void-modal')\n    },\n    nextTask() {\n      this.onEvent(TargetEvent.ON_CONTINUE, () => {\n        nextTask(this.patient.getID(), this.$router)\n      })\n    }\n  }\n})\n","import { render } from \"./Confirmation.vue?vue&type=template&id=0492b742&scoped=true&ts=true\"\nimport script from \"./Confirmation.vue?vue&type=script&lang=ts\"\nexport * from \"./Confirmation.vue?vue&type=script&lang=ts\"\n\nimport \"./Confirmation.vue?vue&type=style&index=0&id=0492b742&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0492b742\"]])\n\nexport default __exports__"],"sourceRoot":""}