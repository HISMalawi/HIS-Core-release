{"version":3,"sources":["webpack:///./src/apps/OPD/views/encounters/radiology.vue?86c7","webpack:///./src/apps/OPD/views/encounters/radiology.vue","webpack:///./src/apps/OPD/views/encounters/radiology.vue?dcc5"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","_","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","radiologyService","isPacsEnabled","watch","ready","handler","isReady","PatientRadiologyService","patientID","providerID","OPD_GLOBAL_PROP","isPACsEnabled","getFields","immediate","deep","methods","computedData","Promise","all","radiology","createEncounter","obsObj","saveObservationList","savedObsData","printOrders","patient","submitToPacs","console","log","gotoPatientDashboard","id","helpText","condition","showPreviousRadiolgy","type","FieldType","TT_TABLE_VIEWER","options","d","getPreviousRadiologyExaminations","config","hiddenFooterBtns","TT_RADIOLOGY_PICKER","validation","Validation","required","computedValue","map","option","buildValueCoded","other","parent","buildValueCodedFromConceptId","concept_id","child","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+BC,8BAAkB,qBACjDC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,sBAAS,iBAAM,CACtBC,yBAAaP,EAA8B,CACzCQ,sBAAuBd,EAAKe,kBAC5BC,OAAQhB,EAAKgB,OACbC,eAAgBjB,EAAKkB,UACpB,KAAM,EAAG,CAAC,wBAAyB,SAAU,uBAElDC,EAAG,I,wJCJQC,+BAAgB,CAC7BC,WAAY,CAAEC,wBACdC,OAAQ,CAACC,QACTC,KAAM,iBAAO,CACXC,iBAAkB,GAClBC,eAAe,IAEjBC,MAAO,CACLC,MAAO,CACCC,QADD,SACSC,GAAgB,4JACzBA,EAD2B,CAAF,sBAE1B,EAAKL,iBAAmB,IAAIM,OAAwB,EAAKC,UAAW,EAAKC,YAF/C,SAGEC,OAAgBC,gBAHlB,OAG1B,EAAKT,cAHqB,OAI1B,EAAKX,OAAS,EAAKqB,YAJO,8CAO9BC,WAAW,EACXC,MAAM,IAGVC,QAAS,CACDtB,SADC,SACQC,EAAQsB,GAAiB,kLACnBC,QAAQC,IAAIF,EAAaG,WADN,cAChCnB,EADgC,gBAEhC,EAAKC,iBAAiBmB,kBAFU,uBAGjB,EAAKnB,iBAAiBoB,OAAOrB,GAHZ,cAGhCqB,EAHgC,iBAIX,EAAKpB,iBAAiBqB,oBAAoBD,GAJ/B,eAIhCE,EAJgC,iBAKhC,EAAKtB,iBAAiBuB,YAAYxB,EAAM,EAAKyB,SALb,YAMnC,EAAKvB,cAN8B,4CAQ5B,EAAKD,iBAAiByB,aAAaH,EAAc,EAAKE,SAR1B,8DAUlCE,QAAQC,IAAR,MAVkC,QAatC,EAAKC,uBAbiC,8DAexCjB,UAhBO,WAgBE,WACP,MAAO,CACL,CACEkB,GAAI,oBACJC,SAAU,kCACVC,UAAW,kBAAM,EAAK/B,iBAAiBgC,qBAAqB,EAAKR,UACjES,KAAMC,OAAUC,gBAChBC,QAAS,SAACC,GAAD,OAAY,EAAKrC,iBAAiBsC,iCAAiC,EAAKd,UACjFe,OAAQ,CACNC,iBAAkB,CAAC,WAGvB,CACEX,GAAI,YACJC,SAAU,wBACVG,KAAMC,OAAUO,oBAChBC,WAAY,SAAC3C,GAAD,OAAe4C,OAAWC,SAAS7C,IAC/C8C,cAAe,SAACT,GACd,OAAOA,EAAQU,IAAR,yDAAY,WAAOC,GAAP,iIACP,EAAK/C,iBAAiBgD,gBAAgB,mBAAoBD,EAAOE,MAAMC,QADhE,qEAEH,EAAKlD,iBAAiBmD,6BAA6BJ,EAAOE,MAAMC,OAAQH,EAAOE,MAAMG,YAFlF,iCAEjBC,MAFiB,8FAAZ,8D,qBC3DnB,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASjF,KAErD","file":"js/chunk-2d0cf669.a81f145c.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\";\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){\n      const data = await Promise.all(computedData.radiology)\n      await this.radiologyService.createEncounter()\n      const obsObj = await this.radiologyService.obsObj(data) \n      const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n      await this.radiologyService.printOrders(data, this.patient)\n      if(this.isPacsEnabled) {\n        try {\n          await this.radiologyService.submitToPacs(savedObsData, this.patient)\n        } catch (error) {\n          console.log(error)\n        }\n      }\n      this.gotoPatientDashboard()\n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: 'radiology_results',\n          helpText: 'Previous Radiology Examinations',\n          condition: () => this.radiologyService.showPreviousRadiolgy(this.patient),\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.radiologyService.getPreviousRadiologyExaminations(this.patient),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'radiology',\n          helpText: 'Radiology Examination',\n          type: FieldType.TT_RADIOLOGY_PICKER,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n              child: (await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))\n            }))\n          },\n        },\n      ]\n    },\n  }\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=4263ddee&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}