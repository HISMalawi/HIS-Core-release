{"version":3,"sources":["webpack:///./src/apps/ART/services/adherence_service.ts","webpack:///./src/apps/ART/services/lab_order_service.ts","webpack:///./src/services/person_attributes_service.ts","webpack:///./src/services/patient_registration_service.ts","webpack:///./src/services/relations_service.ts","webpack:///./src/apps/ART/services/htn_service.ts","webpack:///./src/apps/ART/services/consultation_service.ts","webpack:///./src/services/patient_lab_result_service.ts","webpack:///./src/apps/EMC/utils/form.ts","webpack:///./src/apps/ART/services/stock_service.ts","webpack:///./src/apps/ART/services/dispensation_service.ts","webpack:///./src/apps/ART/services/reception_service.ts","webpack:///./src/services/drug_order_service.ts","webpack:///./src/utils/ActionSheetHelpers/VoidReason.ts","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?87f4","webpack:///./src/components/DataViews/DrillTableModal.vue?e567","webpack:///./src/components/DataViews/DrillTableModal.vue","webpack:///./src/components/DataViews/DrillTableModal.vue?7a9b","webpack:///./src/apps/ART/services/appointment_service.ts","webpack:///./src/apps/EMC/views/Mastercard.vue?272e","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?d8db","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue?6d9b","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue?887d","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue?627a","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue?74aa","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue?e442","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue?61e3","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue?4be1","webpack:///./src/apps/EMC/Components/OutcomeForm.vue?4c09","webpack:///./src/apps/EMC/Components/OutcomeForm.vue","webpack:///./src/apps/EMC/Components/OutcomeForm.vue?6644","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue?0dcc","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?7e9a","webpack:///./src/services/patient_observation_service.ts","webpack:///./src/utils/Arrays.ts","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?f13b","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?f28b","webpack:///./src/apps/EMC/Components/InformationHeader.vue?dedd","webpack:///./src/apps/EMC/Components/InformationHeader.vue","webpack:///./src/apps/EMC/Components/InformationHeader.vue?d582","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue?e7c3","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue?9f15","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue?104e","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue?dad6","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue?c9aa","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue?5f12","webpack:///./src/apps/EMC/views/Mastercard.vue","webpack:///./src/apps/EMC/views/Mastercard.vue?94de","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?3c56","webpack:///./src/apps/ART/services/vitals_service.ts","webpack:///./src/services/person_service.ts","webpack:///./src/utils/modal.ts","webpack:///./src/apps/ART/services/prescription_service.ts","webpack:///./src/apps/EMC/Components/InformationHeader.vue?3cc5"],"names":["AdherenceService","AppEncounterService","constructor","patientID","providerID","super","this","lastDrugs","lastReceiptDate","date","Date","setDate","getDate","d","HisDate","toStandardHisFormat","drugs","getJson","reduce","receiptDate","drug","order","start_date","htnDrugs","BPManagementService","htnDrugReferences","map","drug_id","filter","includes","getReceiptDate","getLastDrugs","receivedDrugsBefore","isEmpty","buildPillCountObs","orderId","pillCount","buildValueNumber","drugId","adherence","concept","getConceptID","getSessionDate","isAdherenceGood","calculateAdherence","given","pills","expected","Math","round","calculateExpected","equivalentDailyDose","startDate","frequency","timeUnit","daysGone","calcTimeElapsed","parseFloat","toString","date1","dayjs","diff","calculateUnaccountedOrMissed","actual","exp","LabOrderService","PersonAttributeService","Service","attributes","postJson","PatientRegistrationService","personId","getPersonID","setPersonID","personID","person","personAttributes","createPerson","createPersonAttributes","patient","createPatient","printPatient","updatePerson","PersonService","update","data","create","person_id","ProgramService","index","PatientPrintoutService","printNidLbl","RelationsService","relationID","reason","void","guardianID","curRelationID","newRelationTypeID","voidRelation","createRelation","patientA","patientB","relationType","HTN_SESSION_KEY","sbp","dbp","bpTrail","firstRecentGrade","secondRecentGrade","Object","values","sort","a","b","bp","getBpGrade","getSystolicBp","ObservationService","getFirstValueNumber","getDiastolicBp","query","getFirstValueCoded","drugID","state","getDrugs","HCZ","drugName","amount","current","selected","isChecked","dispensed","expectedRemaining","notes","Enalapril","remaining","Amlodipine","Atenolol","ConsultationService","getFamilyPlanningMethods","obs","getFirstObs","value_text","match","obsInValidPeriod","getDrugSideEffects","getProgramID","getClient","req","id","lastScreened","duration","secondCheck","getFirstValueText","isTL","value_coded","tlObs","fpObs","uniqueDrugs","forEach","drug_inventory_id","familyPlanningMethods","label","familyPlanningLogic","value","disabled","PatientLabResultService","patientId","testTypeID","resultDate","testID","createLabResult","measures","encounterID","getTestID","getTestTypeID","setTestTypeID","test","setResultDate","setTestID","getTestsWithoutResults","OrderService","getOrders","status","getTestIndicators","async","isValidForm","form","key","required","error","validation","payload","errs","length","console","log","every","resolveFormValues","underscoreKeys","formData","computedFormData","fKey","toUnderscores","computedValue","resolveObs","tag","accum","cur","Array","isArray","concat","push","Promise","all","optionsToGroupObs","conceptName","options","buildGroupValueCoded","option","submitForm","callback","showloader","loader","show","hide","toastWarning","StockService","stock","pharm","current_quantity","DRUG_PACK_SIZES","DispensationService","drugHistory","currentDrugOrder","useDrugManagement","setIsDrugManagementEnabled","isEnabled","ART_PROP","drugManagementEnabled","getDrugHistory","getCurrentOrder","buildDispensations","tabs","totalPacks","dispensations","i","quantity","saveDispensations","res","DrugOrderService","getDrugOrderHistory","e","warn","getDrugOrders","fetchAvailableDrugStock","getDrugPackSizes","calcCompletePack","units","drugOrderBarcodes","barcodes","parseInt","completePack","ReceptionService","sitePrefix","getSitePrefix","GLOBAL_PROP","createArvNumber","identifier","buildArvNumber","arv","orders","pageSize","params","popVoidReason","size","modal","optionsActionSheet","name","slot","color","role","selection","action","_hoisted_1","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_his_basic_table","_component_text_skeloton","_component_ion_content","_component_ion_button","_component_ion_footer","_openBlock","_createElementBlock","_Fragment","_createVNode","default","_withCtx","_createTextVNode","_toDisplayString","title","_","ready","columns","rows","onClick","closeModal","defineComponent","components","HisBasicTable","IonHeader","IonToolbar","IonContent","IonFooter","IonButton","TextSkeloton","props","type","String","onRows","Function","watch","func","immediate","deep","methods","modalController","dismiss","__exports__","AppointmentService","programID","paginate","_component_information_header","_component_ion_col","_component_ion_row","_component_visits_summary","_component_ion_grid","_component_layout","_createBlock","isReady","class","guardians","artStartDate","onUpdateARVNumber","updateARVNumber","onAddGuardian","addGuardian","onUpdatePatient","updateDemographics","_createCommentVNode","_withScopeId","n","_pushScopeId","_popScopeId","_createElementVNode","_component_ion_icon","_component_ion_card_title","_component_ion_card_header","_component_report_table","_component_ion_card_content","_component_ion_card","style","_renderList","actionButtons","btn","icon","config","tableConfig","_component_DateInput","_component_SelectInput","_component_NumberInput","_component_ion_label","_component_ion_checkbox","_component_ion_item","modelValue","orderDate","$event","minDate","birthdate","maxDate","today","reasons","specimenConcept","specimens","modifier","modifiers","result","min","ldl","resetResults","saveResults","IonTitle","IonLabel","IonGrid","IonRow","IonCol","IonCheckbox","IonItem","DateInput","SelectInput","NumberInput","setup","ref","toOptions","format","STANDARD_DATE_FORMAT","getBirthdate","reactive","isValid","isAfter","isBefore","placeholder","setSessionDate","orderService","getID","vlConceptId","ConceptService","encounter","createEncounter","Error","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","resultService","tests","resultEnc","resetSessionDate","EventBus","emit","EmcEvents","RELOAD_LATEST_VL_RESULT","RELOAD_PATIENT_VISIT_DATA","alertConfirmation","ON_CLEAR","isLDL","undefined","onMounted","getSpecimens","specimen","_component_ion_badge","_component_enrollment_form","_component_outcome_form","_component_outcomes_table","enrollmentStatus","isEnrolled","outcomes","enrollDate","onSaveOutcome","saveOutcome","_normalizeStyle","minHeight","totalStates","patientStates","program","patient_states","onVoidOutcome","voidOutcome","patientProgram","onEnrollProgram","enrollProgram","voidProgram","_component_data_table","TableRowActions","DataTable","emits","path","formatter","v","DISPLAY_DATE_FORMAT","showSearchField","showSubmitButton","computed","stateId","row","patient_state_id","onReset","dateEnrolled","isTransferredOut","nextFacility","asyncOptions","getFacilities","onSave","facility","StandardValidations","IonBadge","OutcomesTable","EnrollmentForm","OutcomeForm","toStandardHisDisplayFormat","PatientProgramService","setStateDate","setStateId","transferOutEncounter","other","updateState","toastSuccess","setProgramDate","setPatientProgramId","patient_program_id","voidState","splice","programs","getPrograms","find","l","date_enrolled","states","getProgramOutcomes","program_workflow_state_id","_component_yes_no_input","_component_multi_column_view","visitDate","weight","showHeightField","height","tbStatus","tbStatuses","isFemale","isPregnant","inline","isBreastfeeding","hasContraindications","items","contraIndications","numberOfColumns","entries","entry","lines","hasSideEffects","sideEffects","regimen","regimens","totalArvsGiven","totalCPTGiven","tbMed","tbMeds","hasGiven6H","hasGivenRFP","totalIPTGiven","totalRFPGiven","hasGiven3HP","total3HPGiven","totalPyridoxineGiven","patientPresent","guardianPresent","prevDrugs","nextAppointmentDate","drugRunOutDate","onClear","onSubmit","PatientObservationService","Patientservice","getFirstObsDatetime","getLastValueCoded","getConceptName","getLastValueNumber","weights","getAll","value_numeric","obs_datetime","value_datetime","getAllDrugOrders","Number","MAX_SAFE_INTEGER","getWhoStage","uniqueBy","arr","iteratee","Map","Boolean","item","uniqueKey","k","join","YesNoInput","MultiColumnView","vitals","VitalsService","consultations","prescription","PrescriptionService","dispensation","reception","appointment","prevHeight","getAge","validator","buildValueCoded","buildValueDate","isNumber","validateSeries","some","x","isPresent","onTB","regs","RegimenService","getRegimensByWeight","keys","arvs","remainingDrugs","add","setPatientPresent","setGuardianPresent","buildBmiObs","bmi","BMIService","calculateBMI","buildFpmObs","method","getTbSymptomsObs","getConceptsByCategory","toDrugOrder","calculateEquivalentDosage","am","pm","calculateDosage","getInstructions","drug_name","vitalsObs","bmiObs","saveObservationList","consultationObs","drugOrders","arvDrugs","getRegimenExtras","iptRegimens","pyridoxine","INH","rfpRegimens","threeHPRegimens","createDrugOrder","order_id","qty","flat","receptionObs","adherenceObs","equivalent_daily_dose","adh","buildAdherenceObs","appointmentObs","RELOAD_STAGING_INFORMATION","getRecentHeight","recentWeight","getRecentWeight","getLastDrugsReceived","concept_id","ReportTable","IonCard","IonCardHeader","IonCardTitle","IonCardContent","showIndex","tableCssTheme","PatientVisit","OutcomeStatus","ViralLoadResult","table","thTxt","formatVisitDate","monthsElapsed","showDrugsDispensed","component","DrillTableModalVue","cssClass","componentProps","present","removeEncounters","activeRows","encounters","EncounterService","getEncounters","voidEncounter","buildRows","getPatientVisits","then","dates","getCurrentProgramInformation","nextAppointment","pregnant","breastfeeding","vlResult","outcome","nDate","getFirstValueDatetime","vlObs","td","getCachedConceptName","tdLink","pills_dispensed","tdBtn","on","width","display","justifyContent","_hoisted_3","_hoisted_4","_hoisted_5","_component_ion_list","patientInfo","button","clickable","onClickHandler","initWeight","initHeight","initBmi","initTBStatus","breastFeedingAtInitiation","pregnantAtInitiation","receivedART","agreesToFollowUp","reasonForStartingART","hivTestDate","hivTestPlace","stagingCondition","latestVLResult","whoSTage","getDobAndAgeAtInitiation","dob","ageAtInitiation","setLatestVLResult","force","ApiStore","invalidate","get","results","rs","r","t","c","value_modifier","getArvNumber","getNationalID","getGivenName","getFamilyName","toGenderString","getGender","getCurrentVillage","getClosestLandmark","getPhoneNumber","router","setHIVTestDate","getHIVTestDate","init","getInitialWeight","getInitialHeight","getInitialBMI","getInitialTBStatus","hasPregnancyAtARTInitiation","breastFeedingAtARTInitiation","everReceivedART","getReasonForStartingART","getHIVTestLocation","getStagingCondition","_component_ion_buttons","_component_TextInput","givenName","middleName","familyName","allowEstimation","estimationLabel","onIsEstimated","estimate","isBirthdateEstimated","gender","genderOptions","cellPhoneNumber","allowUnknown","homeVillage","getVillagesByName","allowCustom","landmark","getLandmarks","onFinish","TextInput","patientService","getMiddleName","phone","Validation","isMWPhoneNumber","resolveAddress","address","village","TA","LocationService","getTraditionalAuthorityById","traditional_authority_id","district","getDistrictByID","district_id","updatedPatient","assign","RELOAD_PATIENT_DATA","guardian","registrationService","registerGuardian","guardianId","RELOAD_GUARDIAN_DATA","_component_text_input","arvNumber","prefix","hasValidARVNumber","voidARV","split","isNumberErr","patients","findByOtherID","confirm","voidARVNumber","suggestedNumber","getNextSuggestedARVNumber","arv_number","replace","Layout","VisitsSummary","InformationHeader","route","useRoute","setPatient","patientData","findByID","setPatientGuardian","relationship","RelationshipService","getGuardianDetails","relationshipType","PatientDemographics","attribute","GuardianDemographicsVue","ARVNumberVue","getARTStartDate","isNotEmptyandNumber","vital","isNotEmptyandFloat","checkMinMax","val","max","p","validateAll","j","mergeErrors","errors","holder","element","isValidBPReading","isValidBP","bpSystolic","bpDiastolic","emptyErrors","minErrors","putJson","names","given_name","family_name","backdropDismiss","m","onWillDismiss","AdverseEffectsCategories","nextVisitInterval","fastTrack","regimenExtras","fastTrackMedications","hangingPills","medicationOrders","treatmentState","contraindications","tptPrescriptionCount","lastSideEffectDate","setNextVisitInterval","getHangingPills","getMedicationOrders","getTptPrescriptionCount","getLastSideEffectDate","getContraindications","getSideEffects","getPatientRegimens","getRegimens","getARVs","getCustomIngridients","getFastTrackMedications","getTreatmentState","isFastTrack","medicationOrdersAvailable","shouldPrescribeArvs","getCachedConceptID","shouldPrescribeExtras","extras","extrasAvailable","getRegimenStarterpack","regimenCode","patientWeight","contraindication","getObs","o","drugInduced","value_drug","count","yes","meds","drug_order","withDosages","dosage","getDrugDosages","noon","findAndGroupDrugSideEffects","allSideEffects","calculatePillsPerDay","estimatePackSize","pillsPerDay","packSize","packs","roundedPacks","morningTabs","eveningTabs","dose","calculateDateFromInterval","dateObj","getDrugPackSize","pack_size","toOrderObj","response","saveValueTextObs","reasonForSwitch"],"mappings":"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","file":"js/chunk-3204078e.bbbf03e6.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { DrugInterface } from \"@/interfaces/Drug\"\nimport HisDate from \"@/utils/Date\"\nimport { isEmpty } from \"lodash\"\nimport { BPManagementService } from \"./htn_service\"\nimport dayjs from \"dayjs\"\n\nexport class AdherenceService extends AppEncounterService {\n    lastDrugs: Array<DrugInterface>\n    lastReceiptDate: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 68, providerID) //TODO: Use encounter type reference name\n        this.lastDrugs = []\n        this.lastReceiptDate = ''\n    }\n\n    async loadPreviousDrugs() {\n        const date = new Date(this.date)\n        date.setDate(date.getDate() - 1) // we don't want current date to count\n        const d = (date: string | Date) => HisDate.toStandardHisFormat(date)\n        const drugs = await AppEncounterService.getJson(\n            `patients/${this.patientID}/drugs_received`, { date: d(date) }\n        )      \n        if (drugs) {\n            this.lastReceiptDate = drugs.reduce((receiptDate: string | null,  drug: any) => {\n                return !receiptDate || (new Date(d(drug.order.start_date)) > new Date(receiptDate))\n                    ?  d(drug.order.start_date)\n                    : receiptDate\n            }, null)\n            const htnDrugs = BPManagementService.htnDrugReferences().map((d: any) => d.drug_id)\n            this.lastDrugs = drugs.filter((drug: DrugInterface) => \n               !htnDrugs.includes(drug.drug['drug_id']) && d(drug.order.start_date) === this.lastReceiptDate\n            )\n        }\n    }\n\n    getReceiptDate() { return this.lastReceiptDate }\n\n    getLastDrugs() { return this.lastDrugs }\n\n    receivedDrugsBefore() { return !isEmpty(this.lastDrugs) }\n\n    buildPillCountObs(orderId: number, pillCount: number) {\n        return this.buildValueNumber('Number of tablets brought to clinic', pillCount, null, orderId)\n    }\n\n    async buildAdherenceObs(orderId: number, drugId: number, adherence: number) {\n        const concept = await AppEncounterService.getConceptID('Drug adherence', true)\n        return {\n            'concept_id': concept,\n            'value_numeric': adherence,\n            'value_drug': drugId,\n            'value_modifier': '%',\n            'order_id': orderId,\n            'person_id': this.patientID,\n            'obs_datetime': AppEncounterService.getSessionDate()\n        }\n    }\n\n    isAdherenceGood(adherence: number) {\n        return adherence >= 95 && adherence <= 105\n    }\n\n    calculateAdherence(given: number, pills: number, expected: number) {\n        return Math.round(100 * (given - pills) / (given - expected));\n    }\n\n    calculateExpected(\n        given: number, \n        equivalentDailyDose: number, \n        startDate: string, \n        frequency: 'QOD' | 'QW'\n    ) {\n        const timeUnit = frequency === 'QW' ? 'week' : 'day'\n        const daysGone = this.calcTimeElapsed(startDate, timeUnit);\n        return (given - (daysGone * parseFloat(equivalentDailyDose.toString())));\n    }\n\n    calcTimeElapsed(date1: string, timeUnit: 'week' | 'day') {\n        return dayjs(this.date).diff(date1, timeUnit)\n    }\n\n    calculateUnaccountedOrMissed(expected: string, actual: string) {\n        const exp = (parseFloat(expected) - parseFloat(actual));\n        return (exp < 0 ? ((exp * -1) + ' missed') : (exp + ' unacc'));\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class LabOrderService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 57, providerID);\n  }\n}","import { Service } from \"./service\"\n\nexport interface NewAttribute {\n    person_id: number;\n    person_attribute_type_id: number;\n    value: number | string;\n}\n\nexport class PersonAttributeService extends Service { \n    constructor() {\n        super()\n    }\n\n    static create(attributes: Array<NewAttribute>) { \n        return super.postJson('/person_attributes', attributes) \n    }\n}\n","import { Service } from \"./service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport { Person } from \"@/interfaces/person\"\nimport { PersonService } from \"@/services/person_service\"\nimport { PersonAttributeService } from '@/services/person_attributes_service'\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\n\nexport class PatientRegistrationService extends Service {\n    personId: number\n    constructor() {\n        super()\n        this.personId = 0\n    }\n\n    getPersonID() {\n        return this.personId\n    }\n\n    setPersonID(personID: number) {\n        this.personId = personID\n    }\n\n    async registerPatient(person: any, personAttributes: any) {\n        await this.createPerson(person)\n        await this.createPersonAttributes(personAttributes)\n        const patient = await this.createPatient()\n        await this.printPatient()\n        return patient\n    }\n\n    async registerGuardian(person: any) {\n        return this.createPerson(person)\n    }\n\n    updatePerson(person: any) {\n       return new PersonService(person).update(this.personId)\n    }\n\n    async createPerson(person: any) {\n        const data: Person = await new PersonService(person).create()\n        this.personId = data.person_id\n        return data\n    }\n\n    createPatient() {\n        return ProgramService.createPatient(this.personId)\n    }\n\n    async createPersonAttributes(attributes: Array<any>) {\n        for(const index in attributes) {\n            await PersonAttributeService.create({\n                ...attributes[index],\n                'person_id': this.personId\n            })\n        }\n    }\n\n    printPatient() {\n        return new PatientPrintoutService(this.personId).printNidLbl()\n    }\n}\n","import { Service } from \"./service\";\n\nexport class RelationsService extends Service {\n    constructor() {\n        super()\n    }\n\n    static voidRelation(patientID: number, relationID: number, reason: string) {\n\t\treturn Service.void(`people/${patientID}/relationships/${relationID}`, { reason })\n\t}\n\n    static async amendRelation(patientID: number, guardianID: number, curRelationID: number, newRelationTypeID: number) {\n        await RelationsService.voidRelation(patientID, curRelationID,\n            'Updating guardian relationship'\n        )\n        return RelationsService.createRelation(\n            patientID, guardianID, newRelationTypeID\n        )\n    }\n\n    static getRelations() {\n        return super.getJson('types/relationships')\n    }\n\n    static createRelation(patientA: number, patientB: number, relationType: number) {\n        return super.postJson(`people/${patientA}/relationships`, {\n            'relationship_type_id': relationType,\n            'relation_id': patientB\n        })\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ObservationService } from \"@/services/observation_service\"\n\nexport enum HTN_SESSION_KEY {\n  Prescription = \"htnPrescription\"\n}\n\nexport class BPManagementService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n      super(patientID, 48, providerID) //TODO: Use encounter type reference name'\n    }\n\n    static getBpGrade(sbp: number, dbp: number) {\n      if ((sbp < 140) && (dbp < 90)) {\n        return \"normal\"\n      }\n      else if ((sbp >= 140 && sbp < 160) || (dbp >= 100 && dbp < 110)) {\n        return \"grade 1\"\n      }\n      else if ((sbp >= 180 && dbp > 110) || sbp >= 180) {\n        return \"grade 3\"\n      }\n      else if ((sbp >= 160 && sbp < 180) || (dbp >= 110)) {\n        return \"grade 2\"\n      }\n      return 'N/A'\n    }\n\n    /**\n     * BP is normointensive if two most recent consecutive tests are normal\n     * @param bpTrail \n     * @returns\n    */\n    static isBpNormotensive(bpTrail: any) {\n      const [ firstRecentGrade, secondRecentGrade ] = Object.values(bpTrail)\n        .sort((a: any, b: any) => a.date < b.date ? 1 : 0)\n        .map((bp: any) => this.getBpGrade(bp.sbp, bp.dbp))\n      return firstRecentGrade === 'normal' && secondRecentGrade === 'normal'\n    }\n\n    getSystolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Systolic blood pressure')\n    }\n\n    getDiastolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Diastolic blood pressure')\n    }\n\n    async onBpDrugs() {\n      const query = await ObservationService.getFirstValueCoded(this.patientID, 'Treatment status')\n      return query ? query === 'Yes' : false\n    }\n  \n    async getBPTrail() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/bp_trail`);\n    }\n    async getCurrentDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/current_bp_drugs`);\n    }\n    async getLastDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`);\n    }\n    async getAdherence(drugID: number, pills: number) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/remaining_bp_drugs`, {\n        'drug_id': drugID,\n        pills: pills\n      });\n    }\n    async enrollPatient(state: any) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/update_or_create_htn_state`, state);\n    }\n    static htnDrugReferences() {\n      return [\n        { \n          'drug_id': 275,\n          'drug_name': \"HCZ (25mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 942,\n          'drug_name': \"Enalapril (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 943,\n          'drug_name': \"Enalapril (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 558,\n          'drug_name': \"Amlodipine (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 559,\n          'drug_name': \"Amlodipine (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 117,\n          'drug_name': \"Atenolol (50mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 11,\n          'drug_name': \"Atenolol(100mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        }\n      ]\n    }\n    getDrugs() {\n        return {\n        HCZ: {\n          drugs: [\n            {\n              drugName: \"HCZ (25mg tablet)\",\n              drugID: 275,\n              amount: '25mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Enalapril: {\n          drugs: [\n            {\n              drugName: \"Enalapril (5mg tablet)\",\n              drugID: 942,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Enalapril (10mg tablet)\",\n              drugID: 943,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Amlodipine: {\n          drugs: [\n            {\n              drugName: \"Amlodipine (5mg tablet)\",\n              drugID: 558,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Amlodipine (10mg tablet)\",\n              drugID: 559,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Atenolol: {\n          drugs: [\n            {\n              drugName: \"Atenolol (50mg tablet)\",\n              drugID: 117,\n              amount: '50mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Atenolol(100mg tablet)\",\n              drugID: 11,\n              amount: '100mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n      }\n    }\n}","import { DrugInterface } from \"@/interfaces/Drug\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { ObservationService } from \"@/services/observation_service\";\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"lodash\";\nimport { DrugOrderService } from \"@/services/drug_order_service\"\n\nexport class ConsultationService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 53, providerID);\n  }\n  getFamilyPlanningMethods() {\n    return [\n      \"ORAL CONTRACEPTIVE PILLS\",\n      \"DEPO-PROVERA\",\n      \"INTRAUTERINE CONTRACEPTION\",\n      \"CONTRACEPTIVE IMPLANT\",\n      \"MALE CONDOMS\",\n      \"FEMALE CONDOMS\",\n      \"TUBAL LIGATION\",\n      \"NONE\",\n    ];\n  }\n\n  async getTptTreatmentStatus() {\n    return AppEncounterService.getJson(`/patients/${this.patientID}/tpt_status`)\n  }\n\n  async patientHitMenopause() {\n    const obs = await ObservationService.getFirstObs(\n      this.patientID, 'Why does the woman not use birth control', \n    )\n    return obs && typeof obs?.value_text === 'string'\n      ? (obs.value_text.match(/menopause/i) ? true : false)\n      && AppEncounterService.obsInValidPeriod(obs)\n      : false\n  }\n\n  async hasTreatmentHistoryObs() {\n    const obs = await ObservationService.getFirstObs(this.patientID, 'Previous TB treatment history')\n    return obs && AppEncounterService.obsInValidPeriod(obs)\n  }\n\n  getDrugSideEffects() {\n    return AppEncounterService.getJson(`programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/medication_side_effects`, { \n      date: this.date \n    })\n  }\n\n  getClient() {\n    return AppEncounterService.getFirstValueCoded(this.patientID, 'Patient present');\n  }\n\n  async clientDueForCxCa() {\n    const req: any = await AppEncounterService.getJson(`last_cxca_screening_details`, {\n      id: this.patientID, date: this.date\n    })\n    if (!isEmpty(req)) {\n      const lastScreened = req['date_screened']\n      const duration = dayjs(this.date).diff(lastScreened, 'years')\n      return duration >= 1\n    }\n    return true\n  }\nasync clientHasHadAHysterectomy() {\n    const req: any = await AppEncounterService.getFirstValueCoded(this.patientID, 'Reason for NOT offering CxCa'); \n    if(req === \"Hysterectomy\") {\n      return true\n    }\n    const secondCheck: any = await AppEncounterService.getFirstValueText(this.patientID, 'Treatment'); \n    if(secondCheck === \"Hysterectomy\") {\n      return true\n    }\n    return false\n  }\n  async getTLObs() {\n    const isTL = ((obs: any) => obs && obs.value_coded === 'Tubal ligation' && AppEncounterService.obsInValidPeriod(obs))\n    const tlObs = await AppEncounterService.getFirstObs(this.patientID, 'Family planning')\n    if (isTL(tlObs)) {\n      return isTL(tlObs)\n    } else  {\n      const fpObs = await AppEncounterService.getFirstObs(this.patientID, 'Method of family planning')\n      return isTL(fpObs)\n    }\n  }\n  async getPreviousDrugs() {\n\n    const drugs = await AppEncounterService.getJson(\n      `patients/${this.patientID}/drugs_received`\n    )\n\n    if (!drugs) return\n\n    const uniqueDrugs = {} as any\n    drugs.forEach((drug: DrugInterface) => {\n      uniqueDrugs[drug.drug_inventory_id] = drug;\n    })\n    return uniqueDrugs;\n  }\n  familyPlanningMethods(label: string, values: any[]) {\n    const familyPlanningLogic: any = {\n      \"ORAL CONTRACEPTIVE PILLS\": {\n        \"DEPO-PROVERA\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"DEPO-PROVERA\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"INTRAUTERINE CONTRACEPTION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"CONTRACEPTIVE IMPLANT\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"MALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"FEMALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'MALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"RYTHM METHOD\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'CONTRACEPTIVE IMPLANT': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"TUBAL LIGATION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'VASECTOMY': 'N',\n      },\n      \"VASECTOMY\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'Y', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      },\n      \"NONE\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      }\n    }\n    const selected = familyPlanningLogic[label];\n    return values.map(data => {\n      if (selected[data.label] === \"N\") {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: false,\n          disabled: true,\n        }\n      }\n      else {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: data.isChecked,\n          disabled: false,\n        }\n      }\n\n    })\n  }\n\n}","import { OrderService } from '@/services/order_service'\nimport { AppEncounterService } from './app_encounter_service';\n\nexport class PatientLabResultService extends AppEncounterService {\n    patientID: number;\n    testTypeID: number;\n    resultDate: string;\n    testID: number;\n    constructor(patientId: number) {\n        super(patientId, 57)\n        this.patientID = patientId\n        this.testTypeID = -1\n        this.resultDate = ''\n        this.testID = -1\n    }\n\n    createLabResult(measures: Array<any>) {\n        return AppEncounterService.postJson(`lab/tests/${this.testID}/results`, {\n            'encounter_id': this.encounterID,\n            date: this.resultDate,\n            measures\n        })\n    }\n\n    getTestID() {\n        return this.testID\n    }\n\n    getTestTypeID() {\n        return this.testTypeID\n    }\n\n    setTestTypeID(test: number) {\n        this.testTypeID = test\n    }\n\n    setResultDate(date: string) {\n        this.resultDate = date\n    }\n\n    setTestID(test: number) {\n        this.testID = test\n    }   \n\n    getTestsWithoutResults() {\n        return OrderService.getOrders(this.patientID, {\n            status: 'drawn'\n        })\n    }\n\n    getTestIndicators() {\n      return OrderService.getJson(\n        `lab/test_result_indicators`, {\n        'test_type_id': this.testTypeID\n      })\n    }\n\n    \n}\n","import { ObsValue, ObservationService } from \"@/services/observation_service\"\nimport { DTForm } from \"../interfaces/dt_form_field\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { toUnderscores } from \"@/utils/Strs\";\nimport { isEmpty } from \"lodash\";\nimport { loader } from \"@/utils/loader\";\nimport { toastWarning } from '@/utils/Alerts';\n\nexport async function isValidForm (form: DTForm) {\n  for (const key in form) {\n    if (form[key].required && isEmpty(form[key].value)) {\n      form[key].error = \"This field is required\";\n      continue;\n    }\n    if(typeof form[key].validation !== 'function') {\n      form[key].error = ''\n      continue\n    }\n    const payload = typeof form[key].value === 'object'\n        ? form[key].value\n        : { label: form[key].value, value: form[key].value }\n\n    const errs = await form[key].validation!(payload as Option, form)\n    if(errs && errs.length > 0) {\n      form[key].error = errs.toString()\n      console.log(key, form[key].error)\n    } else {\n      form[key].error = ''\n    }       \n  }\n  return Object.values(form).every(({ error }) => !error)\n}\n\nexport function resolveFormValues(form: DTForm, underscoreKeys = false) {\n  const formData: any = {}\n  const computedFormData: any = {}\n  for (const key in form) {\n    if(form[key].value) {\n      const fKey = underscoreKeys ? toUnderscores(key) : key\n      formData[fKey] = form[key].value\n      if(typeof form[key].computedValue === 'function') {\n        computedFormData[fKey] = form[key].computedValue!(form[key].value, form)\n      }\n    }\n  }\n  return { formData, computedFormData }\n}\n\nexport function resolveObs (obs: any, tag=''): Promise<ObsValue[]> {\n  const values: any = Object.values(obs)\n    .filter((d: any) => d && (d.tag === tag || tag === ''))\n    .reduce((accum: any, cur: any) => { \n      const data = cur.obs ? cur.obs : cur\n      if (Array.isArray(data)) {\n        accum = accum.concat(data)\n      } else {\n          accum.push(data)\n      }\n      return accum\n    }, [])\n  return Promise.all(values)\n}\n\nexport async function optionsToGroupObs (conceptName: string, options: Option[]) {\n  return await Promise.all(options.map(async (option) => {\n    return ObservationService.buildGroupValueCoded(conceptName, option.label, option.isChecked ? 'Yes' : 'No')\n  }))\n}\n\ntype SubmitFormCallback = (formData: Record<string, any>, computedData: Record<string, any>) => Promise<void> | void\ninterface SubmitOptios {\n  showloader?: boolean;\n  underscoreKeys?: boolean;\n}\n\nexport async function submitForm (form: DTForm, callback: SubmitFormCallback, options?: SubmitOptios) {\n  if(!await isValidForm(form)) return\n  try {\n    const showloader = options?.showloader || false\n    if (showloader) loader.show()\n    const {formData, computedFormData} = resolveFormValues(form, options?.underscoreKeys)\n    await callback(formData, computedFormData)\n    if(showloader) await loader.hide()\n  } catch (error) {\n    toastWarning(`${error}`)\n    loader.hide()\n  }\n}","import { Service } from \"@/services/service\";\n\nexport class StockService extends Service {\n    constructor() {\n        super()\n    }\n\n    static async fetchAvailableDrugStock(drugId: number) {\n        const stock = await this.getJson('pharmacy/items', { 'drug_id': drugId })\n        if (stock && stock.length > 0) {\n            return stock.reduce((accum: number, pharm: any) => accum + pharm.current_quantity, 0);\n        }\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { StockService } from \"./stock_service\";\nimport ART_PROP from '@/apps/ART/art_global_props';\n// ripped from old ART system\nexport const DRUG_PACK_SIZES: Record<string, any> = {\n    '11': [ 30 ],\n    '21': [ 25 ],\n    '22': [ 60 ],\n    '24': [ 30, 60, 90, 100 ],\n    '30': [ 90 ],\n    '39': [ 60 ],\n    '73': [ 120 ],\n    '74': [ 60 ],\n    '76': [ 1000 ],\n    '297': [ 30, 60, 90 ],\n    '576': [ 30, 60, 90 ],\n    '613': [ 60 ],\n    '731': [ 60 ],\n    '732': [ 60 ],\n    '733': [ 60 ],\n    '734': [ 30 ],\n    '735': [ 30 ],\n    '736': [ 60 ],\n    '738': [ 60 ],\n    '931': [ 12, 30, 60 ],\n    '932': [ 30 ],\n    '954': [ 60 ],\n    '963': [ 30, 60, 90 ],\n    '968': [ 60 ],\n    '969': [ 30 ],\n    '971': [ 30,60,90 ],\n    '976': [ 60 ],\n    '977': [ 30 ],\n    '982': [ 30 ],\n    '983': [ 30, 90 ],\n    '1039': [ 30,60,90 ],\n    '1043': [ 60 ],\n    '1044': [ 30],\n    '1056': [ 24 ],\n    '1216': [3, 6, 12]\n}\n\nexport class DispensationService extends AppEncounterService {\n    drugHistory: Array<any>;\n    currentDrugOrder: Array<any>;\n    useDrugManagement: boolean; \n    constructor(patientID: number, providerID: number) {\n        super(patientID, 54, providerID)\n        this.drugHistory = []\n        this.currentDrugOrder = []\n        this.useDrugManagement = false\n    }\n\n    setIsDrugManagementEnabled(isEnabled: boolean) {\n        this.useDrugManagement = isEnabled\n    }\n\n    async loadDrugManagementEnabled() {\n        this.useDrugManagement = await ART_PROP.drugManagementEnabled()\n    }\n\n    getDrugHistory() {\n        return this.drugHistory\n    }\n\n    getCurrentOrder() {\n        return this.currentDrugOrder\n    }\n\n    buildDispensations(orderId: number, tabs: number, totalPacks: number) {\n        const dispensations = []\n        for(let i=0; i < totalPacks; i++) {\n            dispensations.push({\n                'drug_order_id': orderId,\n                date: this.date,\n                quantity: (tabs / totalPacks)\n            })\n        }\n        return dispensations\n    }\n\n    saveDispensations(dispensations: Array<any>) {\n        return AppEncounterService.postJson('/dispensations', { \n            dispensations, \n            'program_id': AppEncounterService.getProgramID()\n        })\n    }\n\n    async voidOrder(orderId: number) {\n        return AppEncounterService.void(`/dispensations/${orderId}`, {})\n    }\n\n    async loadDrugHistory() {\n        try {\n            const res = await DrugOrderService.getDrugOrderHistory(this.patientID)\n            if (res) this.drugHistory = res\n        } catch (e) {\n            console.warn(e)\n        }\n    }\n\n    async loadCurrentDrugOrder() {\n        const res = await DrugOrderService.getDrugOrders(this.patientID)\n        if (res) {\n            if (this.useDrugManagement) {\n                const drugs = res.map(async (d: any) => {\n                    d['available_stock'] = await StockService.fetchAvailableDrugStock(d.drug.drug_id)\n                    return d\n                })\n                this.currentDrugOrder = await Promise.all(drugs)\n                return\n            }\n            this.currentDrugOrder = res\n        }\n    }\n\n    getDrugPackSizes(drugId: number) {\n        if (drugId in DRUG_PACK_SIZES) {\n            return DRUG_PACK_SIZES[drugId]\n        }\n        return [30, 60, 90]\n    }\n\n    // Ripped from old ART system for backwards compatibility purposes\n    calcCompletePack(drug: any, units: number) {\n        //sorting in an ascending order by tabs\n        const drugOrderBarcodes = drug.barcodes.sort((a: any, b: any) => a.tabs - b.tabs); \n        if (drugOrderBarcodes.length == 0 || units == 0.0) return units;\n        for (const i in drugOrderBarcodes) {\n            const { tabs } = drugOrderBarcodes[i]\n            if (parseInt(tabs) >= units) return tabs;\n        }\n        const completePack = parseInt(drugOrderBarcodes[drugOrderBarcodes.length - 1].tabs)\n        return completePack\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\n\nexport class ReceptionService extends AppEncounterService {\n    sitePrefix: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 51, providerID) //TODO: Use encounter type reference name'\n        this.sitePrefix = ''\n    }\n\n    getSitePrefix() {\n        return this.sitePrefix\n    }\n\n    async loadSitePrefix() {\n        this.sitePrefix = await GLOBAL_PROP.sitePrefix();\n    }\n\n    createArvNumber(identifier: string) {\n        return ProgramService.postJson(\"/patient_identifiers/\", {\n            'patient_id': this.patientID,  \n            'identifier_type': 4,\n            identifier,\n        })\n    }\n\n    buildArvNumber(arv: number) {\n        return `${this.sitePrefix}-ARV-${arv}`    \n    }\n}\n","import { DrugOrderInterface } from \"@/interfaces/DrugOrder\";\nimport { Service } from \"./service\";\n\nexport class DrugOrderService extends Service {\n    constructor() {\n        super()\n    }\n\n    static create(orders: DrugOrderInterface) {\n        return this.postJson('drug_orders', orders)\n    }\n\n    static updateDispensationOrders(orders: any) {\n        return this.postJson('dispensations', {\n            'program_id': this.getProgramID(),\n            dispensations: orders.map((order: any) => ({\n                'date': this.getSessionDate(),\n                'drug_order_id': order['order_id'],\n                'quantity': order['quantity']\n            }))\n        })\n    }\n\n    static getDrugOrderHistory(patientID: number) {\n        return this.getJson('drug_orders', { 'patient_id': patientID })\n    }\n\n    static getDrugOrders(patientID: number) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getAllDrugOrders(patientID: number, pageSize=1000) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'program_id': Service.getProgramID(),\n            'page_size': pageSize\n        })\n    }\n\n    static getLastDrugsReceived(patientID: number) {\n        return this.getJson(`patients/${patientID}/last_drugs_received`, {\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getDrugDosages(patientID: number, drugID: number, date=this.getSessionDate()) {\n        const params = { 'drug_id': drugID, 'date': date }\n        return this.getJson(`programs/${this.getProgramID()}/patients/${patientID}/drug_doses`, params)\n    }\n\n    static getOrderByPatient(patientId: number, params: any) {\n        return this.getJson('/drug_orders', {\n            'patient_id': patientId,\n            'program_id': this.getProgramID(),\n            ...params\n        })\n    }\n\n}","import { optionsActionSheet } from '@/utils/ActionSheets'\n\nexport default async function popVoidReason(callback: Function, size = 'action-sheet-modal') {\n    const modal = await optionsActionSheet(\n        'Are you sure you want to void record?',\n        'Please specify reason for voiding this record',\n        [\n          'Mistake/ Wrong Entry',\n          'Duplicate',\n          'System Error' \n        ],\n        [\n            { name: 'Cancel', slot:'start'},\n            { name: 'Void', color: 'danger', slot:'end', role: 'action'}\n        ],\n        '',\n        size\n    )\n    if (modal.selection && modal.action === 'Void') {\n        await callback(modal.selection)\n    }\n}\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./VisitsSummary.vue?vue&type=style&index=0&id=17e9b721&scoped=true&lang=css\"","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_basic_table = _resolveComponent(\"his-basic-table\")!\n  const _component_text_skeloton = _resolveComponent(\"text-skeloton\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.title), 1)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, null, {\n      default: _withCtx(() => [\n        (_ctx.ready)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n              _createVNode(_component_his_basic_table, {\n                columns: _ctx.columns,\n                rows: _ctx.rows\n              }, null, 8, [\"columns\", \"rows\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _createVNode(_component_text_skeloton)\n            ]))\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"danger\",\n              onClick: _ctx.closeModal,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisBasicTable from \"./HisBasicTable.vue\";\nimport { modalController } from \"@ionic/vue\";\nimport TextSkeloton from \"@/components/TextSkeleton.vue\"\nimport {\n  IonHeader, \n  IonToolbar, \n  IonContent, \n  IonFooter, \n  IonButton\n} from \"@ionic/vue\"\nexport default defineComponent({\n  components: { \n    HisBasicTable,\n    IonHeader, \n    IonToolbar, \n    IonContent, \n    IonFooter, \n    IonButton,\n    TextSkeloton\n  },\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    columns: {\n      type: Object as PropType<string[]>,\n      required: true,\n    },\n    onRows: {\n      type: Function,\n      required: true,\n    },\n  },\n  data: () => ({\n    rows: [] as Array<any>,\n    ready: false,\n  }),\n  watch: {\n    onRows: {\n      async handler(func: Function) {\n        if (func) {\n          this.rows = await func();\n          this.ready = true;\n        }\n      },\n      immediate: true,\n      deep: true,\n    },\n  },\n  methods: {\n    async closeModal() {\n      await modalController.dismiss({});\n    },\n  },\n});\n","import { render } from \"./DrillTableModal.vue?vue&type=template&id=0cd2f14a&ts=true\"\nimport script from \"./DrillTableModal.vue?vue&type=script&lang=ts\"\nexport * from \"./DrillTableModal.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class AppointmentService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 7, providerID);\n  }\n\n  async getNextAppointment() {\n    const programID = AppEncounterService.getProgramID();\n    return AppEncounterService.getJson(`/programs/${programID}/patients/${this.patientID}/next_appointment_date`, {date: this.date})\n  }\n  static async getDailiyAppointments(date: any) {\n    const programID = AppEncounterService.getProgramID();\n    return AppEncounterService.getJson(`/programs/${programID}/booked_appointments`, {date: date, paginate: false})\n  }\n\n}","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_information_header = _resolveComponent(\"information-header\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_visits_summary = _resolveComponent(\"visits-summary\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_layout = _resolveComponent(\"layout\")!\n\n  return (_openBlock(), _createBlock(_component_layout, null, {\n    default: _withCtx(() => [\n      (_ctx.isReady)\n        ? (_openBlock(), _createBlock(_component_ion_grid, {\n            key: 0,\n            class: \"ion-no-margin ion-no-padding\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_row, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_col, { size: \"12\" }, {\n                    default: _withCtx(() => [\n                      (_ctx.patient)\n                        ? (_openBlock(), _createBlock(_component_information_header, {\n                            key: 0,\n                            patient: _ctx.patient,\n                            guardians: _ctx.guardians,\n                            artStartDate: _ctx.artStartDate,\n                            onUpdateARVNumber: _ctx.updateARVNumber,\n                            onAddGuardian: _ctx.addGuardian,\n                            onUpdatePatient: _ctx.updateDemographics\n                          }, null, 8, [\"patient\", \"guardians\", \"artStartDate\", \"onUpdateARVNumber\", \"onAddGuardian\", \"onUpdatePatient\"]))\n                        : _createCommentVNode(\"\", true)\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_row, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_col, null, {\n                    default: _withCtx(() => [\n                      (_ctx.patient)\n                        ? (_openBlock(), _createBlock(_component_visits_summary, {\n                            key: 0,\n                            patient: _ctx.patient,\n                            startDate: _ctx.artStartDate\n                          }, null, 8, [\"patient\", \"startDate\"]))\n                        : _createCommentVNode(\"\", true)\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _: 1\n  }))\n}","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-17e9b721\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"title\" }, \"Summary of Visits\", -1))\nconst _hoisted_2 = { class: \"ion-float-right ion-margin-end ion-margin-bottom\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_card_title = _resolveComponent(\"ion-card-title\")!\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")!\n  const _component_ion_card = _resolveComponent(\"ion-card\")!\n\n  return (_openBlock(), _createBlock(_component_ion_card, {\n    class: \"his-card\",\n    style: {\"padding\":\"0 !important\"}\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_card_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_card_title, null, {\n            default: _withCtx(() => [\n              _hoisted_1,\n              _createElementVNode(\"span\", _hoisted_2, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.actionButtons, (btn) => {\n                  return (_openBlock(), _createBlock(_component_ion_button, {\n                    key: btn.label,\n                    onClick: btn.action,\n                    color: btn.color || 'primary'\n                  }, {\n                    default: _withCtx(() => [\n                      (btn.icon)\n                        ? (_openBlock(), _createBlock(_component_ion_icon, {\n                            key: 0,\n                            icon: btn.icon,\n                            class: \"ion-margin-right\"\n                          }, null, 8, [\"icon\"]))\n                        : _createCommentVNode(\"\", true),\n                      _createTextVNode(\" \" + _toDisplayString(btn.label), 1)\n                    ]),\n                    _: 2\n                  }, 1032, [\"onClick\", \"color\"]))\n                }), 128))\n              ])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_card_content, {\n        class: \"ion-no-padding\",\n        style: {\"min-height\":\"45vh\"}\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_report_table, {\n            rows: _ctx.rows,\n            columns: _ctx.columns,\n            config: _ctx.tableConfig\n          }, null, 8, [\"rows\", \"columns\", \"config\"])\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Viral Load Results\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.orderDate,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.orderDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.birthdate,\n                      maxDate: _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.reason,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.reason) = $event)),\n                      options: _ctx.reasons\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.specimenConcept,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.specimenConcept) = $event)),\n                      options: _ctx.specimens\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.resultDate,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.resultDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.form.orderDate.value,\n                      \"max-date\": _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.modifier,\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.modifier) = $event)),\n                      options: _ctx.modifiers\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.result,\n                      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.result) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_row, { class: \"ion-margin-top\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"12\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_label, { class: \"ion-padding-vertical bold\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Other Results Options: \")\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_item, null, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_label, null, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"LDL\")\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_checkbox, {\n                          slot: \"start\",\n                          modelValue: _ctx.ldl,\n                          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.ldl) = $event))\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[7] || (_cache[7] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              color: \"warning\",\n              onClick: _ctx.resetResults,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Reset\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.saveResults,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton, \n  IonLabel, \n  IonCheckbox,\n  IonItem\n} from \"@ionic/vue\";\nimport { DTForm } from \"../../interfaces/dt_form_field\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport NumberInput from \"../inputs/NumberInput.vue\";\nimport dayjs from \"dayjs\";\nimport { toOptions } from \"../../utils/DTFormElements\";\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\nimport { submitForm } from \"../../utils/form\";\nimport { PatientLabResultService } from \"@/services/patient_lab_result_service\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonCheckbox,\n    IonItem,\n    DateInput,\n    SelectInput,\n    NumberInput,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true\n    },\n  },\n  setup(props) {\n    const ldl = ref(false);\n    const modifiers = toOptions(['=', '>', '<', '>=', '<=']);\n    const reasons = toOptions([\"Routine\", \"Targeted\", \"Confirmatory\", \"Stat\", \"Repeat / Missing\"])\n    const specimens = ref<Option[]>([])\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const birthdate = dayjs(props.patient.getBirthdate()).format(STANDARD_DATE_FORMAT)\n\n    const form = reactive<DTForm>({\n      orderDate: {\n        value: '',\n        label: 'Order Date',\n        required: true,\n        validation: async (date) => {\n          if (!dayjs(date.value).isValid()) {\n            return ['Invalid date'];\n          }\n          if(dayjs(date.value).isAfter(today)) {\n            return ['Order date cannot be in the future'];\n          }\n          if(dayjs(date.value).isBefore(birthdate)) {\n            return ['Order date cannot be before patient\\'s date of birth'];\n          }\n          return null\n        }\n      },\n      resultDate: {\n        value: '',\n        label: 'Result Date',\n        required: true,\n        validation: async (date, form) => {\n          if (!dayjs(date.value).isValid()) {\n            return ['Invalid date'];\n          }\n          if(dayjs(date.value).isAfter(today)) {\n            return ['Result date cannot be in the future'];\n          }\n          if(dayjs(date.value).isBefore(dayjs(form.orderDate.value))) {\n            return ['Result date cannot be before order date'];\n          }\n          if(dayjs(date.value).isBefore(dayjs(props.patient.getBirthdate()))) {\n            return ['Result date cannot be before patient\\'s date of birth'];\n          }\n          return null\n        }\n      },\n      specimenConcept: {\n        value: '',\n        label: 'Specimen',\n        placeholder: 'Select a specimen',\n        required: true,\n      },\n      modifier: {\n        value: '',\n        label: 'Modifier',\n        placeholder: 'Select a modifier',\n        required: true,\n      },\n      reason: {\n        value: '',\n        label: 'Reason',\n        placeholder: 'Select a reason',\n        required: true,\n      },\n      result: {\n        value: '',\n        label: 'Result Value',\n        placeholder: 'Enter a result value',\n        required: true,\n      }\n    });\n\n    const saveResults = async () => submitForm(form, async (formData) => {\n      await LabOrderService.setSessionDate(formData.orderDate)\n      const orderService = new LabOrderService(props.patient.getID(), -1)\n      const vlConceptId = await ConceptService.getConceptID(\"HIV viral load\")\n      const encounter = await orderService.createEncounter();\n      if(!encounter) throw new Error('Unable to create lab order encounter');\n      const formattedOrders  = await OrderService.buildLabOrders(encounter, [{\n        'specimenConcept': formData.specimenConcept.value,\n        'reason': formData.reason.value,\n        'concept_id': vlConceptId\n      }]);\n      const orders = await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n      if(!orders) throw new Error('Unable to save lab orders');\n\n      await PatientLabResultService.setSessionDate(formData.resultDate)\n      const resultService = new PatientLabResultService(props.patient.getID())\n      resultService.setTestID(orders[0].tests[0].id)\n      resultService.setResultDate(formData.resultDate)\n      const resultEnc = await resultService.createEncounter()\n      if(!resultEnc) throw new Error(\"Unable to create lab result encounter\")\n      await resultService.createLabResult([{\n        \"indicator\": {\n          \"concept_id\": vlConceptId,\n        },\n        \"value\": ldl.value ? \"LDL\" : parseInt(formData.result),\n        \"value_modifier\": ldl.value ? \"=\" : formData.modifier.value,\n        \"value_type\": ldl.value ? \"text\" : \"numeric\"\n      }])\n\n      await PatientLabResultService.resetSessionDate()\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_LATEST_VL_RESULT)\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA)\n    })\n\n    const resetResults = async () => {\n      if((await alertConfirmation(\"Are you sure you want to clear all fields?\"))){\n        ldl.value = false\n        for(const key in form) {\n          form[key].value = '';\n          form[key].error = ''\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR);\n      }\n    };\n\n    watch(ldl, (isLDL) => {\n      if(isLDL) {\n        form.modifier.value = \"\";\n        form.result.value = undefined;\n        form.modifier.error = ''\n        form.result.error = ''\n      }\n      form.modifier.disabled = isLDL;\n      form.modifier.required = !isLDL;\n      form.result.disabled = isLDL;\n      form.result.required = !isLDL;\n    });\n\n    onMounted(async () => {\n      specimens.value = (await OrderService.getSpecimens(\"HIV viral load\"))\n        .map((specimen: ConceptName) => ({\n          label: specimen.name,\n          value: specimen['concept_id']\n        })\n      )\n    })\n\n    return {\n      today,\n      birthdate,\n      form,\n      modifiers,\n      reasons,\n      specimens,\n      ldl,\n      modal,\n      resetResults,\n      saveResults,\n    };\n  },\n})\n","import { render } from \"./ViralLoadResult.vue?vue&type=template&id=509833a2&ts=true\"\nimport script from \"./ViralLoadResult.vue?vue&type=script&lang=ts\"\nexport * from \"./ViralLoadResult.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_badge = _resolveComponent(\"ion-badge\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_enrollment_form = _resolveComponent(\"enrollment-form\")!\n  const _component_outcome_form = _resolveComponent(\"outcome-form\")!\n  const _component_outcomes_table = _resolveComponent(\"outcomes-table\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Patient Outcomes\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_badge, {\n                      color: \"lightblue\",\n                      class: \"ion-padding\",\n                      style: {\"width\":\"100%\"},\n                      disabled: \"\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(_ctx.enrollmentStatus), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            (!_ctx.isEnrolled)\n              ? (_openBlock(), _createBlock(_component_ion_row, {\n                  key: 0,\n                  class: \"his-card\",\n                  style: {\"margin-bottom\":\".4rem\"}\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_col, { size: \"12\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_enrollment_form, {\n                          patientProgram: _ctx.patientProgram,\n                          birthdate: _ctx.birthdate,\n                          onEnrollProgram: _ctx.enrollProgram\n                        }, null, 8, [\"patientProgram\", \"birthdate\", \"onEnrollProgram\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }))\n              : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                  (_ctx.outcomes)\n                    ? (_openBlock(), _createBlock(_component_ion_row, {\n                        key: 0,\n                        class: \"his-card\",\n                        style: {\"margin-bottom\":\".4rem\"}\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_outcome_form, {\n                            \"date-enrolled\": _ctx.enrollDate,\n                            birthdate: _ctx.birthdate,\n                            outcomes: _ctx.outcomes,\n                            onSaveOutcome: _ctx.saveOutcome\n                          }, null, 8, [\"date-enrolled\", \"birthdate\", \"outcomes\", \"onSaveOutcome\"])\n                        ]),\n                        _: 1\n                      }))\n                    : _createCommentVNode(\"\", true),\n                  _createVNode(_component_ion_row, {\n                    class: \"his-card\",\n                    style: _normalizeStyle([{\"padding\":\"0 !important\"}, { minHeight: _ctx.totalStates ? '0' : '30vh'}])\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"12\",\n                        class: \"ion-no-padding\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_outcomes_table, {\n                            patientStates: _ctx.program?.patient_states,\n                            onVoidOutcome: _ctx.voidOutcome\n                          }, null, 8, [\"patientStates\", \"onVoidOutcome\"])\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }, 8, [\"style\"])\n                ], 64))\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            (_ctx.isEnrolled)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"danger\",\n                  onClick: _ctx.voidProgram,\n                  slot: \"end\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Void Program\")\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"ion-padding-horizontal ion-margin-vertical bold ion-margin-top\" }, \"Previous Outcomes\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_data_table = _resolveComponent(\"data-table\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_data_table, {\n      rows: _ctx.rows,\n      columns: _ctx.columns,\n      config: _ctx.tableConfig,\n      \"row-actions-buttons\": _ctx.TableRowActions,\n      color: \"custom\"\n    }, null, 8, [\"rows\", \"columns\", \"config\", \"row-actions-buttons\"])\n  ], 64))\n}","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport dayjs from \"dayjs\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport { DataTable, RowActionButtonInterface, TableColumnInterface, TableConfigInterface } from '@uniquedj95/vtable'\n\nexport default defineComponent({\n  name: \"OutcomesTable\",\n  props: {\n    patientStates: {\n      type: Array as PropType<Array<any>>,\n      required: true\n    },\n  },\n  components: {\n    DataTable,\n  },\n  emits: [\"voidOutcome\"],\n  setup(props, { emit }) {\n    const columns: TableColumnInterface[] = [\n      { path: 'name', label: \"Outcome\"},\n      { path: 'start_date', label: \"Start Date\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n      { path: 'end_date', label: \"End Date\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n    ];\n\n    const tableConfig: TableConfigInterface = {\n      showSearchField: false,\n      showSubmitButton: false\n    }\n\n    const rows = computed<any[]>(() => props.patientStates.map((state: any, index: number) => ({\n      ...state,\n      index\n    })));\n\n    const TableRowActions: RowActionButtonInterface[] = [\n      { label: \"void\", color: 'danger', action: async (row) => {\n        if((await alertConfirmation(\"Are you sure you want to void this outcome?\"))){\n          emit(\"voidOutcome\", {stateId: row.patient_state_id, index: row.index});\n        }\n      }}\n    ]\n\n    return {\n      rows,\n      columns,\n      tableConfig,\n      TableRowActions,\n    };\n  }\n})\n","import { render } from \"./OutcomesTable.vue?vue&type=template&id=eb2cc154&ts=true\"\nimport script from \"./OutcomesTable.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomesTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_col, { size: \"12\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_DateInput, {\n                modelValue: _ctx.form.date,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.date) = $event)),\n                form: _ctx.form,\n                minDate: _ctx.birthdate,\n                \"max-date\": _ctx.today\n              }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                color: \"warning\",\n                onClick: _ctx.onReset\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Reset\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                color: \"success\",\n                onClick: _ctx.enrollProgram\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Enroll\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport EventBus from \"@/utils/EventBus\";\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport dayjs from \"dayjs\";\nimport { defineComponent, reactive, ref } from \"vue\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { submitForm } from \"../utils/form\";\nimport DateInput from \"./inputs/DateInput.vue\";\n\nexport default defineComponent({\n  name: \"EnrollmentForm\",\n  components: {\n    DateInput,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n  },\n  props: [\"birthdate\"],\n  emits: [\"enrollProgram\"],\n  setup(props, { emit }) {\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    const form = reactive<DTForm>({\n      date: {\n        value: \"\",\n        label: \"Date of Enrollment\",\n        required: true,\n        validation: async (date) => {\n          if(dayjs(date.value).isBefore(props.birthdate)) return [\"Date of enrollment cannot be before date of birth\"]\n          if(dayjs(date.value).isAfter(today)) return [\"Date of enrollment cannot be in the future\"]\n          return null\n        }\n      },\n    })\n\n    const onReset = async () => {\n      if((await alertConfirmation(\"Are you sure you want to clear all fields\"))){\n        form.date.value = \"\";\n        form.date.error = \"\";\n        EventBus.emit(EmcEvents.ON_CLEAR)\n      }\n    }\n\n    const enrollProgram = async () => submitForm(form, ({ date }) => emit(\"enrollProgram\", date))\n\n    return {\n      form,\n      today,\n      onReset,\n      enrollProgram,\n    }\n  }\n})\n","import { render } from \"./EnrollmentForm.vue?vue&type=template&id=08b54ea0&ts=true\"\nimport script from \"./EnrollmentForm.vue?vue&type=script&lang=ts\"\nexport * from \"./EnrollmentForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Add New Outcome\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_col, { size: \"12\" }, {\n            default: _withCtx(() => [\n              _hoisted_1\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, {\n            size: \"6\",\n            class: \"ion-margin-top-vertical\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_DateInput, {\n                modelValue: _ctx.form.date,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.date) = $event)),\n                form: _ctx.form,\n                minDate: _ctx.dateEnrolled,\n                \"max-date\": _ctx.today\n              }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, {\n            size: \"6\",\n            class: \"ion-margin-top-vertical\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_SelectInput, {\n                modelValue: _ctx.form.status,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.status) = $event)),\n                form: _ctx.form,\n                options: _ctx.outcomes\n              }, null, 8, [\"modelValue\", \"form\", \"options\"])\n            ]),\n            _: 1\n          }),\n          (_ctx.isTransferredOut)\n            ? (_openBlock(), _createBlock(_component_ion_col, {\n                key: 0,\n                size: \"12\",\n                class: \"ion-margin-top-vertical\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.nextFacility,\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.nextFacility) = $event)),\n                    form: _ctx.form,\n                    asyncOptions: _ctx.getFacilities\n                  }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                ]),\n                _: 1\n              }))\n            : _createCommentVNode(\"\", true),\n          _createVNode(_component_ion_col, {\n            size: \"12\",\n            class: \"ion-margin-top\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                color: \"warning\",\n                onClick: _ctx.onReset\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Reset\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                color: \"success\",\n                onClick: _ctx.onSave\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Save\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport dayjs from \"dayjs\";\nimport { computed, defineComponent, PropType, reactive } from \"vue\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport { submitForm } from \"../utils/form\";\nimport DateInput from \"./inputs/DateInput.vue\";\nimport SelectInput from \"./inputs/SelectInput.vue\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\n\nexport default defineComponent({\n  name: \"OutcomeForm\",\n  props: {\n    outcomes: {\n      type: Array as PropType<Option[]>,\n      required: true,\n    },\n    dateEnrolled: {\n      type: String,\n      required: true\n    },\n    birthdate: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    DateInput,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n    SelectInput,\n  },\n  emits: [\"saveOutcome\"],\n  setup(props, { emit }) {\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    const form = reactive<DTForm>({\n      date: {\n        value: \"\",\n        label: \"Outcome Date\",\n        required: true,\n        validation: async (date) => {\n          if(dayjs(date.value).isBefore(props.birthdate)) return [`Outcome date cannot be before date of birth - ${dayjs(props.birthdate).format(DISPLAY_DATE_FORMAT)}` ]\n          if(dayjs(date.value).isBefore(props.dateEnrolled)) return [`Outcome date cannot be before enrollment date- ${dayjs(props.dateEnrolled).format(DISPLAY_DATE_FORMAT)}`]\n          return null\n        }\n      },\n      status: {\n        value: \"\",\n        label: \"Outcome\",\n        required: true,\n      },\n      nextFacility: {\n        value: \"\",\n        label: \"Next Facility\",\n        validation: async (facility, form) => {\n          return form.status.value.label === \"Patient transferred out\" && \n            StandardValidations.required(facility);\n        }\n      },\n    })\n\n    const isTransferredOut = computed(() => form.status.value?.label === \"Patient transferred out\");\n\n    const onReset = async () => {\n      if((await alertConfirmation(\"are you sure you want to clear all fields\"))) {\n        for (const key in form) {\n          form[key].value = '';\n          form[key].error = '';\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR)\n      }\n    }\n\n    const onSave = () => submitForm(form, data => emit(\"saveOutcome\", data))\n\n    return {\n      form,\n      today,\n      isTransferredOut,\n      onSave,\n      onReset,\n      getFacilities,\n    }\n  }\n})\n","import { render } from \"./OutcomeForm.vue?vue&type=template&id=258136b6&ts=true\"\nimport script from \"./OutcomeForm.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, PropType, ref } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton,\n  IonBadge,\n} from \"@ionic/vue\";\nimport { toastSuccess } from \"@/utils/Alerts\";\nimport { PatientProgramService } from \"@/services/patient_program_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport OutcomesTable from \"../tables/OutcomesTable.vue\";\nimport EnrollmentForm from \"../EnrollmentForm.vue\";\nimport OutcomeForm from \"../OutcomeForm.vue\";\nimport { modal } from \"@/utils/modal\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonBadge,\n    OutcomesTable,\n    EnrollmentForm,\n    OutcomeForm,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true\n    },\n  },\n  setup(props) {\n    const { toStandardHisDisplayFormat, toStandardHisFormat } = HisDate\n    const patientProgram = new PatientProgramService(props.patient.getID());\n    const birthdate = computed(() => toStandardHisFormat(props.patient.getBirthdate()))\n    const program = ref<Record<string, any>>();\n    const isEnrolled = computed(() => !isEmpty(program.value));\n    const enrollDate = ref('');\n    const outcomes = ref<Option[]>();\n    const totalStates = computed(() => program.value?.patient_states?.length ?? 0);\n    const enrollmentStatus = computed(() => isEnrolled.value && enrollDate.value \n      ? `Patient enrolled in this porgram on ${ toStandardHisDisplayFormat(enrollDate.value) }`\n      : 'Patient is not enrolled in this program'\n    );\n\n    const saveOutcome = async ({ date, status, nextFacility}: any) => {\n      patientProgram.setStateDate(date);\n      patientProgram.setStateId(status.value);\n      if(nextFacility) {\n        await patientProgram.transferOutEncounter(nextFacility.other);\n      }\n      await patientProgram.updateState();\n      await toastSuccess('Outcome saved successfully', 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const enrollProgram = async (date: string) => {\n      patientProgram.setProgramDate(date);\n      await patientProgram.enrollProgram();\n      await toastSuccess(\"Program enrolled successfully\", 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const voidProgram = async () => {\n      patientProgram.setPatientProgramId(program.value?.patient_program_id ||  -1);\n      await patientProgram.voidProgram('duplicate / system error');\n      await toastSuccess('Patient voided from program successfully', 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const voidOutcome = async ({stateId, index}: any) => {\n      patientProgram.setStateId(stateId);\n      await patientProgram.voidState('duplicate / system error');\n      toastSuccess('Outcome voided successfully');\n      program.value?.patient_states.splice(index, 1);\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    onMounted (async () => {\n      const programs = await patientProgram.getPrograms();\n      program.value = programs.find((l: any) => l.program.name === \"HIV PROGRAM\");\n      if(program.value) {\n        enrollDate.value = program.value.date_enrolled;\n        const states= await patientProgram.getProgramOutcomes();\n        outcomes.value = states.map((state: any) => ({\n          label: state.name,\n          value: state.program_workflow_state_id,\n          other: state\n        }));\n      }\n    });\n\n    return {\n      modal,\n      patientProgram,\n      isEnrolled,\n      enrollDate,\n      birthdate,\n      enrollmentStatus,\n      outcomes,\n      program,\n      totalStates,\n      toStandardHisDisplayFormat,\n      saveOutcome,\n      enrollProgram,\n      voidProgram,\n      voidOutcome,\n    };\n  },\n})\n","import { render } from \"./OutcomeStatus.vue?vue&type=template&id=a8fe7026&ts=true\"\nimport script from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, renderList as _renderList, toDisplayString as _toDisplayString } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_yes_no_input = _resolveComponent(\"yes-no-input\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_multi_column_view = _resolveComponent(\"multi-column-view\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Patient Visit\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.visitDate,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.visitDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.birthdate,\n                      maxDate: _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.weight,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.weight) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.showHeightField)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      size: \"6\",\n                      class: \"ion-margin-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.height,\n                          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.height) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  class: \"ion-margin-vertical\",\n                  size: _ctx.showHeightField ? 6 : 12\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.tbStatus,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.tbStatus) = $event)),\n                      options: _ctx.tbStatuses\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }, 8, [\"size\"]),\n                (_ctx.isFemale)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical ion-padding-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.isPregnant,\n                            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.isPregnant) = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical ion-padding-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.isBreastfeeding,\n                            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.isBreastfeeding) = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      })\n                    ], 64))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.hasContraindications,\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.form.hasContraindications) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"]),\n                    (_ctx.hasContraindications)\n                      ? (_openBlock(), _createBlock(_component_multi_column_view, {\n                          key: 0,\n                          items: _ctx.contraIndications,\n                          numberOfColumns: 2\n                        }, {\n                          default: _withCtx(({ entries }) => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (entry) => {\n                              return (_openBlock(), _createBlock(_component_ion_item, {\n                                lines: \"none\",\n                                key: entry.value\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_label, null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(entry.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024),\n                                  _createVNode(_component_ion_checkbox, {\n                                    slot: \"start\",\n                                    modelValue: entry.isChecked,\n                                    \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event)\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                                ]),\n                                _: 2\n                              }, 1024))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  class: \"ion-padding-start\",\n                  size: \"6\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.hasSideEffects,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.form.hasSideEffects) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"]),\n                    (_ctx.hasSideEffects)\n                      ? (_openBlock(), _createBlock(_component_multi_column_view, {\n                          key: 0,\n                          items: _ctx.sideEffects,\n                          numberOfColumns: 2\n                        }, {\n                          default: _withCtx(({ entries }) => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (entry) => {\n                              return (_openBlock(), _createBlock(_component_ion_item, {\n                                lines: \"none\",\n                                key: entry.value\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_label, null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(entry.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024),\n                                  _createVNode(_component_ion_checkbox, {\n                                    slot: \"start\",\n                                    modelValue: entry.isChecked,\n                                    \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event)\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                                ]),\n                                _: 2\n                              }, 1024))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.regimen,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.form.regimen) = $event)),\n                      options: _ctx.regimens\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.totalArvsGiven,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.form.totalArvsGiven) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.totalCPTGiven,\n                      \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.form.totalCPTGiven) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.tbMed,\n                      \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.form.tbMed) = $event)),\n                      options: _ctx.tbMeds\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.hasGiven6H || _ctx.hasGivenRFP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 2,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalIPTGiven,\n                          \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((_ctx.form.totalIPTGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGivenRFP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 3,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalRFPGiven,\n                          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((_ctx.form.totalRFPGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGiven3HP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 4,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.total3HPGiven,\n                          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.form.total3HPGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGiven3HP || _ctx.hasGivenRFP || _ctx.hasGiven6H)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 5,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalPyridoxineGiven,\n                          \"onUpdate:modelValue\": _cache[15] || (_cache[15] = ($event: any) => ((_ctx.form.totalPyridoxineGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.patientPresent,\n                      \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((_ctx.form.patientPresent) = $event)),\n                      inline: \"\",\n                      disabled: _ctx.form.patientPresent.disabled\n                    }, null, 8, [\"modelValue\", \"disabled\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.guardianPresent,\n                      \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((_ctx.form.guardianPresent) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.prevDrugs.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 6,\n                      size: \"6\",\n                      class: \"ion-margin-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.pillCount,\n                          \"onUpdate:modelValue\": _cache[18] || (_cache[18] = ($event: any) => ((_ctx.form.pillCount) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: _ctx.prevDrugs.length > 0 ? 6 : 12,\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.nextAppointmentDate,\n                      \"onUpdate:modelValue\": _cache[19] || (_cache[19] = ($event: any) => ((_ctx.form.nextAppointmentDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.form.visitDate.value,\n                      maxDate: _ctx.drugRunOutDate\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }, 8, [\"size\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[20] || (_cache[20] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              color: \"warning\",\n              onClick: _ctx.onClear,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Reset\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.onSubmit,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { Patient } from '@/interfaces/patient';\nimport { ObservationService } from './observation_service';\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport { Observation } from \"@/interfaces/observation\"\nimport { Patientservice } from '@/services/patient_service';\nimport { DrugOrderService } from './drug_order_service';\nimport { isEmpty } from 'lodash';\n\nexport class PatientObservationService extends Patientservice {\n  constructor(patient: Patient) {\n    super(patient)\n  }\n\n  async isPregnant() {\n    const obs = await ObservationService.getFirstObs(this.getID(), 'Is patient pregnant')\n    return obs && (obs.value_coded.match(/Yes/i) ? true : false)\n      && ObservationService.obsInValidPeriod(obs)\n  }\n\n  async hasPregnancyObsToday() {\n    const date = await ObservationService.getFirstObsDatetime(this.getID(), 'Is patient pregnant')\n    return date && HisDate.toStandardHisFormat(date) === Service.getSessionDate() && this.isFemale()\n  }\n\n  async hasPregnancyAtARTInitiation() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"Is patient pregnant\")\n    return obs && await ObservationService.getConceptName(obs)\n  }\n\n  async breastFeedingAtARTInitiation() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"Is patient breast feeding\")\n    return obs && await ObservationService.getConceptName(obs)\n  }\n\n  async getInitialWeight() {\n    return ObservationService.getLastValueNumber(this.getID(), \"weight\")\n  }\n\n  async getRecentWeight() {\n    return ObservationService.getFirstValueNumber(this.getID(), \"weight\") || -1\n  }\n\n  async getInitialHeight() {\n    return ObservationService.getLastValueNumber(this.getID(), \"Height\")\n  }\n\n  async getInitialTBStatus() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"TB Status at Initiation\")\n    if (obs) return ObservationService.getConceptName(obs)\n  }\n\n  async getRecentHeight() {\n    return ObservationService.getFirstValueNumber(this.getID(), \"Height\") || -1\n  }\n\n  async getWeightHistory() {\n    try {\n      const weights = await ObservationService.getAll(this.getID(), 'weight')\n      return weights.map((obs: Observation) => ({\n        weight: obs.value_numeric, date: obs.obs_datetime\n      }))\n    } catch (e) {\n      console.warn(e)\n      return []\n    }\n  }\n  async getCompleteTBTherapyHistory() {\n    const data = await ObservationService.getAll(this.getID(), 'TB treatment history')\n    return data.filter((data: any) => {\n      return data.value_text.match(/Complete/i);\n    });\n  }\n\n  async getInitialBMI() {\n    return ObservationService.getLastValueNumber(this.getID(), \"BMI\")\n  }\n\n  async everReceivedART() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Ever received ART\")\n  }\n\n  async agreesToFollowUp() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Agrees to followup\")\n  }\n\n  async getHIVTestDate() {\n    const obs = await ObservationService.getFirstObs(this.getID(), \"Confirmatory HIV test date\")\n    if (obs && obs.value_datetime) return obs.value_datetime\n    if (obs && obs.value_text) return obs.value_text\n    return null\n  }\n\n  async getARTStartDate() {\n    const obs = await ObservationService.getFirstObs(this.getID(), \"Date ART started\")\n    if (obs && obs.value_datetime) return obs.value_datetime\n    if (obs && obs.value_text) return obs.value_text\n    const orders = await DrugOrderService.getAllDrugOrders(this.getID(), Number.MAX_SAFE_INTEGER);\n    if(!isEmpty(orders)){\n      return orders[0].order['start_date']\n    }\n    return null\n  }\n\n  async getHIVTestLocation() {\n    return ObservationService.getFirstValueText(\n      this.getID(),\n      \"Confirmatory HIV test location\"\n    )\n  }\n\n  async getReasonForStartingART() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Reason for ART eligibility\")\n  }\n\n  async getStagingCondition() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Who stages criteria present\")\n  }\n    \n  getWhoStage() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Who stage\")\n  }\n}","/**\n * A function that remove duplicates from an array\n * \n * @param arr list of items with possible duplicates\n * @param iteratee a key or list of keys to be used to remove duplicates\n * @returns list of unique items\n */\nexport function uniqueBy(arr: any[], iteratee: string | string[]) {\n  return [...new Map(arr.filter(Boolean).map(item => {\n    const uniqueKey = Array.isArray(iteratee) \n      ? iteratee.map(k => item[k]).join('_')\n      : item[iteratee]\n    return [uniqueKey, item]\n  })).values()]\n}","\nimport { computed, defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow,  \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton, \n  IonLabel,\n  IonCheckbox,\nIonItem,\n} from \"@ionic/vue\";\nimport { alertConfirmation, toastSuccess } from \"@/utils/Alerts\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport YesNoInput from \"../inputs/YesNoInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport NumberInput from \"../inputs/NumberInput.vue\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport MultiColumnView from \"@/components/containers/MultiColumnView.vue\";\nimport { PatientObservationService } from \"@/services/patient_observation_service\";\nimport { RegimenService } from \"@/services/regimen_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { ReceptionService } from \"@/apps/ART/services/reception_service\";\nimport { AdherenceService } from \"@/apps/ART/services/adherence_service\";\nimport { AppointmentService } from \"@/apps/ART/services/appointment_service\";\nimport { PrescriptionService } from \"@/apps/ART/services/prescription_service\";\nimport dayjs, { ConfigType } from \"dayjs\";\nimport { ObsValue } from \"@/services/observation_service\";\nimport { BMIService } from \"@/services/bmi_service\";\nimport { DispensationService } from \"@/apps/ART/services/dispensation_service\";\nimport { DTForm } from \"../../interfaces/dt_form_field\";\nimport { optionsToGroupObs, resolveObs, submitForm } from \"../../utils/form\";\nimport { toOptions } from \"../../utils/DTFormElements\";\nimport { modal } from \"@/utils/modal\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport EventBus from \"@/utils/EventBus\";\nimport { uniqueBy } from \"@/utils/Arrays\";\nimport { DISPLAY_DATE_FORMAT, STANDARD_DATE_FORMAT } from \"@/utils/Date\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonItem,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonCheckbox,\n    SelectInput,\n    NumberInput,\n    DateInput,\n    YesNoInput,\n    MultiColumnView\n  },\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true\n    },\n  },\n  setup(props) {\n    const patientId = computed(() => props.patient.getID())\n    const vitals = new VitalsService(patientId.value, -1)\n    const consultations = new ConsultationService(patientId.value, -1)\n    const prescription = new PrescriptionService(patientId.value, -1)\n    const dispensation = new DispensationService(patientId.value, -1)\n    const reception = new ReceptionService(patientId.value, -1)\n    const adherence = new AdherenceService(patientId.value, -1)\n    const appointment = new AppointmentService(patientId.value, -1)\n    const prevHeight = ref<number>()\n    const regimens = ref<Option[]>([])\n    const contraIndications = ref<Option[]>([]);\n    const sideEffects = ref<Option[]>([]);\n    const prevDrugs = ref<any[]>([]);\n    const showHeightField = computed(() => !(prevHeight.value && props.patient.getAge() > 18))\n    const isFemale = computed(() => props.patient.isFemale())\n    const drugRunOutDate = ref<string>('');\n    const today = dayjs().format(STANDARD_DATE_FORMAT);\n    const birthdate = dayjs(props.patient.getBirthdate()).format(STANDARD_DATE_FORMAT);\n\n    const form = reactive<DTForm>({\n      visitDate: {\n        value: dayjs().format('YYYY-MM-DD') as string | undefined,\n        label: \"Visit Date\",\n        required: true,\n        validation: async (date: Option) => {\n          if(dayjs(date.value).isAfter(today)) {\n            return [\"Visit date cannot be after today's date\"]\n          }\n          if(dayjs(date.value).isBefore(birthdate)) {\n            return [\"Visit date cannot be before patient's birth date\"]\n          }\n          return null\n        }\n      },\n      weight: {\n        value: undefined as number | undefined,\n        label: \"Weight\",\n        required: true,\n        computedValue: (weight: number) => ({\n          tag: 'vitals',\n          obs: vitals.buildValueNumber('Weight', weight)\n        }),\n        validation: (weight: Option) => vitals.validator({...weight, label: 'Weight'})\n      },\n      height: {\n        value: undefined as number | undefined,\n        label: \"Height\",\n        computedValue: (height: number) => ({\n          tag: 'vitals',\n          obs: vitals.buildValueNumber('Height', height)\n        }),\n        validation: (height: Option) => showHeightField.value && vitals.validator({...height, label: 'Height'})\n      },\n      isPregnant: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient pregnant?',\n        computedValue: (isPregnant: \"Yes\" | \"No\") => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('Is patient pregnant', isPregnant)\n        }),\n        validation: async (state: Option) => isFemale.value && StandardValidations.required(state)\n      },\n      isBreastfeeding: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient breastfeeding?',\n        computedValue: (isBreastfeeding: \"Yes\" | \"No\") => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('Is patient breast feeding', isBreastfeeding)\n        }),\n        validation: async (state: Option) => isFemale.value && StandardValidations.required(state)\n      },\n      nextAppointmentDate: {\n        value: undefined as string | undefined,\n        label: \"Next Appointment Date\",\n        required: true,\n        computedValue: (nextAppointmentDate: string) => ({\n          tag: 'appointment',\n          obs: appointment.buildValueDate('Appointment date', nextAppointmentDate)\n        }),\n        validation: async (date, form) => {\n          if(dayjs(date.value).isBefore(form.visitDate.value)) {\n            return [\"Appointment date cannot be before visit date\"]\n          }\n          if(dayjs(date.value).isAfter(drugRunOutDate.value)) {\n            return [\"Appointment date cannot be after drug run out date\"]\n          }\n          return null\n        }\n      },\n      patientPresent: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient present?',\n        required: true,\n        computedValue: (patientPresent: \"Yes\" | \"No\") => ({\n          tag: 'reception',\n          obs: reception.buildValueCoded('Patient present', patientPresent)\n        }),\n      },\n      guardianPresent: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the guardian present?',\n        required: true,\n        computedValue: (guardianPresent: \"Yes\" | \"No\") => ({\n          tag: 'reception',\n          obs: reception.buildValueCoded('Guardian present', guardianPresent)\n        }),\n      },\n      pillCount: {\n        value: undefined as number  | undefined,\n        label: \"Pill Count\",\n        required: prevDrugs.value.length > 0,\n        validation: async (pills: Option) => prevDrugs.value.length > 0 && StandardValidations.isNumber(pills)\n      },\n      regimen: {\n        value: undefined as string | undefined,\n        label: \"Regimen\",\n        placeholder: \"Select a regimen\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"Antiretroviral drugs\")\n        }),\n      },\n      totalCPTGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total CPT Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"CPT\")\n        }),\n      },\n      totalIPTGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total IPT Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"INH\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return (form.tbMed.value?.label === '6H' || form.tbMed.value?.label === '3HP (RFP + INH)') && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      totalRFPGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total RFP Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"3HP (RFP + INH)\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return form.tbMed.value?.label === '3HP (RFP + INH)' && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      total3HPGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total 3HP Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"INH 300 / RFP 300 (3HP)\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return form.tbMed.value?.label === '3HP (INH 300 / RFP 300)' && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      totalArvsGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total ARVs Given\",\n        validation: async (drugs: Option, form: any) => !isEmpty(form.regimen.value) && StandardValidations.isNumber(drugs)\n      },\n      totalPyridoxineGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total Pyridoxine Given\",\n        validation: async (amount: Option, form: any) => form.tbMed.value?.label && StandardValidations.isNumber(amount)\n      },\n      tbMed: {\n        value: undefined as Option | undefined,\n        label: \"TB Medication\",\n        placeholder: \"Select a TB medication\",\n      },\n      hasContraindications: {\n        value: \"No\",\n        label: \"Has Side Effects / Contraindications ?\",\n        validation: async (state: Option, form: any) => StandardValidations.validateSeries([\n          ()  => StandardValidations.required(state),\n          () => {\n            if(state.value === \"No\" || sideEffects.value.some(x => x.isChecked)) return null\n            return [\"Please select at least one side effect\"]\n          }\n        ])\n      },\n      hasSideEffects: {\n        value: \"No\",\n        label: \"Has Other Side Effects ?\",\n        validation: async (state: Option, form: any) => StandardValidations.validateSeries([\n          ()  => StandardValidations.required(state),\n          () => {\n            if(state.value === \"No\" || sideEffects.value.some(x => x.isChecked)) return null\n            return [\"Please select at least one side effect\"]\n          }\n        ])\n      },\n      tbStatus: {\n        value: undefined as Option | undefined,\n        label: \"TB Status\",\n        computedValue: (status: Option) => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('TB Status', status.value)\n        }),\n        validation: async (state) => StandardValidations.required(state)\n      },\n    })\n\n    watch(form.patientPresent, isPresent => {\n      if(isPresent.value === \"No\") {\n        form.guardianPresent.value = \"Yes\"\n      }\n    })\n\n    watch(form.guardianPresent, isPresent => {\n      if(isPresent.value === \"No\") {\n        form.patientPresent.value = \"Yes\"\n      }\n    })\n\n    watch([form.weight, form.tbStatus], async () => {\n      if(form.weight.value) {\n        const onTB = !isEmpty(form.tbStatus.value) && !form.tbStatus.value.label.match(/TB Not Suspected/i)\n        const regs = await RegimenService.getRegimensByWeight(form.weight.value, onTB)\n        if(!isEmpty(regs)) {\n          regimens.value = Object.keys(regs).map(key => ({\n            label: key, \n            value: key, \n            other: regs[key] \n          }))\n        }\n\n        form.patientPresent.value = \"Yes\"\n        form.patientPresent.disabled = true\n      }\n    })\n\n    watch([() => form.totalArvsGiven.value, () => form.pillCount.value], () => {\n      const arvs = parseInt(form.totalArvsGiven.value) || 0\n      const remainingDrugs = parseInt(form.pillCount.value) || 0\n      drugRunOutDate.value = dayjs(form.visitDate.value).add(arvs + remainingDrugs, 'days').format(STANDARD_DATE_FORMAT)\n      form.nextAppointmentDate.label = `Next Appointment Date (Drug run out date: ${dayjs(drugRunOutDate.value).format(DISPLAY_DATE_FORMAT)})`\n      form.nextAppointmentDate.value = drugRunOutDate.value\n    })\n\n    const hasGiven3HP = computed(() => form.tbMed.value?.label === '3HP (INH 300 / RFP 300)')\n    const hasGivenRFP = computed(() => form.tbMed.value?.label === '3HP (RFP + INH)')\n    const hasGiven6H = computed(() => form.tbMed.value?.label === '6H')\n    const hasContraindications = computed(() => form.hasContraindications.value === 'Yes')\n    const hasSideEffects = computed(() => form.hasSideEffects.value === 'Yes')\n\n    const tbStatuses = toOptions([\n      'Confirmed TB Not on treatment', \n      'Confirmed TB on treatment', \n      'TB Not Suspected',\n      'TB Suspected'\n    ]);\n\n    const tbMeds = toOptions(['6H', '3HP (RFP + INH)', '3HP (INH 300 / RFP 300)'])\n    \n    const setPatientPresent = (state: \"Yes\" | \"No\") => {\n      form.patientPresent.value = state \n      if(state === 'No') {\n        form.guardianPresent.value = \"Yes\"\n      }\n    }\n\n    const setGuardianPresent = (state: \"Yes\" | \"No\") => {\n      form.guardianPresent.value = state\n      if(state === 'No') {\n        form.patientPresent.value = \"Yes\"\n      }\n    }\n\n    const buildBmiObs = async (formData: any): Promise<ObsValue> => {\n      const height = formData.height || prevHeight.value\n      const bmi = BMIService.calculateBMI(formData.weight, height)\n      return vitals.buildValueNumber('BMI', bmi)\n    }\n\n    const buildFpmObs = async () => {\n      const obs: ObsValue[] = [\n        await consultations.buildValueCoded('Patient using family planning', 'No')\n      ]\n      const methods = consultations.getFamilyPlanningMethods()\n      methods.forEach(async (method) => {\n        obs.push(await consultations.buildValueCoded(method, \"No\"))\n      })\n      return obs\n    }\n\n    const getTbSymptomsObs = async () => {\n      return Promise.all(ConceptService.getConceptsByCategory(\"tb_symptom\", true).map(async (concept) => {\n        return consultations.buildGroupValueCoded(concept.name, concept.name, \"No\")\n      }))\n    }\n\n    const toDrugOrder = (drug: any, quantity: number, duration: number, startDate: string) => {\n      return {\n        \"drug_inventory_id\": drug.drug_id,\n        \"equivalent_daily_dose\": prescription.calculateEquivalentDosage(drug.am, drug.pm),\n        \"dose\": prescription.calculateDosage(drug.am, drug.pm),\n        'start_date': startDate,\n        \"auto_expire_date\": dayjs(startDate).add(duration, 'days').format('YYYY-MM-DD'), \n        \"units\": drug.units,\n        \"qty\": quantity,\n        \"frequency\": drug.frequency,\n        \"instructions\": prescription.getInstructions(drug.drug_name, drug.am, drug.pm, drug.units),\n      }\n    }\n\n    const onSubmit = async () => {\n      await PatientObservationService.setSessionDate(form.visitDate.value)\n      vitals.setDate(form.visitDate.value)\n      consultations.setDate(form.visitDate.value)\n      prescription.setDate(form.visitDate.value)\n      reception.setDate(form.visitDate.value)\n      adherence.setDate(form.visitDate.value)\n      appointment.setDate(form.visitDate.value)\n      dispensation.setDate(form.visitDate.value)\n\n      await submitForm (form, async (formData, computedFormData) => {\n        await vitals.createEncounter()\n        const vitalsObs = await resolveObs(computedFormData, 'vitals')\n        const bmiObs = await buildBmiObs(formData)\n        await vitals.saveObservationList([...vitalsObs, bmiObs])\n\n        await consultations.createEncounter()\n        const consultationObs = await resolveObs(computedFormData, 'consultation')\n        if(isFemale.value) consultationObs.concat(await buildFpmObs())\n        if(hasContraindications.value) \n          consultationObs.concat(await optionsToGroupObs(\"Malawi ART side effects\", contraIndications.value))\n        if(hasSideEffects.value) \n          consultationObs.concat(await optionsToGroupObs(\"Other side effect\", sideEffects.value))\n        consultationObs.concat(await getTbSymptomsObs())\n        await consultations.saveObservationList(consultationObs)\n\n        await prescription.createEncounter()\n        const drugOrders: any[] = []\n        let duration = 0\n        if(!isEmpty(formData.regimen) && formData.totalArvsGiven) {\n          const arvDrugs: any[] = formData.regimen.other\n          duration = Math.min(...arvDrugs.map(drug =>(formData.totalArvsGiven / (drug.am + drug.pm)) + 2))\n          arvDrugs.forEach((drug: any) => drugOrders.push(\n            toDrugOrder(drug, formData.totalArvsGiven, duration, formData.visitDate)\n          ))\n        }\n\n        if(formData.totalCPTGiven) {\n          uniqueBy((await RegimenService.getRegimenExtras('Cotrimoxazole', formData.weight)), 'concept_name')\n          .filter((drug: any) => drug.frequency === 'Daily (QOD)')\n          .forEach((drug: any) => drugOrders.push(toDrugOrder(drug, formData.totalCPTGiven, duration, formData.visitDate)))\n        }\n\n        if(formData.tbMed?.value) {\n          const iptRegimens = uniqueBy((await RegimenService.getRegimenExtras('INH', formData.weight)), ['concept_name', 'frequency'])\n          const pyridoxine = iptRegimens.find((d: any) => d['concept_name'] === 'Pyridoxine')\n\n          if(pyridoxine && formData.totalPyridoxineGiven) {\n            drugOrders.push(toDrugOrder(pyridoxine, formData.totalPyridoxineGiven, duration, formData.visitDate))\n          }\n\n          if(formData.totalIPTGiven) {\n            const INH = iptRegimens.find((drug: any) =>  drug['concept_name'] === \"Isoniazid\" && (\n              (hasGiven6H.value && drug.frequency === 'Daily (QOD)') || \n              (hasGivenRFP.value && drug.frequency === 'Weekly (QW)')\n            ))\n            drugOrders.push(toDrugOrder(INH, formData.totalIPTGiven, duration, formData.visitDate))\n          }\n\n          if(formData.totalRFPGiven && hasGivenRFP.value) {\n            const rfpRegimens = await RegimenService.getRegimenExtras('Rifapentine', formData.weight)\n            if(rfpRegimens.length) drugOrders.push(toDrugOrder(rfpRegimens[0], formData.totalRFPGiven, duration, formData.visitDate))\n          }\n\n          if(formData.total3HPGiven && hasGiven3HP.value) {\n            const threeHPRegimens = await RegimenService.getRegimenExtras('INH / RFP', formData.weight)\n            drugOrders.push(toDrugOrder(threeHPRegimens[0], formData.total3HPGiven, duration, formData.visitDate))\n          }\n        }\n\n        const orders: any[] = await prescription.createDrugOrder(drugOrders)\n        const dispensations = orders.map(order => {\n          const drug = drugOrders.find(drug => drug.drug_inventory_id === order.drug_inventory_id)\n          return dispensation.buildDispensations(order.order_id, drug.qty, 1)\n        })\n        await dispensation.saveDispensations(dispensations.flat(1))\n\n        await reception.createEncounter()\n        const receptionObs = await resolveObs(computedFormData, 'reception')\n        await reception.saveObservationList(receptionObs)\n\n        if(prevDrugs.value.length > 0) {\n          await adherence.createEncounter()\n          const adherenceObs = await Promise.all(prevDrugs.value.map(async (drug: any) => {\n            const expected = adherence.calculateExpected(drug.quantity, drug.equivalent_daily_dose, drug.order.start_date, drug.frequency)\n            const adh = adherence.calculateAdherence(drug.quantity, formData.pillCount, expected)\n            return [\n              await adherence.buildAdherenceObs(drug.order_id, drug.drug_inventory_id, adh),\n              await adherence.buildPillCountObs(drug.order_id, formData.pillCount)\n            ]\n          }))\n          await adherence.saveObservationList(adherenceObs.flat(1))\n        }\n\n        await appointment.createEncounter()\n        const appointmentObs = await resolveObs(computedFormData, 'appointment')\n        await appointment.saveObservationList(appointmentObs)\n        await toastSuccess('Patient visit saved successfully')\n\n        await PatientObservationService.resetSessionDate()\n\n        await modal.hide()\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n        EventBus.emit(EmcEvents.RELOAD_STAGING_INFORMATION);\n      })\n    }\n\n    const onClear = async () => {\n      if((await alertConfirmation('Are you sure you want to clear all fields?'))) {\n        for(const key in form) {\n          form[key].value = ''\n          form[key].error = ''\n          form[key].disabled = false;\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR);\n      }\n    }\n\n    onMounted (async () => {\n      prevHeight.value = await props.patient.getRecentHeight()\n      const recentWeight = await props.patient.getRecentWeight()\n      if (recentWeight) {\n        const regs = await RegimenService.getRegimensByWeight(recentWeight)\n        if(!isEmpty(regs)) {\n          regimens.value = Object.keys(regs).map(key => ({ \n            label: key, \n            value: key, \n            other: regs[key] \n          }))\n        }\n      }\n      prevDrugs.value = await DrugOrderService.getLastDrugsReceived(props.patient.getID())\n      form.pillCount.required = prevDrugs.value.length > 0\n      contraIndications.value = ConceptService\n        .getConceptsByCategory(\"contraindication\", true)\n        .map(concept => ({\n          value: concept.concept_id,\n          label: concept.name,\n          other: concept\n        }));\n      sideEffects.value = ConceptService\n        .getConceptsByCategory(\"side_effect\", true)\n        .map(concept => ({\n          value: concept.concept_id,\n          label: concept.name,\n          other: concept\n        }));\n    });\n\n    return {\n      today,\n      form,\n      regimens,\n      contraIndications,\n      sideEffects,\n      tbStatuses,\n      tbMeds,\n      hasGiven3HP,\n      hasGivenRFP,\n      hasGiven6H,\n      showHeightField,\n      isFemale,\n      modal,\n      hasContraindications,\n      hasSideEffects,\n      prevDrugs,\n      drugRunOutDate,\n      birthdate,\n      onSubmit,\n      setPatientPresent,\n      setGuardianPresent,\n      onClear,\n    };\n  },\n})\n","import { render } from \"./PatientVisit.vue?vue&type=template&id=09db14b0&scoped=true&ts=true\"\nimport script from \"./PatientVisit.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientVisit.vue?vue&type=script&lang=ts\"\n\nimport \"./PatientVisit.vue?vue&type=style&index=0&id=09db14b0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-09db14b0\"]])\n\nexport default __exports__","\nimport DrillTableModalVue from '@/components/DataViews/DrillTableModal.vue';\nimport table, { ColumnInterface, RowInterface } from '@/components/DataViews/tables/ReportDataTable';\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { EncounterService } from '@/services/encounter_service';\nimport { ObservationService } from '@/services/observation_service';\nimport { Patientservice } from '@/services/patient_service';\nimport { ProgramService } from '@/services/program_service';\nimport popVoidReason from '@/utils/ActionSheetHelpers/VoidReason';\nimport HisDate from \"@/utils/Date\";\nimport { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, modalController } from '@ionic/vue';\nimport dayjs from 'dayjs';\nimport { computed, defineComponent, onMounted, PropType, reactive, ref } from 'vue';\nimport ViralLoadResult from '@/apps/EMC/Components/modals/ViralLoadResult.vue';\nimport OutcomeStatus from '@/apps/EMC/Components/modals/OutcomeStatus.vue';\nimport PatientVisit from '@/apps/EMC/Components/modals/PatientVisit.vue';\nimport { PatientObservationService } from '@/services/patient_observation_service';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../../interfaces/emc_event';\nimport { modal } from '@/utils/modal';\nimport { ConceptService } from '@/services/concept_service';\n\ninterface ActionButtonInterface {\n  label: string;\n  icon?: string;\n  action: () => any;\n  color?: string;\n}\n\nexport default defineComponent({\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true\n    },\n    startDate:{\n      type: String,\n      required: true\n    },\n  },\n  components: {\n    ReportTable,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonCardContent,\n    IonButton,\n  },\n  setup(props) {\n    const rows = ref<RowInterface[][]>([])\n    const patientId = computed(() => props.patient.getID());\n    const tableConfig = reactive({\n      showIndex: false,\n      tableCssTheme: \"emc-datatable-theme\"\n    })\n\n    const actionButtons = ref<ActionButtonInterface[]>([\n      {\n        label: \"Add Visit\",\n        action: async () => modal.show(PatientVisit, { \n          patient: props.patient \n        })\n      },\n      {\n        label: \"Update Outcome\",\n        action:async () => modal.show(OutcomeStatus, {\n          patient: props.patient,\n        })\n      },\n      {\n        label: \"Enter VL Results\",\n        action: async () => modal.show(ViralLoadResult, {\n          patient: props.patient,\n        })\n      }\n    ])\n\n    const columns = ref<ColumnInterface[][]>([[\n      table.thTxt('Visit Date'),\n      table.thTxt(\"Given To\"),\n      table.thTxt('Weight (Kg)'),\n      table.thTxt('Height (cm)'),\n      table.thTxt('BMI'),\n      table.thTxt('Preg'),\n      table.thTxt('B/F'),\n      table.thTxt('TB STATUS'),\n      table.thTxt('Side Effects'),\n      table.thTxt('ART Regimen'),\n      table.thTxt('Next Appointment'),\n      table.thTxt('Outcome'),\n      table.thTxt('Viral Load'),\n      table.thTxt('Void Visit')\n    ]])\n\n    const formatVisitDate = (date: string) => {\n      const monthsElapsed = props.startDate !== \"N/A\" \n          ? '(' + dayjs(date).diff(props.startDate, 'months') + 'M)' \n          : ''\n      return `${HisDate.toStandardHisDisplayFormat(date)} ${monthsElapsed}`\n    }\n\n    const showDrugsDispensed = async (drugs = [] as any[], date: string) => {\n      (await modalController.create({\n        component: DrillTableModalVue,\n        cssClass: \"custom-modal\",\n        componentProps: {\n          title: `Drugs dispensed on ${HisDate.toStandardHisDisplayFormat(date)}`,\n          columns: ['DRUG NAME', 'QUANTITY', 'UNITS' ],\n          onRows: () => drugs.map((drug: any) => [drug[0], drug[1], 'tab(s)' ]),\n        },\n      })).present();\n    }\n\n    const removeEncounters = async (date: string, index: number, activeRows: any[]) => {\n      popVoidReason(async (reason: string) => {\n        const encounters = await EncounterService.getEncounters(patientId.value, {date});\n        encounters.forEach(async (encounter: any) => {\n          await EncounterService.voidEncounter(encounter.encounter_id, reason);\n        })\n        activeRows.splice(index, 1);\n      }, 'small-modal');\n    } \n\n    const buildRows = () => {\n      Patientservice.getPatientVisits(patientId.value, true).then(async (dates) => {\n        rows.value = []\n        for (const date of dates) {\n          const data =  await ProgramService.getCurrentProgramInformation(patientId.value,  date)\n          let nextAppointment = '';\n          let pregnant = '';\n          let breastfeeding = '';\n          let vlResult = ''\n\n          if (data.outcome !== 'Defaulted') {\n            const nDate = await ObservationService.getFirstValueDatetime(patientId.value, 'appointment date', date);\n            if(nDate) nextAppointment = HisDate.toStandardHisDisplayFormat(nDate)\n            pregnant = await ObservationService.getFirstValueCoded(patientId.value, 'Is patient pregnant', date);\n            breastfeeding = await ObservationService.getFirstValueCoded(patientId.value, 'Is patient breast feeding', date);\n            if(data['viral_load'] === 'N/A') {\n              const vlObs = await ObservationService.getFirstObs(patientId.value, \"HIV viral load\", date)\n              if(vlObs && vlObs.value_text && vlObs.value_numeric) {\n                vlResult = vlObs.value_numeric === 1 ? \"LDL\" : vlObs.value_text + vlObs.value_numeric.toString()\n              }\n            } else {\n              vlResult = data['viral_load']\n            }\n          }\n          data && rows.value.push([\n            table.td(formatVisitDate(date)),\n            table.td(data['visit_by'].match(/Unk/i) ? \"\" : data['visit_by']),\n            table.td(data.outcome === 'Defaulted' ? '' : data.weight),\n            table.td(data.outcome === 'Defaulted' ? '' : data.height),\n            table.td(data.outcome === 'Defaulted' ? '' : data.bmi),\n            table.td(pregnant || ''),\n            table.td(breastfeeding ||''),\n            table.td(data['tb_status'].match(/Unknown/i) || data.outcome === 'Defaulted' ? '' : (await ConceptService.getCachedConceptName(data['tb_status'])) || ''),\n            table.td(data['side_effects'].length ? 'Yes' : data.outcome !== 'Defaulted' ? 'No' : ''),\n            table.tdLink(data.outcome === 'Defaulted' ? '' : data.regimen, () => showDrugsDispensed(data.pills_dispensed, date)),\n            table.td(nextAppointment || ''),\n            table.td(data.outcome.match(/Unk/i) ? \"\" : data.outcome),\n            table.td(vlResult),\n            table.tdBtn('X', (index: number, activeRows: any[]) => removeEncounters(date, index, activeRows), {}, 'danger')\n          ])\n        }\n      });\n    }\n\n    EventBus.on(EmcEvents.RELOAD_PATIENT_VISIT_DATA, () => buildRows())\n\n    onMounted(() => {\n      buildRows()\n    })\n\n    return {\n      actionButtons,\n      tableConfig,\n      columns,\n      rows,\n    }\n  },\n})\n","import { render } from \"./VisitsSummary.vue?vue&type=template&id=17e9b721&scoped=true&ts=true\"\nimport script from \"./VisitsSummary.vue?vue&type=script&lang=ts\"\nexport * from \"./VisitsSummary.vue?vue&type=script&lang=ts\"\n\nimport \"./VisitsSummary.vue?vue&type=style&index=0&id=17e9b721&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17e9b721\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-22f18bd2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { style: {width: '100%', display: 'flex', justifyContent: 'space-between'} }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { key: 1 }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { key: 3 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_multi_column_view = _resolveComponent(\"multi-column-view\")!\n\n  return (_openBlock(), _createBlock(_component_multi_column_view, {\n    items: _ctx.patientInfo,\n    numberOfColumns: 3\n  }, {\n    default: _withCtx(({entries}) => [\n      _createVNode(_component_ion_list, { class: \"his-card ion-margin-end\" }, {\n        default: _withCtx(() => [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (option, i) => {\n            return (_openBlock(), _createBlock(_component_ion_item, {\n              key: i,\n              lines: i === entries.length - 1 ? 'none': '',\n              button: _ctx.clickable(option),\n              onClick: ($event: any) => (_ctx.onClickHandler(option))\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_1, [\n                  (option.label)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(option.label) + \": \", 1))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_3)),\n                  (option.other && typeof option.other.onClickHandler === 'function')\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 2,\n                        onClick: option.other.onClickHandler\n                      }, [\n                        _createElementVNode(\"a\", null, [\n                          _createElementVNode(\"b\", null, _toDisplayString(option.value || 'N/A'), 1)\n                        ])\n                      ], 8, _hoisted_4))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, [\n                        _createElementVNode(\"b\", null, _toDisplayString(option.value || 'N/A'), 1)\n                      ]))\n                ])\n              ]),\n              _: 2\n            }, 1032, [\"lines\", \"button\", \"onClick\"]))\n          }), 128))\n        ]),\n        _: 2\n      }, 1024)\n    ]),\n    _: 1\n  }, 8, [\"items\"]))\n}","\nimport { computed, defineComponent, onMounted, PropType, ref } from 'vue'\nimport MultiColumnView from \"@/components/containers/MultiColumnView.vue\";\nimport { PatientObservationService } from '@/services/patient_observation_service';\nimport HisDate from \"@/utils/Date\";\nimport dayjs from 'dayjs';\nimport { isEmpty } from 'lodash';\nimport router from '@/router';\nimport ApiStore from '@/composables/ApiStore';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../interfaces/emc_event';\nimport { toGenderString } from '@/utils/Strs';\n\ninterface InfoItem {\n  label: string;\n  value: string | number;\n  other?: {\n    onClickHandler: () => Promise<void> | void;\n  };\n}\n\nexport default defineComponent({\n  components: {\n    MultiColumnView\n  },\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true,\n    },\n    artStartDate: {\n      type: String,\n      required: true,\n    },\n    guardians: {\n      type: String,\n      default: '',\n    }\n  },\n  emits: ['updatePatient','updateARVNumber', 'addGuardian'],\n  setup(props, { emit }) {\n    const initWeight = ref(0)\n    const initHeight = ref(0)\n    const initBmi = ref(0)\n    const initTBStatus = ref('')\n    const breastFeedingAtInitiation = ref('')\n    const pregnantAtInitiation = ref('')\n    const receivedART = ref('')\n    const agreesToFollowUp = ref('')\n    const reasonForStartingART = ref('')\n    const hivTestDate = ref('')\n    const hivTestPlace = ref('')\n    const stagingCondition = ref('')\n    const latestVLResult = ref('')\n    const whoSTage = ref('')\n\n    const clickable = (item: InfoItem) => {\n      return item.other && typeof item.other.onClickHandler === 'function';\n    }\n\n    const onClickHandler = async (item: InfoItem) => {\n      if(clickable(item)){\n        await item.other?.onClickHandler()\n      }\n    }\n\n    const getDobAndAgeAtInitiation = () => {\n      const dob = props.patient.getBirthdate()\n      const ageAtInitiation = props.artStartDate !== \"N/A\" \n        ? dayjs(props.artStartDate).diff(dob, \"years\")\n        : ''\n      \n      return `${HisDate.toStandardHisDisplayFormat(dob)} (${ageAtInitiation})`\n    }\n\n    const setLatestVLResult = (force = false) => {\n      if(force) ApiStore.invalidate('PATIENT_LAB_ORDERS')\n      ApiStore.get('PATIENT_LAB_ORDERS', { patientID: props.patient.getID() }).then(orders => {\n        const results = orders.reduce((rs: any[], order: any) => {\n        const r = order.tests\n          .filter((t: any) => t.name.match(/hiv/i) && !isEmpty(t.result))\n          .map((t: any) => t.result);\n          return rs.concat(r.reduce((a: any, c: any) => a.concat(c), []));\n        }, [])\n        .sort((a: any, b: any) => new Date(a.date) > new Date(b.date) ? -1 : 1);\n        latestVLResult.value = isEmpty(results) \n          ? '' \n          : `${results[0].value_modifier}${results[0].value} (${HisDate.toStandardHisDisplayFormat(results[0].date)})`;\n      });\n    }\n\n    const patientInfo = computed(() => [\n      { label: \"ARV Number\", value: props.patient.getArvNumber(), other: {\n        onClickHandler: () => emit('updateARVNumber')\n      }},\n      { label: \"National Patient ID\", value: props.patient.getNationalID() },\n      { label: \"Name\", value: props.patient.getGivenName() + \" \" + props.patient.getFamilyName(), other: {\n        onClickHandler: () =>   emit('updatePatient', 'given_name')\n      }},\n      { label: \"DOB and Age at Initiation\", value: getDobAndAgeAtInitiation(), other: {\n          onClickHandler: () => emit('updatePatient', 'birthdate')\n      }},\n      {\n        label: \"Sex\",\n        value: toGenderString(props.patient.getGender()),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'gender')\n          }\n        },\n      },\n      {\n        label: \"Location\",\n        value: props.patient.getCurrentVillage(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'home_village')\n          }\n        },\n      },\n      { \n        label: \"Landmark\", \n        value: props.patient.getClosestLandmark(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'landmarks')\n          }\n        },\n      },\n      { \n        label: \"Phone Number\", \n        value: props.patient.getPhoneNumber(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'phone_number')\n          }\n        },\n      },\n      {\n        label: \"Guardian\",\n        value: props.guardians ? props.guardians : \"add\",\n        other: {\n          ...(isEmpty(props.guardians) \n            ? {\n                onClickHandler: () => {\n                  emit('addGuardian')\n                }\n              } \n            : {}\n          ),\n        },\n      },\n      { label: \"Agrees to follow up\", value: agreesToFollowUp.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Date of starting first line ARV Regimen\", value: props.artStartDate, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial Weight (KG)\", value: initWeight.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial Height (CM)\", value: initHeight.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial BMI\", value: initBmi.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial TB Status\", value: initTBStatus.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Pregnant at Initiation\", value: pregnantAtInitiation.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Breastfeeding at Initiation\", value: breastFeedingAtInitiation.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Latest VL Result and Result Date\", value:  latestVLResult.value },\n      { label: \"TI\", value: receivedART.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"HIV test place\", value: hivTestPlace.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      {  label: \"HIV test date\", value: hivTestDate.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"WHO stage\", value: whoSTage.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Reason for starting ART\", value: reasonForStartingART.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Staging codition\", value: stagingCondition.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n    ])\n\n    const setHIVTestDate = async () => {\n      const date = await props.patient.getHIVTestDate()\n      if(date) hivTestDate.value = HisDate.toStandardHisDisplayFormat(date)\n    }\n\n    const init = () => {\n      props.patient.getInitialWeight().then(v => initWeight.value = v)\n      props.patient.getInitialHeight().then(v => initHeight.value = v)\n      props.patient.getInitialBMI().then(v => initBmi.value = v)\n      props.patient.getInitialTBStatus().then(v => initTBStatus.value = v)\n      props.patient.hasPregnancyAtARTInitiation().then(v => pregnantAtInitiation.value = v)\n      props.patient.breastFeedingAtARTInitiation().then(v => breastFeedingAtInitiation.value = v)\n      props.patient.everReceivedART().then(v => receivedART.value = v)\n      props.patient.agreesToFollowUp().then(v => agreesToFollowUp.value = v)\n      props.patient.getReasonForStartingART().then(v => reasonForStartingART.value = v)\n      props.patient.getHIVTestLocation().then(v => hivTestPlace.value = v)\n      props.patient.getStagingCondition().then(v => stagingCondition.value = v)\n      props.patient.getWhoStage().then(v => whoSTage.value = v)\n      setLatestVLResult()\n      setHIVTestDate()\n    }\n\n   onMounted(() => {\n    init();\n    EventBus.on(EmcEvents.RELOAD_LATEST_VL_RESULT,  () =>  setLatestVLResult())\n    EventBus.on(EmcEvents.RELOAD_STAGING_INFORMATION, () => init())\n   })\n\n    return {\n      patientInfo,\n      onClickHandler,\n      clickable,\n    }\n  },\n})\n","import { render } from \"./InformationHeader.vue?vue&type=template&id=22f18bd2&scoped=true&ts=true\"\nimport script from \"./InformationHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./InformationHeader.vue?vue&type=script&lang=ts\"\n\nimport \"./InformationHeader.vue?vue&type=style&index=0&id=22f18bd2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-22f18bd2\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Edit Patient Demographics\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.givenName,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.patient.givenName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.middleName,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.patient.middleName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.familyName,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.patient.familyName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.patient.birthdate,\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.patient.birthdate) = $event)),\n                      allowEstimation: true,\n                      estimationLabel: 'Estimate Age',\n                      minDate: \"1900-01-01\",\n                      maxDate: _ctx.today,\n                      onIsEstimated: _cache[5] || (_cache[5] = (estimate) => _ctx.isBirthdateEstimated = estimate)\n                    }, null, 8, [\"modelValue\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.gender,\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.patient.gender) = $event)),\n                      options: _ctx.genderOptions\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.cellPhoneNumber,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.patient.cellPhoneNumber) = $event)),\n                      allowUnknown: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.homeVillage,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.patient.homeVillage) = $event)),\n                      asyncOptions: _ctx.getVillagesByName,\n                      allowCustom: \"\"\n                    }, null, 8, [\"modelValue\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.landmark,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.patient.landmark) = $event)),\n                      asyncOptions: _ctx.getLandmarks,\n                      allowCustom: \"\"\n                    }, null, 8, [\"modelValue\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[10] || (_cache[10] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-end\",\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, PropType, reactive, ref } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { LocationService } from \"@/services/location_service\";\nimport { isEmpty } from \"lodash\";\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport { getLandmarks, getVillagesByName } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { genderOptions } from \"../../utils/DTFormElements\";\nimport { modal } from \"@/utils/modal\";\nimport dayjs from \"dayjs\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n    DateInput,\n    SelectInput,\n  },\n  props: {\n    patientService: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    }\n  },\n  setup(props) {\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const isBirthdateEstimated = ref(false);\n    const patient = reactive<DTForm>({\n      givenName: {\n        label: \"First Name\",\n        value: props.patientService.getGivenName(),\n        placeholder: \"First Name\",\n        required: true,\n        error: \"\",\n      },\n      familyName: {\n        label: \"last Name\",\n        value: props.patientService.getFamilyName(),\n        placeholder: \"Last Name\",\n        required: true\n      },\n      middleName: {\n        label: \"middle Name\",\n        value: props.patientService.getMiddleName(),\n        placeholder: \"middle Name\",\n      },\n      gender: {\n        value: props.patientService.getGender(),\n        required: true,\n        label: \"Gender\",\n        placeholder: 'select gender'\n      },\n      birthdate: {\n        value:props.patientService.getBirthdate(),\n        label: 'Date of Birth',\n        placeholder: 'Date of Birth',\n        required: true,\n      },\n      cellPhoneNumber: {\n        value: props.patientService.getPhoneNumber(),\n        required: true,\n        label: \"Cellphone Number\",\n        placeholder: \"cellphone number e.g. 0991234567\",\n        validation: async (phone: Option) => !(phone.value === 'Unknown' || phone.value === 'N/A') && Validation.isMWPhoneNumber(phone)\n      },\n      homeVillage: {\n        value: props.patientService.getCurrentVillage(),\n        label: \"Home Village\",\n        placeholder: \"Home Village\",\n        required: true,\n      },\n      landmark: {\n        value: props.patientService.getClosestLandmark(),\n        label: \"Landmark\",\n        placeholder: \"Closest Landmark or Plot Number\",\n        required: true,\n      }\n    })\n\n    const resolveAddress = async (village: Option) => {\n      const address = {\n        'current_district': \"N/A\",\n        'current_traditional_authority': \"N/A\",\n        'current_village': village.label \n      }\n\n      const TA = await LocationService.getTraditionalAuthorityById(village.other.traditional_authority_id)\n        if(TA.length > 0) {\n          address['current_traditional_authority'] = TA[0].name\n          const district = await LocationService.getDistrictByID(TA[0].district_id)\n          if(!isEmpty(district)) {\n            address['current_district'] = district[0].name\n          }\n        }\n      return address;\n    }\n\n    const onFinish = async () => submitForm(patient, async (formData) => {\n      const updatedPatient = {} as any;\n      if(formData.givenName !== props.patientService.getGivenName()) updatedPatient[\"given_name\"] = formData.givenName;\n      if(formData.familyName !== props.patientService.getFamilyName()) updatedPatient[\"family_name\"] = formData.familyName;\n      if(formData.middleName !== props.patientService.getMiddleName()) updatedPatient[\"middle_name\"] = formData.middleName;\n      if(formData.birthdate !== props.patientService.getBirthdate()) updatedPatient[\"birthdate\"] = formData.birthdate;\n      if(formData.gender.value !== props.patientService.getGender()) updatedPatient[\"gender\"] = formData.gender.value;\n      if(formData.cellPhoneNumber !== props.patientService.getPhoneNumber()) updatedPatient[\"cell_phone_number\"] = formData.cellPhoneNumber;\n      if(formData.landmark.label !== props.patientService.getClosestLandmark()) updatedPatient[\"landmark\"] = formData.landmark.label;\n      if(formData.homeVillage !== props.patientService.getCurrentVillage()) {\n        Object.assign(updatedPatient, {\n          ...updatedPatient,\n          ...(await resolveAddress(formData.homeVillage))\n        })\n      }\n      if(!isEmpty(updatedPatient)) {\n        const person = new PatientRegistrationService();\n        person.setPersonID(props.patientService.getID());\n        await person.updatePerson(updatedPatient);\n      }\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA);\n    })\n \n    return {\n      today,\n      patient,\n      getLandmarks,\n      genderOptions,\n      isBirthdateEstimated,\n      modal,\n      onFinish, \n      getVillagesByName\n    };\n  },\n});\n","import { render } from \"./PatientDemographics.vue?vue&type=template&id=04962b97&ts=true\"\nimport script from \"./PatientDemographics.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientDemographics.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Add Guadian Demographics\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, { onClick: _ctx.closeModal }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.givenName,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.guardian.givenName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.familyName,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.guardian.familyName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.cellPhoneNumber,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.guardian.cellPhoneNumber) = $event)),\n                      allowUnknown: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-end\",\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, reactive } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { RelationsService } from \"@/services/relations_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n  },\n  props: {\n    patientId: {\n      type: Number,\n      required: true,\n    }\n  },\n  setup(props) {    \n    const guardian = reactive<DTForm>({\n      givenName: {\n        label: \"First Name\",\n        value: \"\",\n        placeholder: \"First Name\",\n        required: true,\n      },\n      familyName: {\n        label: \"Last Name\",\n        value: \"\",\n        placeholder: \"Last Name\",\n        required: true,\n      },\n      cellPhoneNumber: {\n        value: '',\n        required: true,\n        label: \"Cellphone Number\",\n        validation: async (phone: Option) => {\n          return phone.value !== 'Unknown' && Validation.isMWPhoneNumber(phone)\n        }\n      },\n    })\n\n    const onFinish = async () => submitForm(guardian, async (formData) => {\n      const person: Record<string, any> = {\n        'home_district': \"N/A\",\n        'home_traditional_authority': \"N/A\",\n        'home_village': \"N/A\",\n        'current_district': \"N/A\",\n        'current_traditional_authority': \"N/A\",\n        'current_village': \"N/A\",\n        'middle_name': \"\",\n        'gender': \"N/A\",\n        'birthdate': \"N/A\",\n        'birthdate_estimated': \"N/A\",\n        'landmark': \"N/A\",\n        'relationship': \"N/A\",\n        'patient_type': \"\",\n        'isPatient': false,\n        'patient_id': props.patientId,\n        ...formData\n      };\n      const registrationService = new PatientRegistrationService()\n      await registrationService.registerGuardian(person)\n      const guardianId = registrationService.getPersonID()      \n      await RelationsService.createRelation(props.patientId, guardianId, 13)\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_GUARDIAN_DATA)\n    }, \n    { \n      underscoreKeys: true \n    })\n \n    return {\n      guardian,\n      modal,\n      onFinish,\n    };\n  },\n});\n","import { render } from \"./GuardianDemographics.vue?vue&type=template&id=77baa926&ts=true\"\nimport script from \"./GuardianDemographics.vue?vue&type=script&lang=ts\"\nexport * from \"./GuardianDemographics.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_text_input = _resolveComponent(\"text-input\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"ARV NUMBER\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_text_input, {\n                      modelValue: _ctx.form.arvNumber,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.arvNumber) = $event)),\n                      form: _ctx.form,\n                      prefix: `${_ctx.sitePrefix}-ARV-`\n                    }, null, 8, [\"modelValue\", \"form\", \"prefix\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, { class: \"ion-padding-horizontal\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            (_ctx.hasValidARVNumber)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"danger\",\n                  onClick: _ctx.voidARV,\n                  slot: \"start\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Void ARV Number\")\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { computed, defineComponent, onMounted, PropType, reactive, ref } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { loader } from \"@/utils/loader\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\nimport { modal } from \"@/utils/modal\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    }\n  },\n  setup(props) { \n    const sitePrefix = ref(\"\");\n    const arvNumber = computed(() => props.patient.getArvNumber());\n    const hasValidARVNumber = computed(() => {\n      return !isEmpty(arvNumber.value) && arvNumber.value !== \"Unknown\";\n    });\n\n    const form = reactive<DTForm>({\n      arvNumber: {\n        value: hasValidARVNumber.value ? arvNumber.value.split(\"-\")[2] : \"\",\n        label: `${hasValidARVNumber.value ? \"Edit\" : \"Add New\"} ARV Number`,\n        placeholder: \"Enter ARV Number\",\n        required: true,\n        validation: async (arv: Option) => {\n          const isNumberErr = StandardValidations.isNumber(arv, \"POSITIVE_INTEGERS\")\n          if(isNumberErr !== null) return isNumberErr\n          if(arv.value === arvNumber.value.split(\"-\")[2]) return null\n          const patients = await Patientservice.findByOtherID(4, `${sitePrefix.value}-ARV-${arv.value}`);\n          return isEmpty(patients) ?  null : ['ARV Number already exists'];\n        },\n      },\n    })\n\n    const onFinish = async () => submitForm(form, async (formData) => {\n      if(formData.arvNumber !== arvNumber.value.split(\"-\")[2]){\n        if(hasValidARVNumber.value) {\n          await props.patient.updateARVNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`);\n        } else {\n          await props.patient.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`);\n        }\n        await modal.hide();\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA)\n      }\n    }) \n\n    const voidARV = async () => {\n      const confirm = await alertConfirmation(`Are you sure you want to void this ARV Number ${arvNumber.value}?`);\n      if(!confirm) return;\n      await loader.show(\"Voiding ARV Number...\");\n      try {\n        await ProgramService.voidARVNumber(arvNumber.value);\n        await loader.hide();\n        await modal.hide();\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA)\n      } catch (error) {\n        await loader.hide();\n        console.log(error)\n      } \n    }\n\n    onMounted(async () => {\n      sitePrefix.value = await GLOBAL_PROP.sitePrefix();\n      if (!hasValidARVNumber.value) {\n        const suggestedNumber = await ProgramService.getNextSuggestedARVNumber();\n        form.arvNumber.value = suggestedNumber.arv_number.replace(/^\\D+|\\s/g, \"\");\n      }\n    }) \n \n    return {\n      form,\n      modal,\n      sitePrefix,\n      arvNumber,\n      hasValidARVNumber,\n      onFinish,\n      voidARV,\n    };\n  },\n});\n","import { render } from \"./ArvNumber.vue?vue&type=template&id=161cb440&ts=true\"\nimport script from \"./ArvNumber.vue?vue&type=script&lang=ts\"\nexport * from \"./ArvNumber.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\nimport HisDate from \"@/utils/Date\";\nimport { Patient } from \"@/interfaces/patient\";\nimport { RelationshipService } from \"@/services/relationship_service\";\nimport Layout from \"../Components/Layout.vue\";\nimport VisitsSummary from \"../Components/tables/VisitsSummary.vue\";\nimport InformationHeader from \"@/apps/EMC/Components/InformationHeader.vue\";\nimport { PatientObservationService } from \"@/services/patient_observation_service\";\nimport PatientDemographics from \"../Components/modals/PatientDemographics.vue\";\nimport GuardianDemographicsVue from \"../Components/modals/GuardianDemographics.vue\";\nimport ARVNumberVue from \"../Components/modals/ArvNumber.vue\";\nimport { useRoute } from \"vue-router\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  components: {\n    Layout,\n    VisitsSummary,\n    InformationHeader,\n  },\n  setup () {\n    const route = useRoute();\n    const patientId = parseInt(route.params.patientId.toString()) || 0;\n    const patient = ref<PatientObservationService>();\n    const artStartDate = ref<string>(\"\");\n    const guardians = ref<string>(\"\");\n    const isReady = computed(() => !isEmpty(patient.value))\n\n    const setPatient = async () => {\n      if (patientId) {\n        const patientData: Patient = await PatientObservationService.findByID(patientId);\n        if(patientData) {\n          patient.value = new PatientObservationService(patientData);\n        }\n      }\n    };\n\n    const setPatientGuardian = async () => {\n      const relationship = await RelationshipService.getGuardianDetails(patientId);\n      guardians.value = relationship.map((r: any) => ` ${r.name} (${r.relationshipType})`).join(\", \");\n    }\n\n    const updateDemographics = async (attribute: string) => {\n      await modal.show(PatientDemographics, {\n        patientService: patient.value,\n        attribute,\n      });\n    }\n\n    const addGuardian = async () => {\n      await modal.show(GuardianDemographicsVue, {\n        patientId,\n      });\n    }\n\n    const updateARVNumber = async () => {\n      await modal.show(ARVNumberVue, {\n        patient: patient.value,\n      });\n    }\n\n    EventBus.on(EmcEvents.RELOAD_PATIENT_DATA,async () => {\n      await setPatient();\n    });\n    EventBus.on(EmcEvents.RELOAD_GUARDIAN_DATA, async () => {\n      await setPatientGuardian();\n    });\n\n    onMounted(async () => {\n      await setPatient();\n      const date = await patient.value?.getARTStartDate();\n      artStartDate.value = date ? HisDate.toStandardHisDisplayFormat(date) : \"N/A\";\n      await setPatientGuardian();\n    });\n\n    return {\n      patient,\n      artStartDate,\n      guardians,\n      isReady,\n      updateDemographics,\n      addGuardian,\n      updateARVNumber,\n    };\n  },\n});\n","import { render } from \"./Mastercard.vue?vue&type=template&id=61035d49&ts=true\"\nimport script from \"./Mastercard.vue?vue&type=script&lang=ts\"\nexport * from \"./Mastercard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PatientVisit.vue?vue&type=style&index=0&id=09db14b0&scoped=true&lang=css\"","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}","import { Person } from \"@/interfaces/person\"\nimport { Service } from \"./service\"\n\nexport interface NewPerson {\n    person_id?: number;\n    given_name: string;\n    family_name: string;\n    gender: string;\n    birthdate: string;\n    birthdate_estimated: boolean;\n    home_district: string;\n    home_traditional_authority: string;\n    home_village: string;\n    current_district: string;\n    current_traditional_authority: string;\n    current_village: string;\n    landmark: string;\n    cell_phone_number: string;\n    occupation: string;\n    facility_name: string;\n    patient_type?: string;\n    relationship?: string;\n}\n\nexport class PersonService extends Service{\n    person: Person | NewPerson\n    constructor(person: NewPerson | Person){\n        super()\n        this.person = person\n    }\n\n    create() { return Service.postJson('/people', this.person) }\n\n    update(id: number) { return Service.putJson(`people/${id}`, {\n        ...this.person, 'program_id': Service.getProgramID()\n    })}\n\n    static searchFamilyName(name: string) {\n        return super.getJson('/search/family_name', {'search_string': name})\n    }\n\n    static searchGivenName(name: string) {\n        return super.getJson('/search/given_name', {'search_string': name})\n    }\n\n    static async getPersonFullName(personId: string | number) {\n        const names = await super.getJson(`/people/${personId}/names`)\n        return names && names.length ? names[0].given_name + ' ' + names[0].family_name : ''\n    }\n}\n","import { modalController } from \"@ionic/vue\";\n\nexport const modal = {\n  async show(component: any, componentProps?: Record<string, any>, cssClass = 'custom-modal', backdropDismiss = true) {\n    const m = await modalController.create({\n      component,\n      cssClass,\n      backdropDismiss,\n      componentProps,\n    });\n    m.present();\n    const { data } = await m.onWillDismiss();\n    if(data) return data;\n  },\n  async hide(data?: Record<string, any>) {\n    await modalController.dismiss(data);\n  }\n}","import { DrugInterface } from \"@/interfaces/Drug\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { Observation } from \"@/interfaces/observation\";\nimport HisDate from \"@/utils/Date\"\nimport { RegimenService } from \"@/services/regimen_service\";\nimport { isEmpty } from \"lodash\"\nimport { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport enum AdverseEffectsCategories {\n    CONTRAINDICATION = \"contraindication\",\n    SIDE_EFFECT = \"side_effect\"\n}\n\nexport class PrescriptionService extends AppEncounterService {\n    nextVisitInterval: number;\n    fastTrack: boolean;\n    regimenExtras: Array<Record<string, any>>;\n    hangingPills: Array<Record<string, any>>;\n    fastTrackMedications: Array<Record<string, any>>;\n    medicationOrders: Array<number>;\n    treatmentState: string;\n    contraindications: Record<string, any>;\n    sideEffects: Record<string, any>;\n    tptPrescriptionCount: number;\n    lastSideEffectDate: string;\n\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 25, providerID) //TODO: Use encounter type reference name\n        this.nextVisitInterval = 0\n        this.fastTrack = false\n        this.regimenExtras = []\n        this.fastTrackMedications = []\n        this.hangingPills = []\n        this.medicationOrders = []\n        this.treatmentState = ''\n        this.contraindications = {}\n        this.sideEffects = {}\n        this.tptPrescriptionCount = 0\n        this.lastSideEffectDate = ''\n    }\n\n    setNextVisitInterval(nextVisitInterval: number) {\n        this.nextVisitInterval = nextVisitInterval\n    }\n\n    getHangingPills() {\n        return this.hangingPills\n    }\n\n    getMedicationOrders() {\n        return this.medicationOrders.map((i: number) => {\n            return AppEncounterService.getCachedConceptName(i)\n        })\n    }\n\n    getTptPrescriptionCount() {\n        return this.tptPrescriptionCount\n    }\n\n    getLastSideEffectDate() {\n        return this.lastSideEffectDate\n    }\n\n    getContraindications() { return this.contraindications }\n\n    getSideEffects() { return this.sideEffects }\n\n    getRegimenExtras() { return this.regimenExtras }\n\n    getPatientRegimens() { return RegimenService.getRegimens(this.patientID) }\n\n    getARVs() {\n        return RegimenService.getJson('arv_drugs')\n    }\n\n    getCustomIngridients() { return RegimenService.getCustomIngridients() }\n\n    getFastTrackMedications() { return this.fastTrackMedications }\n\n    getTreatmentState() { return this.treatmentState }\n\n    isFastTrack() { return this.fastTrack }\n\n    medicationOrdersAvailable() { return !isEmpty(this.medicationOrders) }\n\n    shouldPrescribeArvs() { \n        const arvs = AppEncounterService.getCachedConceptID(\"Antiretroviral drugs\")\n        return this.medicationOrders.includes(arvs)\n    }\n\n    shouldPrescribeExtras() {\n        const extras = AppEncounterService.getConceptsByCategory('art_extra_medication_order')\n        const extrasAvailable = extras.map((i: any) => this.medicationOrders.includes(i.concept_id))\n        return extrasAvailable.some(Boolean)\n    }\n\n    getRegimenStarterpack(regimenCode: number, patientWeight: number) {\n        const params = { weight: patientWeight, regimen: regimenCode }\n\n        return AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/regimen_starter_packs`,\n            params\n        )\n    }\n\n    async getLvpDrugsByType(type: string, regimen: number) {\n        return AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/regimens/${regimen}`,\n            {\n                'patient_id': this.patientID,\n                'lpv_drug_type': type\n            }\n        )\n    }\n\n    async loadContraindications() {\n        const contraindication = await AppEncounterService.getConceptID('Contraindications')\n        const obs = await AppEncounterService.getObs({\n            'concept_id': contraindication, 'person_id': this.patientID \n        })\n\n        obs.forEach((o: any) => {\n            const date = HisDate.toStandardHisFormat(o.obs_datetime)\n\n            if (!this.contraindications[date]) this.contraindications[date] = []\n\n            const concept = AppEncounterService.getCachedConceptName(o.value_coded)\n\n            this.contraindications[date].push(concept)\n        })\n    }\n\n    async loadDrugInduced() {\n        const drugInduced = await AppEncounterService.getConceptID('Drug induced')\n        const obs = await AppEncounterService.getObs({\n            'concept_id': drugInduced, 'person_id': this.patientID \n        })\n\n        if (!obs) return\n\n        obs.forEach((o: any) => {\n            const date = HisDate.toStandardHisFormat(o.obs_datetime)\n\n            if (!this.lastSideEffectDate) this.lastSideEffectDate = date\n\n            if (!o.value_drug || !o.value_coded) return\n\n            if (!this.sideEffects[date]) this.sideEffects[date] = {}\n\n            if (!this.sideEffects[date][o.value_drug]) this.sideEffects[date][o.value_drug] = []\n\n            const concept = AppEncounterService.getCachedConceptName(o.value_coded)\n\n            this.sideEffects[date][o.value_drug].push(concept)\n        })\n    }\n\n    async loadTptPrescriptionCount() {\n        const res = await AppEncounterService.getJson(\n            `tpt_prescription_count`, {\n                'patient_id': this.patientID,\n                'date': this.date\n            }\n        )\n\n        if (res) {\n            const count = res.count + 1\n            this.tptPrescriptionCount = count > 3 ? 3 : count\n        } \n    }\n\n    async loadFastTrackStatus() {\n        const isFastTrack = await AppEncounterService.getFirstValueCoded(this.patientID, 'Fast track')\n        const yes = await AppEncounterService.getConceptID('yes')\n\n        if (isFastTrack) this.fastTrack = isFastTrack === yes\n    }\n    \n    async loadRegimenExtras(date=this.date) {\n        const meds = await RegimenService.getJson(\n            `programs/${RegimenService.getProgramID()}/patients/${this.patientID}/dosages`,\n            {date}\n        )\n        if (meds) this.regimenExtras = Object.values(meds)\n    }\n\n    async loadMedicationOrders() {\n        const medicationOrders = await AppEncounterService.getConceptID(\"Medication orders\")\n        const orders = await AppEncounterService.getObs({\n            'concept_id': medicationOrders,\n            'date': this.date,\n            'person_id': this.patientID,\n            'page_size': 5\n        })\n        this.medicationOrders = orders.map((i: Observation) => i.value_coded)\n    }\n\n    async loadHangingPills() {\n        const pills = await AppEncounterService.getAll(this.patientID, 'Pills brought')\n        if (pills) {\n            this.hangingPills = pills.filter((o: any) => o.value_numeric >= 1 && o.order)\n                                    .map((o: any) => o.order.drug_order.drug_inventory_id)\n        }\n    }\n\n    async loadFastTrackMedications() {\n        const drugs = await DrugOrderService.getLastDrugsReceived(this.patientID)\n        const withDosages = drugs.map(async(data: any) => {\n            const { drug } = data\n            const dosage = await DrugOrderService.getDrugDosages(this.patientID, drug.drug_id)\n            return {\n                'drug_id': drug.drug_id,\n                'drug_name': drug.name,\n                'units': drug.units,\n                'am': dosage.am,\n                'noon': dosage.noon,\n                'pm': dosage.pm,\n                'frequency': data.frequency\n            }\n        })\n        this.fastTrackMedications = await Promise.all(withDosages)\n    }\n\n    async loadTreatmentState() {\n        const params = { date: this.date }\n\n        const req = await AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/status`,\n            params\n        )\n\n        if (req) this.treatmentState = req['status']\n    }\n\n    findAndGroupDrugSideEffects(drugs: Array<number>) {\n        const allSideEffects: any = {}\n\n        for (const date in this.sideEffects) {\n            const drugInduced = this.sideEffects[date]\n\n            for(const drug in drugInduced) {\n                if (!drugs.includes(parseInt(drug))) continue\n\n                if (!allSideEffects[date]) allSideEffects[date] = []\n\n                allSideEffects[date] = [\n                    ...allSideEffects[date], ...drugInduced[drug]\n                ]\n            }\n        }\n        return allSideEffects\n    }\n\n    calculatePillsPerDay(am: number, noon: number, pm: number) {\n        return parseFloat(am.toString()) + noon + pm\n    }\n\n    estimatePackSize(pillsPerDay: number, packSize=0) {\n        const packs = (pillsPerDay * this.nextVisitInterval) / packSize\n        \n        let roundedPacks = Math.round(packs)\n\n        if (roundedPacks <= 0) roundedPacks += 1\n\n        return roundedPacks\n    }\n\n    calculateDosage(morningTabs: number, eveningTabs: number): number {\n        let dose = 0\n        if (eveningTabs === 0) dose = morningTabs\n\n        if (morningTabs == 0) dose = eveningTabs\n\n        if (morningTabs > 0 && eveningTabs  > 0) {\n            dose = (morningTabs + eveningTabs) / 2\n        }\n        return dose\n    }\n    \n    calculateEquivalentDosage(morningTabs: number, eveningTabs: number): number {\n        return morningTabs + eveningTabs\n    }\n\n    calculateDateFromInterval() {\n        const dateObj = new Date(this.date)\n        dateObj.setDate(dateObj.getDate() + this.nextVisitInterval)\n        return HisDate.toStandardHisFormat(dateObj)\n    }\n\n    getDrugPackSize(drug: any) {\n        if (drug.pack_size) return drug.pack_size\n        try{\n            return drug.barcodes[0].tabs\n        }catch(e) {\n            return 30\n        }\n    }\n\n    getInstructions(drugName: string, morningTabs: number, eveningTabs: number, units: string): string {\n        return `${drugName} :- Morning: ${morningTabs} ${units}, Evening: ${eveningTabs} ${units}`\n    }\n\n    toOrderObj(id: number, name: string, units: string, am=0, pm=0, frequency=''): DrugInterface {\n        return {\n            'drug_inventory_id': id,\n            'equivalent_daily_dose': this.calculateEquivalentDosage(am, pm),\n            'start_date': this.date,\n            'auto_expire_date': this.calculateDateFromInterval(), \n            'units': units,\n            'instructions': this.getInstructions(name, am, pm, units),\n            'dose': this.calculateDosage(am, pm),\n            'frequency': frequency\n        }\n    }\n\n    async getReasonForRegimenSwitch() {\n        const reason = await AppEncounterService.getFirstValueText(this.patientID, 'Reason for ARV switch')\n        return reason ? reason : 'N/A'\n    }\n\n    async createDrugOrder(drugOrders: Array<DrugInterface>) {\n        return DrugOrderService.create({\n            'encounter_id': this.encounterID,\n            'drug_orders': drugOrders\n        })\n    }\n\n    async createHangingPillsObs(response: string) {\n        return this.saveValueTextObs('appointment type', response)\n    }\n\n    async createRegimenSwitchObs(reasonForSwitch: string): Promise<Observation> {\n        return this.saveValueTextObs('Reason for ARV switch', reasonForSwitch)\n    }\n}\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InformationHeader.vue?vue&type=style&index=0&id=22f18bd2&scoped=true&lang=css\""],"sourceRoot":""}