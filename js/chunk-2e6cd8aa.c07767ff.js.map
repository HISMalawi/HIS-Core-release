{"version":3,"sources":["webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/components/Keyboard/HisKbConfigurations.ts","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/utils/HisFormHelpers/MultiFieldDateHelper.ts","webpack:///./src/utils/HisFormHelpers/MonthOptions.ts","webpack:///./src/views/SessionDate.vue?d795","webpack:///./src/views/SessionDate.vue","webpack:///./src/views/SessionDate.vue?3885"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","defineComponent","name","components","TouchScreenForm","emits","data","props","type","Function","Boolean","default","String","Object","required","methods","formData","computedData","this","$emit","i","__exports__","EstimationFieldType","label","value","getYearField","id","showUnknown","primaryFunctions","push","helpText","appearInSummary","FieldType","TT_TEXT","config","customKeyboard","getMonthField","TT_SELECT","options","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","s","parseInt","getDefaultDate","form","field","datePart","defaultValue","date","split","year","month","day","d","HisDate","toStandardHisDisplayFormat","validateMinMax","computed","minDate","min","Date","maxDate","max","generateDateFields","fullDate","yearValue","monthValue","dayValue","dateIsEstimated","yearID","monthID","dayID","ageEstimateID","durationEstimateID","estimation","allowUnknown","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","f","includes","condition","buildHelpTextDate","part","parts","reduce","partValues","dpart","wl","undefined","join","init","updateHelpTextOnValue","proxyID","unload","v","toString","validation","c","StandardValidations","match","isNaN","minYear","getYear","summaryMapValue","summaryLabel","_","ref","computedValue","val","computeValue","beforeNext","keyboardActions","valueEstimateCondition","estimateType","conditions","estimationFieldType","every","ageEstimateRegex","dayjs","Service","getSessionDate","subtract","AGE_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","MONTH_ESTIMATE_FIELD","_component_his_standard_form","_resolveComponent","onSubmit","HisStandardForm","apiDate","created","getApiDate","footerBtns","slot","color","state","visible","isBDE","onClick","resetSessionDate","mounted","showBdeNotice","getCachedApiDate","sessionDate","infoActionSheet","action","redirect","Store","invalidate","toastSuccess","formatDate","toastWarning","patientId","$route","query","patient_dashboard_redirection_id","$router","back","session_date","setSessionDate","patientID","patient_id","nextTask"],"mappings":"gHAAA,wZAAO,IAAMA,EAAiB,CAC1B,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,OACX,CAAC,GAAK,OAAQ,KAELC,EAAgB,CACzB,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,OACX,CAAC,QAAU,IAAK,MAEPC,EAAwB,CACjC,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,OAAQ,IAAK,UAGLC,EAAmB,CAC5B,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAK,IAAK,KAGFC,EAAU,CACnB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,UACpC,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,GAAK,IAAK,KAGFC,EAAgB,CACzB,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,GAAK,IAAK,KAGFC,EAAkB,CAC3B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/B,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MACnC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrC,CAAC,KAAM,KAAM,OAGJC,EAAkB,CAC3B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGhCC,EAAY,CACrB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,IAAK,IAAK,QAGpCC,EAA4B,CACrC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEhCC,EAAoB,CAC7B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,UAG1CC,EAAkB,CAC3B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,W,oCC/EhD,gSAeaC,EAAiB,CAC1BR,OACA,CACI,CAAC,GAAI,YAIAS,EAAe,CACxBR,OACA,CACI,CAAC,YAIIS,EAAuB,CAChCT,OACA,CACI,CAAC,SAAU,aAINU,EAAwB,CACjCV,OACA,CACI,CAAC,OACD,CAAC,SAAU,aAINW,EAA6B,CACtCX,OACA,CACI,CAAC,YAIIY,EAAU,CACnBZ,OACA,CACI,CAAC,UAAW,UACZ,CAAC,SAAU,SAINa,EAAe,CACxBZ,OACA,CACI,CAAC,aAIIa,EAAS,CAClBZ,OACA,CACI,CAAC,MAAO,UACR,CAAC,SAAU,WACX,CAAC,GAAI,WAIAa,EAAS,CAClBZ,OACA,CACI,CAAC,GAAI,UACL,CAAC,OAAQ,OACT,CAAC,QAAS,aAOLa,EAAc,CACvB,CACIC,IAAK,MACLC,SAAUN,GAEd,CACIK,IAAK,OACLC,SAAUX,GAEd,CACIU,IAAK,MACLC,SAAUJ,GAEd,CACIG,IAAK,SACLC,SAAUH,K,kDCpGZ,SAAUI,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,OAAQC,yBAAcC,yBAAaC,qCAAyBR,EAAKS,UAAW,CAC1EC,OAAQV,EAAKU,OACbC,YAAaX,EAAKW,YAClBC,YAAaZ,EAAKY,YAClBC,sBAAuBb,EAAKa,sBAC5BC,WAAYd,EAAKe,SACjBA,SAAUf,EAAKgB,eACfC,UAAWjB,EAAKkB,SACf,KAAM,EAAG,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN3FC,+BAAgB,CAC3BC,KAAM,kBACNC,WAAY,CAAEC,wBACdC,MAAO,CACH,WACA,WAEJC,KAAM,iBAAO,CACTf,SAAU,sBAEdgB,MAAO,CACHT,eAAgB,CACZU,KAAMC,UAEVhB,YAAa,CACTe,KAAME,QACNC,SAAS,GAEbjB,YAAa,CACTc,KAAMI,QAEVpB,OAAQ,CACJgB,KAAMK,OACNC,UAAU,GAEdnB,sBAAuB,CACnBa,KAAMI,OACNE,UAAU,IAGlBC,QAAS,CACLlB,SADK,SACImB,EAAeC,GACpBC,KAAKC,MAAM,WAAYH,EAAUC,IAErCjB,QAJK,SAIGoB,GACJF,KAAKC,MAAM,UAAWC,O,qBCnClC,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASxC,KAErD,U,0GCGHyC,E,wJCVI,GACZ,CACIC,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,MACPC,MAAO,IAEX,CACID,MAAO,MACPC,MAAO,IAEX,CACID,MAAO,MACPC,MAAO,K,iFDRT,SAAUC,EAAaC,EAAYxB,GAA8B,IAAhByB,IAAgB,yDAC7DC,EAAmB,GAEzB,OADID,GAAaC,EAAiBC,KAAK,WAChC,CACHH,KACAI,SAAU,GAAF,OAAK5B,EAAL,SACR6B,gBAAiB,kBAAM,GACvBvB,KAAMwB,OAAUC,QAChBC,OAAQ,CACJC,eAAgB,CACZzE,OACA,CACIkE,EACA,CAAC,cAOf,SAAUQ,EAAcV,EAAYxB,GACtC,MAAO,CACHwB,KACAI,SAAU,GAAF,OAAK5B,EAAL,UACR6B,gBAAiB,kBAAM,GACvBvB,KAAMwB,OAAUK,UAChBC,QAAS,kBAAMC,IAIjB,SAAUC,EAAYd,EAAYxB,GACpC,MAAO,CACHwB,KACAI,SAAU,GAAF,OAAK5B,EAAL,QACRM,KAAMwB,OAAUS,gBAChBV,gBAAiB,kBAAM,IAIzB,SAAUW,EAA8BhB,EAAYxB,GACtD,MAAO,CACHwB,KACAI,SAAU,GAAF,OAAK5B,EAAL,qBACRM,KAAMwB,OAAUK,UAChBN,gBAAiB,kBAAM,GACvBO,QAAS,iBAAO,CACZ,CAAEf,MAAO,eAAgBC,MAAO,KAChC,CAAED,MAAO,gBAAiBC,MAAO,KACjC,CAAED,MAAO,gBAAiBC,MAAO,KACjC,CAAED,MAAO,gBAAiBC,MAAO,KACjC,CAAED,MAAO,mBAAoBC,MAAO,QAK1C,SAAUmB,EAAoBjB,EAAYxB,GAC5C,MAAO,CACHwB,KACAI,SAAU,GAAF,OAAK5B,EAAL,iBACRM,KAAMwB,OAAUY,UAChBb,gBAAiB,kBAAM,GACvBG,OAAQ,CACJW,OAAQxE,SAKpB,SAASyE,EAAkBC,GACvB,OAAOC,SAASD,GAAK,GAAd,WAAuBA,GAAMA,E,SAGzBE,E,oGAAf,WAA8BC,EAAWC,EAA2BC,GAApE,qGACQD,EAAME,aADd,iCAE2BF,EAAME,aAAaH,GAF9C,UAEcI,EAFd,QAGYA,EAHZ,mBAIuCA,EAAKC,MAAM,KAJlD,sBAImBC,EAJnB,KAIyBC,EAJzB,KAIgCC,EAJhC,UAKmBN,EALnB,OAMqB,SANrB,OAQqB,UARrB,QAUqB,QAVrB,iDAO2BI,GAAQ,IAPnC,iCAS2BR,SAASS,IAAU,IAT9C,iCAW2BT,SAASU,IAAQ,IAX5C,iCAeW,IAfX,4C,wBAkBA,SAASC,EAAEL,GACP,OAAOM,OAAQC,2BAA2BP,GAG9C,SAASQ,EAAeR,EAAcH,EAA2BD,EAAWa,GACxE,GAAIZ,EAAMa,QAAS,CACf,IAAMC,EAAMd,EAAMa,QAAQd,EAAMa,GAChC,GAAI,IAAIG,KAAKZ,GAAQ,IAAIY,KAAKD,GAC1B,MAAO,CAAC,GAAD,OAAIN,EAAEL,GAAN,yCAA4CK,EAAEM,KAG7D,GAAId,EAAMgB,QAAS,CACf,IAAMC,EAAMjB,EAAMgB,QAAQjB,EAAMa,GAChC,GAAIK,GAAO,IAAIF,KAAKZ,GAAQ,IAAIY,KAAKE,GACjC,MAAO,CAAC,GAAD,OAAIT,EAAEL,GAAN,yCAA4CK,EAAES,MAY3D,SAAUC,EAAmBlB,GAAqC,IAChEmB,EAAW,GACXC,EAAY,GACZC,EAAa,GACbC,EAAW,GACXC,GAAkB,EAEhBC,EAAS,QAAH,OAAWxB,EAAMzB,IACvBkD,EAAU,SAAH,OAAYzB,EAAMzB,IACzBmD,EAAQ,OAAH,OAAU1B,EAAMzB,IACrBoD,EAAgB,gBAAH,OAAmB3B,EAAMzB,IACtCqD,EAAqB,qBAAH,OAAwB5B,EAAMzB,IAEhD8B,EAAO/B,EAAakD,EAAQxB,EAAMrB,SAAUqB,EAAM6B,WAAWC,cAC7DxB,EAAQrB,EAAcwC,EAASzB,EAAMrB,UACrC4B,EAAMlB,EAAYqC,EAAO1B,EAAMrB,UAE/BoD,EAAcvC,EAAoBmC,EAAe3B,EAAMrB,UACvDqD,EAAmBzC,EAA8BqC,EAAoB5B,EAAMrB,UAE3EsD,EAAsE,mBAA1CjC,EAAM6B,WAAWK,sBAC5ClC,EAAM6B,WAAWK,qBAElBC,EAAoB,SAACC,GACvB,QAAIA,EAAEZ,IAAWY,EAAEZ,GAAQnD,OACnB,CAAC,WAAWgE,SAASD,EAAEZ,GAAQnD,WAIhC2B,EAAMsC,WAAYtC,EAAMsC,UAAUF,KAQvCG,EAAoB,SAAClE,EAAYmE,GACnC,IAAMC,EAAQ,CACV,CAAEpF,KAAM,OAAQgB,MAAO+C,EAAW5D,QAAS,QAC3C,CAAEH,KAAM,QAASgB,MAAOgD,EAAY7D,QAAS,MAC7C,CAAEH,KAAM,MAAOgB,MAAOiD,EAAU9D,QAAS,OAE7C,OAAOiF,EAAMC,QAAO,SAACC,EAAiBC,GAClC,IAAMC,EAAK,CAAC,UAAMC,EAAW,UAAW,IAcxC,OAbIN,IAASI,EAAMvF,KACXwF,EAAGR,SAAShE,GACZsE,EAAWjE,KAAKkE,EAAMpF,SAEtBmF,EAAWjE,KAAKL,GAGhBwE,EAAGR,SAASO,EAAMvE,OAClBsE,EAAWjE,KAAKkE,EAAMpF,SAEtBmF,EAAWjE,KAAKkE,EAAMvE,OAGvBsE,IACR,IAAII,KAAK,MAGU,oBAAf/C,EAAMgD,OAAqB3C,EAAK2C,KAAOhD,EAAMgD,MAGxD3C,EAAK4C,sBAAwB,SAAC9F,GAAD,gBAAkBkD,EAAK1B,SAAvB,aAAoC4D,EAAiB,OAACpF,QAAD,IAACA,OAAD,EAACA,EAAMiB,MAAO,QAAnE,MAE7BiC,EAAK6C,QAAUlD,EAAMzB,GAErB8B,EAAK8C,OAAS,SAACC,GAAD,OAAehC,EAAYgC,EAAE/E,MAAMgF,YAEjDhD,EAAKtB,OAAL,iCAAmBsB,EAAKtB,QAAWiB,EAAMjB,QAEzCsB,EAAKH,aAAe,SAACkC,GAAD,OAAYtC,EAAesC,EAAGpC,EAAO,SAEzDK,EAAKiC,UAAY,SAACF,GAAD,OAAYpC,EAAMsC,WAC7BtC,EAAMsC,UAAUF,IAGtB/B,EAAKiD,WAAa,SAACF,EAAWhB,EAAQmB,GAClC,GAAIvD,EAAMrC,UAAY6F,OAAoB7F,SAASyF,GAC/C,MAAO,CAAC,wBAEZ,IAAM/C,EAAO+C,EAAIA,EAAE/E,MAAQ,GAC3B,IAAK2B,EAAM6B,WAAWC,cACfzB,EAAKgD,WAAWI,MAAM,YACzB,MAAO,CAAC,kCAGZ,GAAIpD,IAAS,CAAC,WAAWgC,SAAShC,IAC3BqD,MAAMrD,IACNA,EAAO,KACV,MAAO,CAAC,gBAGZ,GAAIA,GAAiC,oBAAlBL,EAAMa,QAAwB,CAC7C,IAAM8C,EAAUlD,OAAQmD,QAAQ5D,EAAMa,QAAQuB,EAAGmB,IACjD,GAAI1D,SAASQ,GAAesD,EACxB,MAAO,CAAC,WAAD,OAAYtD,EAAZ,yCAAiDsD,IAIhE,GAAItD,GAAiC,oBAAlBL,EAAMgB,QAAwB,CAC7C,IAAMC,EAAMjB,EAAMgB,QAAQoB,EAAGmB,GAC7B,GAAItC,GAAOZ,EAAOI,OAAQmD,QAAQ3C,GAC9B,MAAO,CAAC,WAAD,OAAYZ,EAAZ,oCAA4CI,OAAQmD,QAAQ3C,KAI3E,OAAO,MAOXZ,EAAKwD,gBAAkB,iBAAO,CAC1BzF,MAAO4B,EAAM8D,cAAgB9D,EAAMrB,SACnCN,MAAO8C,EAAWX,EAAEW,GAAY,YAKpCd,EAAKzB,gBAAkB,SAACmF,EAAQC,GAAT,OAAyBA,IAAQhE,EAAMzB,IAO9D8B,EAAK4D,cAAgB,SAACC,GAClB,GAAI/C,EAAU,CACV,MAAwBA,EAASf,MAAM,KAAvC,sBAAUE,GAAV,WAAiBC,EAAjB,KAEA,OADAY,EAAW,GAAH,OAAM+C,EAAI7F,MAAV,YAAmBiC,EAAnB,YAA4BC,GAC7BP,EAAMmE,aAAahD,GAAU,GAExC,GAAI+C,GAAqB,YAAdA,EAAI7F,MAEX,OADA8C,EAAW,GACJnB,EAAMmE,aAAa,WAAW,IAK7C7D,EAAM2C,sBAAwB,SAAC9F,GAAD,gBAAkBmD,EAAM3B,SAAxB,aAAqC4D,EAAiB,OAACpF,QAAD,IAACA,OAAD,EAACA,EAAMiB,MAAO,SAApE,MAE9BkC,EAAM4C,QAAUlD,EAAMzB,GAEtB+B,EAAM6C,OAAS,SAACC,GAAD,OAAe/B,EAAa1B,EAAkByD,EAAE/E,MAAMgF,aAErE/C,EAAMgC,UAAY,SAACF,GAAD,OAAaD,EAAkBC,IAEjD9B,EAAMgD,WAAa,SAACF,GAAD,OAAeI,OAAoB7F,SAASyF,IAE/D9C,EAAMJ,aAAe,SAACkC,GAAD,OAAYtC,EAAesC,EAAGpC,EAAO,UAGtDiC,IACA3B,EAAMnB,QAAU,0CAAUC,GAAV,CAAwB,CAAEhB,MAAO,UAAWC,MAAO,eASvEiC,EAAM2D,cAAgB,SAACC,EAAa9B,GAEhC,GAAI,UAAG8B,EAAI7F,OAAQoF,MAAM,YAErB,OADAtC,EAAW,GAAH,OAAMiB,EAAEZ,GAAQnD,MAAhB,UACD2B,EAAMmE,aAAahD,GAAU,GAGxC,GAAIA,EAAU,CACV,MAAuBA,EAASf,MAAM,KAAtC,sBAAOC,EAAP,KAAgBE,GAAhB,WACMD,EAAQX,EAAkB,GAAD,OAAIuE,EAAI7F,QAEvC,OADA8C,EAAW,GAAH,OAAMd,EAAN,YAAcC,EAAd,YAAuBC,GACxBP,EAAMmE,aAAahD,GAAU,KAI5CZ,EAAI2C,QAAUlD,EAAMzB,GAEpBgC,EAAI0C,sBAAwB,SAAC9F,GAAD,gBAAkBoD,EAAI5B,SAAtB,aAAmC4D,EAAiB,OAACpF,QAAD,IAACA,OAAD,EAACA,EAAMiB,MAAO,OAAlE,MAE5BmC,EAAI+B,UAAY,SAACF,GAAD,OAAa,UAAGA,EAAEX,GAASpD,OAAQoF,MAAM,aAAetB,EAAkBC,IAE1F7B,EAAI+C,WAAc,SAACF,EAAWhB,EAAQmB,GAClC,OAAIC,OAAoB7F,SAASyF,GACtB,CAAC,6BAEZ7B,IAAkB,UAAG6B,EAAE/E,OAAQoF,MAAM,YAErCnC,EAAWC,EAAkB,KAAQ5B,EAAkB,GAAD,OAAIyD,EAAE/E,QAC5D8C,EAAW,GAAH,OAAMC,EAAN,YAAmBC,EAAnB,YAAiCC,GAClCX,EAAeQ,EAAUnB,EAAOoC,EAAGmB,KAG9ChD,EAAIL,aAAe,SAACkC,GAAD,OAAYtC,EAAesC,EAAGpC,EAAO,QAExDO,EAAI0D,cAAgB,WAChB,OAAOjE,EAAMmE,aAAahD,EAAUI,IAGxChB,EAAI4C,OAAS,SAAC3C,EAAQZ,EAAQwC,EAAQmB,GAC9BvD,EAAMmD,QAAQnD,EAAMmD,OAAO3C,EAAGZ,EAAGwC,EAAGmB,IAG5ChD,EAAI6D,WAAa,SAAChB,EAAQhB,GACtB,OAAQpC,EAAMoE,YAERpE,EAAMoE,WAAWjD,EAAUiB,IAGrC7B,EAAIxB,OAAS,CAGTsB,KAAM,SAAC+B,GAAD,OAAYA,EAAEZ,GAAQnD,OAC5BiC,MAAO,SAAC8B,GAAD,OAAYA,EAAEX,GAASpD,QAI7B4D,IAAoB1B,EAAIxB,OAAOsF,gBAAkB,IAEtD,IAAMC,EAAyB,SAAClC,EAAQmC,GACpC,IAAMC,EAAa,CACK,YAApBpC,EAAEZ,GAAQnD,OACV2B,EAAMsC,WAAYtC,EAAMsC,UAAUF,GAClCpC,EAAM6B,WAAW4C,sBAAwBF,GAE7C,OAAOC,EAAWE,MAAMnH,UA6D5B,OAzDAwE,EAAYmB,QAAUlD,EAAMzB,GAE5BwD,EAAYuB,WAAa,SAACF,EAAWhB,EAAQmB,GACzC,GAAIH,GAAKA,EAAE/E,MAAQ,IACf,MAAO,CAAC,4DAEZ,GAAIqF,MAAM7D,SAASuD,EAAE/E,MAAMgF,aACvB,MAAO,CAAC,+BAEZ,IAAMsB,EAAmB,qCACzB,IAAIvB,EAAE/E,MAAMgF,WAAWI,MAAMkB,GACzB,MAAO,CAAC,4BAEZ,IAAMtE,EAAOuE,IAAMC,OAAQC,kBACtBC,SAAS3B,EAAE/E,MAAiB,SAC5BgC,OAEL,OADAc,EAAW,GAAH,OAAMd,EAAN,UACDM,EAAeQ,EAAUnB,EAAOoC,EAAGmB,IAG9CxB,EAAYO,UAAY,SAACvC,GAAD,OAAeuE,EACnCvE,EAAM5B,EAAoB6G,qBAG9BjD,EAAYkC,cAAgB,kBAAMjE,EAAMmE,aAAahD,GAAU,IAE/DY,EAAYqC,WAAa,SAAChB,EAAQhB,GAC9B,OAAQpC,EAAMoE,YAERpE,EAAMoE,WAAWjD,EAAUiB,IAIrCJ,EAAiBkB,QAAUlD,EAAMzB,GAEjCyD,EAAiBsB,WAAa,SAACF,EAAWhB,EAAQmB,GAC9C,OAAIC,OAAoB7F,SAASyF,GACtB,CAAC,8BAEZjC,EAAWyD,IAAMC,OAAQC,kBACpBC,SAAS3B,EAAE/E,MAAiB,OAC5B4G,OAAOC,QACLvE,EAAeQ,EAAUnB,EAAOoC,EAAGmB,KAG9CvB,EAAiBM,UAAY,SAACvC,GAAD,OAAeuE,EACxCvE,EAAM5B,EAAoBgH,uBAG9BnD,EAAiBiC,cAAgB,kBAAMjE,EAAMmE,aAAahD,GAAU,IAEpEa,EAAiBoC,WAAa,SAACL,EAAQ3B,GACnC,OAAQpC,EAAMoE,YAERpE,EAAMoE,WAAWjD,EAAUiB,IAG9B,CACH/B,EACAC,EACAC,EACAwB,EACAC,IAxbR,SAAY7D,GACRA,6CACAA,yDAFJ,CAAYA,MAAmB,M,yDERzB,SAAUzC,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMoJ,EAA+BC,8BAAkB,qBAEvD,OAAQpJ,yBAAcC,yBAAakJ,EAA8B,CAC/D9I,aAAa,EACbD,OAAQV,EAAKU,OACbI,WAAYd,EAAK2J,UAChB,KAAM,EAAG,CAAC,SAAU,e,4HCGVxI,+BAAgB,CAC3BE,WAAY,CAAEuI,wBACdpI,KAAM,iBAAO,CACTqI,QAAS,GACTnJ,OAAQ,KAENoJ,QANqB,WAMd,wKACYZ,OAAQa,aADpB,OACT,EAAKF,QADI,OAET,EAAKnJ,OAAS6E,eAAmB,CAC7B3C,GAAI,eACJI,SAAU,eACVhB,UAAU,EACVkD,QAAS,iBAAM,cACfG,QAAS,kBAAM,EAAKwE,SACpB3D,WAAY,CACRC,cAAc,GAElBqC,aAAc,SAAChE,GAAD,OAAkBA,GAChCpB,OAAQ,CACJ4G,WAAY,CACR,CACI5I,KAAM,QACN6I,KAAM,MACNC,MAAO,UACPC,MAAO,CACHC,QAAS,CACLvI,QAAS,kBAAMqH,OAAQmB,WAG/BC,QAAS,WAAF,8CAAE,8GACC,EAAKC,mBADN,2CAAF,qDAAE,OAMtB,IA7BM,8CA+BPC,QArCqB,WAqCd,wKACH,EAAKC,gBADF,8CAGbxI,QAAS,CACCwI,cADD,WACc,qKACVvB,OAAQmB,QADE,wDAETR,EAAU/E,OAAQC,2BACpBmE,OAAQwB,oBAAsB,IAE5BC,EAAc7F,OAAQC,2BACxBmE,OAAQC,kBANG,SAQMyB,eACjB,aADgC,iHAGGf,EAHH,yBAInBc,GACb,CACI,CAAEvJ,KAAM,aAAc6I,KAAM,QAASC,MAAO,WAC5C,CAAE9I,KAAM,gBAAiB6I,KAAM,MAAOC,MAAO,UAC7C,CAAE9I,KAAM,WAAY6I,KAAM,SAhBnB,UAQTY,EARS,OAoBA,eAAXA,EApBW,kCAqBE,EAAKN,mBArBP,iDAuBA,kBAAXM,GACA,EAAKC,WAxBM,+CA2BbP,iBA5BD,WA4BiB,iLAERrB,OAAQqB,mBAFA,OAGdQ,OAAMC,WAAW,aACjBC,eAAa,kCAAD,OAAmC,EAAKC,WAAW,EAAKrB,WACpE,EAAKiB,WALS,mDAOdK,eAAa,GAAD,cAPE,4DAUtBL,SAtCK,WAuCD,IAAMM,EAAYhJ,KAAKiJ,OAAOC,MAAMC,iCACpCH,EACMhJ,KAAKoJ,QAAQzI,KAAb,6BAAwCqI,IACxChJ,KAAKoJ,QAAQC,QAEjB9B,SA5CD,SA4CUvB,EAAQjG,GAAiB,2KAC9BqC,EAAOrC,EAAauJ,aADU,kBAG1BxC,OAAQyC,eAAenH,GAHG,OAIhCyG,eAAa,8BAAD,OAA+B,EAAKC,WAAW1G,KACrDoH,EAL0B,UAKd,EAAKP,cALS,iBAKd,EAAaC,aALC,aAKd,EAAoBO,WAClCD,EACAE,eAASF,EAAW,EAAKJ,SAEzB,EAAKV,WATuB,mDAYhCK,eAAa,GAAD,cAZoB,4DAexCD,WA3DK,SA2DM1G,GACP,OAAOM,OAAQC,2BAA2BP,O,qBC3GtD,MAAMjC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASxC,KAErD","file":"js/chunk-2e6cd8aa.c07767ff.js","sourcesContent":["export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","/**\n * Default keyboard configurations.\n * \n * Configuration consists of one or two keyboard layouts\n * to be displayed at once.\n */\n\nimport {\n    NUMBER_PAD_LO,\n    MONTHLY_DAYS_LO,\n    ALPHABETICAL_LO,\n    QWERTY_LO,\n    SYMBOLS,\n} from \"@/components/Keyboard/KbLayouts\";\n\nexport const SYMBOLS_CONFIG = [\n    SYMBOLS,\n    [\n        ['', 'Delete']\n    ]\n]\n\nexport const NUMBERS_ONLY = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS_WITH_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITH_ESTIMATE = [\n    NUMBER_PAD_LO,\n    [\n        ['N/A'],\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITHOUT_NA_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS = [\n    NUMBER_PAD_LO,\n    [\n        ['Unknown', 'Delete'],\n        ['Qwerty', 'A-Z'],\n    ]\n]\n\nexport const MONTHLY_DAYS = [\n    MONTHLY_DAYS_LO,\n    [\n        ['Unknown']\n    ]\n]\n\nexport const A_TO_Z = [\n    ALPHABETICAL_LO,\n    [\n        ['0-9', 'Delete'],\n        ['Qwerty', 'Unknown'],\n        ['', 'Space']\n    ]\n]\n\nexport const QWERTY = [\n    QWERTY_LO,\n    [\n        ['', 'Delete'],\n        ['?123', '0-9'],\n        ['Space', 'Unknown']\n    ]\n]\n\n/**\n * Navigation map for switching between different keyboard layouts\n */\nexport const KEY_BTN_NAV = [\n    {\n        btn: '0-9',\n        keyboard: NUMBERS\n    },\n    {\n        btn: '?123',\n        keyboard: SYMBOLS_CONFIG\n    },\n    {   \n        btn: 'A-Z',\n        keyboard: A_TO_Z \n    },\n    {\n        btn: 'Qwerty',\n        keyboard: QWERTY\n    }\n]\n","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport MonthOptions from \"@/utils/HisFormHelpers/MonthOptions\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport HisDate, { STANDARD_DATE_FORMAT } from \"@/utils/Date\"\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\"\nimport { NUMBER_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport { NUMBERS_WITHOUT_NA_UNKNOWN } from '../../components/Keyboard/HisKbConfigurations';\nimport dayjs from \"dayjs\"\nimport { Service } from \"@/services/service\"\n\nexport enum EstimationFieldType {\n    AGE_ESTIMATE_FIELD = \"age-estimate-field\",\n    MONTH_ESTIMATE_FIELD = \"month-period-estimate-field\"\n}\n\nexport interface EstimationInterface {\n    estimationFieldType?: EstimationFieldType;\n    allowUnknown: boolean; \n    allowUnknownMonthDay?: boolean;\n}\n\nexport interface DateFieldInterface {\n    id: string;\n    helpText: string;\n    init?: (f: any, c: any) => boolean | Promise<boolean>;\n    summaryLabel?: string;\n    condition?: Function;\n    required?: boolean;\n    defaultValue?: Function;\n    beforeNext?: Function;\n    minDate?(formData: any, computeForm: any): string;\n    maxDate?(formData: any, computeForm: any): string | null;\n    unload?(data: any, state: string, formData: any,  computeForm: any): void; \n    computeValue: Function;\n    appearInSummary?: Function;\n    estimation: EstimationInterface;\n    config?: any;\n}\n\nexport function getYearField(id: string, name: string, showUnknown=true): Field {\n    const primaryFunctions = []\n    if (showUnknown) primaryFunctions.push('UNKNOWN')\n    return {\n        id,\n        helpText: `${name} Year`,\n        appearInSummary: () => false,\n        type: FieldType.TT_TEXT,\n        config: {\n            customKeyboard: [\n                NUMBER_PAD_LO,\n                [\n                    primaryFunctions,\n                    ['DELETE']\n                ]\n            ]\n        }\n    }\n}\n\nexport function getMonthField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Month`,\n        appearInSummary: () => false,\n        type: FieldType.TT_SELECT,\n        options: () => MonthOptions\n    }\n}\n\nexport function getDayField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Day`,\n        type: FieldType.TT_MONTHLY_DAYS,\n        appearInSummary: () => false\n    }\n}\n\nexport function getMonthDurationEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Estimated period`,\n        type: FieldType.TT_SELECT,\n        appearInSummary: () => false,\n        options: () => ([\n            { label: '6 months ago', value: 180 },\n            { label: '12 months ago', value: 365 },\n            { label: '18 months ago', value: 540 },\n            { label: '24 months ago', value: 730 },\n            { label: 'Over 2 years ago', value: 730 }\n        ])\n    }\n}\n\nexport function getAgeEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Age Estimate`,\n        type: FieldType.TT_NUMBER,\n        appearInSummary: () => false,\n        config: {\n            keypad: NUMBERS_WITHOUT_NA_UNKNOWN\n        }\n    }\n}\n\nfunction appendLeadingZero(s: string) {\n    return parseInt(s) < 10 ? `0${s}` : s\n}\n\nasync function getDefaultDate(form: any, field: DateFieldInterface, datePart: 'Year' | 'Month' | 'Day') {\n    if (field.defaultValue) {\n        const date = await field.defaultValue(form)\n        if (date) {\n            const [year, month, day] = date.split('-')\n            switch(datePart) {\n                case 'Year':\n                    return year || ''\n                case 'Month':\n                    return parseInt(month) || ''\n                case 'Day':\n                    return parseInt(day) || ''    \n            }\n        }\n    }\n    return ''\n}\n\nfunction d(date: string) {\n    return HisDate.toStandardHisDisplayFormat(date)\n}\n\nfunction validateMinMax(date: string, field: DateFieldInterface, form: any, computed: any) {\n    if (field.minDate) {\n        const min = field.minDate(form, computed)\n        if (new Date(date) < new Date(min)) {\n            return [`${d(date)} is less than minimum date of ${d(min)}`]\n        }\n    }\n    if (field.maxDate) {\n        const max = field.maxDate(form, computed)\n        if (max && new Date(date) > new Date(max)) {\n            return [`${d(date)} is greater than max date of  ${d(max)}`]\n        }\n    }\n}\n/**\n * This Jungle of code generates Fields of Year, Month and Day.\n * \n * if you're brave please refactor this. Just dont break anything Ok!\n * @param field \n * @param refDate \n * @returns \n */\nexport function generateDateFields(field: DateFieldInterface, refDate=''): Array<Field> {\n    let fullDate = ''\n    let yearValue = ''\n    let monthValue = ''\n    let dayValue = ''\n    let dateIsEstimated = false\n\n    const yearID = `year_${field.id}`\n    const monthID = `month_${field.id}`\n    const dayID = `day_${field.id}`\n    const ageEstimateID = `age_estimate_${field.id}`\n    const durationEstimateID = `duration_estimate_${field.id}`\n\n    const year = getYearField(yearID, field.helpText, field.estimation.allowUnknown)\n    const month = getMonthField(monthID, field.helpText)\n    const day = getDayField(dayID, field.helpText)\n\n    const ageEstimate = getAgeEstimateField(ageEstimateID, field.helpText)\n    const durationEstimate = getMonthDurationEstimateField(durationEstimateID, field.helpText)\n\n    const estimateMonthOrDay = typeof field.estimation.allowUnknownMonthDay === 'boolean'\n        && field.estimation.allowUnknownMonthDay\n\n    const datePartCondition = (f: any) => {\n        if (f[yearID] && f[yearID].value) {\n            if (['Unknown'].includes(f[yearID].value)) {\n                return false\n            }\n        }\n        return field.condition ? field.condition(f) : true\n    }\n    /**\n     * Generates fulldate based on current date part, it's value and previously recorded date parts.\n     * @param value\n     * @param part\n     * @returns\n     */\n    const buildHelpTextDate = (value: any, part: 'month' | 'year' | 'day') => {\n        const parts = [\n            { type: 'year', value: yearValue, default: 'YYYY' },\n            { type: 'month', value: monthValue, default: 'MM' },\n            { type: 'day', value: dayValue, default: 'DD' },\n        ]\n        return parts.reduce((partValues: any, dpart: any) => {\n            const wl = [null, undefined, 'Unknown', '']\n            if (part === dpart.type) {\n                if (wl.includes(value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(value)\n                }\n            } else {\n                if (wl.includes(dpart.value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(dpart.value)\n                }\n            }\n            return partValues\n        }, []).join('-')\n    }\n\n    if (typeof field.init === 'function') year.init = field.init\n    \n    // YEAR CONFIG\n    year.updateHelpTextOnValue = (data: any) => `${year.helpText} (${buildHelpTextDate(data?.label, 'year')})`\n\n    year.proxyID = field.id\n\n    year.unload = (v: Option) => yearValue = v.value.toString()\n \n    year.config = { ...year.config, ...field.config }\n\n    year.defaultValue = (f: any) => getDefaultDate(f, field, 'Year')\n\n    year.condition = (f: any) => field.condition \n        ? field.condition(f) \n        : true\n\n    year.validation = (v: Option, f: any, c: any) => {\n        if (field.required && StandardValidations.required(v)) {\n            return ['Year cannot be empty']\n        }\n        const year = v ? v.value : ''\n        if (!field.estimation.allowUnknown \n            && year.toString().match(/unknown/i)) {\n            return ['Value unknown is not permitted']\n        }\n    \n        if (year && !['Unknown'].includes(year as string)\n            && isNaN(year as number)\n            || year < 1900) {\n            return ['Invalid Year']\n        }\n\n        if (year && typeof field.minDate === 'function') {\n            const minYear = HisDate.getYear(field.minDate(f, c)) \n            if (parseInt(year as any) < minYear) {\n                return [`Year of ${year} is less than Minimum year of ${minYear}`]\n            }\n        }\n\n        if (year && typeof field.maxDate === 'function') {\n            const max = field.maxDate(f, c)\n            if (max && year > HisDate.getYear(max)) {\n                return [`Year of ${year} exceeds Maximum year of ${HisDate.getYear(max)}`]\n            }\n        }\n\n        return null\n    }\n    /**\n     * Year Proxy field will be our reference point of \n     * how data should appear on the summary\n     * @returns \n     */\n    year.summaryMapValue = () => ({\n        label: field.summaryLabel || field.helpText, \n        value: fullDate ? d(fullDate) : 'Unknown'\n    })\n\n    // To avoid the year from appearing on the summary, \n    // match the ref against the proxyID itself\n    year.appearInSummary = (_: any, ref: string) => ref === field.id\n\n    /**\n     * This helps to keep computeValue of the dateProxy up-to-date when year changes\n     * @param val \n     * @returns \n     */\n    year.computedValue = (val: Option) => {\n        if (fullDate) {\n            const [_, month, day] = fullDate.split('-')\n            fullDate = `${val.value}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n        if (val && val.value === 'Unknown') {\n            fullDate = ''\n            return field.computeValue('Unknown', false)\n        }\n    }\n\n    // MONTH CONFIG\n    month.updateHelpTextOnValue = (data: any) => `${month.helpText} (${buildHelpTextDate(data?.label, 'month')})`\n\n    month.proxyID = field.id\n\n    month.unload = (v: Option) => monthValue = appendLeadingZero(v.value.toString())\n\n    month.condition = (f: any) =>  datePartCondition(f)\n\n    month.validation = (v: Option) => StandardValidations.required(v)\n\n    month.defaultValue = (f: any) => getDefaultDate(f, field, 'Month')\n\n    // Add Unknown value to trigger default estimated Month\n    if (estimateMonthOrDay) {\n        month.options = () => [...MonthOptions, { label: 'Unknown', value: 'Unknown'}]\n    }\n\n    /**\n     *\n     * This helps to keep compute value up to date when month changes\n     * @param val\n     * @returns\n     */\n    month.computedValue = (val: Option, f: any) => {\n        // Estimate Month and Day when Month Value is Unknown\n        if (`${val.value}`.match(/unknown/i)) {\n            fullDate = `${f[yearID].value}-07-15`\n            return field.computeValue(fullDate, true)\n        }\n        // Default date behaviour\n        if (fullDate) {\n            const [year, _, day] = fullDate.split('-')\n            const month = appendLeadingZero(`${val.value}`)\n            fullDate = `${year}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n    }\n    // DAY CONFIG\n    day.proxyID = field.id\n\n    day.updateHelpTextOnValue = (data: any) => `${day.helpText} (${buildHelpTextDate(data?.label, 'day')})`\n\n    day.condition = (f: any) => !`${f[monthID].value}`.match(/unknown/i) && datePartCondition(f) \n\n    day.validation =  (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Day is required for date']\n        }\n        dateIsEstimated = `${v.value}`.match(/unknown/i) ? true : false\n        // Use 15 as default value if day is estimated\n        dayValue = dateIsEstimated ? '15' :  appendLeadingZero(`${v.value}`)\n        fullDate = `${yearValue}-${monthValue}-${dayValue}`\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    day.defaultValue = (f: any) => getDefaultDate(f, field, 'Day')\n\n    day.computedValue = () => {\n        return field.computeValue(fullDate, dateIsEstimated)\n    }\n\n    day.unload = (d: any, s: any, f: any, c: any) => {\n        if (field.unload) field.unload(d, s, f, c)\n    }\n\n    day.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    day.config = { \n        // Monthly days shown on the Day component depends on this configuration\n        // to show approprite days based on specific year and month calendar\n        year: (f: any) => f[yearID].value,\n        month: (f: any) => f[monthID].value\n    }\n    // If not configured to do estimates, dont show Unknown Button which appears by default\n    // on MonthlyDay component.\n    if (!estimateMonthOrDay) day.config.keyboardActions = []\n\n    const valueEstimateCondition = (f: any, estimateType: EstimationFieldType) => {\n        const conditions = [\n            f[yearID].value === 'Unknown',\n            field.condition ? field.condition(f) : true,\n            field.estimation.estimationFieldType === estimateType\n        ]\n        return conditions.every(Boolean)\n    }\n\n    // AGE ESTIMATE CONFIG\n    ageEstimate.proxyID = field.id\n\n    ageEstimate.validation = (v: Option, f: any, c: any) => {\n        if (v && v.value > 300) {\n            return ['Age estimate is too high and exceeding hard limit of 300']\n        }\n        if (isNaN(parseInt(v.value.toString()))) {\n            return ['Please enter a valid number']\n        }\n        const ageEstimateRegex = /^(12[0-7]|1[01][0-9]|[1-9]?[0-9])$/\n        if(!v.value.toString().match(ageEstimateRegex) ){\n            return ['Not a valid age estimate'] \n        }\n        const year = dayjs(Service.getSessionDate())\n            .subtract(v.value as number, 'years')\n            .year()\n        fullDate = `${year}-07-15`\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    ageEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.AGE_ESTIMATE_FIELD\n    ) \n\n    ageEstimate.computedValue = () => field.computeValue(fullDate, true)\n\n    ageEstimate.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    // DURATION ESTIMATE\n    durationEstimate.proxyID = field.id\n\n    durationEstimate.validation = (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Please select an estimate']\n        }\n        fullDate = dayjs(Service.getSessionDate())\n            .subtract(v.value as number, 'day')\n            .format(STANDARD_DATE_FORMAT)\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    durationEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.MONTH_ESTIMATE_FIELD\n    )\n\n    durationEstimate.computedValue = () => field.computeValue(fullDate, true)\n\n    durationEstimate.beforeNext = (_: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    return [\n        year,\n        month,\n        day,\n        ageEstimate,\n        durationEstimate\n    ]\n}\n","export default ([\n    {\n        label: 'Jan',\n        value: 1\n    },\n    {\n        label: 'Feb',\n        value: 2\n    },\n    {\n        label: 'Mar',\n        value: 3\n    },\n    {\n        label: 'Apr',\n        value: 4\n    },\n    {\n        label: 'May',\n        value: 5\n    },\n    {\n        label: 'Jun',\n        value: 6\n    },\n    {\n        label: 'Jul',\n        value: 7\n    },\n    {\n        label: 'Aug',\n        value: 8\n    },\n    {\n        label: 'Sep',\n        value: 9\n    },\n    {\n        label: 'Oct',\n        value: 10\n    },\n    {\n        label: 'Nov',\n        value: 11\n    },\n    {\n        label: 'Dec',\n        value: 12\n    }\n])","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    skipSummary: true,\n    fields: _ctx.fields,\n    onOnFinish: _ctx.onSubmit\n  }, null, 8, [\"fields\", \"onOnFinish\"]))\n}","\nimport { defineComponent } from 'vue'\nimport { Field } from \"@/components/Forms/FieldInterface\"\nimport { Service } from \"@/services/service\"\nimport { toastWarning, toastSuccess} from \"@/utils/Alerts\"\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport HisDate from \"@/utils/Date\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { infoActionSheet } from \"@/utils/ActionSheets\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        apiDate: '' as string,\n        fields: [] as Array<Field>,\n    }),\n    async created(){\n        this.apiDate = await Service.getApiDate()\n        this.fields = generateDateFields({\n            id: 'session_date',\n            helpText: 'Session Date',\n            required: true,\n            minDate: () => '2000-01-01',\n            maxDate: () => this.apiDate,\n            estimation: {\n                allowUnknown: false\n            },\n            computeValue: (date: string) => date,\n            config: {\n                footerBtns: [\n                    {\n                        name: 'Reset',\n                        slot: 'end',\n                        color: 'success',\n                        state: {\n                            visible: {\n                                default: () => Service.isBDE() \n                            }\n                        },\n                        onClick: async () => {\n                            await this.resetSessionDate()\n                        }\n                    }\n                ]\n            }\n        }, '')\n    },\n    async mounted() {\n        await this.showBdeNotice()\n    },\n    methods: {\n        async showBdeNotice() {\n            if (!Service.isBDE()) return\n            const apiDate = HisDate.toStandardHisDisplayFormat(\n                Service.getCachedApiDate() || ''\n            )\n            const sessionDate = HisDate.toStandardHisDisplayFormat(\n                Service.getSessionDate()\n            )\n            const action = await infoActionSheet(\n                'BDE Notice',\n                `The system is currently in Back Data Entry Mode(BDE). \\\n                Do you wish to reset the date to ${apiDate}?`,\n                `BDE Date: ${sessionDate}`,\n                [\n                    { name: 'Reset Date', slot: 'start', color: 'success'},\n                    { name: 'Keep BDE Date', slot: 'end', color: 'danger'},\n                    { name: 'New date', slot: 'end'}\n                ],\n            )\n\n            if (action === 'Reset Date') {\n                return await this.resetSessionDate()\n            }\n            if (action === 'Keep BDE Date') {\n                this.redirect()\n            }\n        },\n        async resetSessionDate() {\n            try {\n                await Service.resetSessionDate()\n                Store.invalidate('PROVIDERS')\n                toastSuccess(`Session date has been reset to ${this.formatDate(this.apiDate)}`)\n                this.redirect()\n            } catch (e) {\n                toastWarning(`${e}`)\n            }\n        },\n        redirect() {\n            const patientId = this.$route.query.patient_dashboard_redirection_id\n            patientId \n                ? this.$router.push(`/patient/dashboard/${patientId}`)\n                : this.$router.back()\n        },\n        async onSubmit(_: any, computedData: any) {\n            const date = computedData.session_date\n            try {\n                await Service.setSessionDate(date)\n                toastSuccess(`Successfully Back dated to ${this.formatDate(date)}`)\n                const patientID = this.$route?.query?.patient_id as any\n                if (patientID) {\n                    nextTask(patientID, this.$router)\n                } else {\n                    this.redirect()\n                }\n            } catch(e) {\n                toastWarning(`${e}`)\n            }\n        },\n        formatDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        }\n    }\n})\n","import { render } from \"./SessionDate.vue?vue&type=template&id=5affc0d2&ts=true\"\nimport script from \"./SessionDate.vue?vue&type=script&lang=ts\"\nexport * from \"./SessionDate.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}