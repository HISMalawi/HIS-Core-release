{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/components/DataViews/actionsheet/RadioActionSheet.vue","webpack:///./node_modules/eslint-loader/index.js","webpack:///./src/components/DataViews/actionsheet/InfoListActionSheet.vue?8d36","webpack:///./src/components/DataViews/actionsheet/InfoActionSheet.vue?afe0","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/DataViews/actionsheet/TableActionSheet.vue","webpack:///./src/components/DataViews/actionsheet/InfoActionSheet.vue","webpack:///./src/components/DataViews/actionsheet/InfoListActionSheet.vue","webpack:///./src/views/PatientRegistration.vue","webpack:///./src/components/DataViews/actionsheet/RadioActionSheet.vue?c992"],"names":["_withId","_withScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_component_action_header","_resolveComponent","_component_ion_radio","_component_ion_label","_component_ion_item","_component_ion_radio_group","_component_ion_list","_component_ion_content","_component_action_footer","_openBlock","_createBlock","_Fragment","_createVNode","title","subtitle","color","class","default","value","activeLabel","_renderList","list","label","index","onClick","$event","onclick","key","slot","_createTextVNode","_toDisplayString","_","buttons","defineComponent","components","IonList","IonItem","IonContent","IonRadio","IonRadioGroup","mixins","ActionSheetMixin","data","props","type","Object","required","methods","computed","actionButtons","map","b","role","match","modalController","dismiss","action","name","toastWarning","selection","__exports__","PersonAttributeService","Service","constructor","attributes","postJson","PatientRegistrationService","personId","getPersonID","setPersonID","personID","person","personAttributes","createPerson","createPersonAttributes","patient","createPatient","printPatient","updatePerson","PersonService","update","create","person_id","ProgramService","PatientPrintoutService","printNidLbl","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","Function","Boolean","String","formData","computedData","$emit","i","_component_his_table","_withCtx","columns","rowColors","rows","HisTable","_pushScopeId","_hoisted_1","_popScopeId","bodyTitle","innerHTML","bodyText","item","Array","sanitizeModal","detectDuplicateModal","retryCount","sleep","setTimeout","modals","document","getElementsByClassName","length","modal","headers","getElementsByTagName","remove","content","footer","parentElement","async","tableActionSheet","component","TableSheet","backdropDismiss","cssClass","componentProps","present","onDidDismiss","listActionSheet","ListSheet","infoActionSheet","InfoSheet","optionsActionSheet","size","RadioSheet","_component_his_standard_form","_component_ion_page","fieldComponent","HisStandardForm","IonPage","app","App","getActiveApp","ddeInstance","ddeDocID","ddeIsReassign","currentAddressAttributes","homeAddressAttributes","hasIncompleteData","editPersonData","editPerson","personAttribute","isMilitarySite","presets","registrationSummary","form","ddeEnabled","watch","query","this","PatientDemographicsExchangeService","edit_person","dde_reassign","doc_id","setPatientID","person_attribute","initEditMode","getFields","immediate","deep","push","personIndexField","givenNameField","familyNameField","genderField","searchResultField","concat","dobFields","homeRegionField","homeDistrictField","homeTAField","homeVillageField","currentRegionField","currentDistrictField","currentTAField","currentVillage","landmarkFields","cellPhoneField","patientTypeField","facilityLocationField","occupationField","regimentField","dateJoinedMilitaryFields","rankField","relationshipField","possibleDuplicatesField","patientRegistrationSummary","isEditMode","Store","get","patientID","parseInt","ancestryDistrict","ancestryTA","ancestryVillage","currentDistrict","currentTA","getAddresses","getGivenName","getFamilyName","getGender","getBirthdate","getPhoneNumber","getClosestLandmark","PersonField","resolvePerson","nationalIDStatus","appendNationalIDData","resolvePersonAttributes","registration","Patientservice","registerPatient","set","updateMWNationalId","malawiNationalID","onRegisterPatient","exit","$router","$route","relationship","nextTask","assign","given_name","family_name","gender","birthdate","attr","invalidate","back","editConditionCheck","includes","getDocID","getNationalID","assignNpid","printNationalID","delayPromise","e","toastDanger","getID","values","filter","d","isPlainObject","mapToOption","listOptions","getGivenNameField","condition","defaultValue","getFamilyNameField","IS_ANC_APP","applicationName","IS_CXCA","getGenderField","requireNext","defaultOutput","defaultComputedOutput","beforeNext","newGender","oldGender","dobConfig","getDobConfig","sdate","getSessionDate","childBearingAgeInYrs","maxDate","dayjs","subtract","format","STANDARD_DATE_FORMAT","generateDateFields","region","getHomeRegionField","district","getHomeDistrictField","homeTA","getHomeTaField","home_region","homeVillage","getHomeVillageField","currentRegion","getCurrentRegionField","getCurrentDistrictField","getCurrentTAfield","current_region","getCurrentVillageField","cellPhone","getCellNumberField","cell_phone_number","facility","getFacilityLocationField","patient_type","landmarks","getLandmarkFields","id","helpText","FieldType","TT_SELECT","computedValue","val","validation","Validation","options","PatientTypeService","getPatientTypes","init","GLOBAL_PROP","militarySiteEnabled","TT_TEXT","occupation","minDate","HisDate","estimateDateFromAge","WorkflowService","estimation","allowUnknown","computeValue","date","OPD","Registration","TT_PERSON_RESULT_VIEW","dynamicHelpText","appearInSummary","payload","patients","searchDemographics","itemData","getPersonAttributeOptions","other","search","config","hiddenFooterBtns","footerBtns","state","disabled","onValue","isEmpty","results","createdPerson","duplicatePatients","TT_PERSON_MATCH_VIEW","c","checkPotentialDuplicates","toDate","toStandardHisDisplayFormat","score","patient_id","newPerson","foundPerson","comparisons","home_district","home_traditional_authority","visible","f","possible_duplicates","TT_TABLE_VIEWER","editButton","attribute","home_village","current_district","current_traditional_authority","landmark","emptySets","indexes","forEach","r","isValueEmpty","onload","reassignNpid","printNpid","confirmPatient","TT_SUMMARY","buildRegistrationSummary","keys","replace","m","toUpperCase","x","undefined","nationalIDData"],"mappings":"2JACA,MAAMA,EAAuBC,yBAAa,mBAE7BC,EAAsBF,GAAQ,SAAgBG,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC9F,MAAMC,EAA2BC,8BAAkB,iBAC7CC,EAAuBD,8BAAkB,aACzCE,EAAuBF,8BAAkB,aACzCG,EAAsBH,8BAAkB,YACxCI,EAA6BJ,8BAAkB,mBAC/CK,EAAsBL,8BAAkB,YACxCM,EAAyBN,8BAAkB,eAC3CO,EAA2BP,8BAAkB,iBAEnD,OAAQQ,yBAAcC,yBAAaC,cAAW,KAAM,CAClDC,yBAAaZ,EAA0B,CACrCa,MAAOnB,EAAKmB,MACZC,SAAUpB,EAAKoB,SACfC,MAAOrB,EAAKqB,OACX,KAAM,EAAG,CAAC,QAAS,WAAY,UAClCH,yBAAaL,EAAwB,CAAES,MAAO,mBAAqB,CACjEC,QAAS1B,EAAQ,IAAM,CACrBqB,yBAAaN,EAAqB,KAAM,CACtCW,QAAS1B,EAAQ,IAAM,CACrBqB,yBAAaP,EAA4B,CAAEa,MAAOxB,EAAKyB,aAAe,CACpEF,QAAS1B,EAAQ,IAAM,EACpBkB,wBAAW,GAAOC,yBAAaC,cAAW,KAAMS,wBAAY1B,EAAK2B,KAAM,CAACC,EAAOC,KACtEd,yBAAcC,yBAAaN,EAAqB,CACtDY,MAAO,cACPQ,QAASC,GAAW/B,EAAKgC,QAAQJ,GACjCK,IAAKJ,GACJ,CACDN,QAAS1B,EAAQ,IAAM,CACrBqB,yBAAaV,EAAsB,CACjC0B,KAAM,QACNV,MAAOI,GACN,KAAM,EAAG,CAAC,UACbV,yBAAaT,EAAsB,KAAM,CACvCc,QAAS1B,EAAQ,IAAM,CACrBsC,6BAAiBC,6BAAiBR,GAAQ,KAE5CS,EAAG,GACF,QAELA,EAAG,GACF,KAAM,CAAC,cACR,QAENA,EAAG,GACF,EAAG,CAAC,YAETA,EAAG,MAGPA,EAAG,IAELnB,yBAAaJ,EAA0B,CAAEwB,QAAStC,EAAKsC,SAAW,KAAM,EAAG,CAAC,aAC3E,O,wCC1CUC,+BAAgB,CAC3BC,WAAY,CAAEC,eAASC,eAASC,kBAChCC,gBACAC,sBACAC,OAAQ,CAACC,QACTC,KAAM,MACFvB,YAAa,KAEjBwB,MAAO,CACHtB,KAAM,CACFuB,KAAMC,OACNC,UAAU,IAGlBC,QAAS,CACLrB,QAAQJ,GACJ,KAAKH,YAAcG,IAG3B0B,SAAU,CACNhB,UACI,OAAO,KAAKiB,cAAcC,IAAKC,IAAD,IACvBA,EACH3B,QAAS,SACD2B,EAAEC,MAAQD,EAAEC,KAAKC,MAAM,YAChBC,OAAgBC,QAAQ,CAAEC,OAAQL,EAAEM,OAE3CN,EAAEC,MAAQD,EAAEC,KAAKC,MAAM,aAAe,KAAKlC,YACpCuC,eAAa,+CAElBJ,OAAgBC,QAAQ,CAC1BI,UAAW,KAAKxC,YAAaqC,OAAQL,EAAEM,c,iCCtC/D,MAAMG,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAE1E,U,8GCDT,MAAOC,UAA+BC,OACxCC,cACI,QAGS,cAACC,GACV,OAAO,MAAMC,SAAS,qBAAsBD,I,gBAP9C,MAAOE,UAAmCJ,OAE5CC,cACI,QACA,KAAKI,SAAW,EAGpBC,cACI,OAAO,KAAKD,SAGhBE,YAAYC,GACR,KAAKH,SAAWG,EAGC,sBAACC,EAAaC,SACzB,KAAKC,aAAaF,SAClB,KAAKG,uBAAuBF,GAClC,MAAMG,QAAgB,KAAKC,gBAE3B,aADM,KAAKC,eACJF,EAGW,uBAACJ,GACnB,OAAO,KAAKE,aAAaF,GAG7BO,aAAaP,GACV,OAAO,IAAIQ,OAAcR,GAAQS,OAAO,KAAKb,UAG9B,mBAACI,GACf,MAAM7B,QAAqB,IAAIqC,OAAcR,GAAQU,SAErD,OADA,KAAKd,SAAWzB,EAAKwC,UACdxC,EAGXkC,gBACI,OAAOO,OAAeP,cAAc,KAAKT,UAGjB,6BAACH,GACzB,IAAI,MAAMzC,KAASyC,QACTH,EAAuBoB,OAAO,IAC7BjB,EAAWzC,GACd,UAAa,KAAK4C,WAK9BU,eACI,OAAO,IAAIO,OAAuB,KAAKjB,UAAUkB,iB,oCC1DzD,W,oCCAA,W,2ELEM,SAAU5F,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,OAAQU,yBAAcC,yBAAa4E,qCAAyB5F,EAAK6F,UAAW,CAC1EC,OAAQ9F,EAAK8F,OACbC,YAAa/F,EAAK+F,YAClBC,YAAahG,EAAKgG,YAClBC,sBAAuBjG,EAAKiG,sBAC5BC,WAAYlG,EAAKmG,SACjBA,SAAUnG,EAAKoG,eACfC,UAAWrG,EAAKsG,SACf,KAAM,EAAG,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN3F/D,+BAAgB,CAC3BwB,KAAM,kBACNvB,WAAY,CAAE+D,wBACdC,MAAO,CACH,WACA,WAEJxD,KAAM,MACF6C,SAAU,sBAEd5C,MAAO,CACHmD,eAAgB,CACZlD,KAAMuD,UAEVV,YAAa,CACT7C,KAAMwD,QACNnF,SAAS,GAEbyE,YAAa,CACT9C,KAAMyD,QAEVb,OAAQ,CACJ5C,KAAMC,OACNC,UAAU,GAEd6C,sBAAuB,CACnB/C,KAAMyD,OACNvD,UAAU,IAGlBC,QAAS,CACL8C,SAASS,EAAeC,GACpB,KAAKC,MAAM,WAAYF,EAAUC,IAErCP,QAAQS,GACJ,KAAKD,MAAM,UAAWC,O,qBKnClC,MAAM7C,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASnE,KAErD,U,4LNLT,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMC,EAA2BC,8BAAkB,iBAC7CyG,EAAuBzG,8BAAkB,aACzCM,EAAyBN,8BAAkB,eAC3CO,EAA2BP,8BAAkB,iBAEnD,OAAQQ,yBAAcC,yBAAaC,cAAW,KAAM,CAClDC,yBAAaZ,EAA0B,CACrCa,MAAOnB,EAAKmB,MACZC,SAAUpB,EAAKoB,SACfC,MAAOrB,EAAKqB,OACX,KAAM,EAAG,CAAC,QAAS,WAAY,UAClCH,yBAAaL,EAAwB,KAAM,CACzCU,QAAS0F,qBAAS,IAAM,CACtB/F,yBAAa8F,EAAsB,CACjCE,QAASlH,EAAKkH,QACdC,UAAWnH,EAAKmH,UAChBC,KAAMpH,EAAKoH,MACV,KAAM,EAAG,CAAC,UAAW,YAAa,WAEvC/E,EAAG,IAELnB,yBAAaJ,EAA0B,CAAEwB,QAAStC,EAAKuD,eAAiB,KAAM,EAAG,CAAC,aACjF,I,4BCpBUhB,+BAAgB,CAC3BO,OAAQ,CAACC,QACTP,WAAY,CAAE6E,iBACdpE,MAAO,CACHkE,UAAW,CACPjE,KAAMC,QAEV+D,QAAS,CACLhE,KAAMC,OACNC,UAAU,GAEdgE,KAAM,CACFlE,KAAMC,OACNC,UAAU,M,qBMbtB,MAAMc,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS,KAErD,QPNf,MAAMrE,EAAuBC,yBAAa,mBAE1CwH,yBAAa,mBACb,MAAMC,EAAa,CAAEjG,MAAO,4BAC5BkG,0BAEO,MAAMzH,EAAsBF,GAAQ,SAAgBG,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC9F,MAAMC,EAA2BC,8BAAkB,iBAC7CM,EAAyBN,8BAAkB,eAC3CO,EAA2BP,8BAAkB,iBAEnD,OAAQQ,yBAAcC,yBAAaC,cAAW,KAAM,CAClDC,yBAAaZ,EAA0B,CACrCa,MAAOnB,EAAKmB,MACZC,SAAUpB,EAAKoB,SACfC,MAAOrB,EAAKqB,OACX,KAAM,EAAG,CAAC,QAAS,WAAY,UAClCH,yBAAaL,EAAwB,KAAM,CACzCU,QAAS1B,EAAQ,IAAM,CACrBqB,yBAAa,MAAOqG,EAAY,CAC9BrG,yBAAa,KAAM,CAAEI,MAAOtB,EAAKqB,OAASe,6BAAiBpC,EAAKyH,WAAY,GAC5EvG,yBAAa,IAAK,CAChBI,MAAO,cACPoG,UAAW1H,EAAK2H,UACf,KAAM,EAAG,CAAC,kBAGjBtF,EAAG,IAELnB,yBAAaJ,EAA0B,CAAEwB,QAAStC,EAAKuD,eAAiB,KAAM,EAAG,CAAC,aACjF,OC5BUhB,mCAAgB,CAC3BO,OAAQ,CAACC,QACTE,MAAO,CACHwE,UAAW,CACPvE,KAAMyD,OACNvD,UAAU,GAEduE,SAAU,CACNzE,KAAMyD,OACNvD,UAAU,M,UOLtB,MAAM,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAE1E,Q,YRRf,MAAMvD,EAAuBC,yBAAa,mBAE7BC,EAAsBF,GAAQ,SAAgBG,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC9F,MAAMC,EAA2BC,8BAAkB,iBAC7CM,EAAyBN,8BAAkB,eAC3CO,EAA2BP,8BAAkB,iBAEnD,OAAQQ,yBAAcC,yBAAaC,cAAW,KAAM,CAClDC,yBAAaZ,EAA0B,CACrCa,MAAOnB,EAAKmB,MACZC,SAAUpB,EAAKoB,SACfC,MAAOrB,EAAKqB,OACX,KAAM,EAAG,CAAC,QAAS,WAAY,UAClCH,yBAAaL,EAAwB,KAAM,CACzCU,QAAS1B,EAAQ,IAAM,CACrBqB,yBAAa,KAAM,KAAM,EACtBH,wBAAW,GAAOC,yBAAaC,cAAW,KAAMS,wBAAY1B,EAAK2B,KAAM,CAACiG,EAAM/F,KACrEd,yBAAcC,yBAAa,KAAM,CAAEiB,IAAKJ,GAAS,CACvDX,yBAAa,OAAQ,CACnBI,MAAO,cACPoG,UAAWE,GACV,KAAM,EAAG,CAAC,kBAEb,UAGRvF,EAAG,IAELnB,yBAAaJ,EAA0B,CAAEwB,QAAStC,EAAKuD,eAAiB,KAAM,EAAG,CAAC,aACjF,OC1BUhB,mCAAgB,CAC3BO,OAAQ,CAACC,QACTE,MAAO,CACHtB,KAAM,CACFuB,KAAM2E,MACNzE,UAAU,M,UQFtB,MAAM,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAE1E,Q,YNIf,SAAS0E,IACL,MAAMC,EAAuB,CAACC,EAAoBC,KAC9CC,WAAW,KACP,MAAMC,EAASC,SAASC,uBAAuB,iBAC/C,GAAIF,EAAOG,OAAQ,CACf,MAAMC,EAAQJ,EAAO,GACfK,EAAUD,EAAME,qBAAqB,cACvCD,EAAQF,QAAU,EAClBE,EAAQ,GAAGE,SAEPV,EAAa,IACbD,EAAqBC,EAAW,EAAGC,EAAQ,KAGnD,MAAMU,EAAUJ,EAAME,qBAAqB,eACvCE,EAAQL,QAAU,GAClBK,EAAQ,GAAGD,SAEf,MAAME,EAASL,EAAME,qBAAqB,cACtCG,EAAON,QAAU,GACbM,EAAO,GAAGC,eAAeD,EAAO,GAAGC,cAAcH,cAGrDV,EAAa,GACbD,EAAqBC,EAAW,EAAGC,EAAQ,MAGpDA,IAEPF,EAAqB,EAAG,GAGrBe,eAAeC,EAClB5H,EACAC,EACA8F,EACAE,EACA7D,EACAlC,EAAQ,GACR8F,EAAuB,IAEnB,MAAMoB,QAAc3E,OAAgB2B,OAAO,CAC3CyD,UAAWC,EACXC,iBAAiB,EACjBC,SAAU,qBACVC,eAAgB,CACZjI,QACAC,WACA8F,UACAE,OACAD,YACA5D,gBACAlC,iBAGEkH,EAAMc,UACZvB,IACA,MAAM,KAAE9E,SAAeuF,EAAMe,eAC7B,OAAOtG,EAAKc,OAGbgF,eAAeS,EAClBpI,EACAC,EACAO,EACA4B,EACAlC,EAAQ,IAEJ,MAAMkH,QAAc3E,OAAgB2B,OAAO,CAC3CyD,UAAWQ,EACXN,iBAAiB,EACjBC,SAAU,qBACVC,eAAgB,CACZjI,QACAC,WACAmC,gBACA5B,OACAN,iBAGEkH,EAAMc,UACZvB,IACA,MAAM,KAAE9E,SAAeuF,EAAMe,eAC7B,OAAOtG,EAAKc,OAGbgF,eAAeW,EAClBtI,EACAsG,EACAE,EACApE,EACAlC,EAAQ,IAEJ,MAAMkH,QAAc3E,OAAgB2B,OAAO,CAC3CyD,UAAWU,EACXR,iBAAiB,EACjBC,SAAU,qBACVC,eAAgB,CACZjI,QACAsG,YACAE,WACApE,gBACAlC,iBAGEkH,EAAMc,UACZvB,IACA,MAAM,KAAE9E,SAAeuF,EAAMe,eAC7B,OAAOtG,EAAKc,OAGbgF,eAAea,EAClBxI,EACAC,EACAO,EACA4B,EACAlC,EAAQ,UACRuI,EAAO,sBAEH,MAAMrB,QAAc3E,OAAgB2B,OAAO,CAC3CyD,UAAWa,OACXX,iBAAiB,EACjBC,SAAUS,EACVR,eAAgB,CACZjI,QACAC,WACAC,QACAM,OACA4B,yBAGEgF,EAAMc,UACZvB,IACA,MAAM,KAAE9E,SAAeuF,EAAMe,eAC7B,OAAOtG,I,2DHjJT,SAAUjD,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMyJ,EAA+BvJ,8BAAkB,qBACjDwJ,EAAsBxJ,8BAAkB,YAE9C,OAAQQ,yBAAcC,yBAAa+I,EAAqB,KAAM,CAC5DxI,QAAS0F,qBAAS,IAAM,CACtB/F,yBAAa4I,EAA8B,CACzCzD,UAAWpG,EAAO,KAAOA,EAAO,GAAK8B,GAAW/B,EAAKgK,eAAe,IACpEjE,aAAa,EACbC,YAAahG,EAAKgK,eAClBlE,OAAQ9F,EAAK8F,OACbM,eAAgBpG,EAAKmG,UACpB,KAAM,EAAG,CAAC,cAAe,SAAU,qBAExC9D,EAAG,I,+RCYQE,+BAAgB,CAC7BC,WAAY,CAAEyH,uBAAiBC,gBAC/BlH,KAAM,KAAM,CACVmH,IAAKC,OAAIC,eACTC,YAAa,GACbC,SAAU,GACVC,eAAe,EACfzE,aAAa,EACb0E,yBAA0B,CACtB,iBACA,mBACA,kBACA,iCAEJC,sBAAuB,CACnB,cACA,gBACA,6BACA,gBAEJC,mBAAmB,EACnB1F,QAAS,GACT2F,eAAgB,GAChBC,YAAa,EACbC,gBAAiB,GACjB9E,YAAa,GACbgE,eAAgB,GAChBlE,OAAQ,GACRiF,gBAAgB,EAChBC,QAAS,GACTC,oBAAqB,GACrBC,KAAM,GACNC,YAAY,IAEdC,MAAO,CACL,OAAU,CACN,eAAc,MAACC,IACZC,KAAKhB,YAAc,IAAIiB,OACnBF,EAAMG,aACLF,KAAKd,cAAgBa,EAAMI,aAC3BH,KAAKf,SAAWc,EAAMK,OACtBJ,KAAKhB,YAAYqB,aAAaN,EAAMG,aACjCH,EAAMO,mBAAkBN,KAAKR,gBAAkBO,EAAMO,wBAClDN,KAAKO,aAAaR,EAAMG,cAE9BF,KAAKN,QAAUK,EAEnBC,KAAKxF,OAASwF,KAAKQ,aAEvBC,WAAW,EACXC,MAAM,IAGZ3I,QAAS,CACPyI,YACI,IAAIhG,EAAuB,GA0B3B,OAzBAA,EAAOmG,KAAKX,KAAKY,oBACjBpG,EAAOmG,KAAKX,KAAKa,kBACjBrG,EAAOmG,KAAKX,KAAKc,mBACjBtG,EAAOmG,KAAKX,KAAKe,eACjBvG,EAAOmG,KAAKX,KAAKgB,qBACjBxG,EAASA,EAAOyG,OAAOjB,KAAKkB,aAC5B1G,EAAOmG,KAAKX,KAAKmB,mBACjB3G,EAAOmG,KAAKX,KAAKoB,qBACjB5G,EAAOmG,KAAKX,KAAKqB,eACjB7G,EAAOmG,KAAKX,KAAKsB,oBACjB9G,EAAOmG,KAAKX,KAAKuB,sBACjB/G,EAAOmG,KAAKX,KAAKwB,wBACjBhH,EAAOmG,KAAKX,KAAKyB,kBACjBjH,EAAOmG,KAAKX,KAAK0B,kBACjBlH,EAASA,EAAOyG,OAAOjB,KAAK2B,kBAC5BnH,EAAOmG,KAAKX,KAAK4B,kBACjBpH,EAAOmG,KAAKX,KAAK6B,oBACjBrH,EAAOmG,KAAKX,KAAK8B,yBACjBtH,EAAOmG,KAAKX,KAAK+B,mBACjBvH,EAAOmG,KAAKX,KAAKgC,iBACjBxH,EAASA,EAAOyG,OAAOjB,KAAKiC,4BAC5BzH,EAAOmG,KAAKX,KAAKkC,aACjB1H,EAAOmG,KAAKX,KAAKmC,qBACjB3H,EAAOmG,KAAKX,KAAKoC,2BACjB5H,EAAOmG,KAAKX,KAAKqC,8BACV7H,GAEX8H,aACI,OAAOtC,KAAKT,YAAc,GAE9B,mBAAmBpG,GACf6G,KAAKT,WAAapG,EAClB6G,KAAKrG,cAAgB4I,OAAMC,IAAI,iBAAkB,CAAEC,UAAWC,SAAS,GAAG1C,KAAKT,cAC/E,MAAM,iBACFoD,EADE,WAEFC,EAFE,gBAGFC,EAHE,gBAIFC,EAJE,UAKFC,GACA/C,KAAKrG,QAAQqJ,eACjBhD,KAAKV,eAAiB,CAClB,WAAcU,KAAKrG,QAAQsJ,eAC3B,YAAejD,KAAKrG,QAAQuJ,gBAC5B,OAAUlD,KAAKrG,QAAQwJ,YACvB,UAAanD,KAAKrG,QAAQyJ,eAC1B,cAAiBT,EACjB,2BAA8BC,EAC9B,aAAgBC,EAChB,iBAAoBC,EACpB,8BAAiCC,EACjC,kBAAqB/C,KAAKrG,QAAQ0J,iBAClC,SAAYrD,KAAKrG,QAAQ2J,sBAE7BtD,KAAKN,QAAUM,KAAKV,eACpBU,KAAKvF,aAAc,EAChBuF,KAAKR,kBACJQ,KAAKtF,YAAcsF,KAAKR,gBACxBQ,KAAKtB,eAAiBsB,KAAKtF,cAGnC,eAAekF,EAAqDrE,GAChE,OAAKyE,KAAKsC,aAGCtC,KAAKhG,OAAOuB,GAFZyE,KAAK/F,OAAO2F,EAAMrE,IAKjC,aAAaxE,EAAQwE,GACjB,IAAIhC,EAAcgK,OAAYC,cAAcjI,GAC5ChC,EAA0C,QAAjCyG,KAAKN,QAAQ+D,iBAA6BzD,KAAK0D,qBAAqBnK,GAAUA,EACvF,MAAMP,EAAyBgH,KAAK2D,wBAAwBpI,GACtDqI,EAAoB,IAAI1K,OACxBS,EAAU,IAAIkK,aAAsBD,EAAaE,gBAAgBvK,EAAQP,IACzEyJ,EAAYmB,EAAaxK,cAS/B,GAPAmJ,OAAMwB,IAAI,iBAAkBpK,GAEQ,QAAjCqG,KAAKN,QAAQ+D,mBACZzD,KAAKrG,QAAUA,QACTqG,KAAKrG,QAAQqK,mBAAmBhE,KAAKN,QAAQuE,mBAGnDjE,KAAKnB,IAAIqF,kBAAmB,CAC5B,MAAMC,QAAanE,KAAKnB,IAAIqF,kBACxBzB,EAAWlJ,EAAQP,EAAYgH,KAAKoE,QAASpE,KAAKqE,QAEtD,GAAIF,EAAM,OAEd,GAA4B,QAAxB5K,EAAO+K,aACP,OAAOtE,KAAKoE,QAAQzD,KAAK,0BAA0B8B,SAEjD8B,eAAS9B,EAAWzC,KAAKoE,UAEnCV,qBAAqBnK,GAClB,OAAO1B,OAAO2M,OAAOjL,EAAO,CACvB,WAAcyG,KAAKN,QAAQ+E,WAC3B,YAAezE,KAAKN,QAAQgF,YAC5B,OAAU1E,KAAKN,QAAQiF,OACvB,UAAa3E,KAAKN,QAAQkF,UAC1B,qBAAuB,KAG/B,aAAarJ,GACT,MAAMhC,EAAcgK,OAAYC,cAAcjI,GACxCvB,EAAS,IAAId,OAEnBc,EAAOX,YAAY2G,KAAKT,kBAClBvF,EAAOF,aAAaP,GAC1B,IAAI,MAAMsL,KAAQtL,EACVsL,KAAQ7E,KAAKV,iBACbU,KAAKV,eAAeuF,GAAQtL,EAAOsL,IAI3C,GADAtC,OAAMuC,WAAW,mBACb9E,KAAKR,gBAAiB,OAAOQ,KAAKtB,eAAiB,YACvDsB,KAAKoE,QAAQW,QAEjBC,mBAAmBhM,EAAW,IAC1B,QAAIgH,KAAKsC,eAAiBtJ,EAAWiM,SAASjF,KAAKtF,eAKvD,uBAEI,GAAIsF,KAAKH,cAAgBG,KAAKrG,QAAQuL,YAC9BlF,KAAKrG,QAAQuL,YAAclF,KAAKrG,QAAQwL,gBAAgB9M,MAAM,aAC9D,UACU2H,KAAKrG,QAAQyL,mBACbpF,KAAKrG,QAAQ0L,wBACbC,eAAa,KACtB,MAAOC,GACJC,eAAY,8BAA8BD,GAGtDvF,KAAKoE,QAAQzD,KAAK,+BAA+BX,KAAKrG,QAAQ8L,UAElE9B,wBAAwB/D,GACpB,OAAO/H,OAAO6N,OAAO9F,GACR+F,OAAQC,GAAWC,2BAAcD,IAAM,qBAAsBA,GAC7D1N,IAAI,EAAEsB,sBAA2BA,IAElDsM,YAAYC,GACR,OAAOA,EAAY7N,IAAKoE,IAAD,CAAkBhG,MAAOgG,EAAMpG,MAAOoG,MAEjEuE,iBACI,MAAMpI,EAAc8K,OAAYyC,oBAGhC,OAFAvN,EAAKwN,UAAY,IAAMjG,KAAKgF,mBAAmB,CAAC,gBAAmD,QAAjChF,KAAKN,QAAQ+D,iBAC/EhL,EAAKyN,aAAe,IAAMlG,KAAKN,QAAQ+E,WAChChM,GAEXqI,kBACI,MAAMrI,EAAc8K,OAAY4C,qBAGhC,OAFA1N,EAAKwN,UAAY,IAAMjG,KAAKgF,mBAAmB,CAAC,iBAAoD,QAAjChF,KAAKN,QAAQ+D,iBAChFhL,EAAKyN,aAAe,IAAMlG,KAAKN,QAAQgF,YAChCjM,GAEXsI,cACI,MAAMqF,EAA0C,QAA7BpG,KAAKnB,IAAIwH,gBACtBC,EAAuC,SAA7BtG,KAAKnB,IAAIwH,gBACnB1B,EAAgBpB,OAAYgD,iBAsClC,OArCA5B,EAAO6B,YAAcxG,KAAKsC,aAC1BqC,EAAOuB,aAAe,IAAMlG,KAAKN,QAAQiF,OACzCA,EAAOsB,UAAY,OACVjG,KAAKsC,eAAiB8D,GAAcE,MAGlCtG,KAAKgF,mBAAmB,CAAC,YAA+C,QAAjChF,KAAKN,QAAQ+D,mBAE1D2C,IAAcE,GAAatG,KAAKsC,eACjCqC,EAAO8B,cAAgB,KAAM,CAAGnQ,MAAO,SAAUJ,MAAO,MACxDyO,EAAO+B,sBAAwB,KAAM,CAAGnN,OAAQ,OAGpDoL,EAAOgC,WAAanJ,UAIhB,MAAMoJ,EAAYlP,EAAKxB,MACjB2Q,EAAY7G,KAAKN,QAAQiF,OAC/B,GAAI3E,KAAKsC,cAAgBsE,GAAaC,EAAW,CAC7C,MAAMrO,QAAe2F,eACjB,UACA,wBAAwB0I,QAAgBD,IACxC,6EACA,CACI,CACInO,KAAM,SAAU7B,KAAM,SAE1B,CACI6B,KAAM,gBAAiB7B,KAAM,MAAOb,MAAO,YAIvD,MAAkB,kBAAXyC,EAEX,OAAO,GAEJmM,GAEXzD,YACI,MAAM4F,EAAYvD,OAAYwD,eAO9B,GANAD,EAAUZ,aAAe,IAAMlG,KAAKN,QAAQkF,UAC5CkC,EAAUb,UAAY,IAAMjG,KAAKgF,mBAAmB,CAChD,kBAAmB,mBAAoB,mBAIV,QAA7BhF,KAAKnB,IAAIwH,gBAA2B,CACpC,MAAMW,EAAQnD,OAAeoD,iBACvBC,EAAuB,GAC7BJ,EAAUK,QAAU,IAAMC,IAAMJ,GAC3BK,SAASH,EAAsB,SAC/BI,OAAOC,QAEhB,OAAOC,eAAmBV,IAE9B3F,kBACI,MAAMsG,EAAgBlE,OAAYmE,qBAElC,OADAD,EAAOxB,UAAY,IAAMjG,KAAKgF,mBAAmBhF,KAAKZ,uBAC/CqI,GAEXrG,oBACI,MAAMuG,EAAkBpE,OAAYqE,uBAEpC,OADAD,EAAS1B,UAAY,IAAMjG,KAAKgF,mBAAmBhF,KAAKZ,uBACjDuI,GAEXtG,cACI,MAAMwG,EAAgBtE,OAAYuE,iBAGlC,OAFAD,EAAO5B,UAAarG,GAAcI,KAAKgF,mBAAmBhF,KAAKZ,yBACvDQ,EAAKmI,YAAYzR,MAAM+B,MAAM,YAC9BwP,GAEXvG,mBACI,MAAM0G,EAAqBzE,OAAY0E,sBAGvC,OAFAD,EAAY/B,UAAarG,GAAcI,KAAKgF,mBAAmBhF,KAAKZ,yBAC5DQ,EAAKmI,YAAYzR,MAAM+B,MAAM,YAC9B2P,GAEXzG,qBACI,MAAM2G,EAAuB3E,OAAY4E,wBAEzC,OADAD,EAAcjC,UAAY,IAAMjG,KAAKgF,mBAAmBhF,KAAKb,0BACtD+I,GAEX1G,uBACI,MAAMsB,EAAyBS,OAAY6E,0BAE3C,OADAtF,EAAgBmD,UAAY,IAAMjG,KAAKgF,mBAAmBhF,KAAKb,0BACxD2D,GAEXrB,iBACI,MAAMsB,EAAmBQ,OAAY8E,oBAGrC,OAFAtF,EAAUkD,UAAarG,GAAcI,KAAKgF,mBAAmBhF,KAAKb,4BAC1DS,EAAK0I,eAAehS,MAAM+B,MAAM,YACjC0K,GAEXrB,iBACI,MAAMA,EAAwB6B,OAAYgF,yBAG1C,OAFA7G,EAAeuE,UAAarG,GAAcI,KAAKgF,mBAAmBhF,KAAKb,4BAC/DS,EAAK0I,eAAehS,MAAM+B,MAAM,YACjCqJ,GAEXE,iBACI,MAAM4G,EAAmBjF,OAAYkF,qBAGrC,OAFAD,EAAUvC,UAAY,IAAMjG,KAAKgF,mBAAmB,CAAC,sBACrDwD,EAAUtC,aAAe,IAAMlG,KAAKN,QAAQgJ,kBACrCF,GAEX1G,wBACG,MAAM6G,EAAkBpF,OAAYqF,2BAKpC,OAJAD,EAAS1C,UAAarG,GAAc,CAChC,cACA,yBACFqF,SAASrF,EAAKiJ,aAAa3S,OACtByS,GAEVhH,iBACI,MAAMmH,EAAqBvF,OAAYwF,oBAEvC,OADAD,EAAU,GAAG7C,UAAY,IAAMjG,KAAKgF,mBAAmB,CAAC,sBACjD8D,GAEXjH,mBACI,MAAO,CACHmH,GAAI,eACJC,SAAU,kBACVrR,KAAMsR,OAAUC,UAChBC,cAAgBC,IAAD,CAAmB9P,OAAQ8P,EAAInT,QAC9C+P,UAAW,IAAMjG,KAAKgF,mBAAmB,CAAC,kBACN,QAA7BhF,KAAKnB,IAAIwH,gBAChBiD,WAAaD,GAAaE,OAAWzR,SAASuR,GAC9CG,QAAS,IAAMC,OAAmBC,oBAG1C3H,kBACI,MAAO,CACHiH,GAAI,aACJC,SAAU,aACVrR,KAAMsR,OAAUC,UAChBQ,KAAMnM,UACHwC,KAAKP,qBAAuBmK,OAAYC,uBACjC,GAEVT,cAAgBC,IAAD,CAAmB9P,OAAQ8P,EAAInT,QAC9C+P,UAAW,IAAMjG,KAAKgF,mBAAmB,CAAC,gBAAkBhF,KAAKP,eACjE6J,WAAaD,GAAaE,OAAWzR,SAASuR,GAC9CG,QAAS,IAAMxJ,KAAK8F,YAAY,CAC5B,WACA,eAIZ9D,gBACI,MAAO,CACHgH,GAAI,qBACJC,SAAU,cACVrR,KAAMsR,OAAUY,QAChBV,cAAe,EAAElT,YAAF,CACXsD,iBAAkB,CACd,yBAA4B,GAC5B,MAAStD,KAGjB+P,UAAYrG,GAAcI,KAAKgF,mBAAmB,CAAC,wBAA0BpF,EAAKmK,YAAcnK,EAAKmK,WAAW7T,MAAMmC,MAAM,aAC5HiR,WAAaD,GAAaE,OAAWzR,SAASuR,KAGtDnH,YACI,MAAO,CACH8G,GAAI,OACJC,SAAU,OACVrR,KAAMsR,OAAUC,UAChBG,WAAaD,GAAaE,OAAWzR,SAASuR,GAC9CD,cAAe,EAAElT,YAAF,CACXsD,iBAAkB,CACd,yBAA4B,GAC5B,MAAStD,KAGjB+P,UAAYrG,GAAcI,KAAKgF,mBAAmB,CAAC,UAAYpF,EAAKmK,YAAcnK,EAAKmK,WAAW7T,MAAMmC,MAAM,aAC9GmR,QAAS,IAAMxJ,KAAK8F,YAAY,CAC5B,mBACA,UACA,QACA,qBACA,UACA,oBACA,qBACA,UACA,UACA,WACA,iBACA,WACA,iBACA,0BACA,8BAIZ7D,2BACI,OAAOuF,eAAmB,CACtBwB,GAAI,8BACJC,SAAU,kBACVnR,UAAU,EACVmO,UAAYrG,GAAeI,KAAKgF,mBAAmB,CAC/C,mCACA,oCACA,qCACEpF,EAAKmK,YAAcnK,EAAKmK,WAAW7T,MAAMmC,MAAM,aACrD2R,QAAS,IAAMC,OAAQC,oBAAoB,KAC3C/C,QAAS,IAAMgD,OAAgBlD,iBAC/BmD,WAAY,CACRC,cAAc,GAElBC,aAAeC,IAAD,CACVA,OACA/Q,iBAAmB,CACf,yBAA4B,GAAI,MAAS+Q,QAKzDpI,oBACI,MAAMmE,EAAuC,SAA7BtG,KAAKnB,IAAIwH,gBACnBmE,EAAmC,QAA7BxK,KAAKnB,IAAIwH,gBACfoE,EAA4C,iBAA7BzK,KAAKnB,IAAIwH,gBAC9B,MAAO,CACH2C,GAAI,eACJC,SAAU,qBACVrR,KAAMsR,OAAUC,UAChBC,cAAgBC,IAAD,CAAmB9P,OAAQ8P,EAAInT,QAC9C+P,UAAW,IAAMjG,KAAKgF,mBAAmB,CAAC,mBAAqBsB,IAAYkE,IAAQC,EACnFnB,WAAaD,GAAaE,OAAWzR,SAASuR,GAC9CG,QAAS,IAAMxJ,KAAK8F,YAAY,CAAC,MAAO,SAGhD9E,oBACI,MAAO,CACHgI,GAAI,UACJC,SAAU,iBACVrR,KAAMsR,OAAUwB,sBAChBf,KAAMnM,UACGwC,KAAKsC,eACNtC,KAAKH,iBAAmB0C,OAAMC,IAAI,oBAE/B,GAEXmI,gBAAkB/K,GAC0B,QAAjCI,KAAKN,QAAQ+D,iBACnB,uBAAuBzD,KAAKN,QAAQ+E,cAAczE,KAAKN,QAAQgF,iBAAiB1E,KAAKN,QAAQiF,UAC7F,uBAAuB/E,EAAK6E,WAAWvO,SAAS0J,EAAK8E,YAAYxO,WAAW0J,EAAK+E,OAAOrO,SAE7FsU,gBAAiB,KAAM,EACvB3E,UAAW,KAAOjG,KAAKsC,aACvBgH,WAAaD,GAAgBE,OAAWzR,SAASuR,GACjDG,QAAShM,UACL,IAAIqN,EAiBJ,GAhBoC,QAAjC7K,KAAKN,QAAQ+D,kBACZzD,KAAKN,QAAQiF,OAAgC,QAAvB3E,KAAKN,QAAQiF,OAAmB,IAAM,IAC5DkG,EAAW,CACP,WAAc7K,KAAKN,QAAQ+E,WAC3B,YAAezE,KAAKN,QAAQgF,YAC5B,OAAU1E,KAAKN,QAAQiF,SAI3BkG,EAAU,CACN,WAAcjL,EAAK6E,WAAWvO,MAC9B,YAAe0J,EAAK8E,YAAYxO,MAChC,OAAU0J,EAAK+E,OAAOzO,OAI1B8J,KAAKH,WAAY,CACjB,MAAMiL,QAAiB9K,KAAKhB,YAAY+L,mBAAmBF,GAC3D,OAAOC,EAAS5S,IAAKoE,IACjB,MAAM0O,EAAWzH,OAAY0H,0BAA0B3O,GASvD,OARA0O,EAASE,MAAM1B,QAAQ7I,KAAK,CACxBrK,MAAO,eACPJ,MAAOoG,EAAKuM,eAEhBmC,EAASE,MAAM1B,QAAQ7I,KAAK,CACxBrK,MAAO,SACPJ,MAAOoG,EAAK8D,SAET4K,IAIf,MAAMF,QAAiBjH,OAAesH,OAAON,GAC7C,OAAOC,EAAS5S,IAAKoE,GAAciH,OAAY0H,0BAA0B3O,KAE7E8O,OAAQ,CACJC,iBAAkB,CACd,QACA,OACA,QAEJC,WAAY,CACR,CACI7S,KAAM,cACN7B,KAAM,MACNJ,QAAS,KACLwJ,KAAKtB,eAAiB,eAG9B,CACIjG,KAAM,cACN7B,KAAM,MACNJ,QAAS,KAC4B,QAAjCwJ,KAAKN,QAAQ+D,iBACbzD,KAAKtB,eAAiB,kBACtBsB,KAAKtB,eAAiB,gBAG9B,CACIjG,KAAM,WACN1C,MAAO,UACPa,KAAM,MACN2U,MAAO,CACHC,SAAU,CACNvV,QAAS,KAAM,EACfwV,QAAQ1U,EAAO6I,GACX,OAAO8L,qBAAQ9L,EAAK+L,YAIhCnV,QAAUoJ,GACCI,KAAKoE,QAAQzD,KAAK,+BAA+Bf,EAAK+L,QAAQzV,YAO7FkM,0BACI,IAAIwJ,EAAqB,GACrBC,EAAyB,GAC7B,MAAO,CACH7C,GAAI,sBACJC,SAAU,wBACVrR,KAAMsR,OAAU4C,qBAChB7F,UAAWzI,MAAOzG,EAAQgV,OAClB/L,KAAKH,YAAeG,KAAKT,cACzBqM,EAAgBrI,OAAYC,cAAcuI,GAC1CF,QAA0B7L,KAAKhB,YAC1BgN,yBAAyBJ,GACvBC,EAAkB7O,QAAU,GAI3CwM,QAAShM,UACL,MAAMyO,EAAU1B,GAAiBN,OAAQiC,2BAA2B3B,GACpE,OAAOsB,EAAkB3T,IAAI,EAAGiU,QAAO5S,aACnC,MAAMd,EAAO,GAAGc,EAAOkL,cAAclL,EAAOmL,cAC5C,MAAO,CACHpO,MAAOmC,EACPvC,MAAOqD,EAAO6S,WACdlB,MAAO,CACHiB,MAAkB,IAARA,EAAH,IACPE,UAAWT,EACXU,YAAa/S,EACbgT,YAAa,CACT,CACI,OACA,GAAGX,EAAcnH,cAAcmH,EAAclH,cAC7C,GAAGnL,EAAOkL,cAAclL,EAAOmL,eAEnC,CACI,SACAkH,EAAcjH,OACdpL,EAAOoL,QAEX,CACI,YACAsH,EAAOL,EAAchH,WACrBqH,EAAO1S,EAAOqL,YAElB,CACI,gBACAgH,EAAcY,cACdjT,EAAOiT,eAEX,CACI,UACAZ,EAAca,2BACdlT,EAAOkT,kCAO/BrB,OAAQ,CACJC,iBAAkB,CACd,QACA,QAEJC,WAAY,CACR,CACI7S,KAAM,gBACN7B,KAAM,QACN2U,MAAO,CACHmB,QAAS,CACLzW,QAAS,KAAM,EACfwV,QAAS,CAAC1U,EAAQ4V,KAAYjB,qBAAQiB,EAAEC,uBAGhDpW,QAAS,KACLwJ,KAAKtB,eAAiB,iBAG9B,CACIjG,KAAM,UACN7B,KAAM,MACNb,MAAO,UACPwV,MAAO,CACHmB,QAAS,CACLzW,QAAS,KAAM,EACfwV,QAAS,CAAC1U,EAAQ4V,KAAYjB,qBAAQiB,EAAEC,uBAGhDpW,QAAUoJ,IACNI,KAAKoE,QAAQzD,KAAK,+BAA+Bf,EAAKgN,oBAAoB1W,aAOlG0K,mBACI,MAAO,CACHoI,GAAI,YACJC,SAAU,oBACVrR,KAAMsR,OAAU2D,gBAChBlD,KAAMnM,UACEwC,KAAKsC,eACLtC,KAAKH,iBAAmB0C,OAAMC,IAAI,oBAE/B,GAEXyD,UAAW,IAAMjG,KAAKsC,aACtBkH,QAAShM,UACL,MAAMsP,EAAcC,IAAD,CACftU,KAAM,OACNb,KAAM,SACNY,OAAQ,KACJwH,KAAKtF,YAAcqS,EACnB/M,KAAKtB,eAAiBsB,KAAKtF,eAG7BkB,EAAU,CAAC,aAAc,SAAU,QACnCE,EAAO,CACT,CAAC,aAAckE,KAAKV,eAAemF,WAAYqI,EAAW,eAC1D,CAAC,cAAe9M,KAAKV,eAAeoF,YAAaoI,EAAW,gBAC5D,CAAC,SAAU9M,KAAKV,eAAeqF,OAASmI,EAAW,WACnD,CAAC,YAAa7C,OAAQiC,2BAA2BlM,KAAKV,eAAesF,WAAakI,EAAW,oBAC7F,CAAC,oBAAqB9M,KAAKV,eAAeoJ,kBAAmBoE,EAAW,sBACxE,CAAC,gBAAiB9M,KAAKV,eAAekN,cAAeM,EAAW,gBAChE,CAAC,UAAW9M,KAAKV,eAAemN,2BAA6BK,EAAW,gBACxE,CAAC,eAAgB9M,KAAKV,eAAe0N,aAAeF,EAAW,gBAC/D,CAAC,mBAAmB9M,KAAKV,eAAe2N,iBAAkBH,EAAW,mBACrE,CAAC,cAAe9M,KAAKV,eAAe4N,8BAA+BJ,EAAW,mBAC9E,CAAC,WAAY9M,KAAKV,eAAe6N,SAAUL,EAAW,uBAGpDM,EAAiB,CAACC,QAAS,GAAIrX,MAAO,uBAM5C,OALA8F,EAAKwR,QAAQ,CAACC,EAAQ9R,KACd+R,eAAaD,EAAE,KACfH,EAAUC,QAAQ1M,KAAKlF,KAE/BuE,KAAKX,kBAAoB+N,EAAUC,QAAQrQ,QAAU,EAC9C,CAAC,CACJ1G,MAAO,GACPJ,MAAO,GACPgV,MAAO,CACHpP,OACAF,UACAC,UAAW,CAACuR,OAIxBhC,OAAQ,CACJE,WAAY,CAKR,CACI7S,KAAM,WACN7B,KAAM,MACNb,MAAO,UACPwV,MAAO,CACHmB,QAAS,CACLzW,QAAS,KAAM,EACfwX,OAAQ,IACJzN,KAAKH,YACFG,KAAKd,gBACJc,KAAKX,oBAIrB7I,QAASgH,UACL,UACUwC,KAAKhB,YAAY0O,aAAa1N,KAAKf,SAAUe,KAAKT,kBAClDS,KAAKhB,YAAY2O,YACvB3N,KAAKoE,QAAQzD,KAAK,+BAA+BX,KAAKT,YACxD,MAAMgG,GACJ7M,eAAa,GAAG6M,MAO5B,CACI9M,KAAM,UACN7B,KAAM,MACNb,MAAO,UACPwV,MAAO,CACHmB,QAAS,CACLe,OAAQ,KAAOzN,KAAKd,gBAAkBc,KAAKX,oBAGnD7I,QAASgH,SAAYwC,KAAK4N,mBAGlCvC,iBAAkB,CAAC,QAAS,WAIxChJ,6BAEI,MAAM,CACJ2G,GAAI,uBACJC,SAAU,UACVrR,KAAMsR,OAAU2E,WAChB5H,UAAW,KAAOjG,KAAKvF,YACvB+O,QAAS,CAACmD,EAAQZ,IACL/L,KAAK8N,yBAAyB/B,GAE3CX,OAAQ,CACNC,iBAAkB,CAAC,YAI3ByC,yBAAyBpW,GACrBA,EAAOG,OAAOkW,KAAKrW,GAAMQ,KAAI,SAASvB,EAAKJ,GACvC,GAAgB,MAAbmB,EAAKf,GACJ,MAAO,CACP,MAASA,EAAIqX,QAAQ,KAAK,KAAKA,QAAQ,cAAeC,GAAKA,EAAEC,eAC7D,MAAgB,cAAPvX,EAAsBe,EAAKf,GAAK,QAAUe,EAAKf,GAAK,cAIrEe,EAAOA,EAAKiO,OAAQwI,QACJC,GAALD,GAGZ,MAAME,EAAiB,CAClB,CACI,MAAS,aACT,MAASrO,KAAKN,QAAQ+E,YAE1B,CACI,MAAS,cACT,MAASzE,KAAKN,QAAQgF,aAE1B,CACI,MAAS,SACT,MAAS1E,KAAKN,QAAQiF,QAE1B,CACI,MAAS,YACT,MAAS3E,KAAKN,QAAQkF,WAE1B,CACI,MAAS,qBACT,MAAS5E,KAAKN,QAAQuE,mBAM9B,MAHoC,QAAjCjE,KAAKN,QAAQ+D,mBACZ/L,EAAO2W,EAAepN,OAAOvJ,IAE1BA,M,qBSrzBf,MAAMkB,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASnE,KAErD,gB,kCCPf,W","file":"js/chunk-7eb73960.b1c3d6cd.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        onOnIndex: _cache[1] || (_cache[1] = $event => (_ctx.fieldComponent='')),\n        skipSummary: true,\n        activeField: _ctx.fieldComponent,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onFinish\n      }, null, 8, [\"activeField\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\"\nimport { WorkflowService } from \"@/services/workflow_service\"\nimport { isPlainObject, isEmpty } from \"lodash\"\nimport PersonField from \"@/utils/HisFormHelpers/PersonFieldHelper\"\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\"\nimport App from \"@/apps/app_lib\"\nimport { AppInterface } from \"@/apps/interfaces/AppInterface\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { isValueEmpty } from \"@/utils/Strs\"\nimport { PatientDemographicsExchangeService } from \"@/services/patient_demographics_exchange_service\"\nimport { toastDanger, toastWarning } from \"@/utils/Alerts\"\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { IonPage } from \"@ionic/vue\"\nimport { infoActionSheet } from \"@/utils/ActionSheets\"\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\nimport dayjs from \"dayjs\";\nimport { delayPromise } from \"@/utils/Timers\";\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  components: { HisStandardForm, IonPage },\n  data: () => ({\n    app: App.getActiveApp() as AppInterface,\n    ddeInstance: {} as any,\n    ddeDocID: '' as string,\n    ddeIsReassign: false as boolean,\n    skipSummary: false as boolean,\n    currentAddressAttributes: [\n        'current_region',\n        'current_district',\n        'current_village',\n        'current_traditional_authority'\n    ] as string[],\n    homeAddressAttributes: [\n        'home_region',\n        'home_district',\n        'home_traditional_authority',\n        'home_village'\n    ] as string[],\n    hasIncompleteData: false as boolean,\n    patient: {} as any,\n    editPersonData: {} as any,\n    editPerson: -1 as number,\n    personAttribute: '' as string,\n    activeField: '' as string,\n    fieldComponent: '' as string,\n    fields: [] as Array<Field>,\n    isMilitarySite: false,\n    presets: {} as any,\n    registrationSummary: {} as any,\n    form: {} as Record<string, Option> | Record<string, null>,\n    ddeEnabled: false as boolean,\n  }),\n  watch: {\n    '$route': {\n        async handler({query}: any) {\n           this.ddeInstance = new PatientDemographicsExchangeService()\n           if (query.edit_person) {\n                this.ddeIsReassign = query.dde_reassign\n                this.ddeDocID = query.doc_id\n                this.ddeInstance.setPatientID(query.edit_person)\n                if(query.person_attribute) this.personAttribute = query.person_attribute\n                await this.initEditMode(query.edit_person)\n            } else {\n                this.presets = query\n            }\n            this.fields = this.getFields()\n        },\n        immediate: true,\n        deep: true\n    }\n  },\n  methods: {\n    getFields(): Array<Field> {\n        let fields: Array<Field> = []\n        fields.push(this.personIndexField())\n        fields.push(this.givenNameField())\n        fields.push(this.familyNameField())\n        fields.push(this.genderField())\n        fields.push(this.searchResultField())\n        fields = fields.concat(this.dobFields())\n        fields.push(this.homeRegionField())\n        fields.push(this.homeDistrictField())\n        fields.push(this.homeTAField())\n        fields.push(this.homeVillageField())\n        fields.push(this.currentRegionField())\n        fields.push(this.currentDistrictField())\n        fields.push(this.currentTAField())\n        fields.push(this.currentVillage())\n        fields = fields.concat(this.landmarkFields())\n        fields.push(this.cellPhoneField())\n        fields.push(this.patientTypeField())\n        fields.push(this.facilityLocationField())\n        fields.push(this.occupationField())\n        fields.push(this.regimentField())\n        fields = fields.concat(this.dateJoinedMilitaryFields())\n        fields.push(this.rankField())\n        fields.push(this.relationshipField())\n        fields.push(this.possibleDuplicatesField())\n        fields.push(this.patientRegistrationSummary())\n        return fields\n    },\n    isEditMode() {\n        return this.editPerson >= 1\n    },\n    async initEditMode(personId: number) {\n        this.editPerson = personId\n        this.patient = await Store.get('ACTIVE_PATIENT', { patientID: parseInt(`${this.editPerson}`)})\n        const {\n            ancestryDistrict,\n            ancestryTA,\n            ancestryVillage,\n            currentDistrict,\n            currentTA\n        } = this.patient.getAddresses()\n        this.editPersonData = {\n            'given_name': this.patient.getGivenName(),\n            'family_name': this.patient.getFamilyName(),\n            'gender': this.patient.getGender(),\n            'birthdate': this.patient.getBirthdate(),\n            'home_district': ancestryDistrict,\n            'home_traditional_authority': ancestryTA,\n            'home_village': ancestryVillage,\n            'current_district': currentDistrict,\n            'current_traditional_authority': currentTA,\n            'cell_phone_number': this.patient.getPhoneNumber(),\n            'landmark': this.patient.getClosestLandmark()\n        }\n        this.presets = this.editPersonData\n        this.skipSummary = true\n        if(this.personAttribute) {\n            this.activeField = this.personAttribute\n            this.fieldComponent = this.activeField\n        }\n    },\n    async onFinish(form: Record<string, Option> | Record<string, null>, computedData: any) {\n        if (!this.isEditMode()) {\n            return this.create(form, computedData)\n        } else {\n            return this.update(computedData)\n        }\n    },\n    async create(_: any, computedData: any) {\n        let person: any = PersonField.resolvePerson(computedData)\n        person = this.presets.nationalIDStatus == \"true\" ? this.appendNationalIDData(person) : person\n        const attributes: Array<any> = this.resolvePersonAttributes(computedData)\n        const registration: any = new PatientRegistrationService()\n        const patient = new Patientservice((await registration.registerPatient(person, attributes)))\n        const patientID = registration.getPersonID()\n\n        Store.set('ACTIVE_PATIENT', patient) // update patient store\n \n        if(this.presets.nationalIDStatus == \"true\"){ \n            this.patient = patient\n            await this.patient.updateMWNationalId(this.presets.malawiNationalID)\n        }\n\n        if (this.app.onRegisterPatient) {\n            const exit = await this.app.onRegisterPatient(\n                patientID, person, attributes, this.$router, this.$route\n            )\n            if (exit) return\n        }\n        if (person.relationship === 'Yes') {\n            return this.$router.push(`/guardian/registration/${patientID}`)\n        }\n        await nextTask(patientID, this.$router)\n    },\n    appendNationalIDData(person: any){\n       return Object.assign(person,{\n            'given_name': this.presets.given_name,\n            'family_name': this.presets.family_name,\n            'gender': this.presets.gender,\n            'birthdate': this.presets.birthdate,\n            'birthdate_estimated': false\n        })\n    },\n    async update(computedData: any) {\n        const person: any = PersonField.resolvePerson(computedData)\n        const update = new PatientRegistrationService()\n\n        update.setPersonID(this.editPerson)\n        await update.updatePerson(person)\n        for(const attr in person) {\n            if (attr in this.editPersonData) {\n                this.editPersonData[attr] = person[attr]\n            }\n        }\n        Store.invalidate('ACTIVE_PATIENT')\n        if(!this.personAttribute) return this.fieldComponent = 'edit_user'\n        this.$router.back()\n    },\n    editConditionCheck(attributes=[] as Array<string>): boolean {\n        if (this.isEditMode() && !attributes.includes(this.activeField)) {\n            return false\n        }\n        return true\n    },\n    async confirmPatient() {\n        // Attempt to assign or reassign a patient's NPID if they dont have a valid one\n        if (this.ddeEnabled && (!this.patient.getDocID() \n            || (this.patient.getDocID() && this.patient.getNationalID().match(/unknown/i)))) {\n                try {\n                    await this.patient.assignNpid()\n                    await this.patient.printNationalID()\n                    await delayPromise(300)\n               } catch (e) {\n                    toastDanger(`Failed to assign new NPID: ${e}`)\n                }\n        }\n        this.$router.push(`/patients/confirm?person_id=${this.patient.getID()}`)\n    },\n    resolvePersonAttributes(form: Record<string, Option> | Record<string, null>) {\n        return Object.values(form)\n                    .filter((d: any) => isPlainObject(d) && 'personAttributes' in d)\n                    .map(({personAttributes}: any) => personAttributes)\n    },\n    mapToOption(listOptions: Array<string>): Array<Option> {\n        return listOptions.map((item: any) => ({ label: item, value: item }))\n    },\n    givenNameField(): Field {\n        const name: Field = PersonField.getGivenNameField()\n        name.condition = () => this.editConditionCheck(['given_name']) && this.presets.nationalIDStatus != \"true\"\n        name.defaultValue = () => this.presets.given_name\n        return name\n    },\n    familyNameField(): Field {\n        const name: Field = PersonField.getFamilyNameField()\n        name.condition = () => this.editConditionCheck(['family_name']) && this.presets.nationalIDStatus != \"true\"\n        name.defaultValue = () => this.presets.family_name\n        return name\n    },\n    genderField(): Field {\n        const IS_ANC_APP = this.app.applicationName === 'ANC'\n        const IS_CXCA = this.app.applicationName === 'CxCa'\n        const gender: Field = PersonField.getGenderField()\n        gender.requireNext = this.isEditMode()\n        gender.defaultValue = () => this.presets.gender\n        gender.condition = () => {\n            if (!this.isEditMode() && (IS_ANC_APP || IS_CXCA)) {\n                return false\n            }\n            return this.editConditionCheck(['gender']) && this.presets.nationalIDStatus != \"true\"\n        }\n        if ((IS_ANC_APP || IS_CXCA) && !this.isEditMode()) {\n            gender.defaultOutput = () => ({ label: 'Female', value: 'F' })\n            gender.defaultComputedOutput = () => ({ person: 'F' })\n        } \n\n        gender.beforeNext = async (data: Option) => {\n            /**\n             * Provide warning when changing gender in edit mode\n            */\n            const newGender = data.value\n            const oldGender = this.presets.gender\n            if (this.isEditMode() && newGender != oldGender) {\n                const action = await infoActionSheet(\n                    'Warning',\n                    `Changing gender from ${oldGender} to ${newGender}`,\n                    \"This change will cause data inconsistency and will affect alot of Reports.\",\n                    [\n                        {\n                            name: 'Cancel', slot: 'start'\n                        },\n                        {\n                            name: 'Change gender', slot: 'end', color: 'danger'\n                        }\n                    ]\n                )\n                return action === 'Change gender'\n            }\n            return true\n        }\n        return gender\n    },\n    dobFields(): Array<Field> {\n        const dobConfig = PersonField.getDobConfig()\n        dobConfig.defaultValue = () => this.presets.birthdate\n        dobConfig.condition = () => this.editConditionCheck([\n            'year_birth_date', 'month_birth_date', 'day_birth_date'\n        ])\n        // ANC validation to ensure that we are not registering\n        // Non child bearing youngsters\n        if (this.app.applicationName === 'ANC') {\n            const sdate = Patientservice.getSessionDate()\n            const childBearingAgeInYrs = 12\n            dobConfig.maxDate = () => dayjs(sdate)\n                .subtract(childBearingAgeInYrs, 'years')\n                .format(STANDARD_DATE_FORMAT)\n        }\n        return generateDateFields(dobConfig)\n    },\n    homeRegionField(): Field {\n        const region: Field = PersonField.getHomeRegionField()\n        region.condition = () => this.editConditionCheck(this.homeAddressAttributes)\n        return region\n    },\n    homeDistrictField(): Field {\n        const district: Field = PersonField.getHomeDistrictField()\n        district.condition = () => this.editConditionCheck(this.homeAddressAttributes)\n        return district\n    },\n    homeTAField(): Field {\n        const homeTA: Field = PersonField.getHomeTaField()\n        homeTA.condition = (form: any) => this.editConditionCheck(this.homeAddressAttributes)\n            && !form.home_region.label.match(/foreign/i)\n        return homeTA\n    },\n    homeVillageField(): Field {\n        const homeVillage: Field = PersonField.getHomeVillageField()\n        homeVillage.condition = (form: any) => this.editConditionCheck(this.homeAddressAttributes)\n            && !form.home_region.label.match(/foreign/i)\n        return homeVillage\n    },\n    currentRegionField(): Field {\n        const currentRegion: Field = PersonField.getCurrentRegionField()\n        currentRegion.condition = () => this.editConditionCheck(this.currentAddressAttributes)\n        return currentRegion\n    },\n    currentDistrictField(): Field {\n        const currentDistrict: Field = PersonField.getCurrentDistrictField()\n        currentDistrict.condition = () => this.editConditionCheck(this.currentAddressAttributes)\n        return currentDistrict\n    },\n    currentTAField(): Field {\n        const currentTA: Field = PersonField.getCurrentTAfield()\n        currentTA.condition = (form: any) => this.editConditionCheck(this.currentAddressAttributes)\n            && !form.current_region.label.match(/foreign/i)\n        return currentTA\n    },\n    currentVillage(): Field {\n        const currentVillage: Field = PersonField.getCurrentVillageField()\n        currentVillage.condition = (form: any) => this.editConditionCheck(this.currentAddressAttributes)\n            && !form.current_region.label.match(/foreign/i)\n        return currentVillage\n    },\n    cellPhoneField(): Field {\n        const cellPhone: Field = PersonField.getCellNumberField()\n        cellPhone.condition = () => this.editConditionCheck(['cell_phone_number'])\n        cellPhone.defaultValue = () => this.presets.cell_phone_number\n        return cellPhone\n    },\n    facilityLocationField(): Field {\n       const facility: Field = PersonField.getFacilityLocationField()\n       facility.condition = (form: any) => [\n           'Drug Refill',\n           'External consultation'\n       ].includes(form.patient_type.value)\n       return facility\n    },\n    landmarkFields(): Field[] {\n        const landmarks: Field[] = PersonField.getLandmarkFields()\n        landmarks[0].condition = () => this.editConditionCheck(['default_landmarks'])\n        return landmarks\n    },\n    patientTypeField(): Field {\n        return {\n            id: 'patient_type',\n            helpText: 'Type of patient',\n            type: FieldType.TT_SELECT,\n            computedValue: (val: Option) => ({person: val.value}),\n            condition: () => this.editConditionCheck(['patient_type'])\n                && this.app.applicationName === 'ART',\n            validation: (val: any) => Validation.required(val),\n            options: () => PatientTypeService.getPatientTypes()\n        }\n    },\n    occupationField(): Field {\n        return {\n            id: 'occupation',\n            helpText: 'Occupation',\n            type: FieldType.TT_SELECT,\n            init: async () => {\n               this.isMilitarySite = await GLOBAL_PROP.militarySiteEnabled()\n               return true \n            },\n            computedValue: (val: Option) => ({person: val.value}),\n            condition: () => this.editConditionCheck(['occupation']) && this.isMilitarySite,\n            validation: (val: any) => Validation.required(val),\n            options: () => this.mapToOption([\n                'Military',\n                'Civilian'\n            ])\n        }\n    },\n    regimentField(): Field {\n        return {\n            id: 'person_regiment_id',\n            helpText: 'Regiment ID',\n            type: FieldType.TT_TEXT,\n            computedValue: ({value}: Option) => ({\n                personAttributes: {\n                    'person_attribute_type_id': 35,\n                    'value': value\n                }\n            }),\n            condition: (form: any) => this.editConditionCheck(['person_regiment_id']) && form.occupation && form.occupation.value.match(/Military/i),\n            validation: (val: any) => Validation.required(val)\n        }\n    },\n    rankField(): Field {\n        return {\n            id: 'rank',\n            helpText: 'Rank',\n            type: FieldType.TT_SELECT,\n            validation: (val: any) => Validation.required(val),\n            computedValue: ({value}: Option) => ({\n                personAttributes: {\n                    'person_attribute_type_id': 36,\n                    'value': value\n                }\n            }),\n            condition: (form: any) => this.editConditionCheck(['rank']) && form.occupation && form.occupation.value.match(/Military/i),\n            options: () => this.mapToOption([\n                'First Lieutenant',\n                'Captain',\n                'Major',\n                'Lieutenant Colonel',\n                'Colonel',\n                'Brigadier General',\n                'Lieutenant General',\n                'General',\n                'Private',\n                'Corporal',\n                'Lance Corporal',\n                'Seargent',\n                'Staff Seargent',\n                'Warrant Officer class 1',\n                'Warrant Officer class 2'\n            ])\n        }\n    },\n    dateJoinedMilitaryFields(): Array<Field> {\n        return generateDateFields({\n            id: 'person_date_joined_military',\n            helpText: 'Joined Military',\n            required: true,\n            condition: (form: any) =>  this.editConditionCheck([\n                'year_person_date_joined_military',\n                'month_person_date_joined_military',\n                'day_person_date_joined_military'\n            ]) && form.occupation && form.occupation.value.match(/Military/i),\n            minDate: () => HisDate.estimateDateFromAge(100),\n            maxDate: () => WorkflowService.getSessionDate(),\n            estimation: {\n                allowUnknown: false\n            },\n            computeValue: (date: string) => ({\n                date,\n                personAttributes : {\n                    'person_attribute_type_id': 37, 'value': date\n                }\n            })\n        })\n    },\n    relationshipField(): Field {\n        const IS_CXCA = this.app.applicationName === 'CxCa'\n        const OPD = this.app.applicationName === 'OPD'\n        const Registration = this.app.applicationName === 'Registration'\n        return {\n            id: 'relationship',\n            helpText: 'Register guardian?',\n            type: FieldType.TT_SELECT,\n            computedValue: (val: Option) => ({person: val.value}),\n            condition: () => this.editConditionCheck(['relationship']) && !IS_CXCA && !OPD && !Registration,\n            validation: (val: any) => Validation.required(val),\n            options: () => this.mapToOption(['Yes', 'No'])\n        }\n    },\n    searchResultField(): Field {\n        return {\n            id: 'results',\n            helpText: 'Search results',\n            type: FieldType.TT_PERSON_RESULT_VIEW,\n            init: async () => {\n                if (!this.isEditMode()) { \n                    this.ddeEnabled = await Store.get('IS_DDE_ENABLED')\n                }\n                return true\n            },\n            dynamicHelpText: (form: any) => {\n                return this.presets.nationalIDStatus == \"true\" ?\n                 `Search results for \"${this.presets.given_name} ${this.presets.family_name} | ${this.presets.gender}\"` : \n                 `Search results for \"${form.given_name.value} ${form.family_name.value} | ${form.gender.label}\"`;\n            },\n            appearInSummary: () => false,\n            condition: () => !this.isEditMode(),\n            validation: (val: Option) => Validation.required(val),\n            options: async (form: any) => {\n                let payload;\n                if(this.presets.nationalIDStatus == \"true\"){\n                    this.presets.gender = this.presets.gender == \"Male\" ? \"M\" : \"F\"\n                    payload  = {\n                        'given_name': this.presets.given_name,\n                        'family_name': this.presets.family_name,\n                        'gender': this.presets.gender\n                    } \n                }\n                else{\n                    payload = {\n                        'given_name': form.given_name.value,\n                        'family_name': form.family_name.value,\n                        'gender': form.gender.value\n                    }\n                }\n                // DDE enabled search\n                if (this.ddeEnabled) {\n                    const patients = await this.ddeInstance.searchDemographics(payload)\n                    return patients.map((item: any) => {\n                        const itemData = PersonField.getPersonAttributeOptions(item)\n                        itemData.other.options.push({\n                            label: 'Patient Type',\n                            value: item.patient_type\n                        })\n                        itemData.other.options.push({\n                            label: 'Doc ID',\n                            value: item.doc_id\n                        })\n                        return itemData\n                    })\n                }\n                // Regular search\n                const patients = await Patientservice.search(payload);\n                return patients.map((item: any) => PersonField.getPersonAttributeOptions(item))\n            },\n            config: {\n                hiddenFooterBtns: [\n                    'Clear',\n                    'Next',\n                    'Back'\n                ],\n                footerBtns: [\n                    {\n                        name: 'Edit Search',\n                        slot: 'end',\n                        onClick: () => {\n                            this.fieldComponent = 'given_name'\n                        }\n                    },\n                    {\n                        name: 'New Patient',\n                        slot: 'end',\n                        onClick: () => {\n                            this.presets.nationalIDStatus != \"true\"?\n                            this.fieldComponent = 'year_birth_date':\n                            this.fieldComponent = 'home_region'\n                        }\n                    },\n                    {\n                        name: 'Continue',\n                        color: 'success',\n                        slot: 'end',\n                        state: {\n                            disabled: {\n                                default: () => true,\n                                onValue(_: any,form: any) {\n                                    return isEmpty(form.results)\n                                }\n                            }\n                        },\n                        onClick: (form: any) => {\n                            return this.$router.push(`/patients/confirm?person_id=${form.results.value}`)\n                        }\n                    }\n                ]\n            }\n        }\n    },\n    possibleDuplicatesField(): Field {\n        let createdPerson: any = {}\n        let duplicatePatients: any = {}\n        return {\n            id: 'possible_duplicates',\n            helpText: 'Possible Duplicate(s)',\n            type: FieldType.TT_PERSON_MATCH_VIEW,\n            condition: async (_: any, c: any) => {\n                if (this.ddeEnabled && !this.editPerson) {\n                    createdPerson = PersonField.resolvePerson(c)\n                    duplicatePatients = await this.ddeInstance\n                        .checkPotentialDuplicates(createdPerson)\n                    return duplicatePatients.length >= 1\n                }\n                return false\n            },\n            options: async () => {\n                const toDate = (date: string) => HisDate.toStandardHisDisplayFormat(date)\n                return duplicatePatients.map(({ score, person }: any) => {\n                    const name = `${person.given_name} ${person.family_name}`\n                    return {\n                        label: name,\n                        value: person.patient_id,\n                        other: {\n                            score: `${score * 100}%`,\n                            newPerson: createdPerson,\n                            foundPerson: person,\n                            comparisons: [\n                                [\n                                    'Name',\n                                    `${createdPerson.given_name} ${createdPerson.family_name}`,\n                                    `${person.given_name} ${person.family_name}`\n                                ],\n                                [\n                                    'Gender',\n                                    createdPerson.gender,\n                                    person.gender\n                                ],\n                                [\n                                    'Birthdate',\n                                    toDate(createdPerson.birthdate),\n                                    toDate(person.birthdate)\n                                ],\n                                [\n                                    'Home District',\n                                    createdPerson.home_district,\n                                    person.home_district\n                                ],\n                                [\n                                    'Home TA',\n                                    createdPerson.home_traditional_authority,\n                                    person.home_traditional_authority\n                                ]\n                            ]\n                        }\n                    }\n                })\n            },\n            config: {\n                hiddenFooterBtns: [\n                    'Clear',\n                    'Next'\n                ],\n                footerBtns: [\n                    {\n                        name: 'Not Duplicate',\n                        slot: 'start',\n                        state: {\n                            visible: {\n                                default: () => false,\n                                onValue: (_: any, f: any) => !isEmpty(f.possible_duplicates)\n                            }\n                        },\n                        onClick: () => {\n                            this.fieldComponent = '_NEXT_FIELD_'\n                        }\n                    },\n                    {\n                        name: 'Confirm',\n                        slot: 'end',\n                        color: 'warning',\n                        state: {\n                            visible: {\n                                default: () => false,\n                                onValue: (_: any, f: any) => !isEmpty(f.possible_duplicates)\n                            }\n                        },\n                        onClick: (form: any) => {\n                            this.$router.push(`/patients/confirm?person_id=${form.possible_duplicates.value}`)\n                        }\n                    }\n                ]\n            }\n        }\n    },\n    personIndexField(): Field {\n        return {\n            id: 'edit_user',\n            helpText: 'Edit Demographics',\n            type: FieldType.TT_TABLE_VIEWER,\n            init: async () => {\n                if (this.isEditMode()) {\n                    this.ddeEnabled = await Store.get('IS_DDE_ENABLED')\n                }\n                return true\n            },\n            condition: () => this.isEditMode(),\n            options: async () => {\n                const editButton = (attribute: string) => ({\n                    name: 'Edit',\n                    type: 'button',\n                    action: () => {\n                        this.activeField = attribute\n                        this.fieldComponent = this.activeField\n                    }\n                })\n                const columns = ['Attributes', 'Values', 'Edit']\n                const rows = [\n                    ['Given Name', this.editPersonData.given_name, editButton('given_name')],\n                    ['Family Name', this.editPersonData.family_name, editButton('family_name')],\n                    ['Gender', this.editPersonData.gender,  editButton('gender')],\n                    ['Birthdate', HisDate.toStandardHisDisplayFormat(this.editPersonData.birthdate),  editButton('year_birth_date')],\n                    ['Cell Phone Number', this.editPersonData.cell_phone_number, editButton('cell_phone_number')],\n                    ['Home District', this.editPersonData.home_district, editButton('home_region')],\n                    ['Home TA', this.editPersonData.home_traditional_authority,  editButton('home_region')],\n                    ['Home Village', this.editPersonData.home_village,  editButton('home_region')],\n                    ['Current district',this.editPersonData.current_district, editButton('current_region')],\n                    ['Current T/A', this.editPersonData.current_traditional_authority, editButton('current_region')],\n                    ['Landmark', this.editPersonData.landmark, editButton('default_landmarks')],\n                ]\n                // Tag rows with empty values\n                const emptySets: any = {indexes: [], class: 'his-empty-set-color'}\n                rows.forEach((r: any, i: number) => {\n                    if (isValueEmpty(r[1])) \n                        emptySets.indexes.push(i)\n                })\n                this.hasIncompleteData = emptySets.indexes.length >= 1\n                return [{\n                    label: '', \n                    value: '',\n                    other: {\n                        rows,\n                        columns,\n                        rowColors: [emptySets]\n                    }\n                }]\n            },\n            config: {\n                footerBtns: [\n                    /**\n                     * Custom button that Appears when DDE wants to\n                     * Reassign a patient with incomplete data\n                    */\n                    {\n                        name: 'Reassign',\n                        slot: 'end',\n                        color: 'success',\n                        state: {\n                            visible: {\n                                default: () => false,\n                                onload: () => (\n                                    this.ddeEnabled\n                                    && this.ddeIsReassign\n                                    && !this.hasIncompleteData\n                                )\n                            }\n                        },\n                        onClick: async () => {\n                            try {\n                                await this.ddeInstance.reassignNpid(this.ddeDocID, this.editPerson)\n                                await this.ddeInstance.printNpid()\n                                this.$router.push(`/patients/confirm?person_id=${this.editPerson}`)\n                            } catch(e) {\n                                toastWarning(`${e}`)\n                            }\n                        }\n                    },\n                    /**\n                     * Custom button that redirects to patient confirmation page\n                     */\n                    {\n                        name: 'Confirm',\n                        slot: 'end',\n                        color: 'warning',\n                        state: {\n                            visible: {\n                                onload: () => !this.ddeIsReassign && !this.hasIncompleteData\n                            }\n                        },\n                        onClick: async () => this.confirmPatient()\n                    }\n                ],\n                hiddenFooterBtns: ['Clear', 'Next']\n            }\n        }\n    },\n    patientRegistrationSummary(): Field \n    {\n        return{\n          id: \"registration_summary\",\n          helpText: \"Summary\",\n          type: FieldType.TT_SUMMARY,\n          condition: () => !this.skipSummary,\n          options: (f: any, c: any) => {  \n                return this.buildRegistrationSummary(c)\n          },\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          }\n        }\n    },\n    buildRegistrationSummary(data: any){\n        data = Object.keys(data).map(function(key, index) {\n            if(data[key] != null){\n                return {\n                'label': key.replace(/_/g,' ').replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase()),\n                'value': key == \"birth_date\" ? data[key]['date'] : data[key]['person']\n                } \n            }\n        });\n        data = data.filter((x: any)=>{\n            return x != undefined\n        })\n\n       const nationalIDData = [\n            {\n                'label': \"Given Name\",\n                'value': this.presets.given_name\n            },\n            {\n                'label': \"Family Name\",\n                'value': this.presets.family_name\n            },\n            {\n                'label': \"Gender\",\n                'value': this.presets.gender\n            },\n            {\n                'label': \"Birthdate\",\n                'value': this.presets.birthdate\n            },\n            {\n                'label': \"Malawi National ID\",\n                'value': this.presets.malawiNationalID\n            } \n        ]\n        if(this.presets.nationalIDStatus == \"true\")\n            data = nationalIDData.concat(data)\n\n        return data\n    }\n  }\n})\n","import { render } from \"./RadioActionSheet.vue?vue&type=template&id=23709ba4&scoped=true&ts=true\"\nimport script from \"./RadioActionSheet.vue?vue&type=script&lang=ts\"\nexport * from \"./RadioActionSheet.vue?vue&type=script&lang=ts\"\n\nimport \"./RadioActionSheet.vue?vue&type=style&index=0&id=23709ba4&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-23709ba4\"]])\n\nexport default __exports__","import TableSheet from \"@/components/DataViews/actionsheet/TableActionSheet.vue\"\nimport InfoSheet from \"@/components/DataViews/actionsheet/InfoActionSheet.vue\"\nimport RadioSheet from \"@/components/DataViews/actionsheet/RadioActionSheet.vue\"\nimport ListSheet from \"@/components/DataViews/actionsheet/InfoListActionSheet.vue\"\nimport { modalController } from \"@ionic/vue\";\n\n/**\n * Ionic 5 has a bug where when you open a modal using modalController.create() it creates duplicate modals on the same div.\n * This issue mostly happens when openning another modal immediately after closing the previous one.\n * This function is a workaround to detect duplicate elements and remove them. \n * \n * We query the DOM exponetially every X amount of milliseconds to check for duplicate elements in the modal.\n */\nfunction sanitizeModal() {\n    const detectDuplicateModal = (retryCount: number, sleep: number) => {\n        setTimeout(() => {\n            const modals = document.getElementsByClassName(\"modal-wrapper\")\n            if (modals.length) {\n                const modal = modals[0]\n                const headers = modal.getElementsByTagName('ion-header')\n                if (headers.length >= 2) {\n                    headers[1].remove()\n                } else {\n                    if (retryCount < 20) { \n                        detectDuplicateModal(retryCount+1, sleep + 100)\n                    }\n                }\n                const content = modal.getElementsByTagName('ion-content')\n                if (content.length >= 2) {\n                    content[1].remove()\n                }\n                const footer = modal.getElementsByTagName('ion-footer')\n                if (footer.length >= 2) {\n                    if (footer[1].parentElement) footer[1].parentElement.remove()\n                }\n            } else {\n                if (retryCount < 5) { \n                    detectDuplicateModal(retryCount+1, sleep + 100)\n                }\n            }\n        }, sleep)\n    }\n    detectDuplicateModal(0, 0)\n}\n\nexport async function tableActionSheet(\n    title: string,\n    subtitle: string,\n    columns: Array<string>,\n    rows: Array<string>,\n    actionButtons: Array<any>,\n    color = '',\n    rowColors:  Array<any>=[])\n    {\n        const modal = await modalController.create({\n        component: TableSheet,\n        backdropDismiss: false,\n        cssClass: \"action-sheet-modal\",\n        componentProps: {\n            title,\n            subtitle,\n            columns,\n            rows,\n            rowColors,\n            actionButtons,\n            color\n        }\n        })\n        await modal.present()\n        sanitizeModal()\n        const { data } = await modal.onDidDismiss()\n        return data.action\n    }\n\nexport async function listActionSheet(\n    title: string,\n    subtitle: string,\n    list: Array<string>,\n    actionButtons: Array<any>,\n    color = '')\n    {\n        const modal = await modalController.create({\n        component: ListSheet,\n        backdropDismiss: false,\n        cssClass: \"action-sheet-modal\",\n        componentProps: {\n            title,\n            subtitle,\n            actionButtons,\n            list,\n            color\n        }\n        })\n        await modal.present()\n        sanitizeModal()\n        const { data } = await modal.onDidDismiss()\n        return data.action\n    }\n\nexport async function infoActionSheet(\n    title: string, \n    bodyTitle: string,\n    bodyText: string,\n    actionButtons: Array<any>,\n    color = '')\n    {\n        const modal = await modalController.create({\n        component: InfoSheet,\n        backdropDismiss: false,\n        cssClass: \"action-sheet-modal\",\n        componentProps: {\n            title,\n            bodyTitle,\n            bodyText,\n            actionButtons,\n            color\n        }\n        })\n        await modal.present()\n        sanitizeModal()\n        const { data } = await modal.onDidDismiss()\n        return data.action\n    }\n\nexport async function optionsActionSheet(\n    title: string, \n    subtitle: string, \n    list: Array<string>, \n    actionButtons: Array<any>,\n    color = 'darkred',\n    size = 'action-sheet-modal')\n    {\n        const modal = await modalController.create({\n        component: RadioSheet,\n        backdropDismiss: false,\n        cssClass: size,\n        componentProps: {\n            title,\n            subtitle,\n            color,\n            list,\n            actionButtons\n        }\n        })\n        await modal.present()\n        sanitizeModal()\n        const { data } = await modal.onDidDismiss()\n        return data\n    }\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InfoListActionSheet.vue?vue&type=style&index=0&id=d609962e&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InfoActionSheet.vue?vue&type=style&index=0&id=1c798292&scoped=true&lang=css\"","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TableActionSheet.vue?vue&type=template&id=1d30c2d4&ts=true\"\nimport script from \"./TableActionSheet.vue?vue&type=script&lang=ts\"\nexport * from \"./TableActionSheet.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./InfoActionSheet.vue?vue&type=template&id=1c798292&scoped=true&ts=true\"\nimport script from \"./InfoActionSheet.vue?vue&type=script&lang=ts\"\nexport * from \"./InfoActionSheet.vue?vue&type=script&lang=ts\"\n\nimport \"./InfoActionSheet.vue?vue&type=style&index=0&id=1c798292&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1c798292\"]])\n\nexport default __exports__","import { render } from \"./InfoListActionSheet.vue?vue&type=template&id=d609962e&scoped=true&ts=true\"\nimport script from \"./InfoListActionSheet.vue?vue&type=script&lang=ts\"\nexport * from \"./InfoListActionSheet.vue?vue&type=script&lang=ts\"\n\nimport \"./InfoListActionSheet.vue?vue&type=style&index=0&id=d609962e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d609962e\"]])\n\nexport default __exports__","import { render } from \"./PatientRegistration.vue?vue&type=template&id=38dcc39e&ts=true\"\nimport script from \"./PatientRegistration.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientRegistration.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RadioActionSheet.vue?vue&type=style&index=0&id=23709ba4&scoped=true&lang=css\""],"sourceRoot":""}