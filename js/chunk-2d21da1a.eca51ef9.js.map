{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/ART/views/encounters/FastTrack.vue"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","FastTrackService","AppEncounterService","constructor","patientID","providerID","super","getAssessmentValues","getConceptsByCategory","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","fastTrack","options","values","gender","watch","ready","this","init","patient","immediate","methods","formData","encounter","createEncounter","toastWarning","obs","buildObs","observations","saveObservationList","toastSuccess","nextTask","getGender","getID","getYesNo","getOptions","getFields","push","buildValueCoded","ft_assessment","value","ft_questions","forEach","async","element","label","book_client","map","name","other","filter","match","id","helpText","type","FieldType","TT_SELECT","validation","val","Validation","required","TT_MULTIPLE_YES_NO","condition","anyEmpty","__exports__"],"mappings":"uIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMC,EAA+BC,8BAAkB,qBAEvD,OAAQC,yBAAcC,yBAAaH,EAA8B,CAC/DI,OAAQV,EAAKU,OACbC,eAAgBX,EAAKY,SACrBC,aAAa,EACbC,sBAAuBd,EAAKe,mBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,0B,gECTrC,MAAOC,UAAyBC,OACpCC,YAAYC,EAAmBC,GAC7BC,MAAMF,EAAW,IAAKC,GAExBE,sBACE,OAAOL,OAAoBM,sBAAsB,e,gBCGtCC,+BAAgB,CAC7BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,wBACdC,KAAM,KAAM,CACVnB,OAAQ,GACRoB,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,OAAQ,OAEVC,MAAO,CACLC,MAAO,CACL,cAAcA,GACRA,GAAOC,KAAKC,KAAKD,KAAKE,UAE5BC,WAAW,IAGfC,QAAS,CACP,eAAeC,GACb,MAAMC,QAAkBN,KAAKN,UAAUa,kBACvC,IAAID,EASF,OAAOE,eAAa,yCATP,CACb,MAAMC,QAAYT,KAAKU,SAASL,GAC1BM,QAAqBX,KAAKN,UAAUkB,oBAAoBH,GAC9D,IAAKE,EACH,OAAOH,eAAa,uCAEtBK,eAAa,uCACbb,KAAKc,aAKT,WAAWZ,GACTF,KAAKH,OAASK,EAAQa,YACtBf,KAAKN,UAAY,IAAId,EAAiBsB,EAAQc,QAAShB,KAAKhB,YAC5DgB,KAAKJ,aAAeI,KAAKiB,WACzBjB,KAAKL,cAAgBK,KAAKkB,aAC1BlB,KAAK1B,OAAS0B,KAAKmB,aAErB,eAAed,GACb,MAAMM,EAAe,GAqBrB,OApBAA,EAAaS,WACLpB,KAAKN,UAAU2B,gBACnB,wBACAhB,EAASiB,cAAcC,QAGvBlB,EAASmB,qBACLnB,EAASmB,aAAaC,QAAQC,UAClCf,EAAaS,WACLpB,KAAKN,UAAU2B,gBAAgBM,EAAQC,MAAOD,EAAQJ,UAIhEZ,EAAaS,WACLpB,KAAKN,UAAU2B,gBACnB,aACAhB,EAASwB,YAAYN,SAIpBZ,GAET,mBACE,MAAMf,EAASI,KAAKiB,WACdtB,QAAgBK,KAAKN,UACxBR,oBAAoB,cACpB4C,IAAKrC,IACG,CACLmC,MAAOnC,EAAKsC,KACZR,MAAO,GACPS,MAAO,CACLpC,OAAQA,MAIhB,MAAoB,MAAhBI,KAAKH,OACAF,EAAQsC,OAAQxC,IACbA,EAAKmC,MAAMM,MAAM,cAGtBvC,GAETsB,WACE,MAAO,CACL,CACEW,MAAO,MACPL,MAAO,OAET,CACEK,MAAO,KACPL,MAAO,QAIbJ,YACE,MAAO,CACL,CACEgB,GAAI,gBACJC,SAAU,uBACVC,KAAMC,OAAUC,UAChBC,WAAaC,GAAaC,OAAWC,SAASF,GAC9C9C,QAAS,IAAMK,KAAKiB,YAEtB,CACEkB,GAAI,eACJC,SAAU,uBACVC,KAAMC,OAAUM,mBAChBC,UAAUxC,GACR,MAAwC,QAAjCA,EAASiB,cAAcC,OAEhCiB,WAAaC,GAAaC,OAAWI,SAASL,GAC9C9C,QAAS,IACAK,KAAKL,SAGhB,CACEwC,GAAI,cACJC,SAAU,+BACVC,KAAMC,OAAUC,UAChBM,UAAUxC,GACR,MAAwC,QAAjCA,EAASiB,cAAcC,OAEhCiB,WAAaC,GAAaC,OAAWC,SAASF,GAC9C9C,QAAS,IAAM,CACb,CACEiC,MAAO,aACPL,MAAO,MAET,CACEK,MAAO,eACPL,MAAO,a,qBCxIrB,MAAMwB,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASpF,KAErD","file":"js/chunk-2d21da1a.eca51ef9.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class FastTrackService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 156, providerID);\n  }\n  getAssessmentValues() {\n    return AppEncounterService.getConceptsByCategory(\"fast_track\")\n  }\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { FastTrackService } from \"@/apps/ART/services/fast_track_service\";\nimport { toastSuccess, toastWarning } from \"@/utils/Alerts\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    fields: [] as any,\n    fastTrack: {} as any,\n    options: [] as any,\n    values: [] as any,\n    gender: null as any,\n  }),\n  watch: {\n    ready: {\n      async handler(ready: any) {\n        if (ready) this.init(this.patient);\n      },\n      immediate: true\n    },\n  },\n  methods: {\n    async onFinish(formData: any) {\n      const encounter = await this.fastTrack.createEncounter();\n      if (encounter) {\n        const obs = await this.buildObs(formData);\n        const observations = await this.fastTrack.saveObservationList(obs);\n        if (!observations)\n          return toastWarning(\"Unable to save patient observations\");\n\n        toastSuccess(\"Observations and encounter created!\");\n        this.nextTask();\n      } else {\n        return toastWarning(\"Unable to create fast track encounter\");\n      }\n    },\n    async init(patient: any) {\n      this.gender = patient.getGender();\n      this.fastTrack = new FastTrackService(patient.getID(), this.providerID);\n      this.values = await this.getYesNo();\n      this.options = await this.getOptions();\n      this.fields = this.getFields();\n    },\n    async buildObs(formData: any) {\n      const observations = [];\n      observations.push(\n        await this.fastTrack.buildValueCoded(\n          \"Assess for fast track\",\n          formData.ft_assessment.value\n        )\n      );\n      if (formData.ft_questions) {\n        await formData.ft_questions.forEach(async (element: any) => {\n          observations.push(\n            await this.fastTrack.buildValueCoded(element.label, element.value)\n          );\n        });\n\n        observations.push(\n          await this.fastTrack.buildValueCoded(\n            \"Fast track\",\n            formData.book_client.value\n          )\n        );\n      }\n      return observations;\n    },\n    async getOptions() {\n      const values = this.getYesNo();\n      const options = await this.fastTrack\n        .getAssessmentValues(\"fast_track\")\n        .map((data: any) => {\n          return {\n            label: data.name,\n            value: \"\",\n            other: {\n              values: values,\n            },\n          };\n        });\n      if (this.gender === \"M\") {\n        return options.filter((data: any) => {\n          return !data.label.match(/Pregnant/i);\n        });\n      }\n      return options;\n    },\n    getYesNo() {\n      return [\n        {\n          label: \"yes\",\n          value: \"Yes\",\n        },\n        {\n          label: \"no\",\n          value: \"No\",\n        },\n      ];\n    },\n    getFields(): any {\n      return [\n        {\n          id: \"ft_assessment\",\n          helpText: `Assess client for FT`,\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => this.getYesNo(),\n        },\n        {\n          id: \"ft_questions\",\n          helpText: \"Assess client for FT\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          condition(formData: any) {\n            return formData.ft_assessment.value === \"Yes\";\n          },\n          validation: (val: any) => Validation.anyEmpty(val),\n          options: () => {\n            return this.options;\n          },\n        },\n        {\n          id: \"book_client\",\n          helpText: \"Select type of visit to book\",\n          type: FieldType.TT_SELECT,\n          condition(formData: any) {\n            return formData.ft_assessment.value === \"Yes\";\n          },\n          validation: (val: any) => Validation.required(val),\n          options: () => [\n            {\n              label: \"Fast track\",\n              value: \"No\",\n            },\n            {\n              label: \"Normal visit\",\n              value: \"No\",\n            },\n          ],\n        },\n      ];\n    },\n  },\n});\n","import { render } from \"./FastTrack.vue?vue&type=template&id=1b5fd420&ts=true\"\nimport script from \"./FastTrack.vue?vue&type=script&lang=ts\"\nexport * from \"./FastTrack.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}