{"version":3,"sources":["webpack:///./src/apps/OPD/services/patient_complaints_service.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?83cf","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?0184","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?191a","webpack:///./src/components/DataViews/LabOrderModal.vue?25fe","webpack:///./src/components/DataViews/LabOrderModal.vue","webpack:///./src/components/DataViews/LabOrderModal.vue?f7ba","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?7f9d","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?6ccb","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?0f87","webpack:///./src/apps/OPD/views/encounters/Complaints.vue","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?b3bc","webpack:///./src/components/DataViews/LabOrderModal.vue?8bed"],"names":["PatientComplaintsService","AppEncounterService","constructor","patientID","providerID","super","complaintType","filter","ConceptService","getConceptSet","getObs","getConceptID","this","date","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","async","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","offlineID","patient","fields","facts","age","gender","isEnrolledInProgam","village","district","currentTA","formLabel","ready","created","$route","params","patient_id","parseInt","goOffline","initOfflineData","Store","get","then","patientData","isEmpty","Offline","cachePatient","setEncounterFacts","checkEncounterGuidelines","catch","e","console","log","computed","cancelDestination","patientDashboardUrl","methods","isOnline","isOfflineMode","offline","findByID","person","personParams","birthdate","dayjs","ProgramService","getSessionDate","diff","current_district","current_village","current_traditional_authority","status","obs","resolveObs","computedData","error","toastWarning","enc","encounterTypeID","createEncounter","saveObservationList","callback","test","toastDanger","saveObsOffline","observations","id","uploadStatus","meta","formData","labOrders","skipNextTask","nextTask","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","program","programID","getProgramID","getCurrentTA","getCurrentDistrict","getCurrentVillage","getCachedApiDate","getBirthdate","getAge","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","yesNoOptions","toYesNoOption","values","mapOptions","options","option","toConditionalOptions","final","yesNoUnknownOptions","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","style","background","height","_hoisted_5","_hoisted_6","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_checkbox","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_radio","_component_ion_radio_group","_component_ion_button","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_footer","_createElementBlock","_Fragment","_createVNode","_withCtx","_createTextVNode","_","size","overflowY","_renderList","testTypes","key","disabled","activeIndex","isOrderComplete","detail","_toDisplayString","modelValue","isChecked","$event","onIonChange","onSelectTest","selectedOrders","extendedLabsEnabled","_createCommentVNode","specimens","onClick","addSpecimen","testReasons","finalOrders","specimen","reason","removeOrder","currentIndex","postActivities","closeModal","activities","testFilters","watch","handler","appActivities","getActivities","immediate","ART_GLOBAL_PROP","extendedLabEnabled","testName","event","$nextTick","checked","OrderService","getSpecimens","tests","getTestTypes","vlIndex","findIndex","viralLoad","splice","sorted","t","concept_id","orders","LabOrderService","encounter","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","invalidate","canPrintOrders","alertConfirmation","confirmBtnLabel","cancelBtnLabel","printOrders","modalController","dismiss","PrintoutService","forEach","url","element","order_id","printLbl","match","reasons","mounted","content","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonLabel","IonList","IonItem","IonCheckbox","IonRadioGroup","IonRow","_component_his_standard_form","_component_ion_page","onSubmit","_component_his_radiology_picker","onOnValue","onValue","emitedSelectedOptions","IonFooter","HisRadiologyPicker","mixins","EncounterMixinVue","radiologyService","isPacsEnabled","isReady","PatientRadiologyService","OPD_GLOBAL_PROP","isPACsEnabled","deep","selected","buildValueCoded","parent","child","buildValueCodedFromConceptId","getSelected","obsObj","savedObsData","submitToPacs","IonPage","complaintsService","todaysDate","ObservationService","presentingComplaints","radiologyBtnName","hasTriageComplaints","getTriagePresentingComplaints","getFields","complaints","create","component","LabOrderModal","backdropDismiss","cssClass","present","onDidDismiss","radiology","fetchLatestTriageEncounter","encounters","EncounterService","getEncounters","todayPresentingComplaints","el","toStandardHisFormat","encounter_datetime","buildResults","columns","group","rows","item","obs_group_id","value_text","helpText","FieldType","TT_TABLE_VIEWER","config","hiddenFooterBtns","TT_COMPLAINTS_PICKER","validation","Validation","computedValue","showRadiologyOdersBtn","disableBackBtn","footerBtns","visible","launchOrderSelection","visibleOnStateChange","launchRadiologyOrderSelection","TT_SUMMARY","buildSummaryResults","OPDComplaint","triageComplaint"],"mappings":"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","file":"js/chunk-28137ca3.d54bb4de.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\n\nexport class PatientComplaintsService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 122, providerID) \n  }\n\n  static async getComplaintsList(complaintType: string, filter = '') {\n    return ConceptService.getConceptSet(complaintType, filter) \n  }\n  async fetchLatestTriageEncounter() { \n   return await PatientComplaintsService.getObs({\n        'concept_id': ConceptService.getConceptID(\"History of COVID-19 contact\") ,\n        'start_date': this.date,\n        'end_date': this.date,\n        'person_id': this.patientID,\n    })\n  }\n}\n","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger, toastWarning } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\nimport { Offline, isOfflineMode, isOnline } from '@/composables/offline'\nimport dayjs from 'dayjs'\nimport { AppEncounterService } from '@/services/app_encounter_service'\nimport { ObsValue } from '@/services/observation_service'\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        offlineID: null as any,\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            age: -1 as number,\n            gender: '' as string,\n            birthDate: '' as string,\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            isEnrolledInProgam: false as boolean,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            outcome: '' as string,\n            outcomeStartDate: '' as string,\n            village: '' as string,\n            district: '' as string,\n            currentTA: '' as string,\n        },\n        formLabel: '' as string,\n        ready: false\n    }),\n    created() {\n        if (this.$route.params.patient_id) {\n            this.offlineID = this.$route.params.patient_id\n            this.patientID = parseInt(`${this.$route.params.patient_id}`);\n            if (this.goOffline()) {\n                this.initOfflineData()\n            } else {\n                Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                    .then(patientData => {\n                        this.patient = patientData\n                        if (!isEmpty(this.patient)) {\n                            Offline().cachePatient(this.patient)\n                        }\n                        this.setEncounterFacts().then(() => {\n                            this.checkEncounterGuidelines().then(() => {\n                                this.ready = true\n                            }).catch((e) => console.log(e))\n                        }).catch(() => {\n                            if (this.goOffline()) {\n                                this.initOfflineData()\n                            }\n                        })\n                    })\n            }\n        }\n    },\n    computed: {\n        cancelDestination(): string { return this.patientDashboardUrl() }\n    },\n    methods: {\n        goOffline(){\n            return !isOnline.value || isOfflineMode.value\n        },\n        isOnline() {\n            return isOnline.value\n        },\n        isOfflineMode() {\n            return isOfflineMode.value\n        },\n        initOfflineData() {\n            const offline = Offline().findByID(this.offlineID)\n            const person = offline?.personParams?.person\n            if (!person) return\n            this.facts.birthDate = person.birthdate\n            this.facts.age = dayjs(ProgramService.getSessionDate()).diff(\n                this.facts.birthDate, 'years'\n            )\n            this.facts.district = person.current_district\n            this.facts.village = person.current_village\n            this.facts.currentTA = person.current_traditional_authority\n            this.facts.gender = person.gender\n            this.ready = true\n        },\n        async saveFormEncounterAndProceed(params={} as any) {\n            let status = 'Pending'\n            let created = false\n            let obs = null\n            try {\n                obs = await this.resolveObs(params.computedData)\n            } catch (e) {\n                console.error(`${e}`)\n                return toastWarning(\"Unable to resolve observations\")\n            }\n            if (!this.isOfflineMode()) {\n                try {\n                    const enc = new AppEncounterService(\n                        this.patientID,\n                        params.encounterTypeID, \n                        this.providerID\n                    )\n                    if ((await enc.createEncounter())) {\n                        if ((await enc.saveObservationList(obs as ObsValue[]))) {\n                            status = 'Success'\n                            created = true\n                        }\n                    }\n                    if (typeof params.callback === 'function') {\n                        await params.callback(enc)\n                    }\n                } catch (e) {\n                    created = false\n                    if (/NetworkError|Failed to fetch/i.test(`${e}`)) {\n                        status = 'NetworkError'\n                    } else {\n                        status = 'Exception'\n                        console.error(`Exception while saving an encounter: ${e}`)\n                    }\n                }\n                if (status === 'Exception') {\n                    return toastDanger(\"An error has occured!\")\n                }\n            }\n            Offline().saveObsOffline({\n                observations: obs,\n                id: this.offlineID,\n                uploadStatus: status,\n                encounterName: this.$route.name,\n                encounterTypeID: params.encounterTypeID,\n                meta: params.formData,\n                labOrders: params.labOrders,\n                created\n            })\n            if (!params.skipNextTask) this.nextTask()\n        },\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.isEnrolledInProgam = program.programID === ProgramService.getProgramID()\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.currentTA = this.patient.getCurrentTA()\n            this.facts.district = this.patient.getCurrentDistrict()\n            this.facts.village = this.patient.getCurrentVillage()\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.age = this.patient.getAge()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: Array<string | Option>) {\n            return items.map(i => typeof i === 'string' || typeof i === 'number'  \n                ?  { label: i, value: i } : i \n            )\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.$route.params.patient_id}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        async nextTask() {\n            try {\n                const id = this.offlineID || this.patientID\n                await nextTask(id, this.$router, this.$route)\n            } catch (e) {\n                console.error(\"Workflow error \" +  e)\n                this.gotoPatientDashboard()\n            }\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });        \n        },\n        toConditionalOptions(options: Array<Array<string | boolean | undefined>>) {\n            const final: Option[] = []\n            for(const option of options) {\n                if (typeof option[1] === 'boolean') {\n                    if (option[1]) final.push(this.toOption(option[0] as string))\n                    continue\n                }\n                final.push(this.toOption(option[0] as string))\n            }\n            return final\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/brian/projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Complaints.vue?vue&type=style&index=0&id=14155b15&lang=css\"","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd0a6c2e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"ion-margin-bottom\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Select specimen \", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Main test(s) reason \", -1))\nconst _hoisted_4 = { style: {background: 'lightyellow', height: '34vh'} }\nconst _hoisted_5 = { class: \"his-sm-text\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Test\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Specimen\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Reason\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\")\n  ])\n], -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")!\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Lab orders\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"6\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'75vh'} }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testTypes, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            class: \"his-sm-text\",\n                            key: data,\n                            disabled: _ctx.activeIndex !== null && _ctx.activeIndex !== index && !_ctx.isOrderComplete,\n                            detail: \"\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, { \"text-wrap\": \"\" }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(data.name), 1)\n                                ]),\n                                _: 2\n                              }, 1024),\n                              _createVNode(_component_ion_checkbox, {\n                                modelValue: data.isChecked,\n                                \"onUpdate:modelValue\": ($event: any) => ((data.isChecked) = $event),\n                                slot: \"start\",\n                                onIonChange: (e) => _ctx.onSelectTest(data.name, index, e)\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\"])\n                            ]),\n                            _: 2\n                          }, 1032, [\"disabled\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.activeIndex != null && _ctx.selectedOrders.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'79vh'}\n                    }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", _hoisted_1, [\n                          (!_ctx.extendedLabsEnabled)\n                            ? (_openBlock(), _createBlock(_component_ion_list, { key: 0 }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_radio_group, {\n                                    modelValue: _ctx.testTypes[_ctx.activeIndex]['specimen'],\n                                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['specimen']) = $event))\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _hoisted_2,\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.specimens, (data) => {\n                                        return (_openBlock(), _createBlock(_component_ion_item, { key: data }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_component_ion_label, null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(data.name), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024),\n                                            _createVNode(_component_ion_radio, {\n                                              slot: \"start\",\n                                              value: data.name,\n                                              onClick: ($event: any) => (_ctx.addSpecimen(data))\n                                            }, null, 8, [\"value\", \"onClick\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      }), 128))\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"modelValue\"])\n                                ]),\n                                _: 1\n                              }))\n                            : _createCommentVNode(\"\", true),\n                          _createVNode(_component_ion_radio_group, {\n                            modelValue: _ctx.testTypes[_ctx.activeIndex]['reason'],\n                            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['reason']) = $event))\n                          }, {\n                            default: _withCtx(() => [\n                              _hoisted_3,\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testReasons, (data) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  class: \"his-sm-text\",\n                                  key: data\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(data), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_radio, {\n                                      slot: \"start\",\n                                      value: data\n                                    }, null, 8, [\"value\"])\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              }), 128))\n                            ]),\n                            _: 1\n                          }, 8, [\"modelValue\"])\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_4, [\n                          _createElementVNode(\"table\", _hoisted_5, [\n                            _hoisted_6,\n                            _createElementVNode(\"tbody\", null, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.finalOrders, (data, index) => {\n                                return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.name), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.specimen || 'N/A'), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.reason), 1),\n                                  _createElementVNode(\"td\", null, [\n                                    _createVNode(_component_ion_button, {\n                                      onClick: ($event: any) => (_ctx.removeOrder(data.currentIndex)),\n                                      slot: \"end\",\n                                      color: \"danger\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"X\")\n                                      ]),\n                                      _: 2\n                                    }, 1032, [\"onClick\"])\n                                  ])\n                                ]))\n                              }), 128))\n                            ])\n                          ])\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postActivities,\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.finalOrders.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.closeModal([]))),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonCheckbox,\n  IonRadioGroup,\n  IonRow,\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { alertConfirmation, toastWarning } from \"@/utils/Alerts\"\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport ART_GLOBAL_PROP from \"@/apps/ART/art_global_props\"\nimport Store from \"@/composables/ApiStore\"\nimport { find, findIndex } from \"lodash\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    activities: {\n      type: Object as PropType<ActivityInterface[]>,\n      required: true\n    },\n    testFilters: {\n      type: Array    \n    },\n    title: {\n      type: String, \n      default: \"\"\n    },\n  },\n  watch: {\n    activities: {\n      handler(activities: Array<ActivityInterface>){\n        if (activities) {\n          this.appActivities = [...activities]\n          this.getActivities();\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    this.extendedLabsEnabled = await ART_GLOBAL_PROP.extendedLabEnabled()\n  },\n  methods: {\n    async onSelectTest(testName: string, index: number, event: any) {\n      this.$nextTick(async () => {\n        this.testTypes[index]['isChecked'] = event.target.checked;\n        if(this.testTypes[index]['isChecked']){\n          this.specimens = await OrderService.getSpecimens(testName);\n          this.testTypes[index]['currentIndex'] = index;\n          this.activeIndex = index;\n        } else {\n          this.removeOrder(index)\n        }\n      })\n    },\n    async getActivities() {\n      const tests: Array<any> = await OrderService.getTestTypes();\n      const vlIndex = findIndex(tests, {name: \"HIV viral load\"})\n      const viralLoad = vlIndex !== -1 ? tests.splice(vlIndex, 1) : null;\n      const sorted = tests.sort((a: any, b: any) => `${a.name}`.toUpperCase() > `${b.name}`.toUpperCase() ? 1: -1)\n        .filter((t: any) => Array.isArray(this.testFilters) ? this.testFilters.includes(t.name) : true)\n      this.testTypes = viralLoad ? [...viralLoad, ...sorted] : sorted\n    },\n    removeOrder(index: number) {\n      this.testTypes[index]['isChecked'] = false;\n      this.testTypes[index]['reason'] = null;\n      this.testTypes[index]['specimen'] = null;\n      this.testTypes[index]['specimenConcept'] = null\n      this.activeIndex = null\n      this.specimens = []\n    },\n    addSpecimen(data: any) {\n      this.testTypes[this.activeIndex]['specimenConcept'] = data.concept_id;\n    },\n    async postActivities() {\n      const patientID= `${this.$route.params.patient_id}`;\n      const orders = new LabOrderService(parseInt(patientID), -1); //TODO: get selected provider for this encounter\n      const encounter = await orders.createEncounter();\n\n      if(encounter) {\n        const formattedOrders = await OrderService.buildLabOrders(encounter, this.finalOrders);\n        const d =await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n        \n        if(!d) return toastWarning('Unable to save lab orders')\n\n        Store.invalidate('PATIENT_LAB_ORDERS')\n        const canPrintOrders = await alertConfirmation('Lab orders and encounter created!, print out your last orders?', { \n          confirmBtnLabel: 'Yes',\n          cancelBtnLabel: 'No'\n        })\n        if(canPrintOrders) await this.printOrders(d)\n        else await this.closeModal(d)\n      }\n    },\n    async closeModal(orders: []) {\n      await modalController.dismiss(orders)\n    },\n    async printOrders(orders: any) {\n      const p = new PrintoutService();\n      await orders.forEach(async (element: any) => {\n        const url = `lab/labels/order?order_id=${element.order_id}`\n        await p.printLbl(url);\n      });\n      await modalController.dismiss(orders)\n    },\n  },\n  computed: {\n    isOrderComplete(): boolean {\n      if(this.extendedLabsEnabled){\n        return !!this.testTypes[this.activeIndex]['reason'] \n      }\n      return (this.testTypes[this.activeIndex]['specimenConcept'] || this.testTypes[this.activeIndex]['specimen']) \n        && this.testTypes[this.activeIndex]['reason'] \n    },\n    selectedOrders(): any {\n      return this.testTypes.filter((data: any) => data.isChecked === true);\n    },\n    finalOrders(): any {\n      return this.selectedOrders.filter((data: any) => {\n        return data.reason && (data.specimen && !this.extendedLabsEnabled \n          || this.extendedLabsEnabled)\n      } )\n    },\n    testReasons(): Array<string> {\n      return this.testTypes[this.activeIndex].name.match(/Viral load/i)\n        ? this.reasons.concat(['Follow up after Low Level Viremia', 'Follow up after High Viral Load'])\n        : this.reasons\n    }\n  },\n  mounted() {\n    this.getActivities();\n  },\n  data() {\n    return {\n      content: \"Content\",\n      extendedLabsEnabled: false as boolean,\n      appActivities: [] as Array<ActivityInterface>,\n      testTypes: [] as any,\n      specimens: [],\n      reasons: ['Routine', 'Targeted', 'Confirmatory', 'Stat', 'Repeat / Missing'],\n      activeIndex: null as any\n    };\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    IonCheckbox,\n    IonRadioGroup,\n    IonRow,\n  },\n});\n","import { render } from \"./LabOrderModal.vue?vue&type=template&id=bd0a6c2e&scoped=true&ts=true\"\nimport script from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./LabOrderModal.vue?vue&type=style&index=0&id=bd0a6c2e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/brian/projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bd0a6c2e\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_radiology_picker = _resolveComponent(\"his-radiology-picker\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Radiology Examination\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_his_radiology_picker, { onOnValue: _ctx.onValue }, null, 8, [\"onOnValue\"])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.onSubmit())),\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.emitedSelectedOptions.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.closeModal())),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  IonFooter,\n} from \"@ionic/vue\";\nimport { defineComponent } from 'vue'\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\";\nimport HisRadiologyPicker from '@/components/FormElements/HisRadiologyPicker.vue'\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  components: { \n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonFooter,\n    HisRadiologyPicker\n  },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false,\n    emitedSelectedOptions: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onValue(selected: any) {\n      this.emitedSelectedOptions = selected\n    },\n    async getSelected() {\n      return this.emitedSelectedOptions.map(async (option: any) => ({\n        ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n        child: [(await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))]\n      }))\n    },\n    async onSubmit(){\n      if(!isEmpty(this.emitedSelectedOptions)) {\n        this.closeModal()\n        let data = await this.getSelected()\n        data = await Promise.all(data)\n        await this.radiologyService.createEncounter()\n        const obsObj = await this.radiologyService.obsObj(data) \n        const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n        await this.radiologyService.printOrders(savedObsData, this.patient)\n        if(this.isPacsEnabled) {\n          try {\n            await this.radiologyService.submitToPacs(savedObsData, this.patient)\n          } catch (error) {\n            console.log(error)\n          }\n        }\n      }\n    },\n    async closeModal() {\n      await modalController.dismiss([])\n    }\n  },\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=3afcbe1c&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/brian/projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientComplaintsService } from \"@/apps/OPD/services/patient_complaints_service\";\nimport LabOrderModal from \"@/components/DataViews/LabOrderModal.vue\"\nimport radiology from \"@/apps/OPD/views/encounters/modals/radiology.vue\"\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { modalController, IonPage } from '@ionic/vue';\nimport { ObservationService } from \"@/services/observation_service\"\nimport { EncounterService } from '@/services/encounter_service'\nimport HisDate from \"@/utils/Date\"\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\n\nexport default defineComponent({\n  components: { HisStandardForm, IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    complaintsService: {} as any,\n    todaysDate: ObservationService.getSessionDate(),\n    presentingComplaints: \"\" as any,\n    isPacsEnabled: false,\n    radiologyBtnName: 'Radiology Order',\n    hasTriageComplaints: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.complaintsService = new PatientComplaintsService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n          this.hasTriageComplaints = await this.getTriagePresentingComplaints()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){     \n      const data = await Promise.all(computedData.complaints)   \n      await this.complaintsService.createEncounter()    \n      await this.complaintsService.saveObservationList(data)\n      this.nextTask()        \n    },\n    async launchOrderSelection() {\n      const modal = await modalController.create({\n        component: LabOrderModal,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async launchRadiologyOrderSelection() {\n      const modal = await modalController.create({\n        component: radiology,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async getTriagePresentingComplaints(){\n      const data =  await this.complaintsService.fetchLatestTriageEncounter();\n      if(!(data.length > 0)){ return false;}\n\n      const encounters = await EncounterService.getEncounters(this.patientID, this.todaysDate)\n      const todayPresentingComplaints = encounters.filter(function (el: any){\n        return el.type.name == \"TRIAGE PRESENTING COMPLAINTS\" &&\n        HisDate.toStandardHisFormat(el.encounter_datetime) == ObservationService.getSessionDate() \n      });\n      if(!(todayPresentingComplaints.length > 0)) {return false;}\n\n      this.presentingComplaints =   todayPresentingComplaints[0].observations;\n      return true;\n    },\n    buildResults() {\n      const columns = [ 'Group','Presenting complaints'];\n      let group = \"\";\n      let rows =this.presentingComplaints.map((item: any) =>{\n        if(item.obs_group_id != null)\n          return [group,item.value_text]\n\n        group = item.value_text;\n      });\n      rows = rows.filter((el: any) =>{\n        return el != undefined\n      })\n      this.presentingComplaints = rows;\n      return [\n        {\n          label: '',\n          value: '',\n          other: { columns, rows},\n        },\n      ];\n    },\n\n    getFields(): Array<Field>{\n      return [\n        {\n          id: \"triage_complaints\",\n          helpText: \"Triaging Complaints\",\n          condition: () => this.hasTriageComplaints,\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'complaints',\n          helpText: 'Presenting Complaints',\n          type: FieldType.TT_COMPLAINTS_PICKER,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.complaintsService.buildValueCoded('Presenting complaint', option.other.parent)),\n              child: [(await this.complaintsService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))]\n            }))\n          },\n          config: {\n            hiddenFooterBtns: [ this.showRadiologyOdersBtn(), this.disableBackBtn()],\n            footerBtns: [\n              {\n                name: \"Lab Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              },\n              {\n                name: this.radiologyBtnName,\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchRadiologyOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              }\n            ],\n          }\n        },\n        {\n          id: \"all_presenting_complaints\",\n          helpText: \"Summary\",\n          condition: () => this.presentingComplaints.length > 0,\n          type: FieldType.TT_SUMMARY,\n          options: (d: any, b: any) => this.buildSummaryResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ]\n    },\n    showRadiologyOdersBtn() {\n      if(this.isPacsEnabled) {\n        return ''\n      } else return this.radiologyBtnName\n    },\n    buildSummaryResults(data: any) {\n      const OPDComplaint = data.complaints.map((value: any)=>{\n        return {\n          'label': \"OPD Complaints\",\n          'value': value.label,\n        };\n      })\n      const triageComplaint = this.presentingComplaints.map((value: any)=>{\n        return {\n          'label': 'Triaging Complaints',\n          'value': value[1],\n        };\n      })\n      return OPDComplaint.concat(triageComplaint);\n    },\n    disableBackBtn() {\n      if(this.hasTriageComplaints) {\n        return ''\n      } else return 'Back'\n    }\n  }\n})\n","import { render } from \"./Complaints.vue?vue&type=template&id=14155b15&ts=true\"\nimport script from \"./Complaints.vue?vue&type=script&lang=ts\"\nexport * from \"./Complaints.vue?vue&type=script&lang=ts\"\n\nimport \"./Complaints.vue?vue&type=style&index=0&id=14155b15&lang=css\"\n\nimport exportComponent from \"/home/brian/projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LabOrderModal.vue?vue&type=style&index=0&id=bd0a6c2e&scoped=true&lang=css\""],"sourceRoot":""}