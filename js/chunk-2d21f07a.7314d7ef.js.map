{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/clinic/ClinicRegimenFormulationReport.vue?3306","webpack:///./src/apps/ART/views/reports/clinic/ClinicRegimenFormulationReport.vue","webpack:///./src/apps/ART/views/reports/clinic/ClinicRegimenFormulationReport.vue?5545"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_openBlock","_createBlock","title","period","rows","fields","columns","onReportConfiguration","onPeriod","defineComponent","mixins","ReportMixin","components","ReportTemplate","data","totalClients","table","thTxt","created","this","getDateDurationFields","id","helpText","type","FieldType","TT_SELECT","validation","val","Validation","required","options","REGIMENS","map","r","label","value","FORMULATIONS","f","methods","regimen","formulation","config","report","RegimenReportService","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","setRows","getRegimenFormulationReport","sortByArvNumber","forEach","d","push","td","arv_number","formatGender","gender","tdDate","birthdate","__exports__"],"mappings":"uIAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,EAA6BC,8BAAkB,mBAErD,OAAQC,yBAAcC,yBAAaH,EAA4B,CAC7DI,MAAOV,EAAKU,MACZC,OAAQX,EAAKW,OACbC,KAAMZ,EAAKY,KACXC,OAAQb,EAAKa,OACbC,QAASd,EAAKc,QACdC,sBAAuBf,EAAKgB,UAC3B,KAAM,EAAG,CAAC,QAAS,SAAU,OAAQ,SAAU,UAAW,0B,sFCDhDC,+BAAgB,CAC3BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,uBACdC,KAAM,KAAM,CACRZ,MAAO,4CACPa,aAAc,GACdX,KAAM,GACNE,QAAS,CACL,CACIU,OAAMC,MAAM,QACZD,OAAMC,MAAM,UACZD,OAAMC,MAAM,WAIxBC,UACIC,KAAKd,OAAS,IACPc,KAAKC,wBACR,CACIC,GAAI,UACJC,SAAU,iBACVC,KAAMC,OAAUC,UAChBC,WAAaC,GAAgBC,OAAWC,SAASF,GACjDG,QAAS,IAAMC,OAASC,IAAKC,IAAS,CAAQC,MAAOD,EAAGE,MAAOF,MAEnE,CACIZ,GAAI,cACJC,SAAU,qBACVC,KAAMC,OAAUC,UAChBC,WAAaC,GAAgBC,OAAWC,SAASF,GACjDG,QAAS,IAAMM,OAAaJ,IAAKK,IAAS,CAAQH,MAAOG,EAAGF,MAAOE,QAI/EC,QAAS,CACL,gBAAe,QAACC,EAAO,YAAEC,GAAmBC,GACxCtB,KAAKf,KAAO,GACZe,KAAKuB,OAAS,IAAIC,OAClBxB,KAAKuB,OAAOE,aAAaH,EAAOI,YAChC1B,KAAKuB,OAAOI,WAAWL,EAAOM,UAC9B5B,KAAKhB,OAASgB,KAAKuB,OAAOM,wBAC1B7B,KAAK8B,cAAe9B,KAAKuB,OAAOQ,4BAA4BX,EAAQJ,MAAOK,EAAYL,SAE3F,cAAcrB,GACVK,KAAKgC,gBAAgBrC,GAAMsC,QAASC,IACjClC,KAAKf,KAAKkD,KAAK,CACVtC,OAAMuC,GAAGF,EAAEG,YACXxC,OAAMuC,GAAGpC,KAAKsC,aAAaJ,EAAEK,SAC7B1C,OAAM2C,OAAON,EAAEO,mB,qBCtDnC,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAStE,KAErD","file":"js/chunk-2d21f07a.7314d7ef.js","sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n\n  return (_openBlock(), _createBlock(_component_report_template, {\n    title: _ctx.title,\n    period: _ctx.period,\n    rows: _ctx.rows,\n    fields: _ctx.fields,\n    columns: _ctx.columns,\n    onReportConfiguration: _ctx.onPeriod\n  }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"onReportConfiguration\"]))\n}","\nimport { defineComponent } from 'vue'\nimport { RegimenReportService } from \"@/apps/ART/services/reports/regimen_report_service\"\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport { REGIMENS, FORMULATIONS } from \"@/apps/ART/services/reports/regimen_report_service\"\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { FieldType } from '@/components/Forms/BaseFormElements'\nimport { Option } from '@/components/Forms/FieldInterface'\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate },\n    data: () => ({\n        title: 'Regimen Formulation: Patient level report',\n        totalClients: [],\n        rows: [] as Array<any>,\n        columns: [\n            [\n                table.thTxt('ARV#'), \n                table.thTxt('Gender'), \n                table.thTxt('DOB')\n            ]\n        ]\n    }),\n    created() {\n        this.fields = [\n            ...this.getDateDurationFields(),\n            {\n                id: 'regimen',\n                helpText: 'Select regimen',\n                type: FieldType.TT_SELECT,\n                validation: (val: Option) => Validation.required(val),\n                options: () => REGIMENS.map((r: string) => ({ label: r, value: r }))\n            },\n            {\n                id: 'formulation',\n                helpText: 'Select formulation',\n                type: FieldType.TT_SELECT,\n                validation: (val: Option) => Validation.required(val),\n                options: () => FORMULATIONS.map((f: string) => ({ label: f, value: f }))\n            }\n        ]\n    },\n    methods: {\n        async onPeriod({regimen, formulation}: any, config: any) {\n            this.rows = []\n            this.report = new RegimenReportService()\n            this.report.setStartDate(config.start_date)\n            this.report.setEndDate(config.end_date)\n            this.period = this.report.getDateIntervalPeriod()\n            this.setRows((await this.report.getRegimenFormulationReport(regimen.value, formulation.value)))\n        },\n        async setRows(data: Array<any>) {\n            this.sortByArvNumber(data).forEach((d: any) => {\n               this.rows.push([\n                    table.td(d.arv_number),\n                    table.td(this.formatGender(d.gender)),\n                    table.tdDate(d.birthdate)\n               ])\n            })\n        }\n    }\n})\n","import { render } from \"./ClinicRegimenFormulationReport.vue?vue&type=template&id=7460b9f3&ts=true\"\nimport script from \"./ClinicRegimenFormulationReport.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicRegimenFormulationReport.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}