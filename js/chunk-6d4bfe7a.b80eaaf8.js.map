{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/Treatment.vue?b4f9","webpack:///./src/apps/ANC/Views/Encounters/Treatment.vue?5772","webpack:///./src/apps/ANC/Views/Encounters/Treatment.vue","webpack:///./src/apps/ANC/Views/Encounters/Treatment.vue?e661","webpack:///./src/apps/ANC/Services/anc_treatment_service.ts","webpack:///./src/apps/ANC/Services/anc_drug_set.ts"],"names":["_withId","_withScopeId","_pushScopeId","_hoisted_1","_createTextVNode","_hoisted_2","_createVNode","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_popScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_input","_component_ion_icon","_component_ion_button","_component_ion_col","_component_ion_row","_component_ion_grid","_component_ion_label","_component_ion_item","_component_ion_list","_component_ion_content","_component_ion_footer","_component_ion_page","_openBlock","_createBlock","default","_","style","_Fragment","_renderList","activeDrugs","drug","drugIndex","key","readonly","onClick","$event","editDrugName","value","drug_name","placeholder","editDrugFrequency","frequency","editDrugDuration","duration","length","size","disabled","id","push","defaultDrugObj","color","icon","add","_createCommentVNode","splice","trashBin","drugSets","dset","dindex","detail","appendDrugSetValues","button","_toDisplayString","label","cancelDestination","slot","clear","isSubmitting","onFinish","defineComponent","components","IonHeader","IonIcon","IonRow","IonLabel","IonGrid","IonCol","IonPage","IonContent","IonTitle","IonInput","IonButton","IonFooter","IonToolbar","mixins","EncounterMixinVue","setup","data","defaultDrugs","service","computed","selectedDrugNames","this","map","d","watch","ready","handler","AncTreatmentService","patientID","providerID","AncDrugSetService","getDrugSets","name","description","other","drugs","DrugService","getDrugs","immediate","methods","formIsEmpty","alertConfirmation","createEncounter","saveValueCodedObs","nextTask","formIsComplete","toastWarning","submitTreatment","PatientPrintoutService","printVisitSummaryLbl","console","error","every","drugSet","reduce","a","c","concat","filter","includes","drugItem","launchEditor","helpText","type","FieldType","TT_SELECT","defaultValue","validation","v","validateSeries","Validation","required","options","drug_id","dose","units","config","showKeyboard","isFilterDataViaApi","mapStrToOptions","Object","keys","DRUG_FREQUENCIES","TT_NUMBER","ok","field","callback","modalController","create","component","TouchField","backdropDismiss","cssClass","componentProps","dismissType","currentField","modal","present","__exports__","date","dispenseTTV","dispensed","isEmpty","orderID","order_id","DrugOrderService","updateDispensationOrders","createOrders","ttvDrugObj","orders","getEncounterID","o","buildDrugOrderObj","dispensation","AppEncounterService","forEach","quantity","order","drug_inventory_id","startDate","Date","expiryDate","setDate","getDate","parseInt","dailyEquivalentDose","parseFloat","HisDate","toStandardHisFormat","Service","getSessionDate","postJson","setID","void","getJson","sets","setKey","k"],"mappings":"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","file":"js/chunk-6d4bfe7a.b80eaaf8.js","sourcesContent":["export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Treatment.vue?vue&type=style&index=0&id=257a2a3f&scoped=true&lang=css\"","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-257a2a3f\")\n\n_pushScopeId(\"data-v-257a2a3f\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Treatment\")\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"thead\", null, [\n  /*#__PURE__*/_createVNode(\"tr\", { class: \"his-sm-text\" }, [\n    /*#__PURE__*/_createVNode(\"th\", null, \"Drug\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Frequency\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Duration (Days)\"),\n    /*#__PURE__*/_createVNode(\"th\")\n  ])\n], -1)\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Add \")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Cancel \")\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Clear \")\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" Finish \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_input = _resolveComponent(\"ion-input\")\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_ion_label = _resolveComponent(\"ion-label\")\n  const _component_ion_item = _resolveComponent(\"ion-item\")\n  const _component_ion_list = _resolveComponent(\"ion-list\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withId(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withId(() => [\n              _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n                default: _withId(() => [\n                  _hoisted_1\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_grid, null, {\n            default: _withId(() => [\n              _createVNode(_component_ion_row, {\n                style: {\"height\":\"50vh\"},\n                class: \"his-card section drug-section-style\"\n              }, {\n                default: _withId(() => [\n                  _createVNode(_component_ion_col, null, {\n                    default: _withId(() => [\n                      _createVNode(\"table\", null, [\n                        _hoisted_2,\n                        _createVNode(\"tbody\", null, [\n                          (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.activeDrugs, (drug, drugIndex) => {\n                            return (_openBlock(), _createBlock(\"tr\", { key: drugIndex }, [\n                              _createVNode(\"td\", null, [\n                                _createVNode(_component_ion_input, {\n                                  readonly: \"\",\n                                  onClick: $event => (_ctx.editDrugName(drug)),\n                                  value: drug.drug_name,\n                                  placeholder: \"Add drug\",\n                                  class: \"his-sm-text dosage-input\"\n                                }, null, 8, [\"onClick\", \"value\"])\n                              ]),\n                              _createVNode(\"td\", null, [\n                                _createVNode(_component_ion_input, {\n                                  readonly: \"\",\n                                  onClick: $event => (_ctx.editDrugFrequency(drug)),\n                                  value: drug.frequency,\n                                  class: \"his-sm-text dosage-input\",\n                                  placeholder: \"Add frequency..\"\n                                }, null, 8, [\"onClick\", \"value\"])\n                              ]),\n                              _createVNode(\"td\", null, [\n                                _createVNode(_component_ion_input, {\n                                  readonly: \"\",\n                                  onClick: $event => (_ctx.editDrugDuration(drug)),\n                                  value: drug.duration,\n                                  placeholder: \"Add duration..\",\n                                  class: \"dosage-input his-sm-text\"\n                                }, null, 8, [\"onClick\", \"value\"])\n                              ]),\n                              _createVNode(\"td\", null, [\n                                _createVNode(_component_ion_row, null, {\n                                  default: _withId(() => [\n                                    (drugIndex + 1 >= _ctx.activeDrugs.length)\n                                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                                          key: 0,\n                                          size: \"6\"\n                                        }, {\n                                          default: _withId(() => [\n                                            _createVNode(_component_ion_button, {\n                                              disabled: !(drug.id && drug.frequency && drug.duration),\n                                              onClick: _cache[1] || (_cache[1] = $event => (_ctx.activeDrugs.push(_ctx.defaultDrugObj()))),\n                                              class: \"his-md-text\",\n                                              style: {\"width\":\"100%\"},\n                                              color: \"success\"\n                                            }, {\n                                              default: _withId(() => [\n                                                _createVNode(_component_ion_icon, { icon: _ctx.add }, null, 8, [\"icon\"]),\n                                                _hoisted_3\n                                              ]),\n                                              _: 2\n                                            }, 1032, [\"disabled\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      : _createCommentVNode(\"\", true),\n                                    (drugIndex + 1 < _ctx.activeDrugs.length || (drugIndex !=0 && drugIndex +1 >= _ctx.activeDrugs.length))\n                                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                                          key: 1,\n                                          size: \"6\"\n                                        }, {\n                                          default: _withId(() => [\n                                            _createVNode(_component_ion_button, {\n                                              onClick: $event => (_ctx.activeDrugs.splice(drugIndex, 1)),\n                                              class: \"his-lg-text\",\n                                              style: {\"width\":\"100%\"},\n                                              color: \"danger\"\n                                            }, {\n                                              default: _withId(() => [\n                                                _createVNode(_component_ion_icon, { icon: _ctx.trashBin }, null, 8, [\"icon\"])\n                                              ]),\n                                              _: 1\n                                            }, 8, [\"onClick\"])\n                                          ]),\n                                          _: 1\n                                        }))\n                                      : _createCommentVNode(\"\", true)\n                                  ]),\n                                  _: 2\n                                }, 1024)\n                              ])\n                            ]))\n                          }), 128 /* KEYED_FRAGMENT */))\n                        ])\n                      ])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_list, {\n            style: {\"height\":\"29vh\"},\n            class: \"his-card section\"\n          }, {\n            default: _withId(() => [\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.drugSets, (dset, dindex) => {\n                return (_openBlock(), _createBlock(_component_ion_item, {\n                  class: \"his-md-text\",\n                  detail: \"\",\n                  onClick: $event => (_ctx.appendDrugSetValues(dset)),\n                  button: \"\",\n                  key: dindex\n                }, {\n                  default: _withId(() => [\n                    _createVNode(_component_ion_label, null, {\n                      default: _withId(() => [\n                        _createTextVNode(_toDisplayString(dset.label) + \" (\" + _toDisplayString(dset.value) + \")\", 1 /* TEXT */)\n                      ]),\n                      _: 2\n                    }, 1024)\n                  ]),\n                  _: 2\n                }, 1032, [\"onClick\"]))\n              }), 128 /* KEYED_FRAGMENT */))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withId(() => [\n          _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n            default: _withId(() => [\n              _createVNode(_component_ion_button, {\n                \"router-link\": _ctx.cancelDestination,\n                slot: \"start\",\n                size: \"large\",\n                color: \"danger\"\n              }, {\n                default: _withId(() => [\n                  _hoisted_4\n                ]),\n                _: 1\n              }, 8, [\"router-link\"]),\n              _createVNode(_component_ion_button, {\n                onClick: _ctx.clear,\n                slot: \"end\",\n                size: \"large\",\n                color: \"warning\"\n              }, {\n                default: _withId(() => [\n                  _hoisted_5\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                disabled: _ctx.isSubmitting,\n                onClick: _ctx.onFinish,\n                slot: \"end\",\n                size: \"large\",\n                color: \"success\"\n              }, {\n                default: _withId(() => [\n                  _hoisted_6\n                ]),\n                _: 1\n              }, 8, [\"disabled\", \"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n})","\nimport { defineComponent } from 'vue'\nimport {\n    IonHeader,\n    IonLabel,\n    IonPage,\n    IonContent,\n    IonTitle,\n    IonRow,\n    IonGrid,\n    IonIcon,\n    IonInput,\n    IonCol,\n    IonFooter,\n    IonToolbar,\n    IonButton,\n    modalController\n} from \"@ionic/vue\"\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport TouchField from \"@/components/Forms/SIngleTouchField.vue\"\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { AncTreatmentService, AncTreatmentDrugObject, DRUG_FREQUENCIES } from '../../Services/anc_treatment_service'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { DrugService } from '@/services/drug_service'\nimport { alertConfirmation, toastWarning } from '@/utils/Alerts'\nimport {\n    add,\n    trashBin\n} from \"ionicons/icons\";\nimport { PatientPrintoutService } from '@/services/patient_printout_service'\nimport { AncDrugSetService } from '../../Services/anc_drug_set'\n\nexport default defineComponent({\n    components: {\n        IonHeader,\n        IonIcon,\n        IonRow,\n        IonLabel,\n        IonGrid,\n        IonCol,\n        IonPage,\n        IonContent,\n        IonTitle,\n        IonInput,\n        IonButton,\n        IonFooter,\n        IonToolbar\n    },\n    mixins: [EncounterMixinVue],\n    setup() {\n        return {\n            add,\n            trashBin\n        }\n    },\n    data: () => ({\n        activeDrugs: [] as AncTreatmentDrugObject[],\n        drugSets: [] as any,\n        defaultDrugs: [] as any,\n        isSubmitting: false as boolean,\n        service: {} as any\n    }),\n    computed: {\n        selectedDrugNames(): string[] {\n            return this.activeDrugs.map((d: any) => d.drug_name || '')\n        }\n    },\n    watch: {\n        ready: {\n            async handler(ready: boolean) {\n                this.activeDrugs = [this.defaultDrugObj()]\n                if (ready) {\n                    this.service = new AncTreatmentService(this.patientID, this.providerID)\n                    this.drugSets = (await AncDrugSetService.getDrugSets())\n\t\t\t\t\t.map((d: any) => ({\n                        label: d.name,\n                        value: d.description,\n                        other: {\n                            drugs: d.drugs\n                        }\n                    }))\n                    this.defaultDrugs = await DrugService.getDrugs({'page_size': 50})\n                }\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        async onFinish() {\n            if (this.formIsEmpty()) {\n                if ((await alertConfirmation('Do you want to proceed without prescribing drugs?'))) {\n                    await this.service.createEncounter()\n                    await this.service.saveValueCodedObs('Medication received at vist', 'No')\n                    this.nextTask()\n                }\n                return\n            }\n            if (!this.formIsComplete()) {\n                return toastWarning('Please complete the form')\n            }\n            this.isSubmitting = true\n            try {\n                await this.service.submitTreatment(this.activeDrugs)\n                await new PatientPrintoutService(this.patientID).printVisitSummaryLbl()\n                return this.nextTask()\n            } catch (e) {\n                toastWarning(`${e}`)\n                console.error(e)\n            }\n            this.isSubmitting = false\n        },\n        defaultDrugObj() {\n            return {\n                'id': 0,\n                'drug_name': '',\n                'dose': '',\n                'duration': 0,\n                'frequency': '',\n                'units': ''\n            }\n        },\n        formIsComplete() {\n            return this.activeDrugs.every(d => d.id && d.duration && d.frequency)\n        },\n        formIsEmpty() {\n            return this.activeDrugs.length === 1 && this.activeDrugs[0].drug_name === ''\n                && this.activeDrugs[0].duration === 0 && this.activeDrugs[0].frequency === '' \n        },\n        appendDrugSetValues(drugSet: any) {\n            const drugs = drugSet.other.drugs.reduce((a: any, c: any) => a.concat(c), [])\n            if (this.activeDrugs.length === 1 && !this.activeDrugs[0].id){\n                this.activeDrugs = drugs\n            } else {\n                this.activeDrugs = this.activeDrugs.concat(\n                    drugs.filter((d: any) => !this.selectedDrugNames.includes(d.drug_name))\n                )\n            }\n        },\n        editDrugName(drugItem: any) {\n            this.launchEditor({\n                id: 'new_drug',\n                helpText: 'Add drug to prescribe',\n                type: FieldType.TT_SELECT,\n                defaultValue: () => drugItem.drug_name,\n                validation: (v: Option) => this.validateSeries([\n                    () => Validation.required(v),\n                    () => {\n                        if (this.selectedDrugNames.includes(v.label)) {\n                            return ['Drug already added']\n                        } else {\n                            return null\n                        }\n                    }\n                ]),\n                options: async (_: any, filter: string) => {\n                    let drugs: any = []\n                    if (filter) {\n                        drugs = await DrugService.getDrugs({\n                           'page_size': 50,\n                           'name': filter\n                       })\n                    } else {\n                        drugs = this.defaultDrugs\n                    }\n                    return drugs.map((d: any) => ({\n                        label: d.name,\n                        value: d.drug_id,\n                        other: {\n                            dose: d.dose,\n                            units: d.units\n                        }\n                    }))\n                },\n                config: {\n                    showKeyboard: true,\n                    isFilterDataViaApi: true\n                }\n            }, \n            (data: Option) => {\n                drugItem['id'] = data.value\n                drugItem['drug_name'] = data.label\n                drugItem['dose'] = data.other.dose\n                drugItem['units'] = data.other.units\n            })\n        },\n        editDrugFrequency(drug: AncTreatmentDrugObject) {\n            this.launchEditor({\n                id: 'frequency',\n                helpText: `Edit drug frequency for ${drug.drug_name}`,\n                type: FieldType.TT_SELECT,\n                defaultValue: () => drug.frequency,\n                validation: (v: Option) => Validation.required(v),\n                options: () =>  this.mapStrToOptions(Object.keys(DRUG_FREQUENCIES))\n            },\n            (v: Option) => {\n                drug.frequency = v.label as string\n            })\n        },\n        editDrugDuration(drug: AncTreatmentDrugObject) {\n            this.launchEditor({\n                id: 'duration',\n                helpText: `Edit duration of ${drug.drug_name} in days`,\n                type: FieldType.TT_NUMBER,\n                defaultValue: () => drug.duration,\n                validation: (v: Option) => Validation.required(v)\n            }, \n            (v: Option) => {\n                drug.duration = v.value as number\n            })\n        },\n        async clear() {\n            const ok = await alertConfirmation('Are you sure you want to clear all drugs?')\n            if (ok) {\n                this.activeDrugs = [this.defaultDrugObj()]\n            }\n        },\n        async launchEditor(field: Field, callback: Function) {\n            const modal = await modalController.create({\n                component: TouchField,\n                backdropDismiss: false,\n                cssClass: \"full-modal\",\n                componentProps: {\n                    dismissType: 'modal',\n                    currentField: field,\n                    onFinish: callback,\n                }\n            })\n            modal.present()\n        }\n    }\n})\n","import { render } from \"./Treatment.vue?vue&type=template&id=257a2a3f&scoped=true&ts=true\"\nimport script from \"./Treatment.vue?vue&type=script&lang=ts\"\nexport * from \"./Treatment.vue?vue&type=script&lang=ts\"\n\nimport \"./Treatment.vue?vue&type=style&index=0&id=257a2a3f&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-257a2a3f\"]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { find, isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\"\n\nexport interface AncTreatmentDrugObject {\n    'id': number;\n    'drug_name': string;\n    'dose': string;\n    'duration': number;\n    'frequency': string;\n    'units': string;\n}\n\nexport const DRUG_FREQUENCIES: Record<string, number> = { \n    'Once a day (OD)' : 1,\n    'Twice a day (BD)': 2,\n    'Three a day (TDS)': 3,\n    'Four times a day (QID)' : 4,\n    'Five times a day (5X/D)' : 5,\n    'Six times a day (Q4HRS)' : 6,\n    'In the morning (QAM)' : 0.5,\n    'Once a week (QWK)' : 0.14,\n    'Once a month' : 0.03,\n    'Twice a month' : 0.071\n}\n\nexport class AncTreatmentService extends AppEncounterService {\n    constructor(patientID: number, providerID: number){\n        super(patientID, 25, providerID)\n    }\n\n    ttvDrugObj() {\n        return {\n            'drug_inventory_id': 609,\n            'dose': 0.5,\n            'equivalent_daily_dose': 0.5,\n            'frequency': \"Once a day (od)\",\n            'start_date': this.date,\n            'auto_expire_date': this.date,\n            'instructions': \"Once a day\",\n            'units': \"ml\"\n        }\n    }\n\n    async updateTTvOrder() {\n        const dispensed = await this.dispenseTTV()\n        if (!isEmpty(dispensed)) {\n            const orderID = dispensed[0].order_id\n            return DrugOrderService.updateDispensationOrders([{'order_id': orderID, 'quantity' : 1}])\n        }\n        throw 'Unable to dispense'\n    }\n\n    dispenseTTV() {\n        return this.createOrders([this.ttvDrugObj()])\n    }\n\n    createOrders(orders: any) {\n        return DrugOrderService.create({\n            'drug_orders': orders,\n            'encounter_id': this.getEncounterID(),\n        })\n    }\n\n    async submitTreatment(drugs: AncTreatmentDrugObject[]) {\n        await this.createEncounter()\n        const orders = await this.createOrders(drugs.map(o => this.buildDrugOrderObj(o)))\n        const dispensation = new AppEncounterService(this.patientID, 54, this.providerID)\n        await dispensation.createEncounter()\n        drugs.forEach(o => {\n            const quantity: number = DRUG_FREQUENCIES[o.frequency] * o.duration\n            orders.forEach((order: any) => { \n                if (order.drug_inventory_id === o.id) {\n                    order.quantity = quantity\n                }\n            })\n        })\n        await DrugOrderService.updateDispensationOrders(orders)\n    }\n\n    buildDrugOrderObj(drug: AncTreatmentDrugObject) {\n        const startDate = new Date(this.date)\n        const expiryDate = startDate.setDate(startDate.getDate() + parseInt(`${drug.duration}`))\n        const dose: any = drug.dose || DRUG_FREQUENCIES[drug.frequency]\n        const dailyEquivalentDose =  parseFloat(dose) * DRUG_FREQUENCIES[drug.frequency] \n        return {\n            'drug_inventory_id': drug.id,\n            'dose': dose,\n            'equivalent_daily_dose': dailyEquivalentDose,\n            'frequency': drug.frequency,\n            'start_date': this.date,\n            'auto_expire_date': HisDate.toStandardHisFormat(new Date(expiryDate)),\n            'instructions': drug.drug_name + ':' + drug.dose + ' ' + drug.units + ' ' + drug.frequency + 'days',\n            'units': drug.units\n        }\n    }\n}","import { Service } from \"@/services/service\";\n\nexport interface AncDrugSetDrugs {\n    drug: number;\n    drug_name?: string;\n    quantity: number;\n    duration?: number;\n    frequency: string;\n}\n\nexport interface NewDrugSet {\n    id?: number;\n    datetime?: string;\n    name: string;\n    description: string;\n    drugs: AncDrugSetDrugs[];\n}\n\nexport class AncDrugSetService extends Service {\n    static saveDrugSet(drugSet: NewDrugSet) {\n        const data  = {...drugSet}\n        data['datetime'] = Service.getSessionDate()\n        return this.postJson('/drug_sets', drugSet)\n    }\n\n    static voidDrugSet(setID: number) {\n        return this.void(`/drug_sets/${setID}`, { date: this.getSessionDate()})\n    }\n\n    static async getDrugSets() {\n        const data = await this.getJson('drug_sets')\n        if (data) {\n            return Object.keys(data['set_names'])\n                .reduce((sets: Array<any>, setKey: string) => {\n                    const name = data['set_names'][setKey]\n                    const description = data['set_descriptions'][setKey]\n                    const drugs = data['drug_sets'][setKey]\n                    sets.push({\n                        id: parseInt(setKey),\n                        name,\n                        description,\n                        drugs: Object.keys(drugs).reduce(\n                            (a: any, k: string) => [\n                                ...a, { \n                                    'id': parseInt(k), ...drugs[k],\n                                    'drug_name': drugs[k].drug_name,\n                                    'duration': parseInt(drugs[k].duration),\n                                    'frequency': drugs[k].frequency,\n                                    'units': drugs[k].units,\n                                }], []\n                        )\n                    })\n                    return sets\n                }, [])\n        }\n        return []\n    }\n}"],"sourceRoot":""}