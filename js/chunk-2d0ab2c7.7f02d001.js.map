{"version":3,"sources":["webpack:///./src/apps/OPD/views/encounters/Prescription.vue?dba0","webpack:///./src/apps/OPD/views/encounters/Prescription.vue","webpack:///./src/apps/OPD/views/encounters/Prescription.vue?e7f2"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","activeField","onFinishAction","onSubmit","skipSummary","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","prescriptionService","showMalariaDrugs","hasMalaria","watch","ready","handler","isReady","DrugPrescriptionService","patientID","providerID","getFields","immediate","deep","methods","formData","drugOrders","mapToOrders","createEncounter","encounter","toastWarning","createDrugOrder","drugOrder","toastSuccess","nextTask","calculateExpireDate","startDate","duration","date","Date","setDate","getDate","HisDate","toStandardHisFormat","drugs","map","drug","getSessionDate","frequency","DRUG_FREQUENCIES","find","f","label","other","drug_id","dosage","value","units","code","isOrderComplete","every","id","helpText","validation","Validation","required","type","FieldType","TT_SELECT","condition","unload","options","ANTI_MALARIA_DRUGS","name","TT_MULTIPLE_SELECT","_","filter","loadingController","create","message","translucent","loader","present","loadDrugs","dismiss","onload","config","showKeyboard","hiddenFooterBtns","footerBtns","color","size","visible","slot","onClick","alertConfirmation","TT_PRESCRIPTION_INPUT","malaria_drugs","beforeNext","isEmpty","TT_TABLE_VIEWER","columns","rows","__exports__"],"mappings":"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","file":"js/chunk-2d0ab2c7.7f02d001.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onFinishAction: _ctx.onSubmit,\n    skipSummary: true\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"activeField\", \"onFinishAction\"]))\n}","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { isEmpty } from 'lodash';\nimport { ANTI_MALARIA_DRUGS, DrugPrescriptionService, DRUG_FREQUENCIES } from '../../services/drug_prescription_service';\nimport HisDate from \"@/utils/Date\"\nimport { alertConfirmation, toastSuccess, toastWarning } from '@/utils/Alerts';\nimport { loadingController } from '@ionic/core';\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    activeField: '',\n    prescriptionService: {} as any,\n    showMalariaDrugs: false,\n    hasMalaria: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.prescriptionService = new DrugPrescriptionService(this.patientID, this.providerID)  \n          this.hasMalaria = await this.prescriptionService.hasMalaria()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(formData: any){   \n      const drugOrders = this.mapToOrders(formData['drugs_details'])\n      const encounter = await this.prescriptionService.createEncounter()\n      if (!encounter) return toastWarning('Unable to create treatment encounter')   \n      const drugOrder = await this.prescriptionService.createDrugOrder(drugOrders);\n      if(!drugOrder) return toastWarning('Unable to create drug orders!')\n      toastSuccess('Drug order has been created')\n      this.nextTask()       \n    },\n    calculateExpireDate(startDate: string | Date, duration: number ) {\n      const date = new Date(startDate)\n      date.setDate(date.getDate() + duration)\n      return HisDate.toStandardHisFormat(date)\n    },\n    mapToOrders(drugs: Option[]): any[] {\n      return drugs.map(drug => {\n        const startDate = DrugPrescriptionService.getSessionDate()\n        const frequency = DRUG_FREQUENCIES.find(f => f.label === drug.other.frequency)\n        return {\n          'drug_inventory_id': drug.other.drug_id,\n          'equivalent_daily_dose': drug.other.dosage * frequency!.value,\n          'start_date': startDate,\n          'auto_expire_date': this.calculateExpireDate(startDate, drug.other.duration), \n          'units': drug.other.units,\n          'instructions': `${drug.label}: ${frequency!.value} ${frequency!.code} for ${drug.other.duration}`,\n          'dose': drug.other.dosage,\n          'frequency': frequency!.code,\n        }\n      })\n    },\n    isOrderComplete(drugs: Option[]): boolean {\n      return drugs.every(drug => drug.other.frequency && drug.other.duration && drug.other.dosage)\n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: 'malaria_drugs',\n          helpText: \"select Malaria Drugs\",\n          validation: (data: any) => Validation.required(data),\n          type: FieldType.TT_SELECT,\n          condition: () => this.activeField === 'malaria_drugs' && this.showMalariaDrugs,\n          unload: () => {\n            this.showMalariaDrugs = false\n            this.activeField = 'drugs_details'\n          },\n          options: () => ANTI_MALARIA_DRUGS.map(drug => ({\n            label: `${drug.name}, ${drug.frequency} time(s) a day, for ${drug.duration} days`,\n            value: drug.name,\n            other: drug\n          }))\n        },\n        {\n          id: 'drugs',\n          helpText: 'Select drugs',\n          type: FieldType.TT_MULTIPLE_SELECT,\n          validation: (data: any) => Validation.required(data),\n          options: async (_: any, filter = '') => {\n            const loader = await loadingController.create({\n              message: 'Loading drugs...',\n              translucent: true,\n            });\n            await loader.present();\n            const drugs = await this.prescriptionService.loadDrugs(filter)\n            await loader.dismiss();\n            return drugs\n          },\n          onload: () => this.activeField = '',\n          config: {\n            showKeyboard: true,\n            hiddenFooterBtns: [\"Back\"],\n            footerBtns: [\n              {\n                name: 'Predefined Malaria Drugs',\n                color: 'primary',\n                size: 'large',\n                visible: false,\n                slot: 'end',\n                onClick: async () => {\n                  if(!this.hasMalaria && !(await alertConfirmation('Patient has no malaria. Do you still want to prescribe anti malaria drugs?'))) {\n                    return;\n                  }\n                  this.activeField = 'malaria_drugs'\n                  this.showMalariaDrugs = true\n                }\n              },\n            ]\n          }\n        },\n        {\n          id: 'drugs_details',\n          helpText: 'Complete prescribed drug details',\n          type: FieldType.TT_PRESCRIPTION_INPUT,\n          validation: (data: any) => Validation.required(data),\n          options: (f: any) => [...f.drugs, ...(f.malaria_drugs ? [f.malaria_drugs] : [])],\n          beforeNext: (data: Option[]) => {\n            if(isEmpty(data)) return false\n            if(this.isOrderComplete(data)) return true\n            toastWarning('Please complete all fields')\n            return false\n          }\n        },\n        {\n          id: 'summary',\n          helpText: 'Summary',\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (f: any) => {\n            const drugs: Option[] = f['drugs_details']\n            const columns = [ 'Drug Name','Frequency','Dosage','Duration'];\n            const rows: any[] = drugs.map(drug => [\n              drug.other.name,\n              drug.other.frequency,\n              `${drug.other.dosage} ${drug.other.units}`,\n              `${drug.other.duration} days`\n            ])\n            return [\n              {\n                label: '',\n                value: '',\n                other: { columns, rows},\n              },\n            ];\n          },\n\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Prescription.vue?vue&type=template&id=11a5132f&ts=true\"\nimport script from \"./Prescription.vue?vue&type=script&lang=ts\"\nexport * from \"./Prescription.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}