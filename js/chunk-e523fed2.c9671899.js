(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-e523fed2"],{b31c:function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var s,a=r("ade3"),o=(r("13d5"),r("14d9"),r("2ef0")),i=r("5969");(function(t){t["MOH_CACHE"]="mohCache"})(s||(s={}));class n extends i["a"]{constructor(){super(),Object(a["a"])(this,"regenerate",void 0),this.regenerate=!1}cohortUrl(){return`programs/${this.programID}/reports/cohort`}setRegenerate(t){this.regenerate=t}getCohortDrillDown(t){return i["a"].getJson("cohort_report_drill_down",{id:t,date:this.date,program_id:this.programID})}requestCohort(t){return i["a"].ajxGet(this.cohortUrl(),t)}qaurterRequestParams(){return{name:this.quarter,regenerate:this.regenerate}}datePeriodRequestParams(){return{name:`Cohort-${this.startDate}-${this.endDate}`,start_date:this.startDate,end_date:this.endDate,regenerate:this.regenerate}}getCachedCohortValues(){const t=sessionStorage.getItem(s.MOH_CACHE);if(t){const e=JSON.parse(t);if(e.start_date===this.startDate&&e.end_date===this.endDate||e.quarter===this.quarter)return e.data}}cacheCohort(t){sessionStorage.setItem(s.MOH_CACHE,JSON.stringify({start_date:this.startDate,end_date:this.endDate,quarter:this.quarter,data:t}))}validateIndicators(t,e){const r=this.getCachedCohortValues();if(r){const s=Object.keys(t).reduce((e,s)=>{const a=Object(o["find"])(r,{name:s}),i=t[s],n=a?a.contents:null,h=i.param,d=i.check(parseInt(n),h);return d&&e.push(i.error(n,h)),e},[]);return e(s)}return-1}}},cca6:function(t,e,r){"use strict";r.r(e);var s=r("7a23");function a(t,e,r,a,o,i){const n=Object(s["resolveComponent"])("report-template"),h=Object(s["resolveComponent"])("ion-page");return Object(s["openBlock"])(),Object(s["createBlock"])(h,null,{default:Object(s["withCtx"])(()=>[Object(s["createVNode"])(n,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,reportPrefix:"PEPFAR",config:{showIndex:!0},validationErrors:t.errors,showValidationStatus:t.showStatus,headerInfoList:t.headerInfoList,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","validationErrors","showValidationStatus","headerInfoList","onReportConfiguration"])]),_:1})}r("14d9");var o=r("44e3"),i=r("9a5e"),n=r("4ba2"),h=r("9ceb"),d=r("b31c"),l=r("ad8d"),c=Object(s["defineComponent"])({mixins:[o["a"]],components:{ReportTemplate:n["a"]},data:()=>({title:"TX Curr MMD Report",cohort:{},rows:[],totals:new Set,errors:[],showStatus:!1,columns:[[h["a"].thTxt("Age group"),h["a"].thTxt("Gender"),h["a"].thNum("# of clients on <3 months of ARVs"),h["a"].thNum("# of clients on 3 - 5 months of ARVs"),h["a"].thNum("# of clients on >= 6 months of ARVs")]],headerInfoList:[],mohCohort:{},canValidate:!1}),watch:{async canValidate(t){t&&await this.validateReport()}},created(){this.fields=this.getDateDurationFields()},methods:{async onPeriod(t,e){this.canValidate=!1,this.totals.clear(),this.errors=[],this.showStatus=!1,this.rows=[],this.report=new i["a"],this.mohCohort=new d["a"],this.mohCohort.setStartDate(e.start_date),this.mohCohort.setEndDate(e.end_date),this.report.setStartDate(e.start_date),this.report.setEndDate(e.end_date),this.period=this.report.getDateIntervalPeriod(),this.report.initArvRefillPeriod(!0),await this.setRows(),this.canValidate=!0,this.showStatus=!0,this.setHeaderInfoList()},getValues(t,e){const r=[],s=[],a=[];for(const o in t){const e=t[o],i=e.prescribed_days;this.totals.add(o),i<90&&r.push(o),i>=90&&i<=150&&s.push(o),i>150&&a.push(o)}return[this.drill(r,`# of clients on < 3 months of ARVs (${e})`),this.drill(s,`# of clients on 3 - 5 months of ARVs (${e})`),this.drill(a,`# of clients on  >= 6 months of ARVs (${e})`)]},async setRows(){let t=0,e=0;const r=[],s=[];for(const a in l["a"]){const o=l["a"][a];if("<1 year"===o)t=0,e=0;else if("90 plus years"===o)t=90,e=1e4;else{const[r,s]=o.split("-");t=parseInt(r),e=parseInt(s)}const i=await this.report.getTxCurrMMDReport(t,e);this.report.initArvRefillPeriod(!1),i?(s.push([h["a"].td(o),h["a"].td("Female"),...this.getValues(i["Female"],o+" Female")]),r.push([h["a"].td(o),h["a"].td("Male"),...this.getValues(i["Male"],o+" Male")])):(s.push([h["a"].td(o),h["a"].td("Female"),h["a"].td(0),h["a"].td(0),h["a"].td(0)]),r.push([h["a"].td(o),h["a"].td("Male"),h["a"].td(0),h["a"].td(0),h["a"].td(0)])),this.rows=[...s,...r]}},setHeaderInfoList(){this.headerInfoList=[{label:"Total clients",value:this.totals.size,other:{onclick:()=>this.runTableDrill(Array.from(this.totals),"Total Clients")}}]},validateReport(){const t={total_alive_and_on_art:{param:this.totals.size,check:(t,e)=>e>t,error:(t,e)=>`\n                        MoH cohort Alive and on ART clients <b>(${t})</b> is not\n                        matching with total TX MMD clients <b>(${e})</b>.\n                    `}},e=this.mohCohort.validateIndicators(t,t=>this.errors=t);-1===e&&(this.errors=["Report not validated. Run the MoH cohort report for similar reporting period and then run this report"])}}}),u=r("6b0d"),p=r.n(u);const f=p()(c,[["render",a]]);e["default"]=f}}]);
//# sourceMappingURL=chunk-e523fed2.c9671899.js.map