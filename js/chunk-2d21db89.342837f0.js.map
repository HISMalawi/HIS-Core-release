{"version":3,"sources":["webpack:///./src/plugins/LabelPrinter/web.ts"],"names":["LabelPrinterWeb","opts","url","ApiClient","expandPath","then","path","document","location","TypeError","devices","WebPlugin"],"mappings":"2QAKaA,EAAb,gOACE,WAAYC,GAAZ,qFACKA,EAAKC,IADV,yCAEWC,OAAUC,WAAWH,EAAKC,KAAKG,MAAK,SAAAC,GACzCC,SAASC,SAAWF,MAH1B,aAMQ,IAAIG,UAAW,iBANvB,2CADF,yIASE,uHACS,CACLC,QAAS,CAAC,gBAFd,2CATF,8DAAqCC","file":"js/chunk-2d21db89.342837f0.js","sourcesContent":["import ApiClient from '@/services/api_client';\nimport { WebPlugin } from '@capacitor/core';\nimport type { LabelPrinterPlugin, WriteOptions } from './definitions';\n\n\nexport class LabelPrinterWeb extends WebPlugin implements LabelPrinterPlugin {\n  async write(opts: WriteOptions): Promise<void> {\n    if(opts.url) {\n      return ApiClient.expandPath(opts.url).then(path => {\n        document.location = path as any\n      })\n    }\n    throw new TypeError (\"Undefined url\")\n  }\n  async discover(): Promise<{devices: string[]}> {\n    return {\n      devices: [\"webPrinter\"]\n    }\n  }\n}\n"],"sourceRoot":""}