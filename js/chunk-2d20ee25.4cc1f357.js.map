{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/ART/views/reports/clinic/ClinicRegimenReport.vue"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_openBlock","_createBlock","title","period","rows","fields","columns","onReportConfiguration","onPeriod","config","showIndex","defineComponent","mixins","ReportMixin","components","ReportTemplate","data","table","thTxt","created","this","getDateDurationFields","methods","_","report","RegimenReportService","setReportType","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","setRows","getRegimenReport","sortByArvNumber","Object","values","map","d","lastDispenseDate","medications","medication","m","toDate","quantity","push","td","arv_number","gender","tdDate","birthdate","art_start_date","current_weight","current_regimen","join","vl_result","vl_result_date","__exports__"],"mappings":"uIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMC,EAA6BC,8BAAkB,mBAErD,OAAQC,yBAAcC,yBAAaH,EAA4B,CAC7DI,MAAOV,EAAKU,MACZC,OAAQX,EAAKW,OACbC,KAAMZ,EAAKY,KACXC,OAAQb,EAAKa,OACbC,QAASd,EAAKc,QACdC,sBAAuBf,EAAKgB,SAC5BC,OAAQ,CACIC,WAAW,IAEtB,KAAM,EAAG,CAAC,QAAS,SAAU,OAAQ,SAAU,UAAW,0B,oDCRhDC,+BAAgB,CAC3BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,uBACdC,KAAM,KAAM,CACRd,MAAO,wBACPE,KAAM,GACNE,QAAS,CACL,CACIW,OAAMC,MAAM,QACZD,OAAMC,MAAM,UACZD,OAAMC,MAAM,OACZD,OAAMC,MAAM,kBACZD,OAAMC,MAAM,cACZD,OAAMC,MAAM,YACZD,OAAMC,MAAM,QACZD,OAAMC,MAAM,sBACZD,OAAMC,MAAM,aACZD,OAAMC,MAAM,yBAIxBC,UACIC,KAAKf,OAASe,KAAKC,yBAEvBC,QAAS,CACL,eAAeC,EAAQd,GACnBW,KAAKhB,KAAO,GACZgB,KAAKI,OAAS,IAAIC,OAClBL,KAAKI,OAAOE,cAAc,OAC1BN,KAAKI,OAAOG,aAAalB,EAAOmB,YAChCR,KAAKI,OAAOK,WAAWpB,EAAOqB,UAC9BV,KAAKjB,OAASiB,KAAKI,OAAOO,wBAC1BX,KAAKY,cAAeZ,KAAKI,OAAOS,qBAEpCD,QAAQhB,GACJI,KAAKc,gBAAgBC,OAAOC,OAAOpB,IAAOqB,IAAKC,IAC3C,IAAIC,EAAmB,GACvB,MAAMC,EAAcF,EAAEG,WAAWJ,IAAKK,IAClCH,EAAmBnB,KAAKuB,OAAOD,EAAEd,YAC1B,GAAGc,EAAED,eAAeC,EAAEE,cAEjCxB,KAAKhB,KAAKyC,KAAK,CACX5B,OAAM6B,GAAGR,EAAES,YACX9B,OAAM6B,GAAGR,EAAEU,QACX/B,OAAMgC,OAAOX,EAAEY,WACfjC,OAAMgC,OAAOX,EAAEa,gBACflC,OAAM6B,GAAGR,EAAEc,gBACXnC,OAAM6B,GAAGR,EAAEe,iBACXpC,OAAM6B,GAAGN,EAAYc,KAAK,OAC1BrC,OAAMgC,OAAOV,GACbtB,OAAM6B,GAAGR,EAAEiB,WACXtC,OAAMgC,OAAOX,EAAEkB,wB,qBCrDnC,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASlE,KAErD","file":"js/chunk-2d20ee25.4cc1f357.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_template = _resolveComponent(\"report-template\")\n\n  return (_openBlock(), _createBlock(_component_report_template, {\n    title: _ctx.title,\n    period: _ctx.period,\n    rows: _ctx.rows,\n    fields: _ctx.fields,\n    columns: _ctx.columns,\n    onReportConfiguration: _ctx.onPeriod,\n    config: {\n                showIndex: false\n        }\n  }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"onReportConfiguration\"]))\n}","\nimport { defineComponent } from 'vue'\nimport { RegimenReportService } from \"@/apps/ART/services/reports/regimen_report_service\"\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate },\n    data: () => ({\n        title: 'Clinic Regimen Report',\n        rows: [] as Array<any>,\n        columns: [\n            [\n                table.thTxt('ARV#'),\n                table.thTxt('Gender'),\n                table.thTxt('DOB'),\n                table.thTxt('ART start date'),\n                table.thTxt('Weight(Kg)'),\n                table.thTxt('Curr.Reg'),\n                table.thTxt('ARVs'), \n                table.thTxt('Curr.reg dispensed'),\n                table.thTxt('VL result'),\n                table.thTxt('Date of VL result')\n            ]\n        ]\n    }),\n    created() {\n        this.fields = this.getDateDurationFields()\n    },\n    methods: {\n        async onPeriod(_: any, config: any) {\n            this.rows = []\n            this.report = new RegimenReportService()\n            this.report.setReportType('moh')\n            this.report.setStartDate(config.start_date)\n            this.report.setEndDate(config.end_date)\n            this.period = this.report.getDateIntervalPeriod()\n            this.setRows((await this.report.getRegimenReport()))\n        },\n        setRows(data: any) {\n            this.sortByArvNumber(Object.values(data)).map((d: any) => {\n                let lastDispenseDate = ''\n                const medications = d.medication.map((m: any) => {\n                    lastDispenseDate = this.toDate(m.start_date)\n                    return `${m.medication} (${m.quantity})`\n                })\n                this.rows.push([\n                    table.td(d.arv_number),\n                    table.td(d.gender),\n                    table.tdDate(d.birthdate),\n                    table.tdDate(d.art_start_date),\n                    table.td(d.current_weight),\n                    table.td(d.current_regimen),\n                    table.td(medications.join(', ')),\n                    table.tdDate(lastDispenseDate),\n                    table.td(d.vl_result),\n                    table.tdDate(d.vl_result_date)\n                ])\n            })\n        }\n    }\n})\n","import { render } from \"./ClinicRegimenReport.vue?vue&type=template&id=542667e9&ts=true\"\nimport script from \"./ClinicRegimenReport.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicRegimenReport.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}