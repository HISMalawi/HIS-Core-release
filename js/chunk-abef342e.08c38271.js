(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-abef342e"],{"32b3":function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s}));var a,o=n("cc6f"),r=n("7957");(function(e){e["Prescription"]="htnPrescription"})(a||(a={}));class s extends o["a"]{constructor(e,t){super(e,48,t)}static getBpGrade(e,t){return e<140&&t<90?"normal":e>=140&&e<160||t>=100&&t<110?"grade 1":e>=180&&t>110||e>=180?"grade 3":e>=160&&e<180||t>=110?"grade 2":"N/A"}static isBpNormotensive(e){const[t,n]=Object.values(e).sort((e,t)=>e.date<t.date?1:0).map(e=>this.getBpGrade(e.sbp,e.dbp));return"normal"===t&&"normal"===n}getSystolicBp(){return r["a"].getFirstValueNumber(this.patientID,"Systolic blood pressure")}getDiastolicBp(){return r["a"].getFirstValueNumber(this.patientID,"Diastolic blood pressure")}async onBpDrugs(){const e=await r["a"].getFirstValueCoded(this.patientID,"Treatment status");return!!e&&"Yes"===e}async getBPTrail(){return await o["a"].getJson(`/patients/${this.patientID}/bp_trail`)}async getCurrentDrugs(){return await o["a"].getJson(`/patients/${this.patientID}/current_bp_drugs`)}async getLastDrugs(){return await o["a"].getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`)}async getAdherence(e,t){return await o["a"].postJson(`/patients/${this.patientID}/remaining_bp_drugs`,{drug_id:e,pills:t})}async enrollPatient(e){return await o["a"].postJson(`/patients/${this.patientID}/update_or_create_htn_state`,e)}static htnDrugReferences(){return[{drug_id:275,drug_name:"HCZ (25mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:942,drug_name:"Enalapril (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:943,drug_name:"Enalapril (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:558,drug_name:"Amlodipine (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:559,drug_name:"Amlodipine (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:117,drug_name:"Atenolol (50mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:11,drug_name:"Atenolol(100mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"}]}getDrugs(){return{HCZ:{drugs:[{drugName:"HCZ (25mg tablet)",drugID:275,amount:"25mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null}],selected:null,notes:[]},Enalapril:{drugs:[{drugName:"Enalapril (5mg tablet)",drugID:942,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Enalapril (10mg tablet)",drugID:943,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Amlodipine:{drugs:[{drugName:"Amlodipine (5mg tablet)",drugID:558,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Amlodipine (10mg tablet)",drugID:559,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Atenolol:{drugs:[{drugName:"Atenolol (50mg tablet)",drugID:117,amount:"50mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Atenolol(100mg tablet)",drugID:11,amount:"100mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]}}}}},"6f4a":function(e,t,n){},"72e3":function(e,t,n){"use strict";n.r(t);var a=n("7a23");const o={key:0,style:{color:"green"}},r={slot:"end"},s=Object(a["createTextVNode"])("add riskfactors"),i=Object(a["createVNode"])("h1",{style:{"text-align":"center"}},"Actions",-1),c=Object(a["createTextVNode"])(" cancel "),l=Object(a["createTextVNode"])(" Refer to clinician "),d=Object(a["createTextVNode"])(" Hypertension Diagnosis "),u=Object(a["createTextVNode"])(" Enroll in HTN "),b=Object(a["createTextVNode"])(" Finish ");function h(e,t,n,h,p,m){const g=Object(a["resolveComponent"])("ion-title"),O=Object(a["resolveComponent"])("ion-button"),j=Object(a["resolveComponent"])("ion-toolbar"),f=Object(a["resolveComponent"])("ion-header"),C=Object(a["resolveComponent"])("data-table"),k=Object(a["resolveComponent"])("ion-content"),v=Object(a["resolveComponent"])("ion-label"),y=Object(a["resolveComponent"])("ion-radio"),D=Object(a["resolveComponent"])("ion-item"),w=Object(a["resolveComponent"])("ion-col"),N=Object(a["resolveComponent"])("ion-row"),I=Object(a["resolveComponent"])("ion-grid"),V=Object(a["resolveComponent"])("ion-radio-group"),_=Object(a["resolveComponent"])("ion-footer"),T=Object(a["resolveComponent"])("ion-page");return Object(a["openBlock"])(),Object(a["createBlock"])(T,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(f,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(j,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(g,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])("span",null,"BP management screening on "+Object(a["toDisplayString"])(e.date),1),e.patientOnBPDrugs?(Object(a["openBlock"])(),Object(a["createBlock"])("small",o," (Patient already on BP drugs)")):Object(a["createCommentVNode"])("",!0)]),_:1}),Object(a["createVNode"])("span",r,[e.totalRiskFactors>0?(Object(a["openBlock"])(),Object(a["createBlock"])(O,{key:0,color:"danger",onClick:e.showRiskFactors},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])("View/Edit risk factors "+Object(a["toDisplayString"])(e.totalRiskFactors),1)]),_:1},8,["onClick"])):Object(a["createCommentVNode"])("",!0),0===e.totalRiskFactors?(Object(a["openBlock"])(),Object(a["createBlock"])(O,{key:1,onClick:e.showRiskFactors},{default:Object(a["withCtx"])(()=>[s]),_:1},8,["onClick"])):Object(a["createCommentVNode"])("",!0)])]),_:1})]),_:1}),Object(a["createVNode"])(k,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(C,{config:{showIndex:!1},columns:e.columns,rows:e.rows},null,8,["columns","rows"])]),_:1}),Object(a["createVNode"])(_,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(j,null,{default:Object(a["withCtx"])(()=>[i,Object(a["createVNode"])(V,{modelValue:e.action,"onUpdate:modelValue":t[1]||(t[1]=t=>e.action=t)},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(I,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(N,null,{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createBlock"])(a["Fragment"],null,Object(a["renderList"])(e.items,(e,t)=>(Object(a["openBlock"])(),Object(a["createBlock"])(w,{size:"4",key:t},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(D,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(v,{style:{"font-size":"1.0rem","font-weight":"bold"}},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1024),Object(a["createVNode"])(y,{value:e},null,8,["value"])]),_:2},1024)]),_:2},1024))),128))]),_:1})]),_:1})]),_:1},8,["modelValue"])]),_:1}),Object(a["createVNode"])(j,{color:"dark"},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(O,{size:"large",color:"danger",slot:"start",onClick:e.gotoPatientDashboard},{default:Object(a["withCtx"])(()=>[c]),_:1},8,["onClick"]),e.showClinicianButton?(Object(a["openBlock"])(),Object(a["createBlock"])(O,{key:0,size:"large",color:"danger",slot:"start",onClick:e.referPatient},{default:Object(a["withCtx"])(()=>[l]),_:1},8,["onClick"])):Object(a["createCommentVNode"])("",!0),e.patientHasHyperTensionObs?Object(a["createCommentVNode"])("",!0):(Object(a["openBlock"])(),Object(a["createBlock"])(O,{key:1,size:"large",slot:"end",onClick:e.goToDiagnosis},{default:Object(a["withCtx"])(()=>[d]),_:1},8,["onClick"])),e.patientHasHyperTensionObs&&!e.isEnrolledInHTN?(Object(a["openBlock"])(),Object(a["createBlock"])(O,{key:2,size:"large",slot:"end",onClick:e.enrollInHTN},{default:Object(a["withCtx"])(()=>[u]),_:1},8,["onClick"])):Object(a["createCommentVNode"])("",!0),e.patientHasHyperTensionObs?(Object(a["openBlock"])(),Object(a["createBlock"])(O,{key:3,size:"large",color:"success",slot:"end",onClick:e.onFinish},{default:Object(a["withCtx"])(()=>[b]),_:1},8,["onClick"])):Object(a["createCommentVNode"])("",!0)]),_:1})]),_:1})]),_:1})}var p=n("8a30"),m=n("b5e4"),g=n("7365"),O=n("77fd"),j=n("7957"),f=n("8158"),C=n("1c74"),k=n("9283"),v=n("2ef0"),y=n("32b3"),D=n("c1e4"),w=n("ad60"),N=n("b515"),I=n("74f4"),V=n("80e3"),_=n("9ceb"),T=n("7f35");const x={background:"#444444"};var B=Object(a["defineComponent"])({mixins:[g["a"]],components:{DataTable:V["a"],IonTitle:p["P"],IonToolbar:p["Q"],IonHeader:p["q"],IonContent:p["n"],IonGrid:p["p"],IonRow:p["H"],IonButton:p["d"],IonRadioGroup:p["F"],IonRadio:p["E"],IonCol:p["m"],IonFooter:p["o"],IonPage:p["D"],IonItem:p["w"],IonLabel:p["x"]},data:()=>({htn:{},hasARVNumber:!0,suggestedNumber:"",columns:[[_["a"].thTxt("Date",{style:x}),_["a"].thTxt("Systolic",{style:x}),_["a"].thTxt("Diastolic",{style:x}),_["a"].thTxt("BP Drugs",{style:x}),_["a"].thTxt("Action / Note",{style:x})]],bpGradeColorMap:{"N/A":"#ffffff",normal:"#ffffff","grade 1":"#FFC3CE","grade 2":"#F20056","grade 3":"#FF3333"},rows:[],riskFactors:[],action:null,trail:[],date:null,patientOnBPDrugs:!1,patientFirstVisit:!1,normatensive:!1,patientHasHyperTensionObs:!1,currentDrugs:[],items:[],isEnrolledInHTN:!1,isAliveOnHTN:!1,HTNProgramID:20,aliveState:160,refer:!1}),watch:{ready:{async handler(e){if(!e)return;const t=await p["V"].create({message:"Please wait...",backdropDismiss:!1});await t.present(),this.htn=new y["a"](this.patientID,this.providerID),this.trail=await this.htn.getBPTrail(),this.rows=this.formatBpTrailRows(this.trail),this.normatensive=y["a"].isBpNormotensive(this.trail),this.riskFactors=await this.getRiskFactors(),this.date=k["b"].toStandardHisDisplayFormat(C["e"].getSessionDate()),await this.isTransfered(),await this.hasHyperTenstion(),await this.getTreatmentStatus(),await this.getProgramStatus(),p["V"].dismiss(),this.patientFirstVisit&&this.patientOnBPDrugs&&await this.alertTransferIn(),this.getItems()},immediate:!0}},computed:{totalRiskFactors(){return this.riskFactors.filter(e=>"Yes"===e.value).length},showClinicianButton(){return!(D["a"].isClinician()&&D["a"].isDoctor())}},methods:{async onFinish(){if(this.action||this.refer){const n=await this.htn.createEncounter();if(!n)return Object(m["e"])("Unable to create encounter");if(this.refer){const e=await this.htn.saveValueCodedObs("Refer patient to clinician","Yes");if(!e)return Object(m["e"])("Unable to create Obs");this.gotoPatientDashboard()}else{var e,t;const n=await this.htn.saveValueTextObs("Plan",this.action.label);if(!n)return Object(m["e"])("Unable to create Obs");const a={state:this.action.value};if(await this.htn.enrollPatient(a),"function"===typeof(null===(e=this.action)||void 0===e||null===(t=e.other)||void 0===t?void 0:t.action))return this.action.other.action();this.nextTask()}}else Object(m["e"])("Please select an action")},referPatient(){this.refer=!0,this.onFinish()},goToDiagnosis(){return this.$router.push({path:"/art/encounters/hypertension_diagnosis/"+this.patientID})},async hasHyperTenstion(){const e=await j["a"].getFirstValueCoded(this.patientID,"Patient has hypertension");this.patientHasHyperTensionObs=!!(""+e).match(/yes|no/i)},async isTransfered(){const e=await j["a"].getFirstValueCoded(this.patientID,"Transferred");this.patientFirstVisit=!e},async getTreatmentStatus(){const e=await j["a"].getFirstValueText(this.patientID,"Treatment status");this.patientOnBPDrugs=!(!e||!e.match(/BP Drugs started/i))},async getProgramStatus(){const e=await w["a"].getPatientPrograms(this.patientID);this.isEnrolledInHTN=e.filter(e=>"HYPERTENSION PROGRAM"===e.program.name).length>0,this.isEnrolledInHTN&&await this.programState()},async programState(){const e=await w["a"].getPatientStates(this.patientID,this.HTNProgramID);this.isAliveOnHTN=e.filter(e=>"Alive"===e.name).length>0},async getRiskFactors(){const e=f["a"].getConceptsByCategory("risk factors"),t=e.map(async e=>{const t=await j["a"].getFirstValueCoded(this.patientID,e.name);return{concept:e.name,value:t}});return Promise.all(t)},formatBpTrailRows(e){return Object.keys(e).map(t=>{const n=k["b"].toStandardHisDisplayFormat(t);this.currentDrugs=this.currentDrugs.concat(e[t]["drugs"]);const a=()=>{const n=y["a"].getBpGrade(parseInt(e[t].sbp),parseInt(e[t].dbp));return this.bpGradeColorMap[n]},o={background:a()};return[_["a"].tdDate(n,{style:o}),_["a"].td(e[t].sbp,{style:o}),_["a"].td(e[t].dbp,{style:o}),_["a"].td(e[t]["drugs"].join(", "),{style:o}),_["a"].td(e[t].note,{style:o})]})},async showRiskFactors(){const e=await p["X"].create({component:O["a"],backdropDismiss:!1,cssClass:"large-modal",componentProps:{factors:this.riskFactors}});e.present();const{data:t}=await e.onDidDismiss();Object(v["isEmpty"])(t)||(this.riskFactors=t.map(e=>{const t=!0===e.isChecked?"Yes":"No";return{concept:e.concept,value:t}}))},async alertTransferIn(){const e=await Object(T["a"])("Transfer in","Does the patient want to transfer in for HTN management?","",[{name:"Yes",slot:"end",color:"success"},{name:"No",slot:"start",color:"danger"}]);"Yes"===e?(await this.enrollInHTN(),await this.setHtnTransferred("Yes"),this.patientFirstVisit=!1,await this.getItems()):(await this.setHtnTransferred("No"),this.nextTask())},async enrollInHTN(){try{const e=new I["a"](this.patientID);e.setProgramId(this.HTNProgramID),e.setStateDate(w["a"].getSessionDate()),e.setStateId(this.aliveState),await e.enrollProgram(),await e.updateState(),this.isEnrolledInHTN=!0,Object(m["d"])("Patient is now enrolled in HTN")}catch(e){console.error(e),Object(m["e"])(e)}},async setHtnTransferred(e){const t=new N["a"](this.patientID,this.providerID),n=await t.createEncounter();if(n){const n=await t.saveValueCodedObs("Transferred",e);n||Object(m["e"])("Unable to create observation Transferred for patient")}else Object(m["e"])("Unable to create patient transfer encounter")},async getItems(){this.currentDrugs.length>0?this.items=[{label:"Did not take prescribed drugs",value:"on treatment",other:{action:()=>this.$router.push("/art/encounters/bp_adherence/"+this.patientID)}},{label:"Continue drugs",value:"on treatment",other:{action:()=>this.$router.push("/art/encounters/bp_adherence/"+this.patientID)}},{label:"Review drugs",value:"on treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_adherence/${this.patientID}?review=true`)}}]:(this.items=[{label:"Lifestyle advice given",value:"Lifestyle changes only"},{label:"Not yet stable on ART",value:"Symptomatic but not in treatment"},{label:"Patient declining BP drugs ",value:"Symptomatic but not in treatment"}],this.normatensive&&this.items.push({label:"Return to annual screening",value:"Alive"}),this.items.push({label:"Start anti hypertensives",value:"On treatment",other:{action:()=>this.$router.push("/art/encounters/bp_prescription/"+this.patientID)}}))}}}),P=n("6b0d"),F=n.n(P);const H=F()(B,[["render",h]]);t["default"]=H},"77fd":function(e,t,n){"use strict";var a=n("7a23");const o=Object(a["withScopeId"])("data-v-1b2b2db4");Object(a["pushScopeId"])("data-v-1b2b2db4");const r=Object(a["createTextVNode"])("Risk Factors"),s=Object(a["createTextVNode"])(" Close "),i=Object(a["createTextVNode"])(" Manage BP "),c=Object(a["createTextVNode"])(" Save ");Object(a["popScopeId"])();const l=o((function(e,t,n,l,d,u){const b=Object(a["resolveComponent"])("ion-title"),h=Object(a["resolveComponent"])("ion-toolbar"),p=Object(a["resolveComponent"])("ion-header"),m=Object(a["resolveComponent"])("ion-label"),g=Object(a["resolveComponent"])("ion-checkbox"),O=Object(a["resolveComponent"])("ion-item"),j=Object(a["resolveComponent"])("ion-list"),f=Object(a["resolveComponent"])("ion-col"),C=Object(a["resolveComponent"])("ion-row"),k=Object(a["resolveComponent"])("ion-grid"),v=Object(a["resolveComponent"])("ion-content"),y=Object(a["resolveComponent"])("ion-button"),D=Object(a["resolveComponent"])("ion-footer");return Object(a["openBlock"])(),Object(a["createBlock"])(a["Fragment"],null,[Object(a["createVNode"])(p,null,{default:o(()=>[Object(a["createVNode"])(h,null,{default:o(()=>[Object(a["createVNode"])(b,null,{default:o(()=>[r]),_:1})]),_:1})]),_:1}),Object(a["createVNode"])(v,{style:{overflowY:"hidden",background:"grey"}},{default:o(()=>[Object(a["createVNode"])(k,null,{default:o(()=>[Object(a["createVNode"])(C,null,{default:o(()=>[Object(a["createVNode"])(f,null,{default:o(()=>[Object(a["createVNode"])(j,{style:{overflowY:"auto",height:"78vh"}},{default:o(()=>[(Object(a["openBlock"])(!0),Object(a["createBlock"])(a["Fragment"],null,Object(a["renderList"])(e.riskFactors,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(O,{key:e},{default:o(()=>[Object(a["createVNode"])(m,null,{default:o(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.name),1)]),_:2},1024),Object(a["createVNode"])(g,{modelValue:e.isChecked,"onUpdate:modelValue":t=>e.isChecked=t,slot:"start"},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024))),128))]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),Object(a["createVNode"])(D,null,{default:o(()=>[Object(a["createVNode"])(h,null,{default:o(()=>[Object(a["createVNode"])(y,{size:"large",onClick:e.exit,slot:"start",color:"danger"},{default:o(()=>[s]),_:1},8,["onClick"]),e.showManageBPButton?(Object(a["openBlock"])(),Object(a["createBlock"])(y,{key:0,size:"large",onClick:e.manageBP,slot:"start"},{default:o(()=>[i]),_:1},8,["onClick"])):Object(a["createCommentVNode"])("",!0),Object(a["createVNode"])(y,{size:"large",color:"success",onClick:e.postActivities,slot:"end"},{default:o(()=>[c]),_:1},8,["onClick"])]),_:1})]),_:1})],64)}));var d=n("8a30"),u=n("cc6f");class b extends u["a"]{constructor(e,t){super(e,30,t)}}var h=n("8158"),p=Object(a["defineComponent"])({name:"Modal",props:{factors:{type:Object,required:!0},title:{type:String,default:""}},computed:{showManageBPButton(){return"bp_management"!=this.$route.name}},created(){this.patientID=parseInt(""+this.$route.params.patient_id)},methods:{async postActivities(){const e=new b(this.patientID,-1),t=await e.createEncounter();if(t){const t=await this.buildObs();await e.saveObservationList(t),await this.closeModal()}},manageBP(){this.$router.push("/art/encounters/bp_management/"+this.patientID)},exit(){d["X"].dismiss([])},async closeModal(){await d["X"].dismiss(this.riskFactors)},async buildObs(){return this.riskFactors.map(e=>{const t=!0===e.isChecked?"Yes":"No",n=h["a"].getConceptID(t,!0),a=h["a"].getConceptID(e.concept,!0);return{concept_id:a,value_coded:n}})}},data(){return{patientID:-1,riskFactors:[{name:"Diabetes",isChecked:!1,concept:"Diabetes"},{name:"Cronic kidney disease",isChecked:!1,concept:"CKD"},{name:"Past history of IHD or CVD",isChecked:!1,concept:"history of CVD"},{name:"First degree relative with IHD or CVD <65",isChecked:!1,concept:"relative with CVD"},{name:"Patient currently smokes",isChecked:!1,concept:"patient smokes"}]}},mounted(){this.factors.forEach(e=>{if("Yes"===e.value){const t=this.riskFactors.findIndex(t=>t.concept===e.concept);this.riskFactors[t].isChecked=!0}})},components:{IonButton:d["d"],IonContent:d["n"],IonHeader:d["q"],IonTitle:d["P"],IonToolbar:d["Q"],IonLabel:d["x"],IonList:d["y"],IonItem:d["w"],IonCheckbox:d["k"],IonRow:d["H"],IonFooter:d["o"],IonGrid:d["p"],IonCol:d["m"]}}),m=(n("9719"),n("6b0d")),g=n.n(m);const O=g()(p,[["render",l],["__scopeId","data-v-1b2b2db4"]]);t["a"]=O},9719:function(e,t,n){"use strict";n("6f4a")},b515:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n("cc6f"),o=n("2ef0");class r extends a["a"]{constructor(e,t){super(e,6,t)}isNotEmptyandNumber(e){return(""+e.value).match(/^-?\d+\.?\d*$/)?null:["Invalid entry for "+e.label]}isNotEmptyandFloat(e){return(""+e.value).match(/^\d{1,3}\.\d{1,5}$/)?null:[`Invalid entry for ${e.label}. Don't forget to add a decimal. e.g. 56.2 ${e.other.modifier}`]}checkMinMax(e,t,n){const a=[];var o,r;parseFloat(""+e.value)<t&&a.push([`${e.label} entered is less than minimum ${t} ${(null===e||void 0===e||null===(o=e.other)||void 0===o?void 0:o.modifier)||""}`]);parseFloat(""+e.value)>n&&a.push([`${e.label} entered is greater than maximum ${n} ${(null===e||void 0===e||null===(r=e.other)||void 0===r?void 0:r.modifier)||""}`]);return a.length>0?a:null}validateAll(e){const t=[];return e.map(e=>{const n=this.validator(e);return Object(o["isArray"])(n)?t.push(n):null}),t.length>0?t:null}mergeErrors(e){const t=[];return e.forEach(e=>{Object(o["isArray"])(e)&&t.push(e)}),t.length>0?t:null}isValidBPReading(e){const t=[],n=(""+e.value).match(/^\d{1,3}\/\d{1,3}$/g)?null:["Invalid BP reading"];if(t.push(n),null==n){const n=(""+e.value).split("/"),a={label:"Systolic",value:n[0]},o={label:"Diastolic",value:n[1]};t.push(this.checkMinMax(o,30,200)),t.push(this.checkMinMax(a,40,250))}return this.mergeErrors(t)}validator(e){const t=[{name:"Weight",validator:e=>{const t=this.isNotEmptyandFloat(e),n=this.checkMinMax(e,2,250);return this.mergeErrors([t,n])}},{name:"Height",validator:e=>{const t=[];return t.push(this.isNotEmptyandNumber(e)),t.push(this.checkMinMax(e,40,220)),this.mergeErrors(t)}},{name:"BP",validator:e=>this.isValidBPReading(e)},{name:"Temp",validator:e=>{const t=this.isNotEmptyandNumber(e),n=this.checkMinMax(e,30,42);return this.mergeErrors([t,n])}},{name:"SP02",validator:e=>{const t=this.checkMinMax(e,40,100);return this.mergeErrors([t])}},{name:"Pulse",validator:e=>{const t=this.checkMinMax(e,50,120);return this.mergeErrors([t])}}],n=t.filter(t=>t.name===e.label);return n.length>0?n[0].validator(e):null}}}}]);
//# sourceMappingURL=chunk-abef342e.08c38271.js.map