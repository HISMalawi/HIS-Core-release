{"version":3,"sources":["webpack:///./src/apps/ANC/Views/DataManagement/AncDataCleaningTools.vue?3c69","webpack:///./src/apps/ANC/Views/DataManagement/AncDataCleaningTools.vue","webpack:///./src/apps/ANC/Views/DataManagement/AncDataCleaningTools.vue?97de"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","period","rows","fields","columns","showFilters","onReportConfiguration","onPeriod","_","defineComponent","mixins","ReportMixin","components","ReportTemplate","IonPage","data","defaultIndicator","created","this","id","helpText","type","FieldType","TT_SELECT","requireNext","condition","defaultOutput","validation","val","Validation","required","options","getIndicatorOptions","generateDateFields","minDate","maxDate","Service","getSessionDate","estimation","allowUnknown","computeValue","date","c","start_date","find","value","$route","query","methods","form","config","d","HisDate","toStandardHisDisplayFormat","indicator","label","other","report","AncDataCleaningToolService","setStartDate","setEndDate","end_date","getDataToolReport","Promise","all","map","formatRow","showPatientBtn","patientID","table","tdBtn","$router","push","AncCleaningIndicator","MALES_WITH_ANC_ENCOUNTERS","thTxt","td","identifier","given_name","family_name","total_encounters","patient_id","ENCOUNTERS_AFTER_DEATH","tdDate","patient_died_date","minimum_encounter_datetime","INCOMPLETE_VISITS","n_id","name","visit_date","visit_no","DUPLICATE_ENCOUNTERS","total","MISSING_HIV_STATUS","__exports__"],"mappings":"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","file":"js/chunk-2d0e8851.4b7f0194.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_template = _resolveComponent(\"report-template\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        period: _ctx.period,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        showFilters: true,\n        onReportConfiguration: _ctx.onPeriod\n      }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from \"vue\";\nimport {\n  AncDataCleaningToolService,\n  AncCleaningIndicator,\n} from \"@/apps/ANC/Services/anc_datacleaning_service\";\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\";\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\";\nimport table from \"@/components/DataViews/tables/ReportDataTable\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport { IonPage } from \"@ionic/vue\";\nimport { Service } from \"@/services/service\";\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport HisDate from \"@/utils/Date\"\nimport { find } from \"lodash\";\n\nexport default defineComponent({\n  mixins: [ReportMixin],\n  components: { ReportTemplate, IonPage },\n  data: () => ({\n    title: \"Data cleaning report\",\n    rows: [] as Array<any>,\n    columns: [] as Array<any>,\n    defaultIndicator: {} as Option | null\n  }),\n  created() {\n    this.fields = [\n        {\n            id: \"indicator\",\n            helpText: \"Select indicator\",\n            type: FieldType.TT_SELECT,\n            requireNext: false,\n            condition: () => !this.defaultIndicator,\n            defaultOutput: () =>  this.defaultIndicator as Option,\n            validation: (val: Option) => Validation.required(val),\n            options: () => this.getIndicatorOptions()\n        },\n        ...generateDateFields({\n            id: 'start_date',\n            helpText: 'Start',\n            required: true,\n            minDate: () => '2000-01-01',\n            maxDate: () => Service.getSessionDate(),\n            estimation: {\n                allowUnknown: false\n            },\n            computeValue: (date: string) => date \n        }),\n        ...generateDateFields({\n            id: 'end_date',\n            helpText: 'End',\n            required: true,\n            minDate: (_: any, c: any) => c.start_date,\n            maxDate: () => Service.getSessionDate(),\n            estimation: {\n                allowUnknown: false\n            },\n            computeValue: (date: string) => date\n        })\n    ]\n    this.defaultIndicator = find(this.getIndicatorOptions(), {\n        value: this.$route.query['cleaning_tool'] as string\n    }) as Option || null\n  },\n  methods: {\n    async onPeriod(form: any, config: any) {\n      const d = (date: string) => HisDate.toStandardHisDisplayFormat(date)\n      this.rows = []\n      this.title = form.indicator.label\n      const indicator = form.indicator\n      this.columns = indicator.other.columns\n      this.report = new AncDataCleaningToolService()\n      this.report.setStartDate(config.start_date)\n      this.report.setEndDate(config.end_date)\n      this.period = `${d(config.start_date)} - ${d(config.end_date)}`\n      const data = await this.report.getDataToolReport(indicator.value)\n      if (data) {\n        this.rows = await Promise.all(data.map((d: any) => indicator.other.formatRow(d)))\n      }\n    },\n    showPatientBtn(patientID: number) {\n        return table.tdBtn(\"View\", () => this.$router.push('/patient/dashboard/' + patientID))\n    },\n    getIndicatorOptions() {\n        return [\n            {\n                label: \"Males with ANC Encounters\",\n                value: AncCleaningIndicator.MALES_WITH_ANC_ENCOUNTERS,\n                other: {\n                    columns: [\n                        [\n                            table.thTxt(\"National ID\"),\n                            table.thTxt(\"First name\"),\n                            table.thTxt(\"Last name\"),\n                            table.thTxt(\"Total Encounters\"),\n                            table.thTxt(\"Action\")\n                        ]\n                    ],\n                    formatRow: (d: any) => [\n                        table.td(d.identifier),\n                        table.td(d.given_name),\n                        table.td(d.family_name),\n                        table.td(d.total_encounters),\n                        this.showPatientBtn(d.patient_id)\n                    ]\n                }\n            },\n            {\n                label: \"Encounters after death\",\n                value: AncCleaningIndicator.ENCOUNTERS_AFTER_DEATH,\n                other: {\n                    columns: [\n                        [\n                            table.thTxt(\"National ID\"),\n                            table.thTxt(\"First name\"),\n                            table.thTxt(\"Last name\"),\n                            table.thTxt(\"Date of death\"),\n                            table.thTxt(\"Recent encounter date\"),\n                            table.thTxt(\"Count\"),\n                            table.thTxt(\"Action\")\n                        ]\n                    ],\n                    formatRow: (d: any) => [\n                        table.td(d.identifier),\n                        table.td(d.given_name),\n                        table.td(d.family_name),\n                        table.tdDate(d.patient_died_date),\n                        table.tdDate(d.minimum_encounter_datetime),\n                        table.td(d.total_encounters),\n                        this.showPatientBtn(d.patient_id)\n                    ]\n                }\n            },\n            {\n                label: \"Incomplete visits\",\n                value: AncCleaningIndicator.INCOMPLETE_VISITS,\n                other: {\n                    columns: [\n                        [\n                            table.thTxt(\"National ID\"),\n                            table.thTxt(\"Name\"),\n                            table.thTxt(\"Visit date\"),\n                            table.thTxt(\"Incomplete count\"),\n                            table.thTxt(\"Action\")\n                        ]\n                    ],\n                    formatRow: (d: any) => [\n                        table.td(d.n_id),\n                        table.td(d.name),\n                        table.td(d.visit_date),\n                        table.td(d.visit_no),\n                        this.showPatientBtn(d.patient_id)\n                    ]\n                }\n            },\n            {\n                label: 'Duplicate encounters',\n                value: AncCleaningIndicator.DUPLICATE_ENCOUNTERS,\n                other: {\n                    columns: [\n                        [\n                            table.thTxt(\"National ID\"),\n                            table.thTxt(\"Given name\"),\n                            table.thTxt(\"Family name\"),\n                            table.thTxt(\"Name\"),\n                            table.thTxt(\"Total\"),\n                            table.thTxt(\"Action\")\n                        ]\n                    ],\n                    formatRow: (d: any) => [\n                        table.td(d.identifier),\n                        table.td(d.given_name),\n                        table.td(d.family_name),\n                        table.td(d.name),\n                        table.td(d.total),\n                        this.showPatientBtn(d.patient_id)\n                    ]\n                }\n            },\n            {\n                label: 'Missing HIV Status',\n                value: AncCleaningIndicator.MISSING_HIV_STATUS,\n                other: {\n                    columns: [\n                        [\n                            table.thTxt(\"National ID\"),\n                            table.thTxt(\"Given name\"),\n                            table.thTxt(\"Family name\"),\n                            table.thTxt(\"Action\")\n                        ]\n                    ],\n                    formatRow: (d: any) => [\n                        table.td(d.identifier),\n                        table.td(d.given_name),\n                        table.td(d.family_name),\n                        this.showPatientBtn(d.patient_id)\n                    ]\n                }\n            }\n        ]\n    }\n  }\n})\n","import { render } from \"./AncDataCleaningTools.vue?vue&type=template&id=bc24ae10&ts=true\"\nimport script from \"./AncDataCleaningTools.vue?vue&type=script&lang=ts\"\nexport * from \"./AncDataCleaningTools.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}