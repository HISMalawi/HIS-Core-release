{"version":3,"sources":["webpack:///./src/apps/ART/views/preferences/DefaultPreferences.vue?5b40","webpack:///./src/apps/ART/views/preferences/DefaultPreferences.vue","webpack:///./src/apps/ART/views/preferences/DefaultPreferences.vue?6b42","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","fields","onFinishAction","onFinish","skipSummary","_","defineComponent","components","HisStandardForm","IonPage","data","preference","created","this","$route","name","getTargetLab","getBPThresholdPreferences","getFilingNumberLimitPreferences","getAppointmentLimitPreferences","getHtnAgePreferences","getClinicDaysPreferences","getClinicHolidaysPreferences","getCxCaScreeningPreference","methods","isProp","prop","GlobalPropertyService","set","toastSuccess","$router","back","id","ART_GLOBAL_PROP","TARGET_LAB","helpText","type","FieldType","TT_SELECT","computedValue","v","value","defaultValue","ART_PROP","targetLab","validation","val","Validation","required","condition","options","filter","getLabFacilities","config","showKeyboard","isFilterDataViaApi","screeningProp","CERVICAL_CANCER_SCREENING","TT_YES_NO","cervicalCancerScreeningEnabled","label","values","proxyID","CERVICAL_CANCER_AGE_BOUNDS","TT_NUMBER","f","cervicalCancerScreeningAgeBounds","start","starting_screening_age","end","CLINIC_HOLIDAYS","TT_CLINIC_HOLIDAY_PICKER","clinicHolidays","HTN_SYSTOLIC_THRESHOLD","systolicThreshold","HTN_DIASTOLIC_THRESHOLD","diastolicThreshold","FILING_NUMBER_LIMIT","filingNumberLimit","APPOINTMENT_LIMIT","appointmentLimit","HTN_SCREENING_AGE_THRESHOLD","htnAgeThreshold","toStr","map","d","join","days","isChecked","isEmpty","search","ADULT_CLINIC_DAYS","TT_MULTIPLE_SELECT","adultClinicDays","PEADS_CLINIC_DAYS","peadsClinicDays","__exports__","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","String","Object","formData","computedData","$emit","i","getFacilities","LocationService","facilities","trim","facility","location_id","other","getLabs","getFacilityWards","tag","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","getVillagesByName","page","getLandmarks","landmarks","landmark","code"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+BC,8BAAkB,qBACjDC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,sBAAS,iBAAM,CACtBC,yBAAaP,EAA8B,CACzCQ,OAAQd,EAAKc,OACbC,eAAgBf,EAAKgB,SACrBC,aAAa,GACZ,KAAM,EAAG,CAAC,SAAU,uBAEzBC,EAAG,I,oOCEQC,+BAAgB,CAC9BC,WAAY,CAAEC,uBAAiBC,sBAC/BC,KAAM,iBAAO,CACZC,WAAY,GACZV,OAAQ,KAETW,QAN8B,WAO7BC,KAAKF,WAAaE,KAAKC,OAAOC,KAC9BF,KAAKZ,OAAL,yBACIY,KAAKG,gBADT,eAEIH,KAAKI,6BAFT,eAGIJ,KAAKK,mCAHT,eAIIL,KAAKM,kCAJT,eAKIN,KAAKO,wBALT,eAMIP,KAAKQ,4BANT,eAOIR,KAAKS,gCAPT,eAQIT,KAAKU,gCAGVC,QAAS,CACRC,OADQ,SACDC,GACN,OAAQb,KAAKF,YAAce,IAASb,KAAKF,YAEpCR,SAJE,SAIOE,EAAQK,GAAyB,2LAC7BA,GAD6B,oDACrCgB,EADqC,oBAExCC,OAAsBC,IAAIF,EAAMhB,EAAKgB,IAFG,OAG9CG,eAAa,4BAA6B,KAHI,sBAK/C,EAAKC,QAAQC,OALkC,8CAOhDf,aAXQ,WAWI,WACX,MAAO,CAAC,CACPgB,GAAIC,OAAgBC,WACpBC,SAAU,2BACVC,KAAMC,OAAUC,UAChBC,cAAe,SAACC,GAAD,OAAeA,EAAEC,OAChCC,aAAc,kBAAMC,OAASC,aAC7BC,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,IAC9CG,UAAW,kBAAM,EAAKxB,OAAO,eAC7ByB,QAAS,SAAC7C,GAAD,IAAS8C,EAAT,uDAAgB,GAAhB,OAAuBC,eAAiBD,IACjDE,OAAQ,CACPC,cAAc,EACdC,oBAAoB,MAIvBhC,2BA3BQ,WA2BkB,WACnBG,EAAO,kBACP8B,EAAgBvB,OAAgBwB,0BACtC,MAAO,CACN,CACCzB,GAAIwB,EACJrB,SAAU,0BACVC,KAAMC,OAAUqB,UAChBT,UAAY,kBAAM,EAAKxB,OAAOC,IAC9Ba,cAAe,SAACC,GAAD,OAAeA,GAC9BE,aAAc,kBAAMC,OAASgB,kCAC7Bd,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,IAC9CI,QAAS,iBAAK,CACb,CACCU,MAAO,sBACPC,OAAQ,CACP,CACCD,MAAO,MACPnB,MAAO,QAER,CACCmB,MAAO,KACPnB,MAAO,cAMZ,CACCT,GAAI,yBACJ8B,QAAS7B,OAAgB8B,2BACzB5B,SAAU,yBACVC,KAAMC,OAAU2B,UAChBf,UAAY,SAACgB,GAAD,OAAY,EAAKxC,OAAOC,IAA8B,SAArBuC,EAAET,IAC/Cd,aAAc,WAAF,8CAAE,sHACYC,OAASuB,mCADrB,mBACLC,EADK,EACLA,OACJA,EAFS,yCAEKA,GAFL,2CAAF,qDAAE,GAIdtB,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,KAE/C,CACCd,GAAI,wBACJ8B,QAAS7B,OAAgB8B,2BACzB5B,SAAU,wBACVC,KAAMC,OAAU2B,UAChBf,UAAY,SAACgB,GAAD,OAAY,EAAKxC,OAAOC,IAA8B,SAArBuC,EAAET,IAC/CjB,cAAe,SAACC,EAAWyB,GAAZ,gBAA0BA,EAAEG,uBAAuB3B,MAAnD,YAA4DD,EAAEC,QAC7EC,aAAc,WAAF,8CAAE,sHACQC,OAASuB,mCADjB,mBACNG,EADM,EACNA,KACHA,EAFS,yCAEGA,GAFH,2CAAF,qDAAE,GAIdxB,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,OAIjDxB,6BAlFQ,WAkFoB,WACrBI,EAAOO,OAAgBqC,gBAC7B,MAAO,CACN,CACCtC,GAAIN,EACJS,SAAU,wBACVC,KAAMC,OAAUkC,yBAChBtB,UAAW,kBAAM,EAAKxB,OAAOC,IAC7Ba,cAAe,SAACC,GAAD,OAAeA,EAAEC,OAChCC,aAAc,kBAAMC,OAAS6B,kBAC7B3B,WAAY,SAACC,GAAD,OAAiBC,OAAWC,SAASF,OAIpD7B,0BAhGQ,WAgGiB,WAClBS,EAAO,gBACb,MAAO,CACN,CACCM,GAAIC,OAAgBwC,uBACpBtC,SAAU,8BACVC,KAAMC,OAAU2B,UAChBf,UAAY,kBAAM,EAAKxB,OAAOC,IAC9Ba,cAAe,SAACC,GAAD,OAAeA,EAAEC,OAChCC,aAAc,kBAAMC,OAAS+B,qBAC7B7B,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,KAE/C,CACCd,GAAIC,OAAgB0C,wBACpBxC,SAAU,+BACVC,KAAMC,OAAU2B,UAChBf,UAAY,kBAAM,EAAKxB,OAAOC,IAC9Ba,cAAe,SAACC,GAAD,OAAeA,EAAEC,OAChCC,aAAc,kBAAMC,OAASiC,sBAC7B/B,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,OAIjD5B,gCAvHQ,WAuHuB,WACxBQ,EAAOO,OAAgB4C,oBAC7B,MAAO,CACN,CACC7C,GAAIN,EACJS,SAAU,4BACVc,UAAY,kBAAM,EAAKxB,OAAOC,IAC9Ba,cAAe,SAACC,GAAD,OAAeA,EAAEC,OAChCC,aAAc,kBAAMC,OAASmC,qBAC7B1C,KAAMC,OAAU2B,UAChBnB,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,OAIjD3B,+BArIQ,WAqIsB,WACvBO,EAAOO,OAAgB8C,kBAC7B,MAAO,CACN,CACC/C,GAAIN,EACJS,SAAU,0BACVC,KAAMC,OAAU2B,UAChBzB,cAAe,SAACC,GAAD,OAAeA,EAAEC,OAChCQ,UAAY,kBAAM,EAAKxB,OAAOC,IAC9BgB,aAAc,kBAAMC,OAASqC,oBAC7BnC,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,OAIjD1B,qBAnJQ,WAmJY,WACbM,EAAOO,OAAgBgD,4BAC7B,MAAO,CACN,CACCjD,GAAIN,EACJU,KAAMC,OAAU2B,UAChB7B,SAAU,0BACVc,UAAY,kBAAM,EAAKxB,OAAOC,IAC9Ba,cAAe,SAACC,GAAD,OAAeA,EAAEC,OAChCC,aAAc,kBAAMC,OAASuC,mBAC7BrC,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,OAIjDzB,yBAjKQ,WAiKgB,WACjBK,EAAO,cACPyD,EAAQ,SAAC3C,GAAD,OAAiBA,EAAE4C,KAAI,SAAAC,GAAC,OAAIA,EAAE5C,SAAO6C,QAC7CpC,EAAU,SAACW,GAChB,IAAM0B,EAAO,CACZ,SACA,SACA,UACA,YACA,WACA,SACA,YAED,OAAOA,EAAKH,KAAI,SAAAC,GAAC,MAAK,CACrBzB,MAAOyB,EACP5C,MAAO4C,EACPG,WAAYC,qBAAQ5B,IAAWA,EAAO6B,OAAOL,IAAM,OAGrD,MAAO,CACN,CACCrD,GAAIC,OAAgB0D,kBACpBxD,SAAU,wCACVC,KAAMC,OAAUuD,mBAChB3C,UAAY,kBAAM,EAAKxB,OAAOC,IAC9Ba,cAAe,SAACC,GAAD,OAAiB2C,EAAM3C,IACtCK,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,IAC9CI,QAAS,WAAF,8CAAE,0GAAYA,EAAZ,SAA2BP,OAASkD,kBAApC,uGAAF,qDAAE,IAEV,CACC7D,GAAIC,OAAgB6D,kBACpB3D,SAAU,uCACVC,KAAMC,OAAUuD,mBAChB3C,UAAY,kBAAM,EAAKxB,OAAOC,IAC9Ba,cAAe,SAACC,GAAD,OAAiB2C,EAAM3C,IACtCK,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,IAC9CI,QAAS,WAAF,8CAAE,0GAAYA,EAAZ,SAA2BP,OAASoD,kBAApC,uGAAF,qDAAE,S,qBCnOd,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS9G,KAErD,gB,kDCLT,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,OAAQI,yBAAcC,yBAAaoG,qCAAyB9G,EAAK+G,UAAW,CAC1EjG,OAAQd,EAAKc,OACbG,YAAajB,EAAKiB,YAClB+F,YAAahH,EAAKgH,YAClBC,sBAAuBjH,EAAKiH,sBAC5BC,WAAYlH,EAAKgB,SACjBA,SAAUhB,EAAKe,eACfoG,UAAWnH,EAAKoH,SACf,KAAM,EAAG,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN3FjG,+BAAgB,CAC3BS,KAAM,kBACNR,WAAY,CAAEiG,wBACdC,MAAO,CACH,WACA,WAEJ/F,KAAM,iBAAO,CACTwF,SAAU,sBAEdQ,MAAO,CACHxG,eAAgB,CACZkC,KAAMuE,UAEVvG,YAAa,CACTgC,KAAMwE,QACN9G,SAAS,GAEbqG,YAAa,CACT/D,KAAMyE,QAEV5G,OAAQ,CACJmC,KAAM0E,OACN9D,UAAU,GAEdoD,sBAAuB,CACnBhE,KAAMyE,OACN7D,UAAU,IAGlBxB,QAAS,CACLrB,SADK,SACI4G,EAAeC,GACpBnG,KAAKoG,MAAM,WAAYF,EAAUC,IAErCT,QAJK,SAIGW,GACJrG,KAAKoG,MAAM,UAAWC,O,qBCnClC,MAAMlB,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS9G,KAErD,U,4dCHR,SAAeiI,IAAtB,+B,8DAAO,yHAA6BhE,EAA7B,+BAAoC,GAApC,SACsBiE,OAAgBD,cAAc,CAACpG,KAAMoC,IAD3D,cACGkE,EADH,yBAEIA,EAAWlE,QAAO,SAACc,GAAD,OAAawB,qBAAQxB,IAAsB,IAAhBA,EAAElD,KAAKuG,UACtDlC,KAAI,SAACmC,GAAD,MAAoB,CACrB3D,MAAO2D,EAASxG,KAChB0B,MAAO8E,EAASC,YAChBC,MAAOF,OANZ,2C,wBAUA,SAAenE,IAAtB,+B,8DAAO,yHAAgCD,EAAhC,+BAAuC,GAAvC,SACsBiE,OAAgBM,QAAQ,CAAC,YAAevE,IAD9D,cACGkE,EADH,yBAEIA,EAAWjC,KAAI,SAACmC,GAAD,MAAoB,CAClC3D,MAAO2D,EACP9E,MAAO8E,OAJZ,2C,wBAQA,SAAeI,IAAtB,+B,8DAAO,yHAAgCxE,EAAhC,+BAAuC,GAAvC,SACiBiE,OAAgBD,cAAc,CAC9CpG,KAAMoC,EACNyE,IAAK,4BAHN,cACGC,EADH,yBAMIA,EAAMzC,KAAI,SAAC0C,GAAD,MAAgB,CAC7BlE,MAAOkE,EAAK/G,KACZ0B,MAAOqF,EAAK/G,KACZ0G,MAAOK,OATR,2C,wBAaA,SAAeC,IAAtB,+B,8DAAO,oHACmBX,OAAgBW,uBADnC,cACGC,EADH,yBAEIA,EAAQ5C,KAAI,SAAC6C,GAAD,MAAkB,CACjCrE,MAAOqE,EAAOlH,KACd0B,MAAOwF,EAAOlH,KACd0G,MAAOQ,OALR,2C,wBASA,SAAeC,IAAtB,+B,8DAAO,oHACmBd,OAAgBc,aADnC,cACGC,EADH,yBAEIA,EAAQ/C,KAAI,SAACgD,GAAD,MAAkB,CACjCxE,MAAOwE,EAAOrH,KACd0B,MAAO2F,EAAOC,UACdZ,MAAOW,OALR,2C,wBASA,SAAeE,EAAtB,kC,8DAAO,WAA4BC,GAA5B,uGACqBnB,OAAgBkB,aAAaC,GADlD,cACGC,EADH,yBAEIA,EAAUpD,KAAI,SAACqD,GAAD,MAAoB,CACrC7E,MAAO6E,EAAS1H,KAChB0B,MAAOgG,EAASC,YAChBjB,MAAOgB,OALR,2C,wBASA,SAAeE,EAAtB,kC,8DAAO,WAAyCC,GAAzC,4GAA6D7H,EAA7D,+BAAkE,GAAlE,SACeqG,OAAgBuB,0BAA0BC,EAAY7H,GADrE,cACG8H,EADH,yBAEIA,EAAIzD,KAAI,SAAC0D,GAAD,MAAc,CACzBlF,MAAOkF,EAAG/H,KACV0B,MAAOqG,EAAGC,yBACVtB,MAAOqB,OALR,2C,wBASA,SAAeE,EAAtB,kC,8DAAO,WAA2BC,GAA3B,4GAA2DlI,EAA3D,+BAAgE,GAAhE,SACoBqG,OAAgB4B,YAAYC,EAAwBlI,GADxE,cACGmI,EADH,yBAEIA,EAAS9D,KAAI,SAAC+D,GAAD,MAAmB,CACnCvF,MAAOuF,EAAQpI,KACf0B,MAAO0G,EAAQC,WACf3B,MAAO0B,OALR,2C,wBASA,SAAeE,IAAtB,+B,8DAAO,2HAAiCtI,EAAjC,+BAAsC,IAAKuI,EAA3C,+BAAgD,EAAhD,SACoBlC,OAAgBiC,kBAAkBtI,EAAMuI,GAD5D,cACGJ,EADH,yBAEIA,EAAS9D,KAAI,SAAC+D,GAAD,MAAmB,CACnCvF,MAAOuF,EAAQpI,KACf0B,MAAO0G,EAAQC,WACf3B,MAAO0B,OALR,2C,wBASD,SAAUI,IACZ,IAAMC,EAAY,CACd,kBACA,OACA,cACA,SACA,iBACA,WACA,mBACA,UACA,SACA,kBACA,SAGJ,OAAOA,EAAUpE,KAAI,SAAAqE,GAAQ,MAAI,CAC7B7F,MAAO6F,EACPhH,MAAOgH,EACPhC,MAAO,CACHiC,KAAMD","file":"js/chunk-40a31bd6.3e39cef9.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onFinish,\n        skipSummary: true\n      }, null, 8, [\"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport ART_PROP from \"@/apps/ART/art_global_props\"\nimport {ART_GLOBAL_PROP} from \"@/apps/ART/art_global_props\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { isEmpty } from \"lodash\"\nimport { GlobalPropertyService } from '@/services/global_property_service';\nimport { toastSuccess } from '@/utils/Alerts';\nimport { IonPage } from \"@ionic/vue\"\nimport {\n    getLabFacilities\n} from '@/utils/HisFormHelpers/LocationFieldOptions'\n\nexport default defineComponent({\n\tcomponents: { HisStandardForm, IonPage },\n\tdata: () => ({\n\t\tpreference: '' as string,\n\t\tfields: [] as any\n\t}),\n\tcreated() {\n\t\tthis.preference = this.$route.name as string\n\t\tthis.fields = [\n\t\t\t...this.getTargetLab(),\n\t\t\t...this.getBPThresholdPreferences(),\n\t\t\t...this.getFilingNumberLimitPreferences(),\n\t\t\t...this.getAppointmentLimitPreferences(),\n\t\t\t...this.getHtnAgePreferences(),\n\t\t\t...this.getClinicDaysPreferences(),\n\t\t\t...this.getClinicHolidaysPreferences(),\n\t\t\t...this.getCxCaScreeningPreference()\n\t\t]\n\t},\n\tmethods: {\n\t\tisProp(prop: string) {\n\t\t\treturn !this.preference || prop === this.preference\n\t\t},\n\t\tasync onFinish(_: any, data: Record<string, any>) {\n\t\t\tfor(const prop in data) {\n\t\t\t\tawait GlobalPropertyService.set(prop, data[prop])\n\t\t\t\ttoastSuccess('Property has been updated', 2000)\n\t\t\t}\n\t\t\tthis.$router.back()\n\t\t},\n\t\tgetTargetLab() {\n\t\t\treturn [{\n\t\t\t\tid: ART_GLOBAL_PROP.TARGET_LAB,\n\t\t\t\thelpText: 'Please select target lab',\n\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\tcomputedValue: (v: Option) => v.value,\n\t\t\t\tdefaultValue: () => ART_PROP.targetLab(),\n\t\t\t\tvalidation: (val: any) => Validation.required(val),\n\t\t\t\tcondition: () => this.isProp('target_lab'),\n\t\t\t\toptions: (_: any, filter='') => getLabFacilities(filter),\n\t\t\t\tconfig: {\n\t\t\t\t\tshowKeyboard: true,\n\t\t\t\t\tisFilterDataViaApi: true\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\tgetCxCaScreeningPreference() {\n\t\t\tconst prop = 'cervical_cancer'\n\t\t\tconst screeningProp = ART_GLOBAL_PROP.CERVICAL_CANCER_SCREENING\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: screeningProp,\n\t\t\t\t\thelpText: 'Activate CxCa screening',\n\t\t\t\t\ttype: FieldType.TT_YES_NO,\n\t\t\t\t\tcondition : () => this.isProp(prop),\n\t\t\t\t\tcomputedValue: (v: string) => v,\n\t\t\t\t\tdefaultValue: () => ART_PROP.cervicalCancerScreeningEnabled(),\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\n\t\t\t\t\toptions: () =>[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Activate screening?',\n\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\t\t\t\t\tvalue: \"true\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\t\t\t\tvalue: \"false\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'starting_screening_age',\n\t\t\t\t\tproxyID: ART_GLOBAL_PROP.CERVICAL_CANCER_AGE_BOUNDS, \n\t\t\t\t\thelpText: 'Starting screening age',\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\tcondition : (f: any) => this.isProp(prop) && f[screeningProp] === 'true',\n\t\t\t\t\tdefaultValue: async () => {\n\t\t\t\t\t\tconst { start } =  await ART_PROP.cervicalCancerScreeningAgeBounds()\n\t\t\t\t\t\tif (start) return start\n\t\t\t\t\t},\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'maximum_screening_age',\n\t\t\t\t\tproxyID: ART_GLOBAL_PROP.CERVICAL_CANCER_AGE_BOUNDS,\n\t\t\t\t\thelpText: 'Maximum screening age',\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\tcondition : (f: any) => this.isProp(prop) && f[screeningProp] === 'true',\n\t\t\t\t\tcomputedValue: (v: Option, f: any) => `${f.starting_screening_age.value}:${v.value}`,\n\t\t\t\t\tdefaultValue: async () => {\n\t\t\t\t\t\tconst {end} =  await ART_PROP.cervicalCancerScreeningAgeBounds()\n\t\t\t\t\t\tif (end) return end\n\t\t\t\t\t},\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tgetClinicHolidaysPreferences() {\n\t\t\tconst prop = ART_GLOBAL_PROP.CLINIC_HOLIDAYS\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: prop,\n\t\t\t\t\thelpText: \"Set clinic holiday(s)\",\n\t\t\t\t\ttype: FieldType.TT_CLINIC_HOLIDAY_PICKER,\n\t\t\t\t\tcondition: () => this.isProp(prop),\n\t\t\t\t\tcomputedValue: (v: Option) => v.value,\n\t\t\t\t\tdefaultValue: () => ART_PROP.clinicHolidays(),\n\t\t\t\t\tvalidation: (val: Option) => Validation.required(val)\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tgetBPThresholdPreferences() {\n\t\t\tconst prop = 'bp_thresholds'\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: ART_GLOBAL_PROP.HTN_SYSTOLIC_THRESHOLD,\n\t\t\t\t\thelpText: 'Set systolic blood pressure',\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\tcondition : () => this.isProp(prop),\n\t\t\t\t\tcomputedValue: (v: Option) => v.value,\n\t\t\t\t\tdefaultValue: () => ART_PROP.systolicThreshold(),\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val) \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: ART_GLOBAL_PROP.HTN_DIASTOLIC_THRESHOLD,\n\t\t\t\t\thelpText: 'Set diastolic blood pressure',\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\tcondition : () => this.isProp(prop),\n\t\t\t\t\tcomputedValue: (v: Option) => v.value,\n\t\t\t\t\tdefaultValue: () => ART_PROP.diastolicThreshold(),\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tgetFilingNumberLimitPreferences() {\n\t\t\tconst prop = ART_GLOBAL_PROP.FILING_NUMBER_LIMIT\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: prop,\n\t\t\t\t\thelpText: \"Enter Filing Number Limit\",\n\t\t\t\t\tcondition : () => this.isProp(prop),\n\t\t\t\t\tcomputedValue: (v: Option) => v.value, \n\t\t\t\t\tdefaultValue: () => ART_PROP.filingNumberLimit(),\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tgetAppointmentLimitPreferences() {\n\t\t\tconst prop = ART_GLOBAL_PROP.APPOINTMENT_LIMIT\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: prop,\n\t\t\t\t\thelpText: \"Enter Appointment Limit\",\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\tcomputedValue: (v: Option) => v.value, \n\t\t\t\t\tcondition : () => this.isProp(prop),\n\t\t\t\t\tdefaultValue: () => ART_PROP.appointmentLimit(),\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tgetHtnAgePreferences() {\n\t\t\tconst prop = ART_GLOBAL_PROP.HTN_SCREENING_AGE_THRESHOLD\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: prop,\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\thelpText: \"Enter HTN age Threshold\",\n\t\t\t\t\tcondition : () => this.isProp(prop),\n\t\t\t\t\tcomputedValue: (v: Option) => v.value,\n\t\t\t\t\tdefaultValue: () => ART_PROP.htnAgeThreshold(),\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tgetClinicDaysPreferences() {\n\t\t\tconst prop = 'clinic_days'\n\t\t\tconst toStr = (v: Option[]) => v.map(d => d.value).join()\n\t\t\tconst options = (values: string) => {\n\t\t\t\tconst days = [\n\t\t\t\t\t\"Sunday\",\n\t\t\t\t\t\"Monday\",\n\t\t\t\t\t\"Tuesday\",\n\t\t\t\t\t\"Wednesday\",\n\t\t\t\t\t\"Thursday\",\n\t\t\t\t\t\"Friday\",\n\t\t\t\t\t\"Saturday\"\n\t\t\t\t]\n\t\t\t\treturn days.map(d => ({\n\t\t\t\t\tlabel: d, \n\t\t\t\t\tvalue: d,\n\t\t\t\t\tisChecked: !isEmpty(values) && values.search(d) >= 0\n\t\t\t\t}))\n\t\t\t}\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: ART_GLOBAL_PROP.ADULT_CLINIC_DAYS,\n\t\t\t\t\thelpText: \"Clinic days (adults: 18 yrs and over)\",\n\t\t\t\t\ttype: FieldType.TT_MULTIPLE_SELECT,\n\t\t\t\t\tcondition : () => this.isProp(prop),\n\t\t\t\t\tcomputedValue: (v: Option[]) => toStr(v), \n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\n\t\t\t\t\toptions: async () => options((await ART_PROP.adultClinicDays())),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: ART_GLOBAL_PROP.PEADS_CLINIC_DAYS,\n\t\t\t\t\thelpText: \"Clinic days (children: Under 18 yrs)\",\n\t\t\t\t\ttype: FieldType.TT_MULTIPLE_SELECT,\n\t\t\t\t\tcondition : () => this.isProp(prop),\n\t\t\t\t\tcomputedValue: (v: Option[]) => toStr(v),\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\n\t\t\t\t\toptions: async () => options((await ART_PROP.peadsClinicDays()))\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n})\n","import { render } from \"./DefaultPreferences.vue?vue&type=template&id=49e513a9&ts=true\"\nimport script from \"./DefaultPreferences.vue?vue&type=script&lang=ts\"\nexport * from \"./DefaultPreferences.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport async function getVillagesByName(name='a', page=1): Promise<Option[]> {\n    const villages = await LocationService.getVillagesByName(name, page)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport function getLandmarks(): Option[] {\n    const landmarks = [\n        'Catholic Church',\n        'CCAP',\n        'Seventh Day',\n        'Mosque',\n        'Primary School',\n        'Borehole',\n        'Secondary School',\n        'College',\n        'Market',\n        'Football Ground',\n        'Other'\n    ]\n\n    return landmarks.map(landmark =>({\n        label: landmark,\n        value: landmark,\n        other: {\n            code: landmark\n        }\n    }))\n}\n"],"sourceRoot":""}