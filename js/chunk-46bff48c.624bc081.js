(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-46bff48c"],{"1b7d":function(e,t,r){"use strict";r.r(t);var a=r("7a23");function s(e,t,r,s,i,o){const n=Object(a["resolveComponent"])("report-template"),h=Object(a["resolveComponent"])("ion-page");return Object(a["openBlock"])(),Object(a["createBlock"])(h,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(n,{title:e.title,period:e.period,rows:e.rows,columns:e.columns,headerInfoList:e.headerList,reportPrefix:"MoH",config:{showIndex:!0},validationErrors:e.errors,showValidationStatus:e.canValidate,hasServerSideCaching:!0,enabledPDFHorizontalPageBreak:!0,onReportConfiguration:e.onPeriod,onDefaultConfiguration:e.onLoadDefault},null,8,["title","period","rows","columns","headerInfoList","validationErrors","showValidationStatus","onReportConfiguration","onDefaultConfiguration"])]),_:1})}r("13d5"),r("14d9");var i=r("44e3"),o=r("2ef6"),n=r("87e7"),h=r("b5e4"),d=r("2ef0"),l=r("4ba2"),g=r("9ceb"),u=r("d867"),c=r("b31c"),p=r("ad8d"),m=Object(a["defineComponent"])({mixins:[i["a"]],components:{ReportTemplate:l["a"],IonPage:u["D"]},data:()=>({title:"Disaggregated report",columns:[[g["a"].thTxt("Age group"),g["a"].thTxt("Gender"),g["a"].thNum("Tx new (new on ART)"),g["a"].thNum("TX curr (receiving ART)"),g["a"].thNum("TX curr (received IPT)"),g["a"].thNum("TX curr (screened for TB)"),...n["b"].map(e=>g["a"].thNum(e)),g["a"].thNum("Unknown"),g["a"].thNum("Total (regimen)")]],errors:[],showStatus:!1,rowDataRefs:["txNew","txCurr","txGivenIpt","txScreenTB",...n["b"],"N/A","regimenTotals"],dataRefLabels:{txNew:"Tx new (new on ART)",txCurr:"Tx curr (receiving ART)",txGivenIpt:"TX curr (received IPT)",txScreenTB:"TX curr (screened for TB)","N/A":"Unknown",regimenTotals:"Regimen Totals"},aggregations:[],mohCohort:{},maleFemaleAgeGroupData:{},headerList:[],canValidate:!1,onLoadDefault:null,sortIndexes:{}}),async created(){const{query:e}=this.$route;e.start_date&&e.end_date&&e.quarter&&(this.onLoadDefault=()=>this.onPeriod({quarter:{label:e.quarter,other:{start:e.start_date,end:e.end_date}}},{}))},watch:{async canValidate(e){e&&await this.validateReport()}},computed:{rows(){return Object.keys(this.sortIndexes).sort((e,t)=>parseInt(e)-parseInt(t)).reduce((e,t)=>e.concat(this.sortIndexes[t]),[])}},methods:{async onPeriod(e,t,r=!1){this.canValidate=!1,this.maleFemaleAgeGroupData={},this.aggregations=[],this.sortIndexes={},this.errors=[],this.report=new o["a"],this.mohCohort=new c["a"],e.quarter?(this.mohCohort.setQuarter(e.quarter.label),this.mohCohort.setStartDate(e.quarter.other.start),this.mohCohort.setEndDate(e.quarter.other.end),this.report.setQuarter(e.quarter.label),this.report.setStartDate(e.quarter.other.start),this.report.setEndDate(e.quarter.other.end),this.period="Custom"===e.quarter.label?this.report.getDateIntervalPeriod():e.quarter.label):(this.mohCohort.setStartDate(t.start_date),this.mohCohort.setEndDate(t.end_date),this.report.setStartDate(t.start_date),this.report.setEndDate(t.end_date),this.period=this.report.getDateIntervalPeriod()),this.report.setRebuildOutcome(r);const a=await this.report.init();if(!a)return Object(h["e"])("Unable to initialise report");await this.setTableRows(),this.canValidate=!0},async setTableRows(){await this.setFemaleRows(1),await this.setMaleRows(2),await this.setTotalMalesRow(3),await this.setFemalePregnantRows(4),await this.setFemaleBreastFeedingRows(6),await this.setFemaleNotPregnantRows(5)},getColumnLabel(e){return e in this.dataRefLabels?this.dataRefLabels[e]:e},getTotals(e){return this.aggregations.filter(t=>e(t)).reduce((e,t)=>e.concat(t.data),[])},addAggregation(e,t,r=[]){this.aggregations.push({col:e,gender:t,data:r})},async getRegimenRows(e,t){let r=[];const a=[],s=await this.report.getRegimenDistribution(),i=[...n["b"],"N/A"];return i.forEach(i=>{s[i]&&(r=r.concat(s[i])),a.push(this.drill(s[i],`Regimen ${i} | ${e} | ${t}`)),this.addAggregation(i,t,s[i])}),a.push(this.drill(r,`Regimen Totals | ${e} | ${t}`)),this.addAggregation("regimenTotals",t,r),a},getValue(e,t,r){switch(e){case"tx_given_ipt":return this.report.getTxIpt();case"tx_screened_for_tb":return this.report.getTxCurrTB();default:return t in r?r[t][e]:[]}},setTotalMalesRow(e){const t=(e,t)=>{const r=this.aggregations.filter(t=>"Male"===t.gender&&t.col===e).reduce((e,t)=>e.concat(t.data),[]);return this.drill(r,t)},r=this.rowDataRefs.map(e=>t(e,this.getColumnLabel(e)+" | All Male"));this.sortIndexes[e]=[[g["a"].td("All"),g["a"].td("Male"),...r]]},setFemaleNotPregnantRows(e){const t=(e,t)=>this.aggregations.filter(e=>e.gender.match(/fp|fbf/i)&&e.col===t).reduce((e,t)=>e.concat(t.data||[]),[]).includes(e),r=(e,r)=>{const a=this.aggregations.filter(t=>"Female"===t.gender&&t.col===e).reduce((r,a)=>r.concat(a.data.filter(r=>!t(r,e))),[]);return this.drill(a,r)},a=this.rowDataRefs.map(e=>r(e,this.getColumnLabel(e)+" | FNP"));this.sortIndexes[e]=[[g["a"].td("All"),g["a"].td("FNP"),...a]]},setFemaleRows(e){return this.report.setGender("female"),this.setRows(e,"F",p["a"],"Female")},setMaleRows(e){return this.report.setGender("male"),this.setRows(e,"M",p["a"],"Male")},setFemalePregnantRows(e){return this.report.setGender("pregnant"),this.setRows(e,"F",["All"],"FP","Pregnant")},setFemaleBreastFeedingRows(e){return this.report.setGender("breastfeeding"),this.setRows(e,"F",["All"],"FBf","Breastfeeding")},async setRows(e,t,r,a,s=""){for(const i in r){let o=[],n=[],h=[],l=[];const u=s||r[i];if(this.report.setAgeGroup(u),!(u in this.maleFemaleAgeGroupData)){const e=await this.report.getCohort();this.report.setRebuildOutcome(!1),this.maleFemaleAgeGroupData[u]=Object(d["isEmpty"])(e)?{}:e[u]}if(!Object(d["isEmpty"])(this.maleFemaleAgeGroupData[u])){const e=async e=>this.getValue(e,t,this.maleFemaleAgeGroupData[u]);o=await e("tx_new"),n=await e("tx_curr"),h=await e("tx_given_ipt"),l=await e("tx_screened_for_tb"),this.addAggregation("txNew",a,o),this.addAggregation("txCurr",a,n),this.addAggregation("txGivenIpt",a,h),this.addAggregation("txScreenTB",a,l)}switch(this.report.getGender()){case"breastfeeding":this.report.setAgeGroup("All"),this.report.setGender("Fbf");break;case"pregnant":this.report.setAgeGroup("All"),this.report.setGender("FP");break}this.sortIndexes[e]||(this.sortIndexes[e]=[]),this.sortIndexes[e].push([g["a"].td(r[i]),g["a"].td(this.formatGender(a)),this.drill(o,`Tx new (new on ART) | ${u} | ${a}`),this.drill(n,`Tx curr (receiving ART) | ${u} | ${a}`),this.drill(h,`TX curr (received IPT) | ${u} | ${a}`),this.drill(l,`TX curr (screened for TB) | ${u} | ${a}`),...await this.getRegimenRows(u,a)])}},setHeaderInfoList(e){this.headerList=[{label:"Total Alive and on ART",value:e.length,other:{onclick:()=>this.runTableDrill(e,"Total Alive on ART")}}]},async validateReport(){const e=this.getTotals(e=>"txCurr"===e.col&&e.gender.match(/male|female/i));this.setHeaderInfoList(e);const t={total_alive_and_on_art:{param:e.length,check:(e,t)=>e!=t,error:(e,t)=>`\n                        Total alive of <b>${t}</b>\n                        Does not match total alive of <b>${e}</b> on MOH report\n                    `}},r=this.mohCohort.validateIndicators(t,e=>this.errors=e);-1===r&&(this.errors=["Report not validated. Run the MoH cohort report for similar reporting period and then run this report"])}}}),f=r("d959"),w=r.n(f);const b=w()(m,[["render",s]]);t["default"]=b},"2ef6":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var a=r("ade3"),s=r("5969"),i=r("ad8d");class o extends s["a"]{constructor(){super(),Object(a["a"])(this,"gender",void 0),Object(a["a"])(this,"ageGroup",void 0),Object(a["a"])(this,"initialize",void 0),Object(a["a"])(this,"rebuildOutcome",void 0),this.gender="",this.ageGroup=i["a"][0],this.initialize=!0,this.rebuildOutcome=!0}async init(){this.initialize=!0;const e=await this.getCohort();return!(!e||"created"!==e.temp_disaggregated)&&(this.initialize=!1,!0)}setAgeGroup(e){this.ageGroup=e}setInitialization(e){this.initialize=e}setRebuildOutcome(e){this.rebuildOutcome=e}setGender(e){this.gender=e}getGender(){return this.gender}getCohort(){return this.getReport("cohort_disaggregated",{age_group:""+this.ageGroup,rebuild_outcome:""+this.rebuildOutcome,initialize:""+this.initialize})}getTxIpt(){return this.getReport("clients_given_ipt",{gender:this.gender,age_group:""+this.ageGroup})}getTxCurrTB(){return this.getReport("screened_for_tb",{gender:this.gender,age_group:""+this.ageGroup})}getRegimenDistribution(){return this.getReport("disaggregated_regimen_distribution",{gender:""+this.gender,age_group:""+this.ageGroup})}}},ad8d:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return i}));var a=r("5969");const s=["<1 year","1-4 years","5-9 years","10-14 years","15-19 years","20-24 years","25-29 years","30-34 years","35-39 years","40-44 years","45-49 years","50-54 years","55-59 years","60-64 years","65-69 years","70-74 years","75-79 years","80-84 years","85-89 years","90 plus years"];class i extends a["a"]{constructor(){super()}getBookedAppointments(e){return a["a"].getJson(`programs/${this.programID}/scheduled_appointments`,{date:e})}getViralLoadResults(e){return this.getReport(`/programs/${this.programID}/reports/high_vl_patients`,{range:e})}getOtherOutcome(e){return this.getReport("patient_outcome_list",{outcome:e})}getPatientVisitTypes(){return this.getReport("patient_visit_types")}getClientsDueForVl(){return this.getReport("clients_due_vl")}getClientRentention(){return this.getReport(`/programs/${this.programID}/reports/retention`)}getExternalConsultationClients(){return this.getReport(this.programID+"/external_consultation_clients")}getMissedAppointments(){return this.getReport("missed_appointments")}getPregnantWomen(){return this.getReport(`/programs/${this.programID}/reports/pregnant_patients`)}getArchivingCandidates(){return a["a"].getJson(`programs/${this.programID}/reports/archiving_candidates`,{start_date:this.date})}}},b31c:function(e,t,r){"use strict";r.d(t,"a",(function(){return n}));var a,s=r("ade3"),i=(r("13d5"),r("14d9"),r("2ef0")),o=r("5969");(function(e){e["MOH_CACHE"]="mohCache"})(a||(a={}));class n extends o["a"]{constructor(){super(),Object(s["a"])(this,"regenerate",void 0),this.regenerate=!1}cohortUrl(){return`programs/${this.programID}/reports/cohort`}setRegenerate(e){this.regenerate=e}getCohortDrillDown(e){return o["a"].getJson("cohort_report_drill_down",{id:e,date:this.date,program_id:this.programID})}requestCohort(e){return o["a"].ajxGet(this.cohortUrl(),e)}qaurterRequestParams(){return{name:this.quarter,regenerate:this.regenerate}}datePeriodRequestParams(){return{name:`Cohort-${this.startDate}-${this.endDate}`,start_date:this.startDate,end_date:this.endDate,regenerate:this.regenerate}}getCachedCohortValues(){const e=sessionStorage.getItem(a.MOH_CACHE);if(e){const t=JSON.parse(e);if(t.start_date===this.startDate&&t.end_date===this.endDate||t.quarter===this.quarter)return t.data}}cacheCohort(e){sessionStorage.setItem(a.MOH_CACHE,JSON.stringify({start_date:this.startDate,end_date:this.endDate,quarter:this.quarter,data:e}))}validateIndicators(e,t){const r=this.getCachedCohortValues();if(r){const a=Object.keys(e).reduce((t,a)=>{const s=Object(i["find"])(r,{name:a}),o=e[a],n=s?s.contents:null,h=o.param,d=o.check(parseInt(n),h);return d&&t.push(o.error(n,h)),t},[]);return t(a)}return-1}}}}]);
//# sourceMappingURL=chunk-46bff48c.624bc081.js.map