(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-c9c1bf5a"],{"640e":function(e,t,a){"use strict";a.r(t);var i=a("7a23");function o(e,t,a,o,n,s){const r=Object(i["resolveComponent"])("his-standard-form"),c=Object(i["resolveComponent"])("ion-page");return Object(i["openBlock"])(),Object(i["createBlock"])(c,null,{default:Object(i["withCtx"])(()=>[Object(i["createVNode"])(r,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])]),_:1})}var n=a("9441"),s=a("7365"),r=a("97ed"),c=a("2706"),d=a("d95e"),l=a("66fd"),u=a("5a0c"),g=a.n(u),h=Object(i["defineComponent"])({components:{HisStandardForm:n["a"]},mixins:[s["a"]],data:()=>({radiologyService:{},isPacsEnabled:!1,previousRadiologyExaminations:{}}),watch:{ready:{async handler(e){e&&(this.radiologyService=new r["a"](this.patientID,this.providerID),this.isPacsEnabled=await l["b"].isPACsEnabled(),this.previousRadiologyExaminations=await this.radiologyService.showPreviousRadiolgy(this.patient),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const a=await Promise.all(t.radiology);await this.radiologyService.createEncounter();const i=await this.radiologyService.obsObj(a),o=await this.radiologyService.saveObservationList(i);if(await this.radiologyService.printOrders(a,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(o,this.patient)}catch(n){console.log(n)}this.gotoPatientDashboard()},async getTableData(){const e=await this.radiologyService.getPreviousRadiologyExaminations(this.patient),t=e.data,a=e.url,i=["Accession#","Body Part","Order Type","Ordered","Result"],o=[];for(const n in t){const e=[t[n].children[0].accession_number,t[n].value_text,t[n].children[0].value_text,g()(t[n].obs_datetime).format("DD/MMM/YYYY"),`<ion-button slot="end" size="large" href="${a}" color="success">\n            View\n          </ion-button>`];o.push(e)}return[{label:"",value:"",other:{columns:i,rows:o}}]},getFields(){return[{id:"radiology_results",helpText:"Previous Radiology Examinations",condition:()=>this.previousRadiologyExaminations,type:d["b"].TT_TABLE_VIEWER,options:e=>this.getTableData(),config:{hiddenFooterBtns:["Clear"]}},{id:"radiology",helpText:"Radiology Examination",type:d["b"].TT_RADIOLOGY_PICKER,validation:e=>c["a"].required(e),config:{hiddenFooterBtns:[this.disableBackBtn()]},computedValue:e=>e.map(async e=>({...await this.radiologyService.buildValueCoded("Radiology Orders",e.other.parent),child:await this.radiologyService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)}))}]},disableBackBtn(){return this.previousRadiologyExaminations?"":"Back"}}}),p=a("6b0d"),b=a.n(p);const y=b()(h,[["render",o]]);t["default"]=y},"97ed":function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var i=a("cc6f"),o=a("8158"),n=a("b89f"),s=a("1c74"),r=a("5a0c"),c=a.n(r),d=a("2ef0");class l extends i["a"]{constructor(e,t){super(e,121,t)}static async getRadiologyList(e,t=""){return o["a"].getConceptSet(e,t)}async getRadiologyObs(e){const t="radiology/radiology_orders?patient_id="+e,a=await s["e"].getJson(t);return a}async showPreviousRadiolgy(e){return(await this.getRadiologyObs(e.getID())).length>0}async getPreviousRadiologyExaminations(e){const t=await s["e"].getThirdpartyApps();let a="";for(const o of t)"pacs"==o.name&&(a=o.url);Object(d["isEmpty"])(a)&&(a="opd/encounters/radiology/"+this.patientID);const i=await this.getRadiologyObs(e.getID());return i.length>0&&{data:i,url:a}}async submitToPacs(e,t){let a;for(const s of e)a=s.children[0].accession_number;const i=await Promise.all(e.map(async e=>({main_value_text:e.value_text,obs_id:e.obs_id,sub_value_text:e.children[0].value_text}))),o={patient_name:t.getFullName(),patientAge:t.getAge(),patientDOB:t.getBirthdate(),patientGender:t.getGender(),national_id:t.getNationalID(),person_id:t.getID(),encounter_id:this.getEncounterID(),date_created:this.getDate(),accession_number:a},n={username:s["e"].getUserName(),userID:s["e"].getUserID(),userRoles:s["e"].getUserRoles()};return s["e"].postJson("radiology/radiology_orders",{patient_details:o,physician_details:n,radiology_orders:i})}async getAccesionNumber(){return(await s["e"].getJson("sequences/next_accession_number"))["accession_number"]}async obsObj(e){const t=await this.getAccesionNumber(),a=[];for(const i of e)a.push({concept_id:i.concept_id,value_text:await o["a"].getConceptName(i.child.concept_id),child:{concept_id:i.child.concept_id,accession_number:t,value_text:await o["a"].getConceptName(i.child.value_coded)}});return a}async printOrders(e,t){const a=new n["a"],i=t.getNationalID(),s=t.getFullName(),r=[];for(const n of e)r.push("/radiology/barcode?accession_number="+await this.getAccesionNumber()+"&patient_national_id="+i+"&patient_name="+s+"&radio_order="+await o["a"].getConceptName(n.child.value_coded)+"&date_created="+c()(n.obs_datetime));await a.batchPrintLbls(r,!0)}}}}]);
//# sourceMappingURL=chunk-c9c1bf5a.4e51e90e.js.map