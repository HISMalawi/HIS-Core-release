{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/MedicalHistory.vue?6c91","webpack:///./src/apps/ANC/Services/anc_medical_history_service.ts","webpack:///./src/apps/ANC/Views/Encounters/MedicalHistory.vue","webpack:///./src/apps/ANC/Views/Encounters/MedicalHistory.vue?c73f"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","fields","formFields","skipSummary","onFinishAction","onFinish","cancelDestinationPath","cancelDestination","_","AncMedicalHistoryService","patientID","providerID","ConceptService","getConceptsByCategory","AppEncounterService","defineComponent","components","IonPage","mixins","EncounterMixinVue","data","service","watch","ready","handler","this","getFields","immediate","methods","computedData","resolveObs","obs","anc","createEncounter","saveObservationList","nextTask","id","helpText","type","FieldType","TT_MULTIPLE_YES_NO","validation","v","Validation","required","computedValue","map","i","buildValueCoded","label","value","options","medicalHistoryOptions","h","name","other","values","yesNoOptions","config","footerBtns","slot","onClickComponentEvents","refreshOptions","onClick","__exports__"],"mappings":"wIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+BC,8BAAkB,qBACjDC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,sBAAS,iBAAM,CACtBC,yBAAaP,EAA8B,CACzCQ,OAAQd,EAAKe,WACbC,aAAa,EACbC,eAAgBjB,EAAKkB,SACrBC,sBAAuBnB,EAAKoB,mBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,8BAE3CC,EAAG,I,gJCZMC,EAAb,wDACI,WAAYC,EAAmBC,GAAkB,0CACvCD,EAAW,GAAIC,GAF7B,iEAKI,WACI,OAAOC,OAAeC,sBAAsB,2BANpD,GAA8CC,Q,wBCO/BC,+BAAgB,CAC7BC,WAAY,CAAEC,gBACdC,OAAQ,CAACC,QACTC,KAAM,iBAAO,CACXlB,WAAY,GACZmB,QAAS,KAEXC,MAAO,CACLC,MAAO,CACLC,QADK,SACGD,GACFA,IAAOE,KAAKvB,WAAauB,KAAKC,cAEpCC,WAAW,IAGfC,QAAS,CACDvB,SADC,SACQG,EAAQqB,GAAiB,gLACpB,EAAKC,WAAWD,GADI,cAChCE,EADgC,OAEhCC,EAAM,IAAIvB,EAAyB,EAAKC,UAAW,EAAKC,YAFxB,SAGhCqB,EAAIC,kBAH4B,uBAIhCD,EAAIE,oBAAoBH,GAJQ,OAKtC,EAAKI,WALiC,8CAOxCT,UARO,WAQE,WACP,MAAO,CACL,CACEU,GAAI,kBACJC,SAAU,6BACVC,KAAMC,OAAUC,mBAChBC,WAAY,SAACC,GAAD,OAAiBC,OAAWC,SAASF,IACjDG,cAAe,SAACH,GACd,OAAOA,EAAEI,KAAI,SAAAC,GAAC,OAAItC,EAAyBuC,gBAAgBD,EAAEE,MAA3C,UAAqDF,EAAEG,YAE3EC,QAAS,WACP,OAAO1C,EAAyB2C,wBAAwBN,KAAI,SAAAO,GAAC,MAAI,CAC9DJ,MAAOI,EAAEC,KACTJ,MAAO,GACPK,MAAO,CACJC,OAAQ,EAAKC,qBAIrBC,OAAS,CACPC,WAAY,CACV,CACEL,KAAM,OACNM,KAAM,MACNC,uBAAuB,CACrBC,eAAgB,WACd,OAAOrD,EAAyB2C,wBAAwBN,KAAI,SAAAO,GAAC,MAAI,CAC/DJ,MAAOI,EAAEC,KACTJ,MAAO,KACPK,MAAO,CACLC,OAAQ,EAAKC,sBAKrBM,QAAS,iBAAM,iB,qBC/D/B,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS9E,KAErD","file":"js/chunk-77126da4.66a84c63.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.formFields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { ConceptService } from \"@/services/concept_service\";\n\nexport class AncMedicalHistoryService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 30, providerID)\n    }\n\n    static medicalHistoryOptions() {\n        return ConceptService.getConceptsByCategory('anc_medical_history')\n    }\n}\n","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { AncMedicalHistoryService } from \"@/apps/ANC/Services/anc_medical_history_service\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { ObsValue } from '@/services/observation_service'\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    formFields: [] as any,\n    service: {} as any\n  }),\n  watch: {\n    ready: {\n      handler(ready: boolean) {\n        if (ready) this.formFields = this.getFields()\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      const obs = await this.resolveObs(computedData)\n      const anc = new AncMedicalHistoryService(this.patientID, this.providerID)\n      await anc.createEncounter()\n      await anc.saveObservationList(obs as ObsValue[])\n      this.nextTask()\n    },\n    getFields() {\n      return [\n        {\n          id: 'medical_history',\n          helpText: 'Past Medical Complications',\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          validation: (v: Option[]) => Validation.required(v),\n          computedValue: (v: Option[]) => {\n            return v.map(i => AncMedicalHistoryService.buildValueCoded(i.label, `${i.value}`))\n          },\n          options: () => {\n            return AncMedicalHistoryService.medicalHistoryOptions().map(h =>({\n               label: h.name,\n               value: '',\n               other: {\n                  values: this.yesNoOptions()\n               }\n            }))\n          },\n          config : {\n            footerBtns: [\n              {\n                name: \"None\",\n                slot: \"end\",\n                onClickComponentEvents:{\n                  refreshOptions: () => {\n                    return AncMedicalHistoryService.medicalHistoryOptions().map(h =>({\n                      label: h.name,\n                      value: 'No',\n                      other: {\n                        values: this.yesNoOptions()\n                      }\n                    }))\n                  }\n                },\n                onClick: () => 'None'\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./MedicalHistory.vue?vue&type=template&id=3dd6a597&ts=true\"\nimport script from \"./MedicalHistory.vue?vue&type=script&lang=ts\"\nexport * from \"./MedicalHistory.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}