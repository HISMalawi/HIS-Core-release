{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/clinic/ClinicTxRtt.vue?4f17","webpack:///./src/apps/ART/views/reports/clinic/ClinicTxRtt.vue","webpack:///./src/apps/ART/views/reports/clinic/ClinicTxRtt.vue?02fd"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","period","rows","fields","columns","config","showIndex","reportPrefix","onReportConfiguration","onPeriod","_","defineComponent","mixins","ReportMixin","components","ReportTemplate","data","cohort","table","thTxt","aggregated","created","this","getDateDurationFields","methods","report","TxReportService","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","getClinicTxRtt","setRows","setMaleTotalsRow","setFemaleRows","drillData","ageGroup","gender","column","push","drill","maleTD","filter","a","reduce","c","concat","td","all","d","match","mStatus","getMaternalStatus","uniq","allFp","FBf","FP","getColumnData","i","fp","status","id","includes","fnp","sortData","ls","comparator","months","map","patient_id","AGE_GROUPS","group","fullGender","formatGender","cohortData","s","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,EAA6BC,8BAAkB,mBAC/CC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,qBAAS,IAAM,CACtBC,yBAAaP,EAA4B,CACvCQ,MAAOd,EAAKc,MACZC,OAAQf,EAAKe,OACbC,KAAMhB,EAAKgB,KACXC,OAAQjB,EAAKiB,OACbC,QAASlB,EAAKkB,QACdC,OAAQ,CACAC,WAAW,GAEnBC,aAAc,SACdC,sBAAuBtB,EAAKuB,UAC3B,KAAM,EAAG,CAAC,QAAS,SAAU,OAAQ,SAAU,UAAW,4BAE/DC,EAAG,I,gGCZQC,+BAAgB,CAC3BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,uBACdC,KAAM,KAAM,CACRhB,MAAO,gBACPiB,OAAQ,GACRf,KAAM,GACNE,QAAS,CACL,CACIc,OAAMC,MAAM,aACZD,OAAMC,MAAM,UACZD,OAAMC,MAAM,kBACZD,OAAMC,MAAM,mBACZD,OAAMC,MAAM,oBAGpBC,WAAY,KAEhBC,UACIC,KAAKnB,OAASmB,KAAKC,yBAEvBC,QAAS,CACL,eAAed,EAAQL,GACnBiB,KAAKpB,KAAO,GACZoB,KAAKF,WAAa,GAClBE,KAAKG,OAAS,IAAIC,OAClBJ,KAAKG,OAAOE,aAAatB,EAAOuB,YAChCN,KAAKG,OAAOI,WAAWxB,EAAOyB,UAC9BR,KAAKrB,OAASqB,KAAKG,OAAOM,wBAC1BT,KAAKL,aAAeK,KAAKG,OAAOO,uBAC1BV,KAAKW,QAAQ,WACbX,KAAKW,QAAQ,KACnBX,KAAKY,yBACCZ,KAAKa,iBAEfC,UAAUpB,EAAkBqB,EAAkBC,EAAgBC,GAE1D,OADAjB,KAAKF,WAAWoB,KAAK,CAACF,SAAQD,WAAUE,SAAQvB,SACzCM,KAAKmB,MAAMzB,EAAM,GAAGqB,MAAaC,OAAYC,MAExDL,mBACI,MAAMQ,EAAUH,GAAmBjB,KAAKmB,MACpCnB,KAAKF,WAAWuB,OAAQC,GAAwB,SAAbA,EAAEN,QAAqBM,EAAEL,SAAWA,GAClEM,OAAO,CAACD,EAAQE,IAAWF,EAAEG,OAAOD,EAAE9B,MAAO,IAC9C,YAAYuB,GAEpBjB,KAAKpB,KAAKsC,KAAK,CACXtB,OAAM8B,GAAG,OACT9B,OAAM8B,GAAG,QACTN,EAAO,kBACPA,EAAO,mBACPA,EAAO,qBAGf,sBACI,MAAMO,EAAM3B,KAAKF,WAAWuB,OAAQO,GAAWA,EAAEZ,OAAOa,MAAM,YACzDN,OAAO,CAACD,EAAaE,IAAWF,EAAEG,OAAOD,EAAE9B,MAAO,IACjDoC,QAAgB9B,KAAKG,OAAO4B,kBAAkBC,kBAAKL,IACnDM,EAAQH,EAAQI,IAAIT,OAAOK,EAAQK,IAEnCC,EAAiBnB,GAAmBjB,KAAKF,WAAWuB,OAAQO,GAAWA,EAAEZ,OAAOa,MAAM,YACvFR,OAAQgB,GAAWA,EAAEpB,SAAWA,GAChCM,OAAO,CAACD,EAAaE,IAAWQ,kBAAKV,EAAEG,OAAOD,EAAE9B,OAAQ,IAEvD4C,EAAK,CAACC,EAAsBtB,IACvBjB,KAAKmB,MAAMiB,EAAcnB,GAAQI,OAAQmB,GAAYV,EAAQS,GAAQE,SAASD,IAAM,OAAOvB,GAGhGyB,EAAOzB,GACHjB,KAAKmB,MAAMiB,EAAcnB,GAAQI,OAAQmB,IAAaP,EAAMQ,SAASD,IAAM,OAAOvB,GAG5FjB,KAAKpB,KAAKsC,KAAK,CACXtB,OAAM8B,GAAG,OACT9B,OAAM8B,GAAG,MACTY,EAAG,KAAM,kBACTA,EAAG,KAAM,mBACTA,EAAG,KAAM,oBAEbtC,KAAKpB,KAAKsC,KAAK,CACXtB,OAAM8B,GAAG,OACT9B,OAAM8B,GAAG,OACTgB,EAAI,kBACJA,EAAI,mBACJA,EAAI,oBAER1C,KAAKpB,KAAKsC,KAAK,CACXtB,OAAM8B,GAAG,OACT9B,OAAM8B,GAAG,OACTY,EAAG,MAAO,kBACVA,EAAG,MAAO,mBACVA,EAAG,MAAO,qBAGlB,cAActB,GACV,MAAM2B,EAAW,CAACC,EAAgBC,IACvBD,EAAGvB,OAAOgB,GAAKQ,EAAWR,EAAES,SAASC,IAAIV,GAAKA,EAAEW,YAE3D,IAAI,MAAMX,KAAKY,OAAY,CACvB,MAAMC,EAAQD,OAAWZ,GACnBc,EAAanD,KAAKoD,aAAapC,GACrC,GAAIkC,KAASlD,KAAKL,OAAQ,CACtB,MAAM0D,EAAarD,KAAKL,OAAOuD,GAAOlC,GAChCsC,EAAKT,GAAyBF,EAASU,EAAYR,GACzD7C,KAAKpB,KAAKsC,KAAK,CACXtB,OAAM8B,GAAGwB,GACTtD,OAAM8B,GAAGyB,GACTnD,KAAKc,UAAUwC,EAAGR,GAAmBA,EAAS,GAAII,EAAOC,EAAY,kBACrEnD,KAAKc,UAAUwC,EAAGR,GAAmBA,GAAU,GAAKA,GAAU,GAAII,EAAOC,EAAY,mBACrFnD,KAAKc,UAAUwC,EAAGR,GAAmBA,GAAU,GAAII,EAAOC,EAAY,yBAG1EnD,KAAKpB,KAAKsC,KAAK,CACXtB,OAAM8B,GAAGwB,GACTtD,OAAM8B,GAAGyB,GACTvD,OAAM8B,GAAG,GACT9B,OAAM8B,GAAG,GACT9B,OAAM8B,GAAG,U,qBCxHjC,MAAM6B,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS5F,KAErD","file":"js/chunk-2d0af6a8.c16a240c.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        period: _ctx.period,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        config: {\n                showIndex: true\n            },\n        reportPrefix: \"Clinic\",\n        onReportConfiguration: _ctx.onPeriod\n      }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport { TxReportService } from '@/apps/ART/services/reports/tx_report_service'\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { AGE_GROUPS } from \"@/apps/ART/services/reports/patient_report_service\"\nimport { uniq } from 'lodash'\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate },\n    data: () => ({\n        title: 'TX RTT Report',\n        cohort: {} as any,\n        rows: [] as Array<any>,\n        columns: [\n            [       \n                table.thTxt('Age group'),\n                table.thTxt('Gender'),\n                table.thTxt('Returned <3 mo'),\n                table.thTxt('Returned 3-5 mo'),\n                table.thTxt('Returned 6+ mo')\n            ]\n        ],\n        aggregated: [] as any\n    }),\n    created() {\n        this.fields = this.getDateDurationFields()\n    },\n    methods: {\n        async onPeriod(_: any, config: any) {\n            this.rows = []\n            this.aggregated = []\n            this.report = new TxReportService()\n            this.report.setStartDate(config.start_date)\n            this.report.setEndDate(config.end_date)\n            this.period = this.report.getDateIntervalPeriod()\n            this.cohort = await this.report.getClinicTxRtt()\n            await this.setRows('F')\n            await this.setRows('M')\n            this.setMaleTotalsRow()\n            await this.setFemaleRows()\n        },\n        drillData(data: Array<any>, ageGroup: string, gender: string, column: 'Returned <3 mo' | 'Returned 3-5 mo' | 'Returned 6+ mo') {\n            this.aggregated.push({gender, ageGroup, column, data})\n            return this.drill(data, `${ageGroup} (${gender}s) ${column}`)\n        },\n        setMaleTotalsRow() {\n            const maleTD = (column: string) => this.drill(\n                this.aggregated.filter((a: any) => a.gender === 'Male' && a.column === column)\n                    .reduce((a: any, c: any) => a.concat(c.data), []), \n                    `All Male ${column}`\n            )\n            this.rows.push([\n                table.td('All'),\n                table.td('Male'),\n                maleTD('Returned <3 mo'),\n                maleTD('Returned 3-5 mo'),\n                maleTD('Returned 6+ mo')\n            ])\n        },\n        async setFemaleRows() {\n            const all = this.aggregated.filter((d: any) => d.gender.match(/female/i))\n                .reduce((a: number[], c: any) => a.concat(c.data), [] as number[])           \n            const mStatus = await this.report.getMaternalStatus(uniq(all))\n            const allFp = mStatus.FBf.concat(mStatus.FP)\n\n            const getColumnData = (column: string) => this.aggregated.filter((d: any) => d.gender.match(/female/i))\n                .filter((i: any) => i.column === column)\n                .reduce((a: number[], c: any) => uniq(a.concat(c.data)), [] as number[])           \n\n            const fp = (status: 'FBf' | 'FP', column: string) => {\n                return this.drill(getColumnData(column).filter((id: any) => mStatus[status].includes(id)), `All ${column}`)\n            }\n\n            const fnp = (column: string) => {\n               return this.drill(getColumnData(column).filter((id: any) => !allFp.includes(id)), `All ${column}`)\n            }\n\n            this.rows.push([\n                table.td('All'),\n                table.td('FP'),\n                fp('FP', 'Returned <3 mo'),\n                fp('FP', 'Returned 3-5 mo'),\n                fp('FP', 'Returned 6+ mo')\n            ])\n            this.rows.push([\n                table.td('All'),\n                table.td('FNP'),\n                fnp('Returned <3 mo'),\n                fnp('Returned 3-5 mo'),\n                fnp('Returned 6+ mo')\n            ])\n            this.rows.push([\n                table.td('All'),\n                table.td('FBF'),\n                fp('FBf', 'Returned <3 mo'),\n                fp('FBf', 'Returned 3-5 mo'),\n                fp('FBf', 'Returned 6+ mo')\n            ])\n        },\n        async setRows(gender: string) {\n            const sortData = (ls: Array<any>, comparator: Function) => {\n                return ls.filter(i => comparator(i.months)).map(i => i.patient_id)\n            }\n            for(const i in AGE_GROUPS) {\n                const group = AGE_GROUPS[i]\n                const fullGender = this.formatGender(gender);\n                if (group in this.cohort) {\n                    const cohortData = this.cohort[group][gender]\n                    const s = (comparator: Function) => sortData(cohortData, comparator)\n                    this.rows.push([\n                        table.td(group),\n                        table.td(fullGender),\n                        this.drillData(s((months: number) => months < 3), group, fullGender, 'Returned <3 mo'),\n                        this.drillData(s((months: number) => months >= 3 && months <= 5), group, fullGender, 'Returned 3-5 mo'),\n                        this.drillData(s((months: number) => months >= 6), group, fullGender, 'Returned 6+ mo')\n                    ])\n                } else {\n                    this.rows.push([\n                        table.td(group),\n                        table.td(fullGender),\n                        table.td(0),\n                        table.td(0),\n                        table.td(0)\n                    ])\n                }\n            }\n        }\n    }\n})\n","import { render } from \"./ClinicTxRtt.vue?vue&type=template&id=1629dec0&ts=true\"\nimport script from \"./ClinicTxRtt.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicTxRtt.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}