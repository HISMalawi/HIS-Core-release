{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/Obsteric.vue?a098","webpack:///./src/apps/ANC/Services/anc_obsteric_service.ts","webpack:///./src/apps/ANC/Views/Encounters/Obsteric.vue","webpack:///./src/apps/ANC/Views/Encounters/Obsteric.vue?a925"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","fields","skipSummary","onFinishAction","onFinish","cancelDestinationPath","cancelDestination","_","AncObstericService","patientID","providerID","para","gravida","nextGravida","this","getFirstValueNumber","AppEncounterService","defineComponent","components","IonPage","mixins","EncounterMixinVue","data","service","watch","ready","handler","initData","getFields","immediate","methods","computedData","resolveObs","obs","createEncounter","saveObservationList","nextTask","id","helpText","type","FieldType","TT_NUMBER","defaultValue","beforeNext","v","parseInt","value","alertConfirmation","computedValue","buildValueNumber","validation","validateSeries","Validation","required","rangeOf","condition","f","TT_ANC_PREGNANCY_INPUT_CONFIG","config","hiddenFooterBtns","pregnancyCount","TT_ANC_PREGNANCY_DETAILS_INPUT","abortionCount","known_pregnancies","some","p","isChecked","inArray","i","label","filter","d","other","map","options","knownAbortions","num","push","getNumberOrdinal","field","patient","getBirthdate","split","minY","getDate","maxY","TT_SELECT","buildValueText","mapStrToOptions","buildValueCoded","successfulPregnancyData","rowTitles","onValueUpdate","rowItems","forEach","disabled","TT_TEXT","match","includes","customKeyboard","onUnknownEstimateField","mapOptions","noChars","yesNoOptions","TT_AGE_INPUT","TT_MULTI_SELECT_GRID","hasMissingValues","Boolean","onClick","option","listData","l","visible","__exports__"],"mappings":"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","file":"js/chunk-2d0a4819.b413b797.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class AncObstericService extends AppEncounterService {\n    para: number;\n    gravida: number;\n    nextGravida: number;\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 82, providerID)\n        this.para = 0\n        this.gravida = 0\n        this.nextGravida = 0\n    }\n\n    async initData() {\n        this.para = (await this.getFirstValueNumber('Parity')) || 0\n        this.gravida = (await this.getFirstValueNumber('Gravida')) || 0\n        this.nextGravida = this.gravida > 0 ? this.gravida + 1 : 0\n    }\n}\n","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { AncObstericService } from \"@/apps/ANC/Services/anc_obsteric_service\"\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { ObsValue } from '@/services/observation_service'\nimport { alertConfirmation } from '@/utils/Alerts'\nimport { getNumberOrdinal } from \"@/utils/Strs\"\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    service: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n            this.service = new AncObstericService(this.patientID, this.providerID)\n\t\t\tawait this.service.initData()\n            this.fields = this.getFields()\n        } \n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      const obs = await this.resolveObs(computedData)\n      await this.service.createEncounter()\n      await this.service.saveObservationList(obs as ObsValue[])\n      this.nextTask()\n    },\n    getFields(): Field[] {\n        return [\n            {\n                id: 'gravida',\n                helpText: 'Gravida',\n                type: FieldType.TT_NUMBER,\n\t\t\t\tdefaultValue: () => this.service.nextGravida > 0 ? this.service.nextGravida : null,\n                beforeNext: async (v: Option) => {\n                    if (parseInt(`${v.value}`) > 9) {\n                        if (!(await alertConfirmation(\n\t\t\t\t\t\t\t'The value is greater than maximum 9. Are you sure about this value?'\n\t\t\t\t\t\t\t))) {\n                            return false\n                        }\n                    }\n                    return true\n                },\n                computedValue: (v: Option) => this.service.buildValueNumber('Gravida', v.value),\n                validation: (v: Option) => this.validateSeries([\n                    () => Validation.required(v),\n                    () => Validation.rangeOf(v, this.service.nextGravida || 1, 19)\n                ])\n            },\n            {\n                id: 'para',\n                helpText: 'Para',\n                type: FieldType.TT_NUMBER,\n                condition: (f: any) => f.gravida.value > 1,\n                computedValue: (v: Option) => this.service.buildValueNumber('Parity', v.value), \n                validation: (v: Option, f: any) => this.validateSeries([\n                    () => Validation.required(v),\n                    () => Validation.rangeOf(v, this.service.para, f.gravida.value - 1)\n                ])\n            },\n            {\n                id: 'known_pregnancies',\n                helpText: 'Pregnancies with available information',\n                type: FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n                condition: (f: any) => f.gravida.value > 1 && f.para.value > 0,\n                config: {\n\t\t\t\t\thiddenFooterBtns: ['Clear'],\n\t\t\t\t\tpregnancyCount: (f: any) => f.para.value\n                }\n            },\n            {\n\t\t\t\tid: 'pregnancy_details',\n\t\t\t\thelpText: 'Pregnancy details',\n\t\t\t\ttype: FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n\t\t\t\tcondition: (f: any) => {\n\t\t\t\t\tconst abortionCount = (parseInt(`${f.gravida.value}`) - parseInt(`${f.para.value}`)) - 1\n\t\t\t\t\treturn f.gravida.value > 1 && (abortionCount >= 1 || f.known_pregnancies.some(\n\t\t\t\t\t\t(p: Option) => p.isChecked\n\t\t\t\t\t))\n\t\t\t\t},\n\t\t\t\tvalidation: (v: Option[]) => this.validateSeries([\n\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t() => this.inArray(v, (i: Option) => i.label === '_INCOMPLETE_RECORD_ERROR_')\n\t\t\t\t\t\t? ['Pregnancy details incomplete!!']\n\t\t\t\t\t\t: null\n\t\t\t\t]),\n\t\t\t\tconfig: {\n\t\t\t\t\thiddenFooterBtns: ['Clear']\n\t\t\t\t},\n\t\t\t\tcomputedValue: (v: Option[]) => v.filter(d => d?.other?.obs || false).map((d: Option) => d.other.obs),\n\t\t\t\toptions: (f: any) => {\n\t\t\t\t\tconst abortionCount = (parseInt(`${f.gravida.value}`) - parseInt(`${f.para.value}`)) - 1\n\t\t\t\t\tconst knownAbortions: Option[] = []\n\t\t\t\t\tfor(let i=0; i < abortionCount; ++i) {\n\t\t\t\t\t\tconst num = i + 1\n\t\t\t\t\t\tknownAbortions.push({\n\t\t\t\t\t\t\tlabel: `<span style=\"color:red;\">${num}<sup>${getNumberOrdinal(num)}</sup> Abortion</span>`,\n\t\t\t\t\t\t\tvalue: -1,\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\tdata: [\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Year of abortion',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'year',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Year of abortion',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueNumber('Year of abortion', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst [minY] = this.patient.getBirthdate().split('-')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst [maxY] = this.service.getDate().split('-')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn Validation.rangeOf(v, minY, maxY)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Place of abortion',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'place_of_abortion',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Place of abortion',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// concept taken as is from old anc system\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Place of birth', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Health facility\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"In transit\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"TBA\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Home\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Other\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Type of abortion',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'type_of_abortion',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Type of abortion',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueCoded('Type of Abortion', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Complete abortion\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Incomplete abortion\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Procedure done',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'procedure_done',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Procedure done',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Procedure done', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Manual Vacuum Aspiration (MVA)\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Evacuation\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"None\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Gestation (weeks)',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'gestation_weeks',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Gestation (weeks)',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueNumber('Gestation', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.rangeOf(v, 0, 28)\n\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tconst successfulPregnancyData = (f.known_pregnancies || []).filter((p: Option) => p.isChecked).map((p: Option) => {\n\t\t\t\t\t\tconst data: any = []\n\t\t\t\t\t\tconst rowTitles = []\n\t\t\t\t\t\tfor(let i=0; i < p.value; ++i) {\n\t\t\t\t\t\t\trowTitles.push(`${i+1}<sup>${getNumberOrdinal(i+1)}</sup> born in ${p.label} pregnancy`)\n\t\t\t\t\t\t\tdata.push([\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Year of birth',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'year',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Year of birth',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueNumber('Year of Birth', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst [minY] = this.patient.getBirthdate().split('-')\n\t\t\t\t\t\t\t\t\t\t\t\tconst [maxY] = this.service.getDate().split('-')\n\t\t\t\t\t\t\t\t\t\t\t\treturn Validation.rangeOf(v, minY, maxY) \n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Place of birth',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'place_of_birth',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Place of birth',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Place of birth', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => Validation.required(v), \n\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\"Health facility\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"In transit\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"TBA\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Home\"\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Gestation (weeks)',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'gestation_weeks',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Gestation (weeks)',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueNumber('Gestation', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.rangeOf(v, 24, 42)\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Method of delivery',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'method_of_delivery',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Method of delivery',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Method of delivery', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\"Spontaneous Vertex\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Caesarean Section\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Vacuum extraction delivery\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Breech\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Forceps\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Others\"\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Condition at birth',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'condition_at_birth',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Condition at birth',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Condition at Birth', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tonValueUpdate: (v: Option, rowItems: any) => {\n\t\t\t\t\t\t\t\t\t\t\trowItems.forEach((i: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (i.label === 'Alive now') {\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.required = v.value === 'Alive'\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.disabled = v.value != 'Alive'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\"Alive\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Macerated Still Birth (MSB)\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Fresh Still Birth (FSB)\"\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Birth weight',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'birth_weight',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Birth weight',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_TEXT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Birth weight', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (v.value != 'Unknown' && !(`${v.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/))) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn [`Invalid weight ${v.value}. Don't forget decimal point`]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => !['N/A', 'Unknown'].includes(`${v.value}`) \n\t\t\t\t\t\t\t\t\t\t\t\t? Validation.rangeOf(v, 1, 5) \n\t\t\t\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\tconfig: {\n\t\t\t\t\t\t\t\t\t\t\tcustomKeyboard: [\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t['1', '2', '3'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t['4', '5', '6'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t['7', '8', '9'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t['', '0', '.']\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t['Unknown', 'Delete']\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tonUnknownEstimateField: () => { \n\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'birth_weight_estimate',\n\t\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Birth weight estimate',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.mapOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Normal',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Big baby',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Small baby'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tnoChars: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Alive now',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'alive_now',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Alive now',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueCoded('Alive', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tonValueUpdate: (v: Option, rowItems: any) => {\n\t\t\t\t\t\t\t\t\t\t\trowItems.forEach((i: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (i.label === 'Age at death') {\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.required = v.value === 'No'\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.disabled = v.value === 'Yes'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.yesNoOptions()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Age at death',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'age_at_death',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Age at death',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_AGE_INPUT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Age at Death', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.label = `${p.label} delivery`\n\t\t\t\t\t\tp.other = { data, rowTitles }\n\t\t\t\t\t\treturn p\n\t\t\t\t\t})\n\t\t\t\t\treturn [...successfulPregnancyData, ...knownAbortions] as Option[]\n\t\t\t\t}\n            },\n\t\t\t{\n\t\t\t\tid: 'previous_complications',\n\t\t\t\thelpText: 'Previous complications',\n\t\t\t\ttype: FieldType.TT_MULTI_SELECT_GRID,\n\t\t\t\tcondition: (f: any) => f.gravida.value > 1,\n\t\t\t\tvalidation: (v: Option[]) => this.validateSeries([\n\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst hasMissingValues = v.map(v => v.value==='').some(Boolean)\n\t\t\t\t\t\treturn hasMissingValues \n\t\t\t\t\t\t\t? ['Please complete Complication selection!!'] \n\t\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t]),\n\t\t\t\tcomputedValue: (v: Option[]) => {\n\t\t\t\t\treturn v.filter(d => d.value != '')\n\t\t\t\t\t\t.map(d => this.service.buildValueCoded(d.label, d.value))\n\t\t\t\t},\n\t\t\t\tconfig: {\n\t\t\t\t\thiddenFooterBtns: ['Clear']\n\t\t\t\t},\n\t\t\t\toptions: () => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tlabel: 'Episiotomy', \n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\toptions: this.yesNoOptions()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tlabel: 'Hemorrhage', \n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\toptions: this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t'No',\n\t\t\t\t\t\t\t\t\t'APH',\n\t\t\t\t\t\t\t\t\t'PPH'\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tlabel: 'Pre-eclampsia', \n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\tonClick: (option: Option, listData: Option[]) => {\n\t\t\t\t\t\t\t\t\tlistData.forEach(l => {\n\t\t\t\t\t\t\t\t\t\tif (l.label === 'Eclampsia') {\n\t\t\t\t\t\t\t\t\t\t\tl.other.visible = option.value === 'Yes'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\toptions: this.yesNoOptions()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Eclampsia',\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\t\t\toptions: this.yesNoOptions()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n        ]\n    }\n  }\n})\n","import { render } from \"./Obsteric.vue?vue&type=template&id=20b9633a&ts=true\"\nimport script from \"./Obsteric.vue?vue&type=script&lang=ts\"\nexport * from \"./Obsteric.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}