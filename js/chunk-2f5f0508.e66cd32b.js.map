{"version":3,"sources":["webpack:///./src/apps/EMC/views/reports/moh/SurvivalAnalysis.vue?83ff","webpack:///./src/apps/EMC/views/reports/moh/SurvivalAnalysis.vue","webpack:///./src/apps/EMC/views/reports/moh/SurvivalAnalysis.vue?5b12","webpack:///./src/apps/ART/services/reports/art_report_service.ts","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue?8627","webpack:///./src/apps/EMC/utils/exports.ts","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue?5f58","webpack:///./src/apps/ART/services/reports/survival_analysis_report_service.ts","webpack:///./src/apps/ART/services/reports/patient_report_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_base_report_table","_resolveComponent","_openBlock","_createBlock","title","columns","rows","quarter","useQuarterFilter","customFilters","onCustomFilter","fetchData","onRegenerate","defineComponent","name","components","BaseReportTable","setup","reactive","ageGroup","ref","path","label","initialSort","initialSortOrder","filters","regenerate","loader","show","Object","assign","report","SurvivalAnalysisReportService","setRegenerate","setQuarter","value","setAgeGroup","getSurvivalAnalysis","data","rs","keys","filter","d","isEmpty","forEach","q","outcomes","interval","values","alive","get","died","defaulted","stopped","transferred","unknown","push","subgroup","totalReg","hide","computed","id","type","options","AGE_GROUP","map","age","__exports__","ArtReportService","endDate","startDate","date","Service","getSessionDate","programID","getProgramID","HisDate","toStandardHisDisplayFormat","this","url","params","getJson","buildRequest","config","payload","year","daysInMonth","m","dayjs","startMonth","endMonth","qtr","start","end","qtrBounds","getQuarterBounds","getFullYear","Date","qtrName","maxQuarters","qtrs","currDate","currYear","curYr","getMonth","getDate","currentQtr","getQtrByDate","i","buildQtrObj","_hoisted_1","key","_hoisted_2","_hoisted_3","_hoisted_4","_component_ion_col","_component_ion_row","_component_ion_grid","_component_ion_card_header","_component_data_table","_component_ion_card_content","_component_ion_card","_component_Layout","default","_withCtx","_createVNode","class","style","size","src","reportIcon","height","subtitle","width","_","innerHTML","_createCommentVNode","useDateRangeFilter","_toDisplayString","period","useDateFilter","format","totalClients","asyncRows","actionBtns","rowActionButtons","onDrilldown","color","sanitize","str","replace","trim","error","convertToCsv","column","exportable","join","row","formatter","drillable","Array","isArray","length","getAppVersion","getApiVersion","getSiteUUID","exportToCSV","opts","csvData","Blob","link","document","createElement","href","window","URL","createObjectURL","setAttribute","filename","body","appendChild","click","removeChild","IonCard","IonCardHeader","IonCardContent","Layout","IonGrid","IonRow","IonCol","DataTable","props","String","Number","Function","actionButtons","canExportCsv","Boolean","canExportPDF","showRefreshButton","emits","emit","PatientReportService","getLocationName","btns","action","_a","f","gridSize","split","getReportQuarters","other","customfilters","dateRange","isAfter","toastWarning","every","required","v","GENERAL","ok","getReport","AGE_GROUPS","range","outcome"],"mappings":"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","file":"js/chunk-2f5f0508.e66cd32b.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_report_table = _resolveComponent(\"base-report-table\")\n\n  return (_openBlock(), _createBlock(_component_base_report_table, {\n    title: \"MoH Survival Analysis Report\",\n    \"report-icon\": \"reports/refill.png\",\n    columns: _ctx.columns,\n    rows: _ctx.rows,\n    quarter: _ctx.quarter,\n    useQuarterFilter: \"\",\n    \"custom-filters\": _ctx.customFilters,\n    onCustomFilter: _ctx.fetchData,\n    onRegenerate: _ctx.onRegenerate\n  }, null, 8, [\"columns\", \"rows\", \"quarter\", \"custom-filters\", \"onCustomFilter\", \"onRegenerate\"]))\n}","\nimport { computed, defineComponent, reactive, ref } from \"vue\";\nimport { loader } from \"@/utils/loader\";\nimport BaseReportTable from \"@/apps/EMC/Components/tables/BaseReportTable.vue\";\nimport { CustomFilterInterface, TableColumnInterface } from \"@uniquedj95/vtable\";\nimport { AGE_GROUP, SurvivalAnalysisReportService } from \"@/apps/ART/services/reports/survival_analysis_report_service\";\nimport { get, isEmpty } from \"lodash\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\n\nexport default defineComponent({\n  name: \"SurvivalAnalysis\",\n  components: { BaseReportTable },\n  setup() {\n    const quarter = reactive({} as Option)\n    const ageGroup = reactive({} as Option)\n    const rows = ref<any[]>([]);\n    const columns: TableColumnInterface[] = [\n      { path: \"quarter\", label: \"Reg Cohort\", initialSort: true, initialSortOrder: 'asc' },\n      { path: \"interval\", label: \"Interval (Months)\" },\n      { path: \"subgroup\", label: \"Sub group\" },\n      { path: \"totalReg\", label: \"Total Reg (database)\" },\n      { path: \"totalConfirmed\", label: \"Total Reg (Confirmed)\" },\n      { path: \"alive\", label: \"Alive\" },\n      { path: \"died\", label: \"Died\" },\n      { path: \"defaulted\", label: \"Defaulted\" },\n      { path: \"stopped\", label: \"Stopped\" },\n      { path: 'transferred', label: \"Transferred out\" },\n      { path: \"unknown\", label:\"Unknown\" }\n    ]\n\n    const fetchData =  async (filters: Record<string, any>, regenerate=false) => {\n      await loader.show()\n      Object.assign(quarter, filters.quarter)\n      Object.assign(ageGroup, filters.ageGroup)\n      const report = new SurvivalAnalysisReportService()\n      report.setRegenerate(regenerate)\n      report.setQuarter(filters.quarter.value)\n      report.setAgeGroup(filters.ageGroup.value)\n      const data: any = await report.getSurvivalAnalysis()\n      const rs: any[] = []\n      Object.keys(data)\n        .filter((d: string) => !isEmpty(data[d]))\n        .forEach((q: string) => {\n          const outcomes: Record<string, any> = data[q]\n          const interval = Object.keys(Object.values(outcomes)[0])[0];\n          const alive = get(outcomes, `On antiretrovirals.${interval}`, 0);\n          const died = get(outcomes, `Patient died.${interval}`, 0);\n          const defaulted = get(outcomes, `Defaulted.${interval}`, 0);\n          const stopped = get(outcomes, `Treatment stopped.${interval}`, 0);\n          const transferred = get(outcomes, `Patient transferred out.${interval}`, 0);\n          const unknown = get(outcomes, `N/A.${interval}`, 0);\n          rs.push({\n            quarter: q,\n            interval,\n            alive,\n            died,\n            defaulted,\n            stopped,\n            transferred,\n            unknown,\n            subgroup: ageGroup.value,\n            totalReg: alive + died + defaulted + stopped + transferred + unknown,\n          })\n        })\n      rows.value = rs\n      await loader.hide();\n    }\n\n    const customFilters = computed<CustomFilterInterface[]>(() => [{\n      id: \"ageGroup\",\n      type: \"select\",\n      label: \"Sub Group:\",\n      value: ageGroup,\n      options: Object.values(AGE_GROUP).map(age => ({ label: age, value: age })),\n    }])\n\n    const onRegenerate = async () => {\n      if(quarter.value && ageGroup.value) {\n        fetchData({quarter: quarter.value, ageGroup: ageGroup.value}, true)\n      }\n    }\n\n    return {\n      rows,\n      columns,\n      quarter,\n      customFilters,\n      fetchData,\n      onRegenerate,\n    }\n  }\n})\n","import { render } from \"./SurvivalAnalysis.vue?vue&type=template&id=8dd471e8&ts=true\"\nimport script from \"./SurvivalAnalysis.vue?vue&type=script&lang=ts\"\nexport * from \"./SurvivalAnalysis.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport dayjs from \"dayjs\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport class ArtReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    quarter: string\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.quarter = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setQuarter(quarter: string) {\n        this.quarter = quarter\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.quarter) {\n            payload['quarter'] = this.quarter\n        }\n        return { ...payload, ...config }\n    }\n\n    static getQuarterBounds(year: number) {\n        const daysInMonth = (m: string) => dayjs(`${year}-${m}-01`).daysInMonth()\n        const startMonth = (m: string) => `${year}-${m}-01 00:00`\n        const endMonth = (m: string) => `${year}-${m}-${daysInMonth(m)} 00:00`\n\n        return {\n            'Q1': {\n                qtr: 1,\n                start: startMonth('01'),\n                end: endMonth('03')\n            },\n            'Q2': {\n                qtr: 2,\n                start: startMonth('04'),\n                end: endMonth('06')\n            },\n            'Q3': {\n                qtr: 3,\n                start: startMonth('07'),\n                end: endMonth('09')\n            },\n            'Q4': {\n                qtr: 4,\n                start: startMonth('10'),\n                end: endMonth('12')\n            }\n        }\n    }\n\n    static getQtrByDate(date: Date) {\n        const qtrBounds: any = this.getQuarterBounds(date.getFullYear())\n        for(const qtr in qtrBounds) {\n            const { start, end } = qtrBounds[qtr]\n            if (date >= new Date(start) && date <= new Date(end)) {\n                return qtrBounds[qtr]\n            }\n        }\n        return null\n    }\n\n    static buildQtrObj(qtrName: string, year: number): QuarterInterface {\n        const qtrBounds: any = this.getQuarterBounds(year)\n        const { start, end } = qtrBounds[qtrName]\n        return {\n            start,\n            end,\n            name: `${qtrName} ${year}`,\n        }\n    }\n\n    static getReportQuarters(maxQuarters=5) {\n        const qtrs: QuarterInterface[] = [];\n        let currDate = new Date();\n        let currYear = currDate.getFullYear();\n        const curYr = currYear\n        \n        currDate = new Date(`${curYr}-${currDate.getMonth() + 1}-${currDate.getDate()} 00:00`);\n        const currentQtr = this.getQtrByDate(currDate);\n        let qtr = currentQtr.qtr;\n        let i = 0;\n\n        if (qtr === 4) qtrs.push(this.buildQtrObj('Q1', currYear + 1))\n\n        while (i < maxQuarters) {\n          // Add following quarter\n          if (i === 0 && qtr < 4) qtrs.push(this.buildQtrObj(`Q${qtr + 1}`, currYear))\n\n          qtrs.push(this.buildQtrObj(`Q${qtr}`, currYear))\n          qtr = qtr > 0 ? (qtr -= 1) : qtr;\n          currYear = qtr == 0 ? currYear - 1 : currYear;\n          qtr =  qtr == 0 ? ( qtr += 4) : qtr;\n          i++;\n        }\n        return qtrs;\n    }\n}\n","import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { key: 1 }\nconst _hoisted_2 = { key: 2 }\nconst _hoisted_3 = { key: 3 }\nconst _hoisted_4 = { key: 4 }\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")\n  const _component_data_table = _resolveComponent(\"data-table\")\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")\n  const _component_ion_card = _resolveComponent(\"ion-card\")\n  const _component_Layout = _resolveComponent(\"Layout\")\n\n  return (_openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_card, {\n        class: \"his-card\",\n        style: {\"padding\":\"0 !important\"}\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_card_header, { style: {\"border-bottom\":\"1px solid #c2c2c2\",\"font-weight\":\"500\",\"color\":\"#000\"} }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_grid, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_row, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"1\",\n                        class: \"ion-padding ion-margin-end\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(\"img\", {\n                            src: `assets/images/${_ctx.reportIcon}`,\n                            style: {height: _ctx.subtitle ? 7 : 5 + 'rem', width: _ctx.subtitle ? 7 : 5 + 'rem'}\n                          }, null, 12, [\"src\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, null, {\n                        default: _withCtx(() => [\n                          _createVNode(\"h1\", { innerHTML: _ctx.title }, null, 8, [\"innerHTML\"]),\n                          (_ctx.subtitle)\n                            ? (_openBlock(), _createBlock(\"h3\", {\n                                key: 0,\n                                innerHTML: _ctx.subtitle,\n                                style: {\"color\":\"#818181\"}\n                              }, null, 8, [\"innerHTML\"]))\n                            : _createCommentVNode(\"\", true),\n                          (_ctx.useDateRangeFilter)\n                            ? (_openBlock(), _createBlock(\"h5\", _hoisted_1, \" Period: \" + _toDisplayString(_ctx.period), 1))\n                            : (_ctx.useQuarterFilter)\n                              ? (_openBlock(), _createBlock(\"h5\", _hoisted_2, \" Quarter: \" + _toDisplayString(_ctx.quarter.value), 1))\n                              : (_ctx.useDateFilter)\n                                ? (_openBlock(), _createBlock(\"h5\", _hoisted_3, \"Date: \" + _toDisplayString(_ctx.dayjs(_ctx.date).format(\"DD/MMM/YYYY\")), 1))\n                                : _createCommentVNode(\"\", true),\n                          (_ctx.totalClients)\n                            ? (_openBlock(), _createBlock(\"h5\", _hoisted_4, \"Total Clients: \" + _toDisplayString(_ctx.totalClients), 1))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_card_content, {\n            class: \"ion-no-padding\",\n            style: {\"min-height\":\"45vh\"}\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_data_table, {\n                rows: _ctx.rows,\n                \"async-rows\": _ctx.asyncRows,\n                columns: _ctx.columns,\n                \"actions-buttons\": _ctx.actionBtns,\n                \"row-actions-buttons\": _ctx.rowActionButtons,\n                \"custom-filters\": _ctx.filters,\n                onCustomFilter: _ctx.onCustomFilter,\n                onDrilldown: _ctx.onDrilldown,\n                color: \"custom\"\n              }, null, 8, [\"rows\", \"async-rows\", \"columns\", \"actions-buttons\", \"row-actions-buttons\", \"custom-filters\", \"onCustomFilter\", \"onDrilldown\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","import { TableColumnInterface } from '@uniquedj95/vtable';\nimport { get, isEmpty } from 'lodash';\nimport { Service } from '@/services/service';\n\nfunction sanitize(str: string) {\n  try {\n    return str.replace(/<(?:.|\\n)*?>/gm, \" \")\n      .replace(/\\n/g, \" \")\n      .replace(/\\t/g, \" \")\n      .replace(/\\s{2,}/g, \" \")\n      .replace(/=/g, \" \")\n      .replace(/,/g, \" \")\n      .trim();\n  } catch (error) {\n    return str;\n  }\n}\n\ninterface CsvOptions {\n  columns: TableColumnInterface[];\n  rows: any[];\n  filename: string;\n  quarter?: string;\n  period?: string;\n}\n\nfunction convertToCsv({columns, rows, quarter, period}: CsvOptions) {\n  let str = columns.filter((column) => column.exportable !== false)\n    .map((column) => column.label)\n    .join(\",\");\n\n  str += \"\\n\";\n  str += rows.map((row) => columns\n    .filter(column => column.exportable !== false)\n    .map(column => {\n      let value = get(row, column.path);\n      if (typeof column.formatter === 'function' && value) value = column.formatter(value)\n      return sanitize(column.drillable && Array.isArray(value) ? value.length : value);\n    })\n    .join(\",\")\n  ).join(\"\\n\");\n\n  str += \"\\n\" + `Date Created:  ${new Date()}`;\n  if (quarter) str += \"\\n\" + `Quarter: ${quarter}`;\n  if (period) str += \"\\n\" + `Quarter: ${period}`;\n  str += \"\\n\" + `e-Mastercard Version : ${Service.getAppVersion()}`;\n  str += \"\\n\" + `API Version ${Service.getApiVersion()}`;\n  str += \"\\n\" + `Site UUID: ${Service.getSiteUUID()}`;\n\n  return str;\n}\n\nexport function exportToCSV(opts: CsvOptions) {\n  const csvData = new Blob([convertToCsv(opts)], { type: \"text/csv;charset=utf-8;\" });\n  const link = document.createElement(\"a\");\n  link.href = window.URL.createObjectURL(csvData);\n  link.setAttribute(\"download\", `${opts.filename}.csv`);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { IonCard, IonCardContent, IonCardHeader, IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport { PatientReportService } from \"@/apps/ART/services/reports/patient_report_service\";\nimport dayjs from \"dayjs\";\nimport Layout from \"@/apps/EMC/Components/Layout.vue\";\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\";\nimport { Option } from '@/components/Forms/FieldInterface';\nimport { \n  ActionButtonInterface, \n  CustomFilterInterface, \n  DataTable, \n  RowActionButtonInterface, \n  TableColumnInterface \n} from '@uniquedj95/vtable'\nimport { toastWarning } from \"@/utils/Alerts\";\nimport { isEmpty } from \"lodash\";\nimport { exportToCSV } from \"../../utils/exports\";\n\nexport default defineComponent({\n  name: \"BaseReportTable\",\n  components: {\n    IonCard,\n    IonCardHeader,\n    IonCardContent,\n    Layout,\n    IonGrid,\n    IonRow,\n    IonCol,\n    DataTable,\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Report\",\n    },\n    subtitle: {\n      type: String,\n      default: \"\",\n    },\n    period: {\n      type: String,\n      default: \"\",\n    },\n    date: {\n      type: String,\n      default: \"\",\n    },\n    quarter: {\n      type: Object as PropType<Option>,\n      default: () => ({}),\n    },\n    totalClients: {\n      type: Number,\n      default: 0,\n    },\n    reportIcon: {\n      type: String,\n      default: \"reports/report.png\",\n    },\n    columns: {\n      type: Array as PropType<TableColumnInterface[]>,\n      default: () => [],\n    },\n    rows: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[]>>,\n    },\n    actionButtons: {\n      type: Array as PropType<ActionButtonInterface[]>,\n      default: () => [],\n    },\n    rowActionButtons: {\n      type: Array as PropType<RowActionButtonInterface[]>,\n      default: () => [],\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true,\n    },\n    canExportPDF: {\n      type: Boolean,\n      default: true,\n    },\n    showRefreshButton: {\n      type: Boolean,\n      default: true,\n    },\n    useDateRangeFilter: {\n      type: Boolean,\n      default: false,\n    },\n    useQuarterFilter: {\n      type: Boolean,\n      default: false,\n    },\n    useDateFilter: {\n      type: Boolean,\n      default: false,\n    },\n    customFilters: {\n      type: Array as PropType<CustomFilterInterface[]>,\n      default: () => [],\n    },\n  },\n  emits: [\"regenerate\", \"customFilter\", \"drilldown\"],\n  setup(props, { emit }) {\n    const filename = computed(() => {\n      return `${PatientReportService.getLocationName()} ${props.title} ${ props.period ? props.period : props.date }`;\n    })\n\n    const actionBtns = computed<ActionButtonInterface[]>(() => {\n      const btns = [...props.actionButtons];\n\n      if(props.showRefreshButton){\n        btns.push({ label: \"Refresh/Rebuild\", color: 'success', action: () => emit(\"regenerate\") });\n      }\n\n      if (props.canExportCsv) {\n        btns.push({\n          label: \"CSV\",\n          color: \"primary\",\n          action: async (_a, rows) => exportToCSV({\n            rows, \n            columns: props.columns, \n            quarter: props.quarter?.label,\n            period: props.period,\n            filename: filename.value\n          })\n        })\n      }\n      return btns;\n    })\n\n    const filters = computed<CustomFilterInterface[]>(() => {\n      const f = [...props.customFilters];\n      if(props.useDateRangeFilter) {\n        f.push({\n          id: \"dateRange\",\n          label: \"Date Range\",\n          type: \"dateRange\",\n          gridSize: 5,\n          value: {\n            startDate: props.period.split(\"-\")[0],\n            endDate: props.period.split(\"-\")[1],\n          },\n        })\n      } else if(props.useQuarterFilter) {\n        f.push({\n          id: \"quarter\",\n          label: \"Quarter:\",\n          type: \"select\",\n          value: props.quarter,\n          options: ArtReportService.getReportQuarters().map(q => ({label: q.name, value: q.name, other: q})),\n        })\n      } else if (props.useDateFilter) {\n        f.push({\n          id: \"date\",\n          label: \"Date\",\n          type: \"date\",\n          value: props.date,\n        })\n      }\n      return f;\n    })\n\n    const onCustomFilter = (customfilters: Record<string, any>) => {\n      if (\"dateRange\" in customfilters && (dayjs(customfilters.dateRange.startDate).isAfter(customfilters.dateRange.endDate))) {\n        return toastWarning(\"Invalid date range\")\n      }\n      if (filters.value.every(f => {\n        if (f.required === false) return true;\n        if (!isEmpty(customfilters[f.id]) && typeof customfilters[f.id] === 'object') return Object.values(customfilters[f.id]).every(v => !isEmpty(v));\n        return !isEmpty(customfilters[f.id]);\n      })) {\n        return emit(\"customFilter\", customfilters);\n      }\n      toastWarning(\"Invalid filters\")\n    }\n\n    const onDrilldown = (data: {column: TableColumnInterface; row: any}) => {\n      emit(\"drilldown\", data);\n    }\n\n    return {\n      actionBtns,\n      filters,\n      onCustomFilter,\n      onDrilldown,\n      dayjs,\n    }\n  }\n})\n","import { render } from \"./BaseReportTable.vue?vue&type=template&id=8b3a2834&ts=true\"\nimport script from \"./BaseReportTable.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseReportTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ArtReportService } from \"./art_report_service\";\n\nexport enum AGE_GROUP {\n    GENERAL = \"General\",\n    CHILDREN = \"Children\",\n    WOMEN = \"Women\"\n}\n\nexport class SurvivalAnalysisReportService extends ArtReportService {\n    ageGroup: AGE_GROUP;\n    quarter: string;\n    regenerate: boolean;\n    constructor() {\n        super()\n        this.quarter = ''\n        this.regenerate = false\n        this.ageGroup = AGE_GROUP.GENERAL\n    }\n\n    setRegenerate(ok: boolean) {\n        this.regenerate = ok\n    }\n\n    getAgeGroup() {\n        return this.ageGroup\n    }\n\n    setQuarter(quarter: string) {\n        this.quarter = quarter\n    }\n\n    setAgeGroup(ageGroup: AGE_GROUP) {\n        this.ageGroup = ageGroup\n    }\n\n    getSurvivalAnalysis() {\n        return this.getReport('cohort_survival_analysis', {\n            quarter: this.quarter,\n            regenerate: this.regenerate,\n            date: this.date,\n            'age_group': this.ageGroup,\n            'program_id': this.programID,\n        })\n    }\n}\n","import { ArtReportService } from \"./art_report_service\";\n\nexport const AGE_GROUPS = [\n    '<1 year',\n    '1-4 years', \n    '5-9 years', \n    '10-14 years', \n    '15-19 years', \n    '20-24 years', \n    '25-29 years', \n    '30-34 years', \n    '35-39 years', \n    '40-44 years', \n    '45-49 years', \n    '50-54 years',\n    '55-59 years',\n    '60-64 years',\n    '65-69 years',\n    '70-74 years',\n    '75-79 years',\n    '80-84 years',\n    '85-89 years',\n    '90 plus years'\n]\n\nexport class PatientReportService extends ArtReportService {\n    constructor() {\n        super()\n    }\n    \n    getBookedAppointments(date: string) {\n        return ArtReportService.getJson(`programs/${this.programID}/scheduled_appointments`, { date })\n    }\n\n    getViralLoadResults(range: string) {\n        return this.getReport(`/programs/${this.programID}/reports/high_vl_patients`, { range })\n    }\n\n    getOtherOutcome(outcome: string) {\n        return this.getReport('patient_outcome_list', { outcome })\n    }\n\n    getPatientVisitTypes() {\n        return this.getReport('patient_visit_types')\n    }\n\n    getClientsDueForVl() {\n        return this.getReport('clients_due_vl')\n    }\n\n    getClientRentention() {\n        return this.getReport(`/programs/${this.programID}/reports/retention`)\n    }\n\n    getExternalConsultationClients() {\n        return this.getReport(`${this.programID}/external_consultation_clients`)\n    }\n\n    getMissedAppointments() {\n        return this.getReport('missed_appointments')\n    }\n\n    getPregnantWomen() {\n        return this.getReport(`/programs/${this.programID}/reports/pregnant_patients`)\n    }\n\n    getArchivingCandidates() {\n        return ArtReportService.getJson(`programs/${this.programID}/reports/archiving_candidates`, { \n            'start_date': this.date\n        })\n    }\n\n    getIncompleteVisits() {\n        return this.getReport('incomplete_visits', {\n            \"tool_name\": \"INCOMPLETE VISITS\",\n        })\n    }\n}\n"],"sourceRoot":""}