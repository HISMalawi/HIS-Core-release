(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d225dd6"],{e5e5:function(t,e,i){"use strict";i.r(e);var n=i("7a23");function a(t,e,i,a,o,s){const c=Object(n["resolveComponent"])("his-standard-form");return Object(n["openBlock"])(),Object(n["createBlock"])(c,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}i("caad");var o=i("d95e"),s=i("7920"),c=i("2706"),d=i("7365"),l=i("8df6"),p=i("b5e4"),r=i("80b5"),h=Object(n["defineComponent"])({mixins:[d["a"]],components:{HisStandardForm:s["a"]},data:()=>({patientType:{}}),watch:{ready:{async handler(t){t&&(this.patientType=new l["a"](this.patientID,this.providerID),await this.patientType.loadPatientType(),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(t){var e,i;const n=await this.patientType.createEncounter();if(!n)return Object(p["e"])("Unable to create encounter");this.patientType.setLocationName(null===t||void 0===t||null===(e=t.location)||void 0===e?void 0:e.label),this.patientType.setPatientType(null===t||void 0===t||null===(i=t.patient_type)||void 0===i?void 0:i.value),await this.patientType.save(),Object(p["d"])("Observations and encounter created!"),this.nextTask()},facilityLocationField(){const t=r["a"].getFacilityLocationField();return t.condition=t=>["Drug Refill","External consultation"].includes(t.patient_type.value),t},getFields(){return[{id:"patient_type",helpText:"Current type: "+this.patientType.getType(),type:o["b"].TT_SELECT,validation:t=>c["a"].required(t)||c["a"].notTheSame(t.value,this.patientType.getType()),options:()=>l["a"].getPatientTypes()},this.facilityLocationField()]}}}),u=i("6b0d"),y=i.n(u);const T=y()(h,[["render",a]]);e["default"]=T}}]);
//# sourceMappingURL=chunk-2d225dd6.a2ab06f1.js.map