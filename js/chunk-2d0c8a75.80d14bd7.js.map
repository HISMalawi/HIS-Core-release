{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/ART/views/encounters/LabActivities.vue"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onOnFinish","onFinish","skipSummary","cancelDestinationPath","cancelDestination","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","fieldContext","watch","ready","handler","this","getFields","methods","nextTask","id","helpText","type","FieldType","TT_LAB_ORDERS","onload","options","async","orders","OrderService","getOrdersIncludingGivenResultStatus","patientID","VLOrders","formatLabs","label","value","other","values","config","printOrder","orderID","PatientPrintoutService","printLabOrderLbl","hiddenFooterBtns","footerBtns","name","size","slot","color","visible","onClick","isEmpty","launchOrderSelection","visibleOnStateChange","state","index","__exports__"],"mappings":"uIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMC,EAA+BC,8BAAkB,qBAEvD,OAAQC,yBAAcC,yBAAaH,EAA8B,CAC/DI,OAAQV,EAAKU,OACbC,WAAYX,EAAKY,SACjBC,aAAa,EACbC,sBAAuBd,EAAKe,mBAC3B,KAAM,EAAG,CAAC,SAAU,aAAc,0B,4ECDxBC,+BAAgB,CAC7BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,wBACdC,KAAM,KAAM,CACVX,OAAQ,GACRY,aAAc,KAEhBC,MAAO,CACLC,MAAO,CACLC,QAAQD,GACFA,IACFE,KAAKhB,OAASgB,KAAKC,gBAK3BC,QAAS,CACPhB,WACIc,KAAKG,YAETF,YACE,MAAO,CACL,CACEG,GAAI,qBACJC,SAAU,aACVC,KAAMC,OAAUC,cAChBC,OAASb,IACPI,KAAKJ,aAAeA,GAEtBc,QAASC,UACP,MAAMC,QAAoBC,OAAaC,oCAAoCd,KAAKe,WAC1EC,EAAWH,OAAaI,WAAWL,GACzC,MAAO,CACL,CACEM,MAAO,aACPC,MAAO,cACPC,MAAO,CACLC,OAAQL,MAKhBM,OAAQ,CACNC,WAAaC,GACJ,IAAIC,OAAuBzB,KAAKe,WAAWW,iBAAiBF,GAErEG,iBAAkB,CAAC,SACnBC,WAAY,CACV,CACEC,KAAM,QACNC,KAAM,QACNC,KAAM,MACNC,MAAO,UACPC,SAAS,EACTC,QAASvB,UACFwB,qBAAQnC,KAAKJ,qBACVI,KAAKJ,aAAawC,wBAG5BC,qBAAuBC,GACE,IAAhBA,EAAMC,e,qBChE/B,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASnE,KAErD","file":"js/chunk-2d0c8a75.80d14bd7.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onOnFinish: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onOnFinish\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { isEmpty } from \"lodash\";\nimport { OrderService } from \"@/services/order_service\";\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    fields: [] as any,\n    fieldContext: {} as any,\n  }),\n  watch: {\n    ready: {\n      handler(ready: boolean) {\n        if (ready) {\n          this.fields = this.getFields() \n        }\n      }\n    }\n  },\n  methods: {\n    onFinish() {\n        this.nextTask()\n    },\n    getFields(): any {\n      return [\n        {\n          id: \"patient_lab_orders\",\n          helpText: \"Lab orders\",\n          type: FieldType.TT_LAB_ORDERS,\n          onload: (fieldContext: any) => {\n            this.fieldContext = fieldContext\n          },\n          options: async () => {\n            const orders: any = await OrderService.getOrdersIncludingGivenResultStatus(this.patientID);\n            const VLOrders = OrderService.formatLabs(orders);\n            return [\n              {\n                label: \"Lab orders\",\n                value: \"order trail\",\n                other: {\n                  values: VLOrders,\n                }\n              }\n            ]\n          },\n          config: {\n            printOrder: (orderID: number) => {\n              return new PatientPrintoutService(this.patientID).printLabOrderLbl(orderID)\n            },\n            hiddenFooterBtns: [\"Clear\"],\n            footerBtns: [\n              {\n                name: \"Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => {\n                  if (!isEmpty(this.fieldContext)) {\n                    await this.fieldContext.launchOrderSelection()\n                  }\n                },\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 0;\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n});\n","import { render } from \"./LabActivities.vue?vue&type=template&id=129272ea&ts=true\"\nimport script from \"./LabActivities.vue?vue&type=script&lang=ts\"\nexport * from \"./LabActivities.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}