{"version":3,"sources":["webpack:///./src/apps/EMC/views/tools/PatientMerging.vue?d904","webpack:///./src/components/DataViews/ArtPatientCard.vue?c573","webpack:///./src/components/DataViews/ArtPatientCard.vue?f051","webpack:///./src/components/DataViews/ArtPatientCard.vue","webpack:///./src/components/DataViews/ArtPatientCard.vue?ad2a","webpack:///./src/apps/EMC/views/tools/PatientMerging.vue?56c2","webpack:///./src/apps/EMC/views/tools/PatientMerging.vue","webpack:///./src/apps/EMC/views/tools/PatientMerging.vue?764a"],"names":["_withId","_withScopeId","_pushScopeId","_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_popScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","class","stateClass","_createVNode","_toDisplayString","patient","npid","arvNum","name","birthdate","gender","homeDistrict","homeVillage","currentDistrict","currentVillage","defineComponent","props","type","Object","required","isActive","Boolean","computed","this","__exports__","_component_ion_button","_resolveComponent","_component_ion_col","_component_ion_card_title","_component_ion_searchbar","_component_ion_card_header","_component_patient_card","_component_ion_card_content","_component_ion_card","_component_ion_row","_component_ion_grid","_component_Layout","default","_withCtx","size","disabled","enableMergeBtn","onClick","merge","_","_Fragment","_renderList","patients","key","category","color","style","placeholder","modelValue","query","$event","onKeyup","_withKeys","searchPatient","results","result","index","onPatient","isChecked","components","Layout","IonGrid","IonRow","IonCol","PatientCard","IonSearchbar","setup","router","useRouter","reactive","every","length","some","parseSearchText","nameOrArvNumber","match","value","GLOBAL_PROP","sitePrefix","buildSearchByNameQuery","tempName","split","filter","entry","test","Patientservice","search","findByOtherID","map","p","i","id","getID","getFullName","docID","getDocID","getBirthdate","getArvNumber","getNationalID","getGender","getHomeDistrict","getHomeVillage","getCurrentDistrict","getCurrentVillage","console","log","forEach","alertConfirmation","primaryPatient","find","mergePatients","primary","secondary","mergedPatient","push","params","patientId","toastDanger"],"mappings":"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","file":"js/chunk-ebe500c2.e7651081.js","sourcesContent":["export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PatientMerging.vue?vue&type=style&index=0&id=5d477e2b&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ArtPatientCard.vue?vue&type=style&index=0&id=154d9c56&scoped=true&lang=css\"","import { toDisplayString as _toDisplayString, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-154d9c56\")\n\n_pushScopeId(\"data-v-154d9c56\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" NPID : \")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Arv# : \")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Name : \")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Birth date : \")\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Gender : \")\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" Home District : \")\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\" Home Village : \")\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\" Current District : \")\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" Current Village : \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(\"div\", {\n    class: [\"his-card clickable\", _ctx.stateClass]\n  }, [\n    _createVNode(\"li\", null, [\n      _createVNode(\"ul\", null, [\n        _hoisted_1,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.npid), 1)\n      ]),\n      _createVNode(\"ul\", null, [\n        _hoisted_2,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.arvNum), 1)\n      ]),\n      _createVNode(\"ul\", null, [\n        _hoisted_3,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.name), 1)\n      ]),\n      _createVNode(\"ul\", null, [\n        _hoisted_4,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.birthdate), 1)\n      ]),\n      _createVNode(\"ul\", null, [\n        _hoisted_5,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.gender), 1)\n      ]),\n      _createVNode(\"ul\", null, [\n        _hoisted_6,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.homeDistrict), 1)\n      ]),\n      _createVNode(\"ul\", null, [\n        _hoisted_7,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.homeVillage), 1)\n      ]),\n      _createVNode(\"ul\", null, [\n        _hoisted_8,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.currentDistrict), 1)\n      ]),\n      _createVNode(\"ul\", null, [\n        _hoisted_9,\n        _createVNode(\"b\", null, _toDisplayString(_ctx.patient.currentVillage), 1)\n      ])\n    ])\n  ], 2))\n})","\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n    props: {\n        patient: {\n            type: Object,\n            required: true\n        },\n        isActive: {\n            type: Boolean\n        }\n    },\n    computed: {\n        stateClass(): any {\n            return {\n                'active-card-color': this.isActive,\n                'inactive-card-color': !this.isActive\n            }\n        }\n    }\n})\n","import { render } from \"./ArtPatientCard.vue?vue&type=template&id=154d9c56&scoped=true&ts=true\"\nimport script from \"./ArtPatientCard.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtPatientCard.vue?vue&type=script&lang=ts\"\n\nimport \"./ArtPatientCard.vue?vue&type=style&index=0&id=154d9c56&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-154d9c56\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, withKeys as _withKeys } from \"vue\"\n\nconst _hoisted_1 = { class: \"ion-margin-start\" }\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Patient Merging \")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Merge Selected Patients \")\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_card_title = _resolveComponent(\"ion-card-title\")\n  const _component_ion_searchbar = _resolveComponent(\"ion-searchbar\")\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")\n  const _component_patient_card = _resolveComponent(\"patient-card\")\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")\n  const _component_ion_card = _resolveComponent(\"ion-card\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_Layout = _resolveComponent(\"Layout\")\n\n  return (_openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_grid, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_row, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_col, {\n                size: \"12\",\n                class: \"padding\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(\"h2\", _hoisted_1, [\n                    _hoisted_2,\n                    _createVNode(_component_ion_button, {\n                      class: \"ion-float-right ion-margin-end\",\n                      disabled: !_ctx.enableMergeBtn,\n                      onClick: _ctx.merge\n                    }, {\n                      default: _withCtx(() => [\n                        _hoisted_3\n                      ]),\n                      _: 1\n                    }, 8, [\"disabled\", \"onClick\"])\n                  ])\n                ]),\n                _: 1\n              }),\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.patients, (patient) => {\n                return (_openBlock(), _createBlock(_component_ion_col, {\n                  size: \"6\",\n                  key: patient.category\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_card, null, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_card_header, { color: \"light\" }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_ion_card_title, { class: \"ion-margin-bottom\" }, {\n                              default: _withCtx(() => [\n                                _createTextVNode(_toDisplayString(patient.category) + \" patients \", 1 /* TEXT */)\n                              ]),\n                              _: 2\n                            }, 1024),\n                            _createVNode(_component_ion_searchbar, {\n                              style: {\"width\":\"100%\",\"height\":\"45px\"},\n                              class: \"box-input ion-no-padding ion-margin-end\",\n                              placeholder: \"Type Name or ARV Number and press enter\",\n                              modelValue: patient.query,\n                              \"onUpdate:modelValue\": $event => (patient.query = $event),\n                              onKeyup: _withKeys($event => (_ctx.searchPatient(patient)), [\"enter\"])\n                            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onKeyup\"])\n                          ]),\n                          _: 2\n                        }, 1024),\n                        _createVNode(_component_ion_card_content, {\n                          color: \"light\",\n                          style: {\"height\":\"70vh\",\"overflow-y\":\"auto\"}\n                        }, {\n                          default: _withCtx(() => [\n                            (_openBlock(true), _createBlock(_Fragment, null, _renderList(patient.results, (result, index) => {\n                              return (_openBlock(), _createBlock(_component_patient_card, {\n                                onClick: $event => (_ctx.onPatient(result, patient.category)),\n                                key: index,\n                                patient: result,\n                                isActive: result.isChecked\n                              }, null, 8, [\"onClick\", \"patient\", \"isActive\"]))\n                            }), 128 /* KEYED_FRAGMENT */))\n                          ]),\n                          _: 2\n                        }, 1024)\n                      ]),\n                      _: 2\n                    }, 1024)\n                  ]),\n                  _: 2\n                }, 1024))\n              }), 128 /* KEYED_FRAGMENT */))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { computed, defineComponent, reactive } from \"vue\";\nimport Layout from \"@/apps/EMC/Components/Layout.vue\";\nimport { IonGrid, IonRow, IonCol, IonSearchbar } from \"@ionic/vue\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\nimport { useRouter } from \"vue-router\";\nimport  PatientCard from \"@/components/DataViews/ArtPatientCard.vue\"\nimport { alertConfirmation, toastDanger } from \"@/utils/Alerts\";\n\ninterface MergePatient {\n  query: string;\n  results: any[];\n  category: \"primary\" | \"secondary\";\n}\n\nexport default defineComponent({\n  components: {\n    Layout,\n    IonGrid,\n    IonRow,\n    IonCol,\n    // IonButton,\n    PatientCard,\n    IonSearchbar,\n  },\n  setup() {\n    const router = useRouter()\n    const patients = reactive<MergePatient[]>([\n      {\n        category: \"primary\",\n        query: \"\",\n        results: [],\n      },\n      {\n        category: \"secondary\",\n        query: \"\",\n        results: [],\n      },\n    ]);\n\n    const enableMergeBtn = computed(() => {\n      return patients.every((patient) => patient.results.length > 0 && patient.results.some((result) => result.isChecked));\n    })\n\n    const parseSearchText = async (nameOrArvNumber: string) => {\n      if (nameOrArvNumber.match(/^(\\w+-ARV-\\w+)$/)) {\n        return { type: \"arv_number\", value: nameOrArvNumber };\n      }\n      if (nameOrArvNumber.match(/^(\\d+)$/)) {\n        const sitePrefix = await GLOBAL_PROP.sitePrefix();\n        return {\n          type: \"arv_number\",\n          value: `${sitePrefix}-ARV-${nameOrArvNumber}`,\n        };\n      }\n      return { type: \"name\", value: nameOrArvNumber };\n    };\n\n    const buildSearchByNameQuery = (name: string) => {\n      const query: Record<string, any> = {};\n      const tempName = name.split(\" \").filter(entry => /\\S/.test(entry));\n\n      if (tempName.length > 0) {\n        query['given_name'] = tempName[0];\n        tempName[1] ? (query['family_name'] = tempName[1]) : null;\n        if (tempName[2]) {\n          query['middle_name'] = tempName[1];\n          query['family_name'] = tempName[2];\n        }\n      }\n\n      return query;\n    }\n\n    const searchPatient = async (patient: MergePatient) => {\n      if (patient.query) {\n        try {\n          const { type, value } = await parseSearchText(patient.query);\n          const results: any[] = (type === \"name\")\n            ? await Patientservice.search(buildSearchByNameQuery(value))\n            : (type === 'arv_number')\n            ? await Patientservice.findByOtherID(4, value)\n            : []\n          patient.results = results.map((p: any, i: number) => {\n            const patient = new Patientservice(p)\n            return {\n              index: i,\n              id: patient.getID(),\n              name: patient.getFullName(),\n              docID: patient.getDocID(),\n              birthdate: patient.getBirthdate(),\n              arvNum: patient.getArvNumber(),\n              npid: patient.getNationalID(),\n              gender: patient.getGender(),\n              homeDistrict: patient.getHomeDistrict(),\n              homeVillage: patient.getHomeVillage(),\n              currentDistrict: patient.getCurrentDistrict(),\n              currentVillage: patient.getCurrentVillage(),\n              isChecked: false\n            }\n          })\n        } catch (error) {\n          console.log(`${error}`)\n        } \n      }\n    };\n\n    const onPatient = (result: any, category: \"primary\" | \"secondary\") => {\n      if(category === 'primary') {\n        patients[0].results.forEach(p => {\n          if(p.id === result.id) {\n            p.isChecked = !p.isChecked\n          } else {\n            p.isChecked = false\n          }\n        })\n        if(result.isChecked){\n          // uncheck the patient in the secondary list\n          patients[1].results.forEach(p => {\n            if(p.id === result.id) {\n              p.isChecked = false\n            }\n          })\n        }\n      } else {\n        if(result.isChecked) return result.isChecked = false\n        // check only if the patient is not already checked in the primary list\n        result.isChecked = !patients[0].results.some(p => p.isChecked && p.id === result.id)\n      }\n    }\n\n    const merge = async () => {\n      if(!(await alertConfirmation(\"Are you sure you want to merge these patients?\"))) return\n      try {\n        const primaryPatient = patients[0].results.find(p => p.isChecked)\n        const mergedPatient = await Patientservice.mergePatients({\n          primary: {\n            'patient_id': primaryPatient.id,\n            'doc_id': primaryPatient.docID,\n          },\n          secondary: patients[1].results.filter(p => p.isChecked).map(p => ({\n            'patient_id': p.id,\n            'doc_id': p.docID,\n          }))\n        })\n        router.push({ name: \"EMC Mastercard\", params: { patientId: mergedPatient['patient_id'] } })\n      } catch (e) {\n        toastDanger(`${e}`)\n      }\n    }\n\n    return {\n      patients,\n      enableMergeBtn,\n      searchPatient,\n      onPatient,\n      merge,\n    };\n  },\n});\n","import { render } from \"./PatientMerging.vue?vue&type=template&id=5d477e2b&ts=true\"\nimport script from \"./PatientMerging.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientMerging.vue?vue&type=script&lang=ts\"\n\nimport \"./PatientMerging.vue?vue&type=style&index=0&id=5d477e2b&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}