{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/pepfar/SCARVReport.vue?087b","webpack:///./src/apps/ART/views/reports/pepfar/SCARVReport.vue","webpack:///./src/apps/ART/views/reports/pepfar/SCARVReport.vue?8932"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_openBlock","_createBlock","title","period","rows","fields","columns","config","showIndex","reportReady","isLoading","reportPrefix","onReportConfiguration","onPeriod","defineComponent","mixins","ReportMixin","components","ReportTemplate","data","table","thTxt","created","this","getDateDurationFields","methods","drilldown","name","number","patients","thDate","sortedPatients","sort","a","b","getArvInt","asyncRows","map","p","td","tdDate","length","tdLink","drilldownAsyncRows","_","report","RegimenReportService","setReportType","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","setRows","getSCReport","forEach","element","push","units","dispensations","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,EAA6BC,8BAAkB,mBAErD,OAAQC,yBAAcC,yBAAaH,EAA4B,CAC7DI,MAAOV,EAAKU,MACZC,OAAQX,EAAKW,OACbC,KAAMZ,EAAKY,KACXC,OAAQb,EAAKa,OACbC,QAASd,EAAKc,QACdC,OAAQ,CACAC,WAAW,GAEnBC,YAAajB,EAAKiB,YAClBC,UAAWlB,EAAKkB,UAChBC,aAAc,SACdC,sBAAuBpB,EAAKqB,UAC3B,KAAM,EAAG,CAAC,QAAS,SAAU,OAAQ,SAAU,UAAW,cAAe,YAAa,0B,8DCX5EC,+BAAgB,CAC3BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,uBACdC,KAAM,KAAM,CACRjB,MAAO,6BACPE,KAAM,GACNK,aAAa,EACbC,WAAW,EACXJ,QAAS,CACL,CACIc,OAAMC,MAAM,qBACZD,OAAMC,MAAM,sCAIxBC,UACIC,KAAKlB,OAASkB,KAAKC,yBAEvBC,QAAS,CACLC,UAAUC,EAAcC,EAAgBC,GACpC,MAAMvB,EAAU,CACZ,CACIc,OAAMC,MAAM,SACZD,OAAMC,MAAM,QACZD,OAAMC,MAAM,YACZD,OAAMU,OAAO,UAGfC,EAAiBF,EAASG,KAAK,CAACC,EAAQC,IACnCX,KAAKY,UAAUF,EAAE,IAAMV,KAAKY,UAAUD,EAAE,IAAM,GAAK,GAExDE,EAAY,IAAML,EAAeM,IAClCC,GAAY,CACVlB,OAAMmB,GAAGD,EAAE,IACXlB,OAAMmB,GAAGD,EAAE,IACXlB,OAAMmB,GAAGD,EAAE,IACXlB,OAAMoB,OAAOF,EAAE,MAGtB,OAAIT,EAASY,QAAU,EAAUrB,OAAMmB,GAAG,GAEnCnB,OAAMsB,OAAOd,EAAQ,IAAML,KAAKoB,mBAAmBhB,EAAMrB,EAAS8B,KAE7E,eAAeQ,EAAQrC,GACnBgB,KAAKd,aAAc,EACnBc,KAAKb,WAAY,EACjBa,KAAKnB,KAAO,GACZmB,KAAKsB,OAAS,IAAIC,OAClBvB,KAAKsB,OAAOE,cAAc,UAC1BxB,KAAKsB,OAAOG,aAAazC,EAAO0C,YAChC1B,KAAKsB,OAAOK,WAAW3C,EAAO4C,UAC9B5B,KAAKpB,OAASoB,KAAKsB,OAAOO,wBAC1B7B,KAAK8B,cAAe9B,KAAKsB,OAAOS,eAChC/B,KAAKb,WAAY,GAErB2C,QAAQlC,GACJA,EAAKoC,QAASC,IACTjC,KAAKnB,KAAKqD,KAAK,CACZrC,OAAMmB,GAAGiB,EAAQ7B,MACjBJ,KAAKG,UAAU8B,EAAQ7B,KAAM6B,EAAQE,MAAOF,EAAQG,uB,qBC7DxE,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASrE,KAErD","file":"js/chunk-2d0aedb1.dc652527.js","sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n\n  return (_openBlock(), _createBlock(_component_report_template, {\n    title: _ctx.title,\n    period: _ctx.period,\n    rows: _ctx.rows,\n    fields: _ctx.fields,\n    columns: _ctx.columns,\n    config: {\n            showIndex: true\n        },\n    reportReady: _ctx.reportReady,\n    isLoading: _ctx.isLoading,\n    reportPrefix: \"PEPFAR\",\n    onReportConfiguration: _ctx.onPeriod\n  }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"reportReady\", \"isLoading\", \"onReportConfiguration\"]))\n}","\nimport { defineComponent } from 'vue'\nimport { RegimenReportService } from \"@/apps/ART/services/reports/regimen_report_service\"\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate },\n    data: () => ({\n        title: 'SC ARV dispensation report',\n        rows: [] as Array<any>,\n        reportReady: false as boolean,\n        isLoading: false as boolean,\n        columns: [\n            [\n                table.thTxt('ARV drug category'), \n                table.thTxt('# of bottles (units) dispensed')\n            ]\n        ]\n    }),\n    created() {\n        this.fields = this.getDateDurationFields()\n    },\n    methods: {\n        drilldown(name: string, number: string, patients: Array<any>) {\n            const columns = [\n                [\n                    table.thTxt('ARV #'),\n                    table.thTxt('Drug'),\n                    table.thTxt('Quantity'),\n                    table.thDate('Date')\n                ]\n            ]\n            const sortedPatients = patients.sort((a: any, b: any) => {\n                return this.getArvInt(a[3]) > this.getArvInt(b[3]) ? 1 : -1\n            })\n            const asyncRows = () => sortedPatients.map(\n                (p: any) => ([\n                   table.td(p[3]),\n                   table.td(p[0]),\n                   table.td(p[1]),\n                   table.tdDate(p[2])\n               ])\n            )\n            if (patients.length <= 0) return table.td(0)\n\n            return table.tdLink(number, () => this.drilldownAsyncRows(name, columns, asyncRows))\n        },\n        async onPeriod(_: any, config: any) {\n            this.reportReady = true\n            this.isLoading = true\n            this.rows = []\n            this.report = new RegimenReportService()\n            this.report.setReportType('pepfar')\n            this.report.setStartDate(config.start_date)\n            this.report.setEndDate(config.end_date)\n            this.period = this.report.getDateIntervalPeriod()\n            this.setRows((await this.report.getSCReport()))\n            this.isLoading = false\n        },\n        setRows(data: any) {\n            data.forEach((element: any) => {\n                 this.rows.push([\n                    table.td(element.name),\n                    this.drilldown(element.name, element.units, element.dispensations),\n                ])\n            });\n        }\n    }\n})\n","import { render } from \"./SCARVReport.vue?vue&type=template&id=6d3b3a3d&ts=true\"\nimport script from \"./SCARVReport.vue?vue&type=script&lang=ts\"\nexport * from \"./SCARVReport.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}