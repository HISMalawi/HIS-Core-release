(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5e75af70"],{"0944":function(t,e,a){"use strict";a("9137")},"1afa":function(t,e,a){},"1b47":function(t,e,a){"use strict";var n=a("7a23");const i=Object(n["withScopeId"])("data-v-23709ba4"),o=i((function(t,e,a,o,s,r){const c=Object(n["resolveComponent"])("action-header"),l=Object(n["resolveComponent"])("ion-radio"),d=Object(n["resolveComponent"])("ion-label"),p=Object(n["resolveComponent"])("ion-item"),u=Object(n["resolveComponent"])("ion-radio-group"),h=Object(n["resolveComponent"])("ion-list"),m=Object(n["resolveComponent"])("ion-content"),b=Object(n["resolveComponent"])("action-footer");return Object(n["openBlock"])(),Object(n["createBlock"])(n["Fragment"],null,[Object(n["createVNode"])(c,{title:t.title,subtitle:t.subtitle,color:t.color},null,8,["title","subtitle","color"]),Object(n["createVNode"])(m,{class:"ion-text-center"},{default:i(()=>[Object(n["createVNode"])(h,null,{default:i(()=>[Object(n["createVNode"])(u,{value:t.activeLabel},{default:i(()=>[(Object(n["openBlock"])(!0),Object(n["createBlock"])(n["Fragment"],null,Object(n["renderList"])(t.list,(e,a)=>(Object(n["openBlock"])(),Object(n["createBlock"])(p,{class:"his-md-text",onClick:a=>t.onclick(e),key:a},{default:i(()=>[Object(n["createVNode"])(l,{slot:"start",value:e},null,8,["value"]),Object(n["createVNode"])(d,null,{default:i(()=>[Object(n["createTextVNode"])(Object(n["toDisplayString"])(e),1)]),_:2},1024)]),_:2},1032,["onClick"]))),128))]),_:1},8,["value"])]),_:1})]),_:1}),Object(n["createVNode"])(b,{buttons:t.buttons},null,8,["buttons"])],64)}));var s=a("8efc"),r=a("8a30"),c=a("b5e4"),l=Object(n["defineComponent"])({components:{IonList:r["y"],IonItem:r["w"],IonContent:r["n"],IonRadio:r["E"],IonRadioGroup:r["F"]},mixins:[s["a"]],data:()=>({activeLabel:""}),props:{list:{type:Object,required:!0}},methods:{onclick(t){this.activeLabel=t}},computed:{buttons(){return this.actionButtons.map(t=>({...t,onClick:async()=>t.role&&t.role.match(/default/i)?r["X"].dismiss({action:t.name}):t.role&&t.role.match(/action/i)&&!this.activeLabel?Object(c["e"])("Please select one of the options"):void await r["X"].dismiss({selection:this.activeLabel,action:t.name})}))}}}),d=(a("bdcb"),a("6b0d")),p=a.n(d);const u=p()(l,[["render",o],["__scopeId","data-v-23709ba4"]]);e["a"]=u},3171:function(t,e,a){"use strict";a.r(e);var n=a("7a23");const i=Object(n["withScopeId"])("data-v-099c4f96");Object(n["pushScopeId"])("data-v-099c4f96");const o={class:"tool-bar-medium-card"},s={class:"his-sm-text"},r=Object(n["createTextVNode"])("Patient Name: "),c=Object(n["createTextVNode"])(),l=Object(n["createVNode"])("p",null,null,-1),d={class:"his-sm-text"},p=Object(n["createTextVNode"])("Birthdate: "),u=Object(n["createTextVNode"])(),h=Object(n["createVNode"])("p",null,null,-1),m={class:"his-sm-text"},b=Object(n["createTextVNode"])("Gender: "),g={class:"tool-bar-medium-card"},N={class:"his-sm-text"},f=Object(n["createTextVNode"])("Ancestry district: "),O=Object(n["createVNode"])("p",null,null,-1),D={class:"his-sm-text"},y=Object(n["createTextVNode"])("Ancestry TA: "),I=Object(n["createVNode"])("p",null,null,-1),E={class:"his-sm-text"},j=Object(n["createTextVNode"])("Ancestry village: "),w=Object(n["createVNode"])("p",null,null,-1),_={class:"tool-bar-medium-card"},v={class:"his-sm-text"},A=Object(n["createTextVNode"])("Current District:"),P=Object(n["createVNode"])("p",null,null,-1),C={class:"his-sm-text"},T=Object(n["createTextVNode"])("Current TA: "),V=Object(n["createVNode"])("p",null,null,-1),R={class:"his-sm-text"},L=Object(n["createTextVNode"])("Current Village: "),F=Object(n["createVNode"])("p",null,null,-1),S=Object(n["createTextVNode"])(" Cancel "),k=Object(n["createTextVNode"])("Void Client"),B=Object(n["createTextVNode"])(" New Pregnancy "),x=Object(n["createTextVNode"])(" Continue ");Object(n["popScopeId"])();const M=i((function(t,e,a,M,H,U){const G=Object(n["resolveComponent"])("ion-col"),X=Object(n["resolveComponent"])("ion-row"),Y=Object(n["resolveComponent"])("ion-toolbar"),$=Object(n["resolveComponent"])("ion-header"),W=Object(n["resolveComponent"])("confirmation-card"),q=Object(n["resolveComponent"])("ion-content"),z=Object(n["resolveComponent"])("ion-button"),K=Object(n["resolveComponent"])("ion-footer"),J=Object(n["resolveComponent"])("ion-page");return Object(n["openBlock"])(),Object(n["createBlock"])(J,null,{default:i(()=>[Object(n["createVNode"])($,{translucent:!0},{default:i(()=>[Object(n["createVNode"])(Y,null,{default:i(()=>[Object(n["createVNode"])(X,null,{default:i(()=>[Object(n["createVNode"])(G,null,{default:i(()=>[Object(n["createVNode"])("div",o,[Object(n["createVNode"])("span",s,[r,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.demographics.patientName),1)]),c,l,Object(n["createVNode"])("span",d,[p,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.birthdate),1)]),u,h,Object(n["createVNode"])("span",m,[b,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.demographics.gender),1)])])]),_:1}),Object(n["createVNode"])(G,null,{default:i(()=>[Object(n["createVNode"])("div",g,[Object(n["createVNode"])("span",N,[f,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.demographics.ancestryDistrict),1)]),O,Object(n["createVNode"])("span",D,[y,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.demographics.ancestryTA),1)]),I,Object(n["createVNode"])("span",E,[j,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.demographics.ancestryVillage),1)]),w])]),_:1}),Object(n["createVNode"])(G,null,{default:i(()=>[Object(n["createVNode"])("div",_,[Object(n["createVNode"])("span",v,[A,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.demographics.currentDistrict),1),P]),Object(n["createVNode"])("span",C,[T,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.demographics.currentTA),1),V]),Object(n["createVNode"])("span",R,[L,Object(n["createVNode"])("b",null,Object(n["toDisplayString"])(t.demographics.currentVillage),1),F])])]),_:1})]),_:1})]),_:1})]),_:1}),Object(n["createVNode"])(q,null,{default:i(()=>[Object(n["createVNode"])(X,null,{default:i(()=>[(Object(n["openBlock"])(!0),Object(n["createBlock"])(n["Fragment"],null,Object(n["renderList"])(t.cards,(t,e)=>(Object(n["openBlock"])(),Object(n["createBlock"])(G,{"size-md":"4","size-sm":"12",key:e},{default:i(()=>[Object(n["createVNode"])(W,{key:"card-"+e,title:t.label,items:t.values,isLoading:t.isLoading},null,8,["title","items","isLoading"])]),_:2},1024))),128))]),_:1})]),_:1}),Object(n["createVNode"])(K,null,{default:i(()=>[Object(n["createVNode"])(Y,{color:"dark"},{default:i(()=>[Object(n["createVNode"])(z,{color:"danger",size:"large","router-link":"/"},{default:i(()=>[S]),_:1}),Object(n["createVNode"])(z,{disabled:!(t.facts.patientFound&&t.isAdmin),color:"danger left",size:"large",onClick:t.onVoid},{default:i(()=>[k]),_:1},8,["disabled","onClick"]),t.facts.anc.canInitiateNewPregnancy?(Object(n["openBlock"])(),Object(n["createBlock"])(z,{key:0,slot:"end",size:"large",onClick:t.onInitiateNewAncPregnancy},{default:i(()=>[B]),_:1},8,["onClick"])):Object(n["createCommentVNode"])("",!0),Object(n["createVNode"])(z,{disabled:!t.facts.patientFound,slot:"end",color:"success",size:"large",onClick:t.nextTask},{default:i(()=>[x]),_:1},8,["disabled","onClick"])]),_:1})]),_:1})]),_:1})}));var H,U,G=a("2ef0"),X=a("9283"),Y=a("3e53"),$=a("0fa1"),W=a("c1e4"),q=a("c21d"),z=a("23e6"),K=a("74f4"),J=a("b5e4"),Q=a("8a30"),Z=(a("caad"),a("7f35")),tt=a("0011");(function(t){t["ON_CONTINUE"]="oncontinue",t["ONLOAD"]="onload"})(H||(H={})),function(t){t["FORCE_EXIT"]="forceExit",t["GO_HOME"]="gotoHome",t["GO_BACK"]="goBack",t["CONTINUE"]="continue",t["ENROLL"]="enroll",t["EXIT"]="exit",t["ACTIVATE_FN"]="activateFn",t["ASSIGN_NPID"]="assignNpid",t["UPDATE_DMG"]="updateDemographics",t["PRINT_NPID"]="printNPID",t["CREATE_NPID_WITH_REMOTE_DIFF"]="createNpiDWithRemote",t["REFRESH_DDE_DEMOGRAPHICS"]="refreshDemographicsDDE",t["UPDATE_LOCAL_DDE_DIFFS"]="updateLocalDiffs",t["RESOLVE_DUPLICATE_NPIDS"]="resolveDuplicateNpids",t["ADD_AS_DRUG_REFILL"]="addAsDrugRefill",t["ADD_AS_NEW_PATIENT"]="addAsNewPatient",t["ADD_AS_EXTERNAL_CONSULTATION"]="addAsExternalConsultation",t["INITIATE_ANC_PREGNANCY"]="initiateNewAncPregnancy",t["VIEW_MERGE_AUDIT_FOR_NPID"]="viewMergeAuditForNpid",t["SEARCH_BY_NAME"]="searchByName"}(U||(U={}));const et={"Do not proceed if patient is not found in the system":{priority:1,targetEvent:H.ONLOAD,actions:{alert:async()=>{const t=await Object(Z["a"])(" 0 Search results","Patient has not been found","Choose how to proceed",[{name:"Close",slot:"start",color:"primary"},{name:"Search by name",slot:"end",color:"success"}],"his-danger-color");return"Search by name"===t?U.SEARCH_BY_NAME:U.GO_HOME}},conditions:{globalProperties({ddeEnabled:t}){return!1===t},patientFound(t){return!1===t}}},"[DDE] Show invalid attributes for a patient whose remote":{priority:2,targetEvent:H.ONLOAD,actions:{alert:async t=>(await Object(Z["d"])("DDE Entity Error","Remote patient has invalid attributes",["Attribute","Errors"],t.demographics.invalidDemographics,[{name:"Close",slot:"start",color:"danger"}],"his-danger-color"),U.GO_BACK)},conditions:{demographics({hasInvalidDemographics:t}){return!0===t}}},"[DDE] Do not proceed if NPID is not found and Provide history of voided NPIDS":{priority:2,targetEvent:H.ONLOAD,actions:{alert:async t=>{const e=await Object(Z["d"])("Voided patients with ID "+t.scannedNpid,"NPID was not found. Please review available patient with similar ID",t.dde.voidedNpids.cols,t.dde.voidedNpids.rows,[{name:"Close",slot:"start",color:"primary"},{name:"Merge history",slot:"end",color:"primary"},{name:"Search by name",slot:"end",color:"success"}],"his-danger-color");return"Merge history"===e?U.VIEW_MERGE_AUDIT_FOR_NPID:"Search by name"===e?U.SEARCH_BY_NAME:U.GO_HOME}},conditions:{globalProperties({ddeEnabled:t}){return!0===t},patientFound(t){return!1===t}}},"[DDE] Notify the user to proceed with Remote NPID if local NPID does not match remote":{priority:1,targetEvent:H.ONLOAD,actions:{alert:async({dde:t})=>(await Object(Z["a"])("Missing Local NPID",`Local NPID of "${t.localNpidDiff}" does not match remote "${t.remoteNpidDiff}"`,"Proceed to Fix issue",[{name:"Resolve issue",slot:"start",color:"danger"}],"his-danger-color"),U.CREATE_NPID_WITH_REMOTE_DIFF)},conditions:{dde({localNpidDiff:t,remoteNpidDiff:e}){return t!=e},globalProperties({ddeEnabled:t}){return!0===t}}},"Warn if patient is missing National ID and assign them one":{priority:2,targetEvent:H.ONLOAD,actions:{alert:async()=>(await Object(Z["a"])("Missing National ID","Patient was found BUT has no National ID","The system is going to assign the patient with a new ID",[{name:"OK",slot:"start",color:"primary"}],"his-danger-color"),U.ASSIGN_NPID)},conditions:{currentNpid:t=>Object(tt["c"])(t)}},"Detect NPID over 5 duplicates and prompt the user to resolve them":{priority:1,targetEvent:H.ONLOAD,actions:{alert:async({scannedNpid:t})=>{const e=await Object(Z["a"])("More than 5 duplicates found",`There are more than 5 duplicates for this NPID (${t}). Please search by name and gender`,"Choose how to proceed",[{name:"Close",slot:"start",color:"danger"},{name:"Search by name",slot:"start",color:"primary"}],"his-danger-color");return"Search by name"===e?U.SEARCH_BY_NAME:U.GO_HOME}},conditions:{npidHasOverFiveDuplicates(t){return t}}},"Detect NPID duplicates and prompt the user to resolve them":{priority:1,targetEvent:H.ONLOAD,actions:{alert:async({scannedNpid:t})=>(await Object(Z["a"])("DUPLICATE NPID",`NPID ${t} is currently assigned to multiple patients`,"Proceed to resolve the issue",[{name:"Resolve Duplicate NPIDs",slot:"start",color:"danger"}],"his-danger-color"),U.RESOLVE_DUPLICATE_NPIDS)},conditions:{npidHasDuplicates(t){return t}}},"Warn before proceeding if patient is deceased based on current Patient state":{priority:3,targetEvent:H.ON_CONTINUE,actions:{alert:async()=>{const t=await Object(Z["a"])("Deceased Patient","Patient outcome is Died!","Do you want to continue?",[{name:"Yes",slot:"start",color:"danger"},{name:"No",slot:"end",color:"success"}],"his-warning-color");return"Yes"===t?U.CONTINUE:U.FORCE_EXIT}},conditions:{currentOutcome:t=>"Patient died"===t}},"Warn before proceeding if patient stopped treatment based on current Patient state":{priority:3,targetEvent:H.ON_CONTINUE,actions:{alert:async()=>{const t=await Object(Z["a"])("Stopped Treatment","Patient outcome is Stopped Treatment ","Do you want to continue?",[{name:"Yes",slot:"start",color:"danger"},{name:"No",slot:"end",color:"success"}],"his-warning-color");return"Yes"===t?U.CONTINUE:U.FORCE_EXIT}},conditions:{currentOutcome:t=>"Treatment stopped"===t}},"[ART patient visit purpose] Select purpose of visit if patient is Transferred out or Drug refill":{priority:3,targetEvent:H.ON_CONTINUE,actions:{alert:async({patientType:t,currentOutcome:e})=>{let a=[];"External consultation"!==t&&"Patient transferred out"!==e||(a=[{name:"Drug refill",slot:"start",color:"primary"},{name:"New Patient",slot:"end",color:"primary"}]),"Drug Refill"===t&&(a=[{name:"External Consultation",slot:"start",color:"primary"},{name:"New Patient",slot:"end",color:"primary"}]),"New patient"===t&&(a=[{name:"External Consultation",slot:"start",color:"primary"},{name:"Drug refill",slot:"start",color:"primary"}]);const n=await Object(Z["a"])("Purpose of visit",`Patient type: ${t} | State: ${e}`,"Please select purspose of the visit",[...a,{name:"Continue",slot:"end",color:"success"}]);switch(n){case"Drug refill":return U.ADD_AS_DRUG_REFILL;case"External Consultation":return U.ADD_AS_EXTERNAL_CONSULTATION;case"New Patient":return U.ADD_AS_NEW_PATIENT;default:return U.CONTINUE}}},conditions:{programName:t=>"ART"===t,patientType:(t,{currentOutcome:e})=>["Drug Refill","External consultation"].includes(t)||"Patient transferred out"===e}},"Prompt patient enrollment in current programme if not enrolled":{priority:4,targetEvent:H.ONLOAD,actions:{alert:async()=>{const t=await Object(Z["a"])("Programme Enrollment","Patient is not enrolled in current programme, do you want to enroll?","",[{name:"Yes",slot:"start",color:"success"},{name:"No",slot:"end",color:"danger"}]);return"Yes"===t?U.ENROLL:U.EXIT}},conditions:{enrolledInProgram:t=>!1===t}},"(ART Filing numbers) Prompt dormant filing number reactivation if patient has a dormant filing number":{priority:3,targetEvent:H.ONLOAD,actions:{alert:async()=>{const t=await Object(Z["a"])("Filing Numbers","Activate dormant #?","",[{name:"Yes",slot:"start",color:"success"},{name:"No",slot:"end",color:"danger"}]);return"Yes"===t?U.ACTIVATE_FN:U.EXIT}},conditions:{programName:t=>"ART"===t,identifiers:t=>t.includes("Archived filing number"),currentOutcome:t=>!["Treatment stopped","Patient transferred out","Patient died"].includes(t),globalProperties({useFilingNumbers:t}){return t}}},"[DDE OFF] Prompt the user to update patient demographics when data is incomplete":{priority:2,targetEvent:H.ONLOAD,actions:{alert:async()=>{const t=await Object(Z["a"])("Demographics","Patient data is incomplete","Do you want to review and update now?",[{name:"Yes",slot:"start",color:"success"},{name:"No",slot:"end",color:"danger"}],"his-danger-color");return"Yes"===t?U.UPDATE_DMG:U.EXIT}},conditions:{globalProperties({ddeEnabled:t}){return!1===t},demographics:({patientIsComplete:t})=>!1===t,patientFound:t=>!0===t}},"[DDE] Alert When remote Patient demographics dont match Local Demographics ":{priority:3,targetEvent:H.ONLOAD,actions:{alert:async({dde:t})=>{const e=await Object(Z["d"])("Demographics Mismatch","Local Demographics do not match Remote Demographics",["Attributes","Local","Remote"],t.diffRows,[{name:"Use Local",slot:"start",color:"primary"},{name:"Use Remote",slot:"start",color:"primary"}],"his-danger-color",t.diffRowColors);return"Use Local"===e?U.UPDATE_LOCAL_DDE_DIFFS:U.REFRESH_DDE_DEMOGRAPHICS}},conditions:{dde({hasDemographicConflict:t}){return t}}},"[DDE] Alert to print newer NPID when the scanned NPID doesnt match active NPID":{priority:2,targetEvent:H.ONLOAD,actions:{alert:async({currentNpid:t})=>(await Object(Z["a"])("[DDE] NATIONAL ID","Patient has a newer National Identifier "+t,"Print and proceed",[{name:"Print",slot:"start",color:"primary"}]),U.PRINT_NPID)},conditions:{globalProperties({ddeEnabled:t}){return!0===t},scannedNpid(t,{currentNpid:e}){return!t.match(new RegExp(e,"i"))}}},"assign newer NPID when the current one is invalid":{priority:3,targetEvent:H.ONLOAD,actions:{alert:async({currentNpid:t})=>(await Object(Z["a"])("NATIONAL ID",`Current NPID ${t} is invalid`,"Reasign and Print",[{name:"Reassign",slot:"start",color:"primary"}]),U.ASSIGN_NPID)},conditions:{demographics:({patientIsComplete:t})=>!0===t,patientFound:t=>!0===t,hasInvalidNpid(t){return t}}},"[DDE ON] Warn program managers when Patient has incomplete demographics. Dont force them to update though":{priority:2,targetEvent:H.ONLOAD,actions:{alert:async()=>{const t=await Object(Z["a"])("Demographics","Patient data is incomplete data","Do you want to review and update now?",[{name:"Yes",slot:"start",color:"success"},{name:"No",slot:"end",color:"danger"}],"his-danger-color");return"Yes"===t?U.UPDATE_DMG:U.CONTINUE}},conditions:{globalProperties({ddeEnabled:t}){return!0===t},demographics:({patientIsComplete:t})=>!1===t,patientFound:t=>!0===t,userRoles(t){return!0===t.includes("Program Manager")}}},"[DDE ON] Force Users to update Incomplete Patient demographics":{priority:2,targetEvent:H.ONLOAD,actions:{alert:async()=>{const t=await Object(Z["a"])("Patient Demographics","Demographic data is incomplete","Continue to update",[{name:"Update",slot:"start",color:"success"},{name:"Cancel",slot:"start",color:"danger"}],"his-warning-color");return"Cancel"===t?U.GO_HOME:U.UPDATE_DMG}},conditions:{globalProperties({ddeEnabled:t}){return!0===t},demographics:({patientIsComplete:t})=>!1===t,userRoles:t=>!1===t.includes("Program Manager")}},"Warn the user when patient has high viral load":{priority:6,targetEvent:H.ONLOAD,actions:{alert:async()=>(await Object(Z["a"])("High Viral Load","Patient has a high viral load, please take immediate action!","",[{name:"OK",slot:"end",color:"danger"}],"his-danger-color"),U.CONTINUE)},conditions:{hasHighViralLoad:t=>!0===t}},"[ANC] Warn last LMP is more than 8 months ago and ask to initiate new pregnancy":{priority:10,targetEvent:H.ON_CONTINUE,actions:{alert:async({anc:t})=>{const e=await Object(Z["a"])("Pregancy overdue",`Last menstrual period was ${t.lmpMonths} months ago!`,"Would you like to initiate new pregnancy?",[{name:"Yes",slot:"end",color:"success"},{name:"No",slot:"end",color:"danger"}],"his-danger-color");return"Yes"===e?U.INITIATE_ANC_PREGNANCY:U.CONTINUE}},conditions:{programName:t=>"ANC"===t,anc:t=>!0===t.currentPregnancyIsOverdue}},"[ANC] Exit if client is NOT ELIGIBLE for ANC":{priority:1,targetEvent:H.ONLOAD,actions:{alert:async()=>{const t=await Object(Z["a"])("Client not eligible for ANC","This program is for women eligible for ANC only","If this is a mistake, please update client Demographics or Exit",[{name:"EXIT",slot:"end",color:"success"},{name:"EDIT DEMOGRAPHICS",slot:"end",color:"danger"}],"his-danger-color");return"EXIT"===t?U.GO_HOME:U.UPDATE_DMG}},conditions:{demographics:({gender:t})=>{const e=t.toLowerCase();return"m"===e||"male"===e},programName:t=>"ANC"===t}}};var at=a("4db7"),nt=a("fa73"),it=a("1c74"),ot=a("9b7c"),st=a("8df6"),rt=a("7957"),ct=a("8734"),lt=a("cc6f"),dt=a("ad60"),pt=a("5a0c"),ut=a.n(pt);class ht extends lt["a"]{constructor(t,e){super(t,111,e)}async getLmpInMonths(){const t=await dt["a"].getProgramInformation(this.patientID);if(t.date_of_lnmp){const e=ut()(t.date_of_lnmp),a=ut()(this.date);return a.diff(e,"months")}return-1}async pregnancyIsOverdue(){return await this.getLmpInMonths()>9}async canInitiateNewPregnancy(){return await this.getLmpInMonths()>=7}async createNewPregnancyStatus(){return await this.createEncounter(),this.saveValueCodedObs("Pregnancy status","New")}}var mt=a("76df"),bt=a("8e8b"),gt=Object(n["defineComponent"])({name:"Patient Confirmation",components:{IonContent:Q["n"],IonHeader:Q["q"],IonFooter:Q["o"],IonPage:Q["D"],IonToolbar:Q["Q"],IonRow:Q["H"],IonCol:Q["m"],IonButton:Q["d"],ConfirmationCard:Object(n["defineAsyncComponent"])(()=>a.e("chunk-a82438bc").then(a.bind(null,"8ee9")))},data:()=>({app:{},program:{},patient:{},localPatient:{},ddeInstance:{},useDDE:!1,programInfo:{},isReady:!1,cards:[],facts:{hasHighViralLoad:!1,patientFound:!1,npidHasDuplicates:!1,npidHasOverFiveDuplicates:!1,userRoles:[],scannedNpid:"",currentNpid:"",hasInvalidNpid:!1,enrolledInProgram:!1,programName:"N/A",currentOutcome:"",programs:[],identifiers:[],patientType:"N/A",anc:{lmpMonths:-1,canInitiateNewPregnancy:!1,currentPregnancyIsOverdue:!1},dde:{localNpidDiff:"",remoteNpidDiff:"",voidedNpids:{cols:[],rows:[]},hasDemographicConflict:!1,localDiffs:{},diffRows:[],diffRowColors:[]},demographics:{patientIsComplete:!1,hasInvalidDemographics:!1,invalidDemographics:[],givenName:"",familyName:"",patientName:"",landmark:"",phoneNumber:"",currentDistrict:"",currentTA:"",currentVillage:"",ancestryDistrict:"",ancestryTA:"",ancestryVillage:"",gender:"",birthdate:""},globalProperties:{useFilingNumbers:!1,ddeEnabled:!1}}}),created(){this.initCards(),this.app=Y["a"].getActiveApp()||{}},mounted(){this.app&&(this.updateCards(),this.ddeInstance=new nt["a"],this.setGlobalPropertyFacts().then(()=>{const t=this.$route.query;Object(G["isEmpty"])(t)||!t.person_id&&!t.patient_barcode||this.findAndSetPatient(t.person_id,t.patient_barcode)}))},computed:{demographics(){return this.facts.demographics},birthdate(){return X["b"].toStandardHisDisplayFormat(this.facts.demographics.birthdate)},isAdmin(){return W["a"].isAdmin()}},methods:{initCards(){for(let t=0;t<6;t++)this.cards[t]={label:"-",isLoading:!0,values:[]}},async updateCards(){if("function"===typeof this.app.confirmationSummary){const t=this.app.confirmationSummary(this.patient,this.program,this.facts),e=Object.keys(t);for(let a=0;a<this.cards.length;a++){const n=e[a]?t[e[a]]():[];if(this.cards[a]={label:e[a]||"-",isLoading:!1,values:n},"object"===typeof n&&n.then)this.cards[a].isLoading=!0,Object(G["isEmpty"])(this.patient)||n.then(t=>{this.cards[a].isLoading=!1,this.cards[a].values=t}).catch(t=>{this.cards[a].isLoading=!1,console.error(""+t)});else for(let t=0;t<n.length;++t){const e=n[t];this.cards[a].values[t]=e,Object(G["isEmpty"])(this.patient)||("function"===typeof e.init&&await e.init(),"function"===typeof e.asyncValue?e.asyncValue().then(e=>{this.cards[a].values[t].value=e}).catch(e=>{this.cards[a].values[t].value="_ERROR_",console.error(""+e)}):"function"===typeof e.staticValue&&(this.cards[a].values[t].value=e.staticValue()))}}}},async setViralLoadStatus(){const t=await ot["a"].getOrders(this.patient.getID());if(!Object(G["isEmpty"])(t)){const e=ot["a"].getViralLoadOrders(t);Object(G["isEmpty"])(e)||(this.facts.hasHighViralLoad=ot["a"].isHighViralLoadResult(e[0].tests[0].result[0]))}},async findAndSetPatient(t,e){let a=null;this.isReady=!1,this.localPatient={},this.facts.scannedNpid||(this.facts.scannedNpid=e||""),a=this.useDDE&&e?this.ddeInstance.searchNpid(e):t?z["a"].findByID(t):z["a"].findByNpid(e),this.handleSearchResults(a).then(()=>this.isReady=!0)},async handleSearchResults(t){let e=[];try{e=await t}catch(a){if(a instanceof it["b"]&&!Object(G["isEmpty"])(a.entity))e=a.entity;else if(a instanceof it["a"]&&Array.isArray(a.errors)){const[t,...e]=a.errors;"string"===typeof t&&"Invalid parameter(s)"===t&&this.setInvalidParametersFacts(e)}else Object(J["c"])(""+a,3e5)}if(Object(G["isEmpty"])(e)&&!Object(G["isEmpty"])(this.localPatient)&&(e=this.localPatient),Array.isArray(e)&&e.length>1?(this.facts.npidHasDuplicates=e.length<=5,this.facts.npidHasOverFiveDuplicates=e.length>5):this.facts.patientFound=!Object(G["isEmpty"])(e),this.facts.patientFound){this.patient=new z["a"](Array.isArray(e)?e[0]:e),this.updateCards(),bt["a"].set("ACTIVE_PATIENT",this.patient),this.setPatientFacts();const t=[];t.push(this.setProgramFacts()),this.useDDE&&t.push(this.setDDEFacts()),"ANC"===this.facts.programName&&t.push(this.setAncFacts()),"ART"===this.facts.programName&&t.push(this.setViralLoadStatus()),this.facts.currentNpid=this.patient.getNationalID(),t.push(this.validateNpid()),await Promise.all(t)}else this.facts.scannedNpid&&this.setVoidedNpidFacts(this.facts.scannedNpid);this.onEvent(H.ONLOAD).then(()=>this.isReady=!0)},async validateNpid(){if(this.useDDE)this.facts.hasInvalidNpid=!this.patient.getDocID()||this.patient.getDocID()&&Object(tt["c"])(this.patient.getNationalID());else{const t=await z["a"].findByNpid(this.facts.currentNpid,{page_size:2});this.facts.hasInvalidNpid=Array.isArray(t)&&t.length>1}},setInvalidParametersFacts(t){this.facts.demographics.hasInvalidDemographics=!0,this.facts.demographics.invalidDemographics=t.map(t=>{const e=Object.entries(t),a=e[0][0],n=e[0][1];return[a,n.join(", ")]})},reloadPatient(){return this.findAndSetPatient(this.patient.getID(),void 0)},setPatientFacts(){this.facts.demographics.patientIsComplete=this.patient.patientIsComplete(),this.facts.demographics.patientName=this.patient.getFullName(),this.facts.demographics.givenName=this.patient.getGivenName(),this.facts.demographics.familyName=this.patient.getFamilyName(),this.facts.demographics.landmark=this.patient.getAttribute(19),this.facts.demographics.phoneNumber=this.patient.getAttribute(12),this.facts.demographics.gender=this.patient.getGender(),this.facts.demographics.birthdate=this.patient.getBirthdate(),this.facts.demographics.ancestryDistrict=this.patient.getHomeDistrict(),this.facts.demographics.ancestryTA=this.patient.getHomeTA(),this.facts.demographics.ancestryVillage=this.patient.getHomeVillage(),this.facts.demographics.currentDistrict=this.patient.getCurrentDistrict(),this.facts.demographics.currentTA=this.patient.getCurrentTA(),this.facts.demographics.currentVillage=this.patient.getCurrentVillage(),this.facts.identifiers=this.patient.getIdentifiers().map(t=>t.type.name)},async setGlobalPropertyFacts(){this.facts.globalProperties.ddeEnabled=await bt["a"].get("IS_DDE_ENABLED"),this.useDDE=this.facts.globalProperties.ddeEnabled,"ART"===this.app.applicationName&&(this.facts.globalProperties.useFilingNumbers=await bt["a"].get("IS_ART_FILING_NUMBER_ENABLED"))},async setAncFacts(){const t=new ht(this.patient.getID(),-1);this.facts.anc.canInitiateNewPregnancy=await t.canInitiateNewPregnancy(),this.facts.anc.currentPregnancyIsOverdue=await t.pregnancyIsOverdue(),this.facts.anc.lmpMonths=await t.getLmpInMonths()},buildDDEDiffs(t){const e=[],a={givenName:{label:"First Name",ref:"given_name"},familyName:{label:"Last Name",ref:"family_name"},birthdate:{label:"Birthdate",ref:"birthdate"},gender:{label:"Gender",ref:"gender"},phoneNumber:{label:"Phone number",ref:"phone_number"},ancestryDistrict:{label:"Home District",ref:"home_district"},ancestryTA:{label:"Home TA",ref:"home_traditional_authority"},ancestryVillage:{label:"Home Village",ref:"home_village"},currentDistrict:{label:"Current District",ref:"current_district"},currentTA:{label:"Current TA",ref:"current_traditional_authority"},currentVillage:{label:"Current Village",ref:"current_village"}};let n=0;const i={indexes:[],class:"his-empty-set-color"};for(const o in a){let s=this.facts.demographics[o],r=s;a[o].ref in t&&(i.indexes.push(n),s=t[a[o].ref].local,r=t[a[o].ref].remote),e.push([a[o].label,s,r]),++n}return{comparisons:e,rowColors:[i]}},async setProgramFacts(){this.facts.programName=this.app.applicationName;try{this.program=new K["a"](this.patient.getID()),this.programInfo=await this.program.getProgram(),bt["a"].set("PATIENT_PROGRAM",this.programInfo);const{program:t,outcome:e}=this.programInfo;this.facts.enrolledInProgram=!(Object(tt["d"])(t)||t.match(/n\/a/i)),this.facts.currentOutcome=e,this.facts.userRoles=W["a"].getUserRoles().map(t=>t.role),this.facts.patientType=await rt["a"].getFirstValueCoded(this.patient.getID(),"Type of patient")||"N/A"}catch(t){console.error(""+t)}},async setDDEFacts(){try{var t;const e=null===(t=await this.ddeInstance.getLocalAndRemoteDiffs())||void 0===t?void 0:t.diff;this.facts.dde.localDiffs=this.ddeInstance.formatDiffValuesByType(e,"local");const{comparisons:a,rowColors:n}=this.buildDDEDiffs(e);if(this.facts.dde.diffRows=a,this.facts.dde.diffRowColors=n,e.npid){const{local:t,remote:a}=e.npid;this.facts.dde.localNpidDiff=t,this.facts.dde.remoteNpidDiff=a,delete e.npid}this.facts.dde.hasDemographicConflict=!Object(G["isEmpty"])(e)}catch(e){console.warn(e)}},async setVoidedNpidFacts(t){const e=["Name","Birthdate","Gender","Ancestry Home","CurrentID","Action"];let a=[];const n=await this.ddeInstance.findVoidedIdentifier(t);n&&(a=n.map(t=>{const e=new z["a"](t);return[e.getFullName(),e.getBirthdate(),e.getGender(),e.getHomeTA(),e.getNationalID(),{type:"button",name:"Select",action:async()=>{if(!e.patientIsComplete())return this.$router.push("/patient/registration?edit_person="+e.getID());if(e.getNationalID().match(/unknown/i)||!e.getDocID())try{return await e.assignNpid(),await this.findAndSetPatient(e.getID(),void 0),Q["X"].dismiss()}catch(t){return Object(J["e"])("Failed to assign npid to patient with unknown npid."),console.error(t)}await Q["X"].dismiss(),await this.findAndSetPatient(void 0,e.getNationalID())}}]}),this.facts.dde.voidedNpids.cols=e,this.facts.dde.voidedNpids.rows=a)},async onEvent(t,e={}){const a=Object(q["a"])(this.facts,et,"",t);for(const o in a){var n;const t=a[o];if(null!==t&&void 0!==t&&null!==(n=t.actions)&&void 0!==n&&n.alert){var i;const e=await(null===t||void 0===t||null===(i=t.actions)||void 0===i?void 0:i.alert(this.facts));if(await this.runFlowState(e)===U.FORCE_EXIT)return!1}}"function"===typeof e&&e()},async onInitiateNewAncPregnancy(){await Object(J["a"])("Are you sure you want to initiate new pregnancy?")&&(await this.initiateNewAncPregnancy()?(this.facts.anc.canInitiateNewPregnancy=!1,this.facts.anc.currentPregnancyIsOverdue=!1,this.nextTask()):Object(J["e"])("Unable to initiate new pregnancy"))},initiateNewAncPregnancy(){return new ht(this.patient.getID(),-1).createNewPregnancyStatus()},async runFlowState(t){const e={};if(e[U.GO_HOME]=()=>(this.$router.push("/"),U.FORCE_EXIT),e[U.GO_BACK]=()=>(this.$router.back(),U.FORCE_EXIT),e[U.ENROLL]=()=>this.program.enrollProgram(),e[U.ACTIVATE_FN]=()=>(this.$router.push(`/art/filing_numbers/${this.patient.getID()}?assign=true`),U.FORCE_EXIT),e[U.UPDATE_DMG]=()=>(this.$router.push("/patient/registration?edit_person="+this.patient.getID()),U.FORCE_EXIT),e[U.PRINT_NPID]=async()=>(await this.ddeInstance.printNpid(this.patient.getID()),await Object(ct["a"])(1800),U.CONTINUE),e[U.CREATE_NPID_WITH_REMOTE_DIFF]=async()=>{const t=this.facts.dde.remoteNpidDiff;try{if(t&&await this.ddeInstance.createNPID(t))return this.facts.scannedNpid=t,this.facts.currentNpid=t,this.facts.dde.localNpidDiff=t,Object(J["d"])("Remote NPID successfully updated"),await Object(ct["a"])(300),await this.ddeInstance.printNpid(),await this.findAndSetPatient(void 0,t),U.FORCE_EXIT}catch(e){const t=/Identifier already assigned to another patient/i;if(e instanceof it["a"]&&e.errors.join(",").match(t)){const t=await this.ddeInstance.reassignNpid(this.patient.getDocID());if(t)return this.patient=new z["a"](t),Object(J["d"])("Patient has been reassigned NPID"),await Object(ct["a"])(300),await this.ddeInstance.printNpid(),await this.findAndSetPatient(void 0,this.patient.getNationalID()),U.FORCE_EXIT}Object(J["c"])("Unable to assign NPID: "+e)}},e[U.ASSIGN_NPID]=async()=>(await this.patient.assignNpid(),await new at["a"](this.patient.getID()).printNidLbl(),await Object(ct["a"])(300),await this.reloadPatient(),U.FORCE_EXIT),e[U.INITIATE_ANC_PREGNANCY]=async()=>(await this.initiateNewAncPregnancy(),U.CONTINUE),e[U.VIEW_MERGE_AUDIT_FOR_NPID]=()=>(this.$router.push("/merge/rollback/"+this.facts.scannedNpid),U.FORCE_EXIT),e[U.RESOLVE_DUPLICATE_NPIDS]=()=>(this.$router.push("/npid/duplicates/"+this.facts.scannedNpid),U.FORCE_EXIT),e[U.REFRESH_DDE_DEMOGRAPHICS]=async()=>(await this.ddeInstance.refreshDemographics(),await this.reloadPatient(),U.FORCE_EXIT),e[U.ADD_AS_DRUG_REFILL]=async()=>(await this.createPatientType("Drug Refill"),U.CONTINUE),e[U.ADD_AS_NEW_PATIENT]=async()=>(await this.createPatientType("New patient"),U.CONTINUE),e[U.ADD_AS_EXTERNAL_CONSULTATION]=async()=>(await this.createPatientType("External consultation"),U.CONTINUE),e[U.SEARCH_BY_NAME]=()=>(this.$router.push("/patient/registration"),U.FORCE_EXIT),e[U.UPDATE_LOCAL_DDE_DIFFS]=async()=>(await this.ddeInstance.updateLocalDifferences(this.facts.dde.localDiffs),await this.reloadPatient(),U.FORCE_EXIT),t in e)try{return await e[t]()}catch(a){Object(J["c"])(""+a)}return t},async createPatientType(t){const e=new st["a"](this.patient.getID(),-1);await e.createEncounter(),await e.savePatientType(t)},async onVoid(){if(!this.isReady)return Object(J["e"])("Please wait...");Object(mt["a"])(async t=>{try{await z["a"].voidPatient(this.patient.getID(),t),this.$router.push("/")}catch(e){Object(J["c"])(""+e)}},"void-modal")},nextTask(){if(!this.isReady)return Object(J["e"])("Please wait...");this.onEvent(H.ON_CONTINUE,()=>{Object($["b"])(this.patient.getID(),this.$router)})}}}),Nt=(a("0944"),a("6b0d")),ft=a.n(Nt);const Ot=ft()(gt,[["render",M],["__scopeId","data-v-099c4f96"]]);e["default"]=Ot},"4cf3":function(t,e,a){"use strict";a("1afa")},"55ff":function(t,e,a){"use strict";a("f085")},"69c8":function(t,e,a){},"76df":function(t,e,a){"use strict";a.d(e,"a",(function(){return i}));var n=a("7f35");async function i(t,e="action-sheet-modal"){const a=await Object(n["c"])("Are you sure you want to void record?","Please specify reason for voiding this record",["Mistake/ Wrong Entry","Duplicate","System Error"],[{name:"Cancel",slot:"start"},{name:"Void",color:"danger",slot:"end",role:"action"}],"",e);a.selection&&"Void"===a.action&&await t(a.selection)}},"7f35":function(t,e,a){"use strict";a.d(e,"d",(function(){return _})),a.d(e,"b",(function(){return v})),a.d(e,"a",(function(){return A})),a.d(e,"c",(function(){return P}));var n=a("7a23");function i(t,e,a,i,o,s){const r=Object(n["resolveComponent"])("action-header"),c=Object(n["resolveComponent"])("his-table"),l=Object(n["resolveComponent"])("ion-content"),d=Object(n["resolveComponent"])("action-footer");return Object(n["openBlock"])(),Object(n["createBlock"])(n["Fragment"],null,[Object(n["createVNode"])(r,{title:t.title,subtitle:t.subtitle,color:t.color},null,8,["title","subtitle","color"]),Object(n["createVNode"])(l,null,{default:Object(n["withCtx"])(()=>[Object(n["createVNode"])(c,{columns:t.columns,rowColors:t.rowColors,rows:t.rows},null,8,["columns","rowColors","rows"])]),_:1}),Object(n["createVNode"])(d,{buttons:t.actionButtons},null,8,["buttons"])],64)}var o=a("a3a5"),s=a("8efc"),r=Object(n["defineComponent"])({mixins:[s["a"]],components:{HisTable:o["a"]},props:{rowColors:{type:Object},columns:{type:Object,required:!0},rows:{type:Object,required:!0}}}),c=a("6b0d"),l=a.n(c);const d=l()(r,[["render",i]]);var p=d;const u=Object(n["withScopeId"])("data-v-1c798292");Object(n["pushScopeId"])("data-v-1c798292");const h={class:"info-content his-md-text"};Object(n["popScopeId"])();const m=u((function(t,e,a,i,o,s){const r=Object(n["resolveComponent"])("action-header"),c=Object(n["resolveComponent"])("ion-content"),l=Object(n["resolveComponent"])("action-footer");return Object(n["openBlock"])(),Object(n["createBlock"])(n["Fragment"],null,[Object(n["createVNode"])(r,{title:t.title,subtitle:t.subtitle,color:t.color},null,8,["title","subtitle","color"]),Object(n["createVNode"])(c,null,{default:u(()=>[Object(n["createVNode"])("div",h,[Object(n["createVNode"])("h2",{class:t.color},Object(n["toDisplayString"])(t.bodyTitle),3),Object(n["createVNode"])("p",{class:"description",innerHTML:t.bodyText},null,8,["innerHTML"])])]),_:1}),Object(n["createVNode"])(l,{buttons:t.actionButtons},null,8,["buttons"])],64)}));var b=Object(n["defineComponent"])({mixins:[s["a"]],props:{bodyTitle:{type:String,required:!0},bodyText:{type:String,required:!1}}});a("55ff");const g=l()(b,[["render",m],["__scopeId","data-v-1c798292"]]);var N=g,f=a("1b47");const O=Object(n["withScopeId"])("data-v-d609962e"),D=O((function(t,e,a,i,o,s){const r=Object(n["resolveComponent"])("action-header"),c=Object(n["resolveComponent"])("ion-content"),l=Object(n["resolveComponent"])("action-footer");return Object(n["openBlock"])(),Object(n["createBlock"])(n["Fragment"],null,[Object(n["createVNode"])(r,{title:t.title,subtitle:t.subtitle,color:t.color},null,8,["title","subtitle","color"]),Object(n["createVNode"])(c,null,{default:O(()=>[Object(n["createVNode"])("ul",null,[(Object(n["openBlock"])(!0),Object(n["createBlock"])(n["Fragment"],null,Object(n["renderList"])(t.list,(t,e)=>(Object(n["openBlock"])(),Object(n["createBlock"])("li",{key:e},[Object(n["createVNode"])("span",{class:"his-md-text",innerHTML:t},null,8,["innerHTML"])]))),128))])]),_:1}),Object(n["createVNode"])(l,{buttons:t.actionButtons},null,8,["buttons"])],64)}));var y=Object(n["defineComponent"])({mixins:[s["a"]],props:{list:{type:Array,required:!0}}});a("4cf3");const I=l()(y,[["render",D],["__scopeId","data-v-d609962e"]]);var E=I,j=a("8a30");function w(){const t=(e,a)=>{setTimeout(()=>{const n=document.getElementsByClassName("modal-wrapper");if(n.length){const i=n[0],o=i.getElementsByTagName("ion-header");o.length>=2?o[1].remove():e<20&&t(e+1,a+100);const s=i.getElementsByTagName("ion-content");s.length>=2&&s[1].remove();const r=i.getElementsByTagName("ion-footer");r.length>=2&&r[1].parentElement&&r[1].parentElement.remove()}else e<5&&t(e+1,a+100)},a)};t(0,0)}async function _(t,e,a,n,i,o="",s=[]){const r=await j["X"].create({component:p,backdropDismiss:!1,cssClass:"action-sheet-modal",componentProps:{title:t,subtitle:e,columns:a,rows:n,rowColors:s,actionButtons:i,color:o}});await r.present(),w();const{data:c}=await r.onDidDismiss();return c.action}async function v(t,e,a,n,i=""){const o=await j["X"].create({component:E,backdropDismiss:!1,cssClass:"action-sheet-modal",componentProps:{title:t,subtitle:e,actionButtons:n,list:a,color:i}});await o.present(),w();const{data:s}=await o.onDidDismiss();return s.action}async function A(t,e,a,n,i=""){const o=await j["X"].create({component:N,backdropDismiss:!1,cssClass:"action-sheet-modal",componentProps:{title:t,bodyTitle:e,bodyText:a,actionButtons:n,color:i}});await o.present(),w();const{data:s}=await o.onDidDismiss();return s.action}async function P(t,e,a,n,i="darkred",o="action-sheet-modal"){const s=await j["X"].create({component:f["a"],backdropDismiss:!1,cssClass:o,componentProps:{title:t,subtitle:e,color:i,list:a,actionButtons:n}});await s.present(),w();const{data:r}=await s.onDidDismiss();return r}},9137:function(t,e,a){},bdcb:function(t,e,a){"use strict";a("69c8")},c21d:function(t,e,a){"use strict";a.d(e,"a",(function(){return o}));a("caad");function n(t,e){const a=[],n=[-1,"",null,void 0];for(const i in e){if(!(i in t))continue;const o=t[i];n.includes(o)?a.push(!1):a.push(e[i](o,t))}return a.every(Boolean)}function i(t){return t.sort((t,e)=>t.priority<e.priority?-1:1)}function o(t,e,a="",o=""){const s=[];for(const i in e){const r=e[i],c=[r.target&&a&&r.target!=a,r.targetEvent&&o&&r.targetEvent!=o];c.some(Boolean)||n(t,r.conditions)&&(r.title=i,r.description&&(r.description.text=r.description.info(t)),s.push(r))}return i(s)}},f085:function(t,e,a){}}]);
//# sourceMappingURL=chunk-5e75af70.2492d0b6.js.map