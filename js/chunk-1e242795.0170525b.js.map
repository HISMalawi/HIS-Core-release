{"version":3,"sources":["webpack:///./src/services/drug_service.ts","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/views/PrintDrug.vue?e57e","webpack:///./src/views/PrintDrug.vue","webpack:///./src/views/PrintDrug.vue?0d88"],"names":["DrugService","Service","constructor","super","params","getJson","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","defineComponent","name","components","TouchScreenForm","emits","data","props","type","Function","Boolean","default","String","Object","required","methods","formData","computedData","this","$emit","i","__exports__","_component_his_standard_form","_resolveComponent","onSubmit","HisStandardForm","packSizes","id","helpText","FieldType","TT_SELECT","validation","val","Validation","options","async","_","filter","drugs","getDrugs","map","facility","label","value","drug_id","onValue","drug","StockService","getPackSizes","config","showKeyboard","isFilterDataViaApi","condition","isEmpty","p","TT_NUMBER","f","drug_pack_size","match","form","PrintoutService","quantity","includes","printDrug","$router","push","path","e","console","log"],"mappings":"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","file":"js/chunk-1e242795.0170525b.js","sourcesContent":["import { Service } from \"./service\";\n\nexport class DrugService extends Service {\n    constructor() {\n        super()\n    }\n\n    \n    static getDrugs(params={} as Record<string, string | number>) {\n        return super.getJson('/drugs', params)\n    }\n}","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    skipSummary: true,\n    fields: _ctx.fields,\n    onOnFinish: _ctx.onSubmit\n  }, null, 8, [\"fields\", \"onOnFinish\"]))\n}","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport {DrugService} from \"@/services/drug_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { PrintoutService} from \"@/services/printout_service\"\nimport { StockService } from '@/apps/ART/views/ARTStock/stock_service';\nimport { isEmpty } from 'lodash';\nimport { options } from 'ionicons/icons';\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        fields: [] as Array<Field>,\n        packSizes: [] as Array<number>,\n    }),\n    async created(){\n        this.fields = [ \n            {\n                id: 'drug',\n                helpText: 'Select drug',\n                type: FieldType.TT_SELECT,\n                validation: (val: any) => Validation.required(val),\n                options: async (_, filter='') => {\n                    const drugs = await DrugService.getDrugs({name: filter})\n                    return drugs.map((facility: any) => ({\n                        label: facility.name,\n                        value: facility.drug_id\n                    }))\n                },\n                onValue: (drug: Option) => {\n                    this.packSizes = StockService.getPackSizes(drug.value as number)\n                    return drug\n                },\n                config: {\n                    showKeyboard: true,\n                    isFilterDataViaApi: true\n                }\n            },\n            {\n                id: 'drug_pack_size',\n                helpText: \"Select Quantity\",\n                type: FieldType.TT_SELECT,\n                condition: () => !isEmpty(this.packSizes),\n                options: () => [\n                    ...this.packSizes.map(p => ({label: `${p}`, value: p })),\n                    {label: \"Other (specify)\", value: \"Other\"}\n                ]\n            },\n            {\n                id: 'quantity',\n                helpText: 'Input quantity',\n                type: FieldType.TT_NUMBER,\n                validation: (val: any) => Validation.required(val),\n                condition: (f: any) => isEmpty(this.packSizes) || f.drug_pack_size.value.match(/other/i),\n                config: {\n                    showKeyboard: true,\n                }\n            }\n        ]\n    },\n    methods: {\n        async onSubmit(form: any) {\n            const label = new PrintoutService()\n            const quantity = isEmpty(this.packSizes) || form.drug_pack_size.label.includes('Other')\n                ? form.quantity.value\n                : form.drug_pack_size.value\n            try {\n                await label.printDrug(form.drug.value, quantity)\n                this.$router.push({path: '/'})\n            }catch(e) { \n                console.log(e)\n            }\n        }\n    }\n})\n","import { render } from \"./PrintDrug.vue?vue&type=template&id=9d591604&ts=true\"\nimport script from \"./PrintDrug.vue?vue&type=script&lang=ts\"\nexport * from \"./PrintDrug.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}