{"version":3,"sources":["webpack:///./node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/views/SessionDate.vue"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","defineComponent","name","components","TouchScreenForm","emits","data","props","type","Function","Boolean","default","String","Object","required","methods","formData","computedData","$emit","i","__exports__","_component_his_standard_form","_resolveComponent","onSubmit","HisStandardForm","apiDate","this","Service","getApiDate","generateDateFields","id","helpText","minDate","maxDate","estimation","allowUnknown","computeValue","date","config","footerBtns","slot","color","state","visible","isBDE","onClick","async","resetSessionDate","showBdeNotice","HisDate","toStandardHisDisplayFormat","getCachedApiDate","sessionDate","getSessionDate","action","infoActionSheet","redirect","Store","invalidate","toastSuccess","formatDate","e","toastWarning","patientId","$route","query","patient_dashboard_redirection_id","$router","push","back","_","session_date","setSessionDate","patientID","patient_id","nextTask"],"mappings":"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","file":"js/chunk-4639117c.4434815b.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    skipSummary: true,\n    fields: _ctx.fields,\n    onOnFinish: _ctx.onSubmit\n  }, null, 8, [\"fields\", \"onOnFinish\"]))\n}","\nimport { defineComponent } from 'vue'\nimport { Field } from \"@/components/Forms/FieldInterface\"\nimport { Service } from \"@/services/service\"\nimport { toastWarning, toastSuccess} from \"@/utils/Alerts\"\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport HisDate from \"@/utils/Date\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { infoActionSheet } from \"@/utils/ActionSheets\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        apiDate: '' as string,\n        fields: [] as Array<Field>,\n    }),\n    async created(){\n        this.apiDate = await Service.getApiDate()\n        this.fields = generateDateFields({\n            id: 'session_date',\n            helpText: 'Session Date',\n            required: true,\n            minDate: () => '2000-01-01',\n            maxDate: () => this.apiDate,\n            estimation: {\n                allowUnknown: false\n            },\n            computeValue: (date: string) => date,\n            config: {\n                footerBtns: [\n                    {\n                        name: 'Reset',\n                        slot: 'end',\n                        color: 'success',\n                        state: {\n                            visible: {\n                                default: () => Service.isBDE() \n                            }\n                        },\n                        onClick: async () => {\n                            await this.resetSessionDate()\n                        }\n                    }\n                ]\n            }\n        }, '')\n    },\n    async mounted() {\n        await this.showBdeNotice()\n    },\n    methods: {\n        async showBdeNotice() {\n            if (!Service.isBDE()) return\n            const apiDate = HisDate.toStandardHisDisplayFormat(\n                Service.getCachedApiDate() || ''\n            )\n            const sessionDate = HisDate.toStandardHisDisplayFormat(\n                Service.getSessionDate()\n            )\n            const action = await infoActionSheet(\n                'BDE Notice',\n                `The system is currently in Back Data Entry Mode(BDE). \\\n                Do you wish to reset the date to ${apiDate}?`,\n                `BDE Date: ${sessionDate}`,\n                [\n                    { name: 'Reset Date', slot: 'start', color: 'success'},\n                    { name: 'Keep BDE Date', slot: 'end', color: 'danger'},\n                    { name: 'New date', slot: 'end'}\n                ],\n            )\n\n            if (action === 'Reset Date') {\n                return await this.resetSessionDate()\n            }\n            if (action === 'Keep BDE Date') {\n                this.redirect()\n            }\n        },\n        async resetSessionDate() {\n            try {\n                await Service.resetSessionDate()\n                Store.invalidate('PROVIDERS')\n                toastSuccess(`Session date has been reset to ${this.formatDate(this.apiDate)}`)\n                this.redirect()\n            } catch (e) {\n                toastWarning(`${e}`)\n            }\n        },\n        redirect() {\n            const patientId = this.$route.query.patient_dashboard_redirection_id\n            patientId \n                ? this.$router.push(`/patient/dashboard/${patientId}`)\n                : this.$router.back()\n        },\n        async onSubmit(_: any, computedData: any) {\n            const date = computedData.session_date\n            try {\n                await Service.setSessionDate(date)\n                toastSuccess(`Successfully Back dated to ${this.formatDate(date)}`)\n                const patientID = this.$route?.query?.patient_id as any\n                if (patientID) {\n                    nextTask(patientID, this.$router)\n                } else {\n                    this.redirect()\n                }\n            } catch(e) {\n                toastWarning(`${e}`)\n            }\n        },\n        formatDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./SessionDate.vue?vue&type=template&id=5affc0d2&ts=true\"\nimport script from \"./SessionDate.vue?vue&type=script&lang=ts\"\nexport * from \"./SessionDate.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}