(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-4cbd0cda"],{7365:function(e,t,a){"use strict";a("14d9"),a("13d5");var i,s=a("7a23"),n=a("ad60"),o=a("2ef0"),r=a("0fa1"),c=a("7f35"),l=a("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(i||(i={}));const u=e=>l["b"].toStandardHisDisplayFormat(e),d={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(c["a"])("Data Integrity Issue Found","Patient died on "+u(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?i.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?i.CHANGE_PATIENT_OUTCOME:i.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const a=await Object(c["a"])("Data integrity issue found","",`Session date ${u(t)} is less than birth date of ${u(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===a?i.CHANGE_SESSION_DATE:i.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:a,apiDate:s})=>{const n=await Object(c["c"])("Please select a provider for "+t,`BDE: ${u(a)} | Current: ${u(s)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===n.action?{value:-1,flowState:i.GO_TO_PATIENT_DASHBOARD}:{value:n.selection,flowState:i.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}};var h=a("c21d"),p=a("7920"),m=a("b5e4"),_=a("8e8b"),v=a("b432"),f=a("5a0c"),b=a.n(f),g=a("cc6f"),D=a("2ed9"),O=Object(s["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],encounterStartTime:null,facts:{age:-1,gender:"",birthDate:"",sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:"",village:"",district:"",currentTA:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():_["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,Object(o["isEmpty"])(this.patient)||Object(v["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0,this.setStartTime()}).catch(e=>console.log(e))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{setStartTime(){this.encounterStartTime=(new Date).getTime()},goOffline(){return!v["c"].value||v["b"].value},isOnline(){return v["c"].value},isOfflineMode(){return v["b"].value},initOfflineData(){var e;const t=Object(v["a"])().findByID(this.offlineID),a=null===t||void 0===t||null===(e=t.personParams)||void 0===e?void 0:e.person;a&&(this.facts.birthDate=a.birthdate,this.facts.age=b()(n["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.district=a.current_district,this.facts.village=a.current_village,this.facts.currentTA=a.current_traditional_authority,this.facts.gender=a.gender,this.ready=!0,this.setStartTime())},async saveFormEncounterAndProceed(e={}){let t="Pending",a=!1,i=null;const s=(new Date).getTime(),n=(s-this.encounterStartTime)/1e3,o=n/60;try{const t=await g["a"].buildValueText("Device",Object(D["f"])()),a=await g["a"].buildValueNumber("Review Time",o);i=[...await this.resolveObs(e.computedData),t,a]}catch(r){return console.error(""+r),Object(m["e"])("Unable to resolve observations")}if(!this.isOfflineMode()){try{const s=new g["a"](this.patientID,e.encounterTypeID,this.providerID);await s.createEncounter()&&await s.saveObservationList(i)&&(t="Success"),"function"===typeof e.callback&&await e.callback(s),a=!0}catch(r){a=!1,/NetworkError|Failed to fetch/i.test(""+r)?t="NetworkError":(t="Exception",console.error("Exception while saving an encounter: "+r))}if("Exception"===t)return Object(m["c"])("An error has occured!")}Object(v["a"])().saveObsOffline({observations:i,id:this.offlineID,uploadStatus:t,encounterName:this.$route.name,encounterTypeID:e.encounterTypeID,meta:e.formData,labOrders:e.labOrders,created:a},a),e.skipNextTask||this.nextTask()},runflowState(e,t=null){const a={};if(a[i.SET_PROVIDER]=e=>{const[t]=e.split(" "),a=Object(o["find"])(this.providers,{username:t});return a&&(this.providerID=a.person_id),i.CONTINUE},a[i.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),i.EXIT),a[i.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),i.EXIT),a[i.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),i.EXIT),e in a)return a[e](t)},async checkEncounterGuidelines(){const e=Object(h["a"])(this.facts,d);for(const o in e){var t,a;const r=e[o];if(null!==r&&void 0!==r&&null!==(t=r.actions)&&void 0!==t&&t.alert){var s;const e=this.runflowState(await(null===r||void 0===r||null===(s=r.actions)||void 0===s?void 0:s.alert(this.facts)));if(e===i.EXIT)return}if(null!==r&&void 0!==r&&null!==(a=r.actions)&&void 0!==a&&a.selection){var n;const e=await(null===r||void 0===r||null===(n=r.actions)||void 0===n?void 0:n.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await _["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=e.programID===n["a"].getProgramID(),this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(m["c"])(""+e)}this.facts.currentTA=this.patient.getCurrentTA(),this.facts.district=this.patient.getCurrentDistrict(),this.facts.village=this.patient.getCurrentVillage(),this.facts.sessionDate=n["a"].getSessionDate(),this.facts.apiDate=n["a"].getCachedApiDate(),this.facts.isBdeMode=n["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",n["a"].isBDE()&&(this.providers=await _["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const a=e.username.toUpperCase(),i=t.username.toUpperCase();return a<i?-1:a>i?1:0}).map(e=>{var t;let a=""+e.username;if(!Object(o["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var i;const[t]=(null===(i=e.person)||void 0===i?void 0:i.names)||[];a+=` (${t.given_name} ${t.family_name})`}return a}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>"string"===typeof e||"number"===typeof e?{label:e,value:e}:e)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){try{const e=this.offlineID||this.patientID;await Object(r["b"])(e,this.$router,this.$route)}catch(e){console.error("Workflow error "+e),this.gotoPatientDashboard()}},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},toConditionalOptions(e){const t=[];for(const a of e)("boolean"!==typeof a[1]||a[1])&&t.push(this.toOption(a[0]));return t},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const a=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const a=t.obs?t.obs:t;return Array.isArray(a)?e=e.concat(a):"function"===typeof a?e.push(a()):e.push(a),e},[]);return Promise.all(a)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(a){return!1}},validateSeries(e){try{for(const t in e){const a=e[t]();if(a)return a}}catch(t){return[t]}}}});const E=O;t["a"]=E},7920:function(e,t,a){"use strict";var i=a("7a23");function s(e,t,a,s,n,o){return Object(i["openBlock"])(),Object(i["createBlock"])(Object(i["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var n=a("9441"),o=Object(i["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:n["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),r=a("6b0d"),c=a.n(r);const l=c()(o,[["render",s]]);t["a"]=l},"8e3d":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return storageFactory}));var _home_andrew_dev_Projects_HIS_Core_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("ade3"),lodash__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("2ef0"),lodash__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);const INDEX_STORE="openmrs",DB_NAME="offline_db",storageFactory=(storageName="IndexedDBStorage")=>eval(`new ${storageName}()`);class LocalStorage{existsinStorage(e){const t=localStorage.getItem(e);return t?Promise.resolve(!0):Promise.resolve(!1)}getFromStorage(e){return new Promise((t,a)=>{const i=localStorage.getItem(e);if(i)return t(JSON.parse(i));t([])})}deleteFromStorage(e){return localStorage.removeItem(e),!0}saveToStorage(e,t){return localStorage.setItem(e,JSON.stringify(t)),!0}}class IndexedDBStorage{constructor(){Object(_home_andrew_dev_Projects_HIS_Core_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__["a"])(this,"db",void 0);const e=indexedDB.open(DB_NAME,1);e.onupgradeneeded=function(){e.result.createObjectStore(INDEX_STORE)},e.onsuccess=()=>{this.db=e.result}}existsinStorage(e){return new Promise((t,a)=>{const i=this.db.transaction(INDEX_STORE).objectStore(INDEX_STORE).get(e);i.onsuccess=()=>{t(i.result)},i.onerror=()=>{a(i.error)}})}getFromStorage(e,t){return new Promise((a,i)=>{const s=this.db.transaction(INDEX_STORE).objectStore(INDEX_STORE).openCursor();s.onsuccess=()=>{const i=s.result;i?(i.key===e&&a(t?filteredData(i,t):i.value.data),i.continue()):a([])},s.onerror=()=>{i("error")}})}saveToStorage(e,t){return this.db.transaction(INDEX_STORE,"readwrite").objectStore(INDEX_STORE).put(t,e),!0}deleteFromStorage(e){return this.db.transaction(INDEX_STORE,"readwrite").objectStore(INDEX_STORE).delete(e),!0}}function filteredData(e,t){return Object(lodash__WEBPACK_IMPORTED_MODULE_1__["filter"])(e.value,e=>Object.entries(t).every(([t,a])=>Object(lodash__WEBPACK_IMPORTED_MODULE_1__["isInteger"])(e[t])?!a||e[t]===a:!a||Object(lodash__WEBPACK_IMPORTED_MODULE_1__["toLower"])(e[t]).includes(Object(lodash__WEBPACK_IMPORTED_MODULE_1__["toLower"])(a))))}},c21d:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));a("14d9");function i(e,t){const a=[],i=[-1,"",null,void 0];for(const s in t){if(!(s in e))continue;const n=e[s];i.includes(n)?a.push(!1):a.push(t[s](n,e))}return a.every(Boolean)}function s(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function n(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function o(e,t,a="",o="",r="priority"){const c=[];for(const s in t){const n=t[s],r=[n.target&&a&&n.target!=a,n.targetEvent&&o&&n.targetEvent!=o];r.some(Boolean)||i(e,n.conditions)&&(n.title=s,n.description&&(n.description.text=n.description.info(e)),c.push(n))}return"priority"===r?s(c):n(c)}},e7aa:function(e,t,a){"use strict";a.r(t);var i=a("7a23");function s(e,t,a,s,n,o){const r=Object(i["resolveComponent"])("his-standard-form");return Object(i["openBlock"])(),Object(i["createBlock"])(r,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!1,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}a("14d9");var n=a("d95e"),o=a("7920"),r=a("2706"),c=a("7365"),l=a("ade3"),u=a("cc6f");class d extends u["a"]{constructor(e,t){super(e,181,t),Object(l["a"])(this,"hivStatus",void 0),Object(l["a"])(this,"artStatus",void 0),Object(l["a"])(this,"arvNumber",void 0),Object(l["a"])(this,"arvStartDate",void 0),this.hivStatus="",this.artStatus="",this.arvNumber="",this.arvStartDate=""}getHivStatus(){return this.hivStatus}getArtStatus(){return this.artStatus}getArvNumber(){return this.arvNumber}getArvStartDate(){return this.arvStartDate}isHivPositive(){return!!this.hivStatus.match(/positive/i)}async loadArtStatus(){const e=await u["a"].getJson(`programs/12/patients/${this.patientID}/art_hiv_status`);e&&(this.hivStatus=e["hiv_status"]||this.hivStatus,this.artStatus=e["art_status"]||"",this.arvNumber=e["arv_number"]||"",this.arvStartDate=e["arv_start_date"]||"")}}var h=a("b5e4"),p=a("b446"),m=a("e86e"),_=a("8158"),v=a("23e6"),f=a("ad60"),b=Object(i["defineComponent"])({mixins:[c["a"]],components:{HisStandardForm:o["a"]},data:()=>({assessment:{},obs:[],showHIVQuestions:!0,alreadyEnrolled:!1,offerCxCa:!1}),watch:{patient:{async handler(){this.assessment=new d(this.patientID,this.providerID);new v["a"](await v["a"].findByID(this.patientID));const e=await f["a"].getProgramInformation(this.patientID);"Continue follow-up"===e.current_outcome&&(this.alreadyEnrolled=!0),_["a"].getConceptsByCategory("reason_for_no_cxca"),await this.assessment.loadArtStatus();this.assessment.getHivStatus();""!==this.assessment.getHivStatus()&&(this.showHIVQuestions=!1),"Positive"===this.assessment.getHivStatus()&&(this.showHIVQuestions=!1),await this.setOfferCxCa(),this.fields=await this.getFields()},deep:!0}},methods:{async onFinish(e,t){const a=await this.assessment.createEncounter();if(!a)return Object(h["e"])("Unable to create encounter");const i=[];Object.keys(t).forEach(e=>{i.push(t[e].obs)});const s=await Promise.all([...this.obs,...i]),n=await this.assessment.saveObservationList(s);if(!n)return Object(h["e"])("Unable to save patient observations");Object(h["d"])("Observations and encounter created!"),this.nextTask()},async setOfferCxCa(){const e=await this.assessment.getFirstValueCoded("Offer CxCa");return this.offerCxCa=e&&"Yes"===e,this.offerCxCa||this.obs.push(this.assessment.buildValueCoded("Ever had CxCa","No")),!0},hasHIVStatus(){return""!==this.assessment.getHivStatus},enterPreviousCxCaData(e){const t="Yes"===e.ever_had_cxca.value,a="Yes"===e.results_available.value;return t&&a},getFacilities(e=""){return Object(m["b"])(e)},getReasonsForNoCxcaOptions(){return _["a"].getConceptsByCategory("reason_for_no_cxca").map(e=>({label:e.name,value:e.name,other:{c:e}}))},getFields(){return[{id:"reason_for_visit",helpText:"Reason for visit",type:n["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>[{label:"Initial screening",value:"Initial screening"},{label:"Postponed treatmment",value:"Postponed treatment"},{label:"One year subsequent check-up after treatment",value:"One year subsequent check-up after treatment"},{label:"Subsequent screening",value:"Subsequent screening"},{label:"Problem visit after treatment",value:"Problem visit after treatment"},{label:"Referral",value:"Referral"}],computedValue:e=>({obs:this.assessment.buildValueCoded("Reason for visit",e.value)})},{id:"hiv_status",helpText:"HIV status",type:n["b"].TT_SELECT,condition:()=>this.showHIVQuestions,validation:e=>r["a"].required(e),options:()=>[{label:"Positive on ART",value:"Positive on ART"},{label:"Positive Not on ART",value:"Positive Not on ART"},{label:"Negative",value:"Negative"},{label:"Never tested",value:"Never tested"},{label:"Prefers Not to disclose",value:"Undisclosed"}],computedValue:e=>({obs:this.assessment.buildValueCoded("HIV status",e.value)})},...Object(p["b"])({id:"hiv_test_date",helpText:"HIV test result date",required:!0,condition:e=>e.hiv_status.value.match(/Negative|ART/i),minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.assessment.getDate(),estimation:{allowUnknown:!0,estimationFieldType:p["a"].MONTH_ESTIMATE_FIELD},computeValue:(e,t)=>({date:e,tag:"cxca screening",isEstimate:t,obs:this.assessment.buildValueDate("HIV test date",e,t)})},this.assessment.getDate()),{id:"ever_had_cxca",helpText:"Ever had CxCa screening",type:n["b"].TT_SELECT,condition:e=>"Initial screening"!==e.reason_for_visit.value&&0==this.alreadyEnrolled,options:()=>this.yesNoOptions(),validation:e=>r["a"].required(e),computedValue:e=>({obs:this.assessment.buildValueCoded("Ever had CxCa",e.value)})},{id:"results_available",helpText:"Results available?",type:n["b"].TT_SELECT,validation:e=>r["a"].required(e),condition:e=>"Initial screening"!==e.reason_for_visit.value&&"No"!==e.ever_had_cxca.value,options:()=>this.yesNoOptions(),computedValue:e=>({obs:this.assessment.buildValueCoded("CxCa test results",e.value)})},{id:"location",helpText:"CxCa screening location",type:n["b"].TT_SELECT,validation:e=>r["a"].required(e),options:(e,t="")=>this.getFacilities(t),config:{showKeyboard:!0,isFilterDataViaApi:!0},condition:e=>this.enterPreviousCxCaData(e),computedValue:e=>({obs:this.assessment.buildValueText("Previous CxCa location",e.value)})},...Object(p["b"])({id:"cxca_date",helpText:"Previous CxCa test",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.assessment.getDate(),estimation:{allowUnknown:!1},condition:e=>this.enterPreviousCxCaData(e),computeValue:(e,t)=>({date:e,tag:"cxca screening",isEstimate:t,obs:this.assessment.buildValueDate("cxca test date",e)})},this.assessment.getDate()),{id:"previous_screening_method",helpText:"Previous screening method",type:n["b"].TT_SELECT,validation:e=>r["a"].required(e),condition:e=>this.enterPreviousCxCaData(e),options:()=>[{label:"VIA",value:"VIA"},{label:"PAP Smear",value:"PAP Smear"},{label:"HPV DNA",value:"HPV DNA"},{label:"Speculum Exam",value:"Speculum Exam"}],computedValue:e=>({obs:this.assessment.buildValueCoded("Previous CxCa screening method",e.value)})},{id:"offer_CxCa",helpText:"Offer CxCa screening today",type:n["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>this.yesNoOptions(),computedValue:e=>({obs:this.assessment.buildValueCoded("Offer CxCa",e.value)})},{id:"screening_method",helpText:"Screening method being offered",type:n["b"].TT_SELECT,validation:e=>r["a"].required(e),condition:e=>"Yes"===e.offer_CxCa.value,options:()=>[{label:"VIA",value:"VIA"},{label:"PAP Smear",value:"PAP Smear"},{label:"HPV DNA",value:"HPV DNA"},{label:"Speculum Exam",value:"Speculum Exam"}],computedValue:e=>({obs:this.assessment.buildValueCoded("CxCa screening method",e.value)})},{id:"offer_family_planning",helpText:"Offer Family Planning ?",type:n["b"].TT_SELECT,validation:e=>r["a"].required(e),options:()=>this.yesNoOptions(),computedValue:e=>({obs:this.assessment.buildValueCoded("Family planning",e.label)})},{id:"reason_for_no_cxca",helpText:"Reason for NOT offering CxCa screening",type:n["b"].TT_SELECT,validation:e=>r["a"].required(e),condition:e=>"No"===e.offer_CxCa.value,options:()=>this.getReasonsForNoCxcaOptions(),computedValue:e=>({obs:this.assessment.buildValueCoded("Reason for NOT offering CxCa",e.value)})}]}}}),g=a("6b0d"),D=a.n(g);const O=D()(b,[["render",s]]);t["default"]=O},e86e:function(e,t,a){"use strict";a.d(t,"b",(function(){return c})),a.d(t,"d",(function(){return l})),a.d(t,"c",(function(){return u})),a.d(t,"f",(function(){return d})),a.d(t,"e",(function(){return h})),a.d(t,"a",(function(){return p})),a.d(t,"g",(function(){return m})),a.d(t,"h",(function(){return _}));var i=a("5713"),s=a("8e3d"),n=a("13ea"),o=a.n(n);const r=Object(s["a"])();async function c(e=""){let t=await r.getFromStorage("locations",{name:e});return o()(t)&&(t=await i["a"].getFacilities({name:e})),t.filter(e=>!o()(e)&&""!=e.name.trim()).map(e=>({label:e.name,value:e.location_id,other:e}))}async function l(e=""){const t=await i["a"].getLabs({search_name:e});return t.map(e=>({label:e,value:e}))}async function u(e=""){const t=await i["a"].getFacilities({name:e,tag:"Facility adult sections"});return t.map(e=>({label:e.name,value:e.name,other:e}))}async function d(){const e=await i["a"].getSpecialistClinics();return e.map(e=>({label:e.name,value:e.name,other:e}))}async function h(){let e=await r.getFromStorage("regions",[]);return o()(e)&&(e=await i["a"].getRegions()),e.map(e=>({label:e.name,value:e.region_id,other:e}))}async function p(e){let t=await r.getFromStorage("districts",{region_id:e});return o()(t)&&(t=await i["a"].getDistricts(e)),t.map(e=>({label:e.name,value:e.district_id,other:e}))}async function m(e,t=""){let a=await r.getFromStorage("traditional_authorities",{district_id:e,name:t});return o()(a)&&(a=await i["a"].getTraditionalAuthorities(e,t)),a.map(e=>({label:e.name,value:e.traditional_authority_id,other:e}))}async function _(e,t=""){let a=await r.getFromStorage("villages",{traditional_authority_id:e,name:t});return o()(a)&&(a=await i["a"].getVillages(e,t)),a.map(e=>({label:e.name,value:e.village_id,other:e}))}}}]);
//# sourceMappingURL=chunk-4cbd0cda.94ef637f.js.map