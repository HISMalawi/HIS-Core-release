(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-94abc70c"],{ab49:function(e,t,i){"use strict";i.r(t);var a=i("7a23");function n(e,t,i,n,s,l){const r=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(r,{fields:e.fields,activeField:e.activeField,onOnskip:t[1]||(t[1]=t=>e.activeField=""),onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","activeField","onFinishAction","cancelDestinationPath"])}i("caad");var s=i("d95e"),l=i("7920"),r=i("2706"),h=i("b515"),o=i("b5e4"),c=i("7365"),u=i("aee2"),d=i("ad60"),g=i("2ef0"),b=i("3e53"),p=i("7f35"),v=i("5a0c"),m=i.n(v),f=i("8e8b"),H=Object(a["defineComponent"])({mixins:[c["a"]],components:{HisStandardForm:l["a"]},data:()=>({app:b["a"].getActiveApp(),activeField:"",age:null,gender:null,hasBPinfo:!1,finalHeightValue:null,recentHeight:null,recentHeightObsID:-1,HTNEnabled:!1,optionWhiteList:[],hasHTNObs:!1,vitals:{},weightForHeight:{},medianWeightandHeight:{},canEditHeight:!1}),watch:{ready:{handler(e){e&&this.init()},immediate:!0}},methods:{init(){this.vitals=new h["a"](this.patientID,this.providerID),this.age=this.patient.getAge(),this.gender=this.patient.getGender(),this.fields=this.getFields()},getOptions(){const e=this.recentHeight&&this.age>18?this.recentHeight:"",t=[{label:"Weight",value:"",other:{modifier:"KG",icon:"weight",required:!0}},{label:"Height",value:""+e,other:{modifier:"CM",icon:"height",recentHeight:this.recentHeight,visible:this.canEditHeight,required:this.canEditHeight}},{label:"BP",value:"",other:{modifier:"mmHG",icon:"bp"}},{label:"Temp",value:"",other:{modifier:"Â°C",icon:"temp"}},{label:"SP02",value:"",other:{modifier:"%",icon:"spo2"}},{label:"Pulse",value:"",other:{modifier:"BPM",icon:"pulse-rate"}},{label:"Age",value:this.age,other:{modifier:"Years old",icon:"",visible:!1}}];return Object(g["isEmpty"])(this.optionWhiteList)?t:t.filter(e=>this.optionWhiteList.includes(e.label)).map(e=>(e.other.required=!0,e))},canCheckWeightHeight(){return Object(g["isEmpty"])(this.optionWhiteList)||this.optionWhiteList.includes("Height")&&this.optionWhiteList.includes("Weight")},canCheckBp(){return Object(g["isEmpty"])(this.optionWhiteList)||this.optionWhiteList.includes("BP")},async onFinish(e){const t=await this.vitals.createEncounter();if(!t)return Object(o["e"])("Unable to create treatment encounter");const i=await this.buildObs(e),a=await this.vitals.saveObservationList(i);if(!a)return Object(o["e"])("Unable to save patient observations");Object(o["d"])("Observations and encounter created!"),this.nextTask()},async buildObs(e){const t=await this.mapObs(this.sanitizeVitals(e.vitals).filter(e=>"BP"!==e.label).map(e=>("Height"===e.label&&e.other.visible&&this.finalHeightValue&&(e.value=this.finalHeightValue),e)));if(this.HTNEnabled&&!this.hasHTNObs&&e.on_htn_medication){const i=await this.vitals.buildValueText("Treatment status",e.on_htn_medication.value);t.push(i)}return t},splitBP(e){const t=[];return e.forEach(e=>{if("BP"===e.label){const i=(""+e.value).split("/"),a=i[0],n=i[1];t.push({label:"Systolic",value:a}),t.push({label:"Diastolic",value:n})}}),t},getBMI(e){const t=this.getVal(e,"Weight"),i=this.getVal(e,"Height"),a=[];if(this.age<=14){const e=(t/parseFloat(this.medianWeightandHeight["weight"])*100).toFixed(0),n=(i/parseFloat(this.medianWeightandHeight["height"])*100).toFixed(0),s=(i%Math.floor(i)<.5?0:.5)+Math.floor(i),l=this.weightForHeight[s.toFixed(1)],r=(t/l*100).toFixed(0);isNaN(parseFloat(r))||a.push({label:"Weight for height percent of median",value:r}),a.push({label:"Weight for age percent of median",value:e}),a.push({label:"Height for age percent of median",value:n})}else{const e=u["a"].calculateBMI(t,i);a.push({label:"BMI",value:e})}return a},getVal(e,t){const i=e.filter(e=>e.label===t);return""===i[0].value?0:parseFloat(""+i[0].value)},async mapObs(e){const t=e.map(async e=>{const t=await this.vitals.buildValueNumber(e.label,e.value);return t});return Promise.all(t)},validateVitals(e){const t=this.checkRequiredVitals(e);if(t.length>0)return t.map(e=>[e.label+" can not be empty"]);const i=this.sanitizeVitals(e);return this.vitals.validateAll(i)},sanitizeVitals(e){let t=e.filter(e=>("Height"!==e.label||0!=e.other.required)&&(""!==e.value&&"Age"!==e.label));return this.canCheckBp()&&(t=t.concat(this.splitBP(t))),this.canCheckWeightHeight()&&(t=t.concat(this.getBMI(e))),t},checkRequiredVitals(e){return e.filter(e=>""===e.value&&!0===e.other.required)},getFields(){return[{id:"on_htn_medication",helpText:"Already taking drugs for blood pressure?",type:s["b"].TT_SELECT,init:async()=>{var e;return"ART"===(null===(e=this.app)||void 0===e?void 0:e.applicationName)&&(this.HTNEnabled=await f["a"].get("IS_ART_HTN_ENABLED"),this.HTNEnabled&&await h["a"].getAll(this.patientID,"Treatment status").then(e=>{this.hasHTNObs=e&&e.length>0})),!0},validation:e=>r["a"].required(e),condition:()=>this.HTNEnabled&&!this.hasHTNObs,options:()=>[{label:"Yes",value:"BP Drugs started"},{label:"No",value:"Not on BP Drugs"}]},{id:"vitals",helpText:"Vitals entry",type:s["b"].TT_VITALS_ENTRY,init:async()=>{const e=this.$route.query.vital_options;if(e&&(this.optionWhiteList=e.split(",")),this.canCheckWeightHeight()){const e=await this.patient.getRecentHeightObs();if(Object(g["isEmpty"])(e))this.canEditHeight=!0;else{const t=m()(e["obs_datetime"]).diff(this.patient.getBirthdate(),"year");this.recentHeight=e["value_numeric"],this.recentHeightObsID=e["obs_id"],this.canEditHeight=t<18||this.age<18}this.age<=14&&(this.medianWeightandHeight=await this.patient.getMedianWeightHeight(),this.weightForHeight=await d["a"].getWeightForHeightValues())}return!0},validation:e=>this.validateVitals(e),beforeNext:async e=>{const t=Object(g["find"])(e,{label:"Height"});if(t&&this.recentHeight&&t.other.visible){const e=parseInt(""+(t.value||0)),i=parseInt(""+(this.recentHeight||0));if(e<i){const t=`Use ${i} CM`,a=`Use ${e} CM`,n=await Object(p["a"])(`Previous Height "${i} CM"`,`Current Height "${e} CM"`,`Inconsistent Height Reading (Height can not be lower than previous height of " ${this.recentHeight} "CM. Please SELECT the correct height.)`,[{name:t,slot:"start",color:"success"},{name:a,slot:"end",color:"danger"}]);n===a&&this.recentHeightObsID?await Object(o["a"])("Do you want to void height observation for "+i)&&await h["a"].voidObs(this.recentHeightObsID):this.finalHeightValue=i}}return!0},config:{hiddenFooterBtns:["Clear"],onUpdateAlertStatus:async e=>{const t=Object(g["find"])(e,{label:"Weight"}),i=Object(g["find"])(e,{label:"Height"});if(!t||!i)return;const a=parseFloat(t.value),n=parseFloat(i.value);if(a<=0||n<=0)return{label:"BMI",value:"N/A",color:"",status:""};const s=await u["a"].getBMI(a,n,this.gender,this.age);return{label:"BMI",value:s.index,color:s.color,status:s.result}},onChangeOption:e=>{if(!e.value&&e.other.required)throw`Value for ${e.label} is required`;if(e.value){const t=this.vitals.validator(e);if(t&&t.length)throw t}}},options:()=>this.getOptions()}]}}}),O=i("6b0d"),E=i.n(O);const y=E()(H,[["render",n]]);t["default"]=y},b515:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var a=i("cc6f"),n=i("2ef0");class s extends a["a"]{constructor(e,t){super(e,6,t)}isNotEmptyandNumber(e){return(""+e.value).match(/^-?\d+\.?\d*$/)?null:["Invalid entry for "+e.label]}isNotEmptyandFloat(e){return(""+e.value).match(/^\d{1,3}\.\d{1,5}$/)?null:[`Invalid entry for ${e.label}. Don't forget to add a decimal. e.g. 56.2 ${e.other.modifier}`]}checkMinMax(e,t,i){const a=[];var n,s;parseFloat(""+e.value)<t&&a.push([`${e.label} entered is less than minimum ${t} ${(null===e||void 0===e||null===(n=e.other)||void 0===n?void 0:n.modifier)||""}`]);parseFloat(""+e.value)>i&&a.push([`${e.label} entered is greater than maximum ${i} ${(null===e||void 0===e||null===(s=e.other)||void 0===s?void 0:s.modifier)||""}`]);return a.length>0?a:null}validateAll(e){const t=[];return e.map(e=>{const i=this.validator(e);return Object(n["isArray"])(i)?t.push(i):null}),t.length>0?t:null}mergeErrors(e){const t=[];return e.forEach(e=>{Object(n["isArray"])(e)&&t.push(e)}),t.length>0?t:null}isValidBPReading(e){const t=[],i=(""+e.value).match(/^\d{1,3}\/\d{1,3}$/g)?null:["Invalid BP reading"];if(t.push(i),null==i){const i=(""+e.value).split("/"),a={label:"Systolic",value:i[0]},n={label:"Diastolic",value:i[1]};t.push(this.checkMinMax(n,30,200)),t.push(this.checkMinMax(a,40,250))}return this.mergeErrors(t)}validator(e){const t=[{name:"Weight",validator:e=>{const t=this.isNotEmptyandFloat(e),i=this.checkMinMax(e,2,250);return this.mergeErrors([t,i])}},{name:"Height",validator:e=>{const t=[];return t.push(this.isNotEmptyandNumber(e)),t.push(this.checkMinMax(e,40,220)),this.mergeErrors(t)}},{name:"BP",validator:e=>this.isValidBPReading(e)},{name:"Temp",validator:e=>{const t=this.isNotEmptyandNumber(e),i=this.checkMinMax(e,30,42);return this.mergeErrors([t,i])}},{name:"SP02",validator:e=>{const t=this.checkMinMax(e,40,100);return this.mergeErrors([t])}},{name:"Pulse",validator:e=>{const t=this.checkMinMax(e,50,120);return this.mergeErrors([t])}}],i=t.filter(t=>t.name===e.label);return i.length>0?i[0].validator(e):null}}}}]);
//# sourceMappingURL=chunk-94abc70c.33790ff2.js.map