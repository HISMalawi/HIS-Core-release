{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/OPD/views/encounters/Prescription.vue","webpack:///./node_modules/eslint-loader/index.js"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","activeField","onFinishAction","onSubmit","skipSummary","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","prescriptionService","showMalariaDrugs","hasMalaria","watch","ready","isReady","this","DrugPrescriptionService","patientID","providerID","getFields","immediate","deep","methods","formData","drugOrders","mapToOrders","encounter","createEncounter","toastWarning","drugOrder","createDrugOrder","toastSuccess","nextTask","calculateExpireDate","startDate","duration","date","Date","setDate","getDate","HisDate","toStandardHisFormat","drugs","map","drug","getSessionDate","frequency","DRUG_FREQUENCIES","find","f","label","other","drug_id","dosage","value","units","code","isOrderComplete","every","id","helpText","validation","Validation","required","type","FieldType","TT_SELECT","condition","unload","options","ANTI_MALARIA_DRUGS","name","TT_INFINITE_SCROLL_MULTIPLE_SELECT","async","_","filter","page","limit","loadDrugs","onload","config","showKeyboard","hiddenFooterBtns","footerBtns","color","size","visible","slot","onClick","alertConfirmation","TT_PRESCRIPTION_INPUT","malaria_drugs","beforeNext","isEmpty","TT_TABLE_VIEWER","columns","rows","__exports__","DrugOrderService","Service","constructor","orders","postJson","getProgramID","dispensations","order","getJson","pageSize","drugID","params","patientId","DrugService","AppEncounterService","super","getDrugs","malariaTestResult","OrderService","getLatestMalariaTestResult","primaryDiagnosis","getAllValueCoded","includes","secondaryDiagnosis","create","encounterID"],"mappings":"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","file":"js/chunk-6c9349f6.3b4fb475.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onFinishAction: _ctx.onSubmit,\n    skipSummary: true\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"activeField\", \"onFinishAction\"]))\n}","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { isEmpty } from 'lodash';\nimport { ANTI_MALARIA_DRUGS, DrugPrescriptionService, DRUG_FREQUENCIES } from '../../services/drug_prescription_service';\nimport HisDate from \"@/utils/Date\"\nimport { alertConfirmation, toastSuccess, toastWarning } from '@/utils/Alerts';\nimport { loadingController } from '@ionic/core';\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    activeField: '',\n    prescriptionService: {} as any,\n    showMalariaDrugs: false,\n    hasMalaria: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.prescriptionService = new DrugPrescriptionService(this.patientID, this.providerID)  \n          this.hasMalaria = await this.prescriptionService.hasMalaria()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(formData: any){   \n      const drugOrders = this.mapToOrders(formData['drugs_details'])\n      const encounter = await this.prescriptionService.createEncounter()\n      if (!encounter) return toastWarning('Unable to create treatment encounter')   \n      const drugOrder = await this.prescriptionService.createDrugOrder(drugOrders);\n      if(!drugOrder) return toastWarning('Unable to create drug orders!')\n      toastSuccess('Drug order has been created')\n      this.nextTask()       \n    },\n    calculateExpireDate(startDate: string | Date, duration: number ) {\n      const date = new Date(startDate)\n      date.setDate(date.getDate() + duration)\n      return HisDate.toStandardHisFormat(date)\n    },\n    mapToOrders(drugs: Option[]): any[] {\n      return drugs.map(drug => {\n        const startDate = DrugPrescriptionService.getSessionDate()\n        const frequency = DRUG_FREQUENCIES.find(f => f.label === drug.other.frequency)\n        return {\n          'drug_inventory_id': drug.other.drug_id,\n          'equivalent_daily_dose': drug.other.dosage * frequency!.value,\n          'start_date': startDate,\n          'auto_expire_date': this.calculateExpireDate(startDate, drug.other.duration), \n          'units': drug.other.units,\n          'instructions': `${drug.label}: ${frequency!.value} ${frequency!.code} for ${drug.other.duration}`,\n          'dose': drug.other.dosage,\n          'frequency': frequency!.code,\n        }\n      })\n    },\n    isOrderComplete(drugs: Option[]): boolean {\n      return drugs.every(drug => drug.other.frequency && drug.other.duration && drug.other.dosage)\n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: 'malaria_drugs',\n          helpText: \"select Malaria Drugs\",\n          validation: (data: any) => Validation.required(data),\n          type: FieldType.TT_SELECT,\n          condition: () => this.activeField === 'malaria_drugs' && this.showMalariaDrugs,\n          unload: () => {\n            this.showMalariaDrugs = false\n            this.activeField = 'drugs_details'\n          },\n          options: () => ANTI_MALARIA_DRUGS.map(drug => ({\n            label: `${drug.name}, ${drug.frequency} time(s) a day, for ${drug.duration} days`,\n            value: drug.name,\n            other: drug\n          }))\n        },\n        {\n          id: 'drugs',\n          helpText: 'Select drugs',\n          type: FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n          validation: (data: any) => Validation.required(data),\n          options: async (_: any, filter = '', page=1, limit=10) => \n            await this.prescriptionService.loadDrugs(filter, page, limit),\n          onload: () => this.activeField = '',\n          config: {\n            showKeyboard: true,\n            hiddenFooterBtns: [\"Back\"],\n            footerBtns: [\n              {\n                name: 'Predefined Malaria Drugs',\n                color: 'primary',\n                size: 'large',\n                visible: false,\n                slot: 'end',\n                onClick: async () => {\n                  if(!this.hasMalaria && !(await alertConfirmation('Patient has no malaria. Do you still want to prescribe anti malaria drugs?'))) {\n                    return;\n                  }\n                  this.activeField = 'malaria_drugs'\n                  this.showMalariaDrugs = true\n                }\n              },\n            ]\n          }\n        },\n        {\n          id: 'drugs_details',\n          helpText: 'Complete prescribed drug details',\n          type: FieldType.TT_PRESCRIPTION_INPUT,\n          validation: (data: any) => Validation.required(data),\n          options: (f: any) => [...f.drugs, ...(f.malaria_drugs ? [f.malaria_drugs] : [])],\n          beforeNext: (data: Option[]) => {\n            if(isEmpty(data)) return false\n            if(this.isOrderComplete(data)) return true\n            toastWarning('Please complete all fields')\n            return false\n          }\n        },\n        {\n          id: 'summary',\n          helpText: 'Summary',\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (f: any) => {\n            const drugs: Option[] = f['drugs_details']\n            const columns = [ 'Drug Name','Frequency','Dosage','Duration'];\n            const rows: any[] = drugs.map(drug => [\n              drug.other.name,\n              drug.other.frequency,\n              `${drug.other.dosage} ${drug.other.units}`,\n              `${drug.other.duration} days`\n            ])\n            return [\n              {\n                label: '',\n                value: '',\n                other: { columns, rows},\n              },\n            ];\n          },\n\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Prescription.vue?vue&type=template&id=42959759&ts=true\"\nimport script from \"./Prescription.vue?vue&type=script&lang=ts\"\nexport * from \"./Prescription.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Option } from \"@/components/Forms/FieldInterface\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\nimport { DrugInterface } from \"@/interfaces/Drug\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { OrderService } from \"@/services/order_service\";\nimport { DrugService } from '../../../services/drug_service';\n\nexport const DRUG_FREQUENCIES: Array<{label: string; code: string; value: number; [x: string]: any}> = [\n  { label : \"ONCE A DAY (OD)\", code : \"OD\", value : 1 },\n  { label : \"TWICE A DAY (BD)\", code : \"BD\", value : 2 },\n  { label : \"THREE TIMES A DAY (TDS)\", code : \"TDS\", value : 3 },\n  { label : \"FOUR TIMES A DAY (QID)\", code : \"QID\", value : 4 },\n  { label : \"FIVE TIMES A DAY (5X/D)\", code : \"5X/D\", value : 5 },\n  { label : \"SIX TIMES A DAY (Q4HRS)\", code : \"Q4HRS\", value : 6 },\n  { label : \"IN THE MORNING (QAM)\", code : \"QAM\", value : 1 },\n  { label : \"ONCE A DAY AT NOON (QNOON)\", code : \"QNOON\", value : 1 },\n  { label : \"IN THE EVENING (QPM)\", code : \"QPM\", value : 1 },\n  { label : \"ONCE A DAY AT NIGHT (QHS)\", code : \"QHS\", value : 1 },\n  { label : \"EVERY OTHER DAY (QOD)\", code : \"QOD\", value : 0.5 },\n  { label : \"ONCE A WEEK (QWK)\", code : \"QWK\", value : 0.14 },\n  { label : \"ONCE A MONTH\", code : \"ONCE A MONTH\", value : 0.03 },\n  { label : \"TWICE A MONTH\", code : \"TWICE A MONTH\", value : 0.071 }\n]\n\nexport const ANTI_MALARIA_DRUGS = [\n  {\n    'drug_id': 236,\n    'duration': 3,\n    'tabs': 6,\n    'name': \"Lumefantrine + Arthemether 1 x 6\",\n    'dose_strength': 1.0,\n    'units': \"tabs\",\n    'frequency': 2\n  },\n  {\n    'drug_id': 237,\n    'duration': 3,\n    'tabs': 12,\n    'name': \"Lumefantrine + Arthemether 2 x 6\",\n    'dose_strength': 2.0,\n    'units': \"tabs\",\n    'frequency': 2\n  },\n  {\n    'drug_id': 238,\n    'duration': 3,\n    'tabs': 18,\n    'name': \"Lumefantrine + Arthemether 3 x 6\",\n    'dose_strength': 3.0,\n    'units': \"tabs\",\n    'frequency': 2\n  },\n  {\n    'drug_id': 239,\n    'duration': 3,\n    'tabs': 24,\n    'name': \"Lumefantrine + Arthemether 4 x 6\",\n    'dose_strength': 4.0,\n    'units': \"tabs\",\n    'frequency': 2\n  }\n];\n\nexport class DrugPrescriptionService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 25, providerID) \n  }\n\n  async loadDrugs(filter = '', page=1, limit=10): Promise<Option[]> {\n    const drugs: ConceptName[] = await DrugService.getDrugs({ \n      \"name\": filter, \n      \"page\": page,\n      \"page_size\": limit \n    })\n    return drugs.map(drug => ({\n      label: drug.name, value: drug.name, other: drug\n    }))\n  }\n\n  async hasMalaria() {\n    const malariaTestResult = await OrderService.getLatestMalariaTestResult(this.patientID)\n    if(malariaTestResult === \"No\") {\n      const primaryDiagnosis: any[] = await AppEncounterService.getAllValueCoded(this.patientID, 'Primary diagnosis')\n      if(primaryDiagnosis.includes('Malaria')) return true\n      const secondaryDiagnosis: any[] = await AppEncounterService.getAllValueCoded(this.patientID, 'Secondary diagnosis')\n      if(secondaryDiagnosis.includes('Malaria')) return true\n      return false\n    }\n    return malariaTestResult === \"Positive\"\n  }\n\n  createDrugOrder(drugOrders: Array<DrugInterface>){\n    return DrugOrderService.create({\n      'encounter_id': this.encounterID,\n      'drug_orders': drugOrders\n    })\n  }\n}"],"sourceRoot":""}