(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-cd588f90"],{"357c":function(t,e,a){"use strict";a.r(e);var r=a("7a23");function n(t,e,a,n,i,o){const s=Object(r["resolveComponent"])("his-standard-form");return Object(r["openBlock"])(),Object(r["createBlock"])(s,{key:t.hisFormKey,activeField:t.fieldComponent,skipSummary:!0,fields:t.fields,onOnIndex:e[0]||(e[0]=e=>t.fieldComponent=""),onOnFinish:t.onFinish},null,8,["activeField","fields","onOnFinish"])}a("14d9");var i=a("d95e"),o=a("b5e4"),s=a("2706"),l=a("b446"),c=a("ad60"),d=a("74f4"),m=a("7920"),p=a("2ef0"),g=a("9283"),u=a("76df"),h=a("e86e"),f=a("8e8b"),P=Object(r["defineComponent"])({components:{HisStandardForm:m["a"]},data:()=>({hisFormKey:0,patient:{},patientProgram:{},fields:[],fieldComponent:"",activeField:"",activeProgram:{},programSelectionFieldContext:{}}),watch:{fieldComponent(t){t&&(this.activeField=t)},activeField(t){"program_selection"===t&&(this.hisFormKey+=1)},$route:{async handler({params:t}){t&&t.patient_id&&(this.patient=t.patient_id,this.patientProgram=new d["a"](this.patient),this.fields=[this.getProgramSelectionField(),this.getProgramEnrollmentField(),...this.getProgramOutcomeDateFields(),this.getProgramStateField(),this.getTransferOutFacilityFields(),...this.getTransferoutReasonFields(),...this.getStateOutcomeDateFields()])},deep:!0,immediate:!0}},methods:{async onFinish(t){switch(this.activeField){case"program_enrollment":await this.onEnrollProgram();break;case"program_state":await this.onProgramState(t);break}f["a"].invalidate("PATIENT_PROGRAM")},async patientPrograms(){const t=await this.patientProgram.getPrograms();return t.map(t=>({label:t.program.name,value:t.program.program_id,other:{...t,programStates:t.patient_states.map(t=>({name:t.name,startDate:g["b"].toStandardHisDisplayFormat(t.start_date),endDate:t.end_date?g["b"].toStandardHisDisplayFormat(t.end_date):"N/A",actions:this.getStateActions(t)}))}}))},async allPrograms(){const t=this.programSelectionFieldContext.listData,e=await c["a"].getAllPrograms();return e.map(e=>({label:e.name,value:e.program_id,disabled:Object(p["find"])(t,{value:e.program_id}),other:{...e}}))},async programWorkflows(){const t=await c["a"].getProgramWorkflows(this.patientProgram.getProgramId());if(!Object(p["isEmpty"])(t))return t[0].states.map(t=>({label:t.name,value:t.program_workflow_state_id,other:{...t}}))},getStateActions(t){const e=[{name:"Void",color:"danger",action:async(e,a)=>{await this.onVoidState(t.patient_state_id,e,a)}}];return"Patient transferred out"===t.name&&e.push({name:"Print",color:"primary",action:async()=>await this.patientProgram.printTransferout(t.start_date)}),e},onUpdateState(){if(-1===this.patientProgram.getProgramId())return Object(o["e"])("Please select a program");this.fieldComponent="program_state"},async onProgramState(t){try{await this.patientProgram.updateState(),this.fieldComponent="program_selection",t.transfer_out_state&&await this.patientProgram.transferOutEncounter(t.transfer_out_state.other,t.reason_for_transferrout.value),Object(o["d"])("State has been updated")}catch(e){Object(o["c"])(""+e)}},async onEnrollProgram(){const t=this.patientProgram.getProgramId();if(-1===t)return Object(o["e"])("Please select a program");try{this.activeProgram=await this.patientProgram.enrollProgram(),this.fieldComponent="program_state",Object(o["d"])("Patient has been enrolled!")}catch(e){this.activeProgram={},Object(o["c"])(""+e)}},async onVoidState(t,e,a){await Object(u["a"])(async r=>{try{this.patientProgram.setStateId(t),await this.patientProgram.voidState(r),this.patientProgram.setStateId(-1),e.other.programStates.splice(a,1),Object(o["d"])("State has been voided")}catch(n){Object(o["c"])(""+n)}})},async onVoidProgram(){const t=this.patientProgram.getPatientProgramId();if(-1===t)return Object(o["e"])("Please select a program");await Object(u["a"])(async t=>{try{await this.patientProgram.voidProgram(t);const e=this.programSelectionFieldContext,a=Object(p["findIndex"])(e.listData,{value:this.patientProgram.getProgramId()});e.listData.splice(a,1),e.activeProgram={},this.patientProgram.setPatientProgramId(-1),this.patientProgram.setProgramId(-1),Object(o["d"])("Program removed")}catch(e){console.error(e),Object(o["c"])(""+e)}})},getStateOutcomeDateFields(){return Object(l["b"])({id:"state_outcome_date",helpText:"State",condition:t=>t.program_state,required:!0,minDate:()=>this.patientProgram.getProgramDate(),maxDate:()=>c["a"].getSessionDate(),estimation:{allowUnknown:!0,estimationFieldType:l["a"].MONTH_ESTIMATE_FIELD},computeValue:t=>this.patientProgram.setStateDate(t)},this.patientProgram.getProgramDate()||c["a"].getSessionDate())},getTransferOutFacilityFields(){return{id:"transfer_out_state",helpText:"Please Select facility name",type:i["b"].TT_SELECT,validation:t=>s["a"].required(t),condition:t=>"Patient transferred out"===t.program_state.label,options:(t,e="")=>Object(h["b"])(e),config:{showKeyboard:!0,isFilterDataViaApi:!0}}},getTransferoutReasonFields(){return[{id:"transferout_reasons",proxyID:"reason_for_transferrout",helpText:"Reason for Transferring out",type:i["b"].TT_SELECT,validation:t=>s["a"].required(t),condition:t=>"Patient transferred out"===t.program_state.label,options:()=>{const t=t=>({label:t,value:t});return[t("Workplace transfer/lost job-related reasons"),t("Relocation to another place/home village"),t("Transport due to long distance"),t("School"),t("Business"),t("Marriage"),t("Unknown"),t("Clinic not helping"),t("Other")]}},{id:"transferout_other",proxyID:"reason_for_transferrout",helpText:"Other Reason for Transferring out",type:i["b"].TT_TEXT,condition:t=>"Other"===t.transferout_reasons.value,validation:t=>s["a"].required(t)}]},getProgramStateField(){return{id:"program_state",helpText:"State",type:i["b"].TT_SELECT,validation:t=>s["a"].required(t),options:()=>this.programWorkflows(),condition:()=>"program_state"===this.activeField,unload:t=>this.patientProgram.setStateId(t.value)}},getProgramEnrollmentField(){return{id:"program_enrollment",helpText:"Please select a programme",type:i["b"].TT_SELECT,condition:()=>"program_enrollment"===this.activeField,unload:t=>this.patientProgram.setProgramId(t.value),options:()=>this.allPrograms(),validation:t=>s["a"].required(t),config:{showKeyboard:!0}}},getProgramOutcomeDateFields(){return Object(l["b"])({id:"program_outcome_date",helpText:"Outcome",required:!0,minDate:()=>g["b"].estimateDateFromAge(100),maxDate:()=>c["a"].getSessionDate(),condition:()=>"program_enrollment"===this.activeField,estimation:{allowUnknown:!0,estimationFieldType:l["a"].MONTH_ESTIMATE_FIELD},computeValue:t=>this.patientProgram.setProgramDate(t)},c["a"].getSessionDate())},getProgramSelectionField(){const t=t=>!Object(p["isEmpty"])(t.program_selection);return{id:"program_selection",helpText:"Programs",type:i["b"].TT_PROGRAM_SELECTION,onload:t=>{this.activeField="program_selection",this.programSelectionFieldContext=t},onValue:t=>(t&&(this.activeProgram=t.other,this.patientProgram.setProgramId(t.value),this.patientProgram.setPatientProgramId(t.other.patient_program_id),this.patientProgram.setProgramDate(g["b"].toStandardHisFormat(t.other.date_enrolled))),!0),validation:t=>s["a"].required(t),options:()=>this.patientPrograms(),config:{onVoidState:this.onVoidState,hiddenFooterBtns:["Back","Next","Clear"],footerBtns:[{name:"Void Program",slot:"end",color:"danger",state:{visible:{default:(e,a)=>t(a),onValue:(e,a)=>t(a)}},onClick:async()=>{await this.onVoidProgram()}},{name:"Update state",slot:"end",state:{visible:{default:(e,a)=>t(a),onValue:(e,a)=>t(a)}},onClick:async()=>{await this.onUpdateState()}},{name:"Enroll",color:"success",slot:"end",onClick:()=>{this.fieldComponent="program_enrollment"}}]}}}}}),b=a("6b0d"),_=a.n(b);const y=_()(P,[["render",n]]);e["default"]=y},"76df":function(t,e,a){"use strict";a.d(e,"a",(function(){return n}));var r=a("7f35");async function n(t,e="action-sheet-modal"){const a=await Object(r["c"])("Are you sure you want to void record?","Please specify reason for voiding this record",["Mistake/ Wrong Entry","Duplicate","System Error"],[{name:"Cancel",slot:"start"},{name:"Void",color:"danger",slot:"end",role:"action"}],"",e);a.selection&&"Void"===a.action&&await t(a.selection)}},7920:function(t,e,a){"use strict";var r=a("7a23");function n(t,e,a,n,i,o){return Object(r["openBlock"])(),Object(r["createBlock"])(Object(r["resolveDynamicComponent"])(t.formType),{fields:t.fields,skipSummary:t.skipSummary,activeField:t.activeField,cancelDestinationPath:t.cancelDestinationPath,onOnFinish:t.onFinish,onFinish:t.onFinishAction,onOnIndex:t.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var i=a("9441"),o=Object(r["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:i["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(t,e){this.$emit("onFinish",t,e)},onIndex(t){this.$emit("onIndex",t)}}}),s=a("6b0d"),l=a.n(s);const c=l()(o,[["render",n]]);e["a"]=c},e86e:function(t,e,a){"use strict";a.d(e,"b",(function(){return i})),a.d(e,"d",(function(){return o})),a.d(e,"c",(function(){return s})),a.d(e,"f",(function(){return l})),a.d(e,"e",(function(){return c})),a.d(e,"a",(function(){return d})),a.d(e,"g",(function(){return m})),a.d(e,"h",(function(){return p}));var r=a("5713"),n=a("2ef0");async function i(t=""){const e=await r["a"].getFacilities({name:t});return e.filter(t=>!Object(n["isEmpty"])(t)&&""!=t.name.trim()).map(t=>({label:t.name,value:t.location_id,other:t}))}async function o(t=""){const e=await r["a"].getLabs({search_name:t});return e.map(t=>({label:t,value:t}))}async function s(t=""){const e=await r["a"].getFacilities({name:t,tag:"Facility adult sections"});return e.map(t=>({label:t.name,value:t.name,other:t}))}async function l(){const t=await r["a"].getSpecialistClinics();return t.map(t=>({label:t.name,value:t.name,other:t}))}async function c(){const t=await r["a"].getRegions();return t.map(t=>({label:t.name,value:t.region_id,other:t}))}async function d(t){const e=await r["a"].getDistricts(t);return e.map(t=>({label:t.name,value:t.district_id,other:t}))}async function m(t,e=""){const a=await r["a"].getTraditionalAuthorities(t,e);return a.map(t=>({label:t.name,value:t.traditional_authority_id,other:t}))}async function p(t,e=""){const a=await r["a"].getVillages(t,e);return a.map(t=>({label:t.name,value:t.village_id,other:t}))}}}]);
//# sourceMappingURL=chunk-cd588f90.4c488ac4.js.map