{"version":3,"sources":["webpack:///./src/components/FormElements/SelectMixin.vue?49dd","webpack:///./src/components/FormElements/BaseTextInput.vue?fc25","webpack:///./src/components/FormElements/BaseTextInput.vue","webpack:///./src/components/FormElements/BaseTextInput.vue?8f59","webpack:///./src/components/FormElements/FieldMixin.vue","webpack:///./src/components/FormElements/FieldMixin.vue?20d3","webpack:///./src/components/FormElements/HisRadiologyPicker.vue?1258","webpack:///./src/components/FormElements/SelectMixin.vue","webpack:///./src/components/FormElements/SelectMixin.vue?5eed","webpack:///./src/apps/OPD/services/patient_radiology_service.ts","webpack:///./src/components/FormElements/HisRadiologyPicker.vue?0f0b","webpack:///./src/components/FormElements/HisRadiologyPicker.vue","webpack:///./src/components/FormElements/HisRadiologyPicker.vue?0c6d","webpack:///./src/components/FormElements/BaseTextInput.vue?269c","webpack:///./src/components/Keyboard/HisKeyboard.vue?8c35","webpack:///./src/components/Keyboard/HisKeyboard.vue","webpack:///./src/components/Keyboard/HisKeyboard.vue?8916"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_input","_resolveComponent","_openBlock","_createBlock","ref","class","modelValue","text","$event","type","disabled","readonly","readOnly","autocapitalize","defineComponent","name","components","IonInput","setup","activePlatformProfile","usePlatform","computed","value","keyboard","data","watch","val","this","$emit","props","required","String","default","Boolean","__exports__","emits","config","Object","preset","label","defaultValue","Function","fdata","cdata","options","activationState","onValue","onValueUpdate","footerButtonEvent","IonList","IonItem","IonLabel","HisTextInput","HisKeyboard","ViewPort","IonGrid","IonRow","IonCol","IonInfiniteScroll","IonInfiniteScrollContent","IonContent","mixins","FieldMixinVue","showKeyboard","selected","filter","filtered","QWERTY","listData","infiniteScroll","enabled","page","limit","threshold","handler","async","created","event","isPlainObject","onClickComponentEvents","e","setValue","deep","immediate","isFilterDataViaApi","foundOption","find","item","isMatch","methods","onTTsetValueComponentEvent","itemA","itemB","match","RegExp","clearSelection","onKbValue","keypress","handleVirtualInput","evt","items","push","target","complete","PatientRadiologyService","AppEncounterService","constructor","patientID","providerID","super","radiologyType","ConceptService","getConceptSet","patientId","path","Service","getJson","error","patient","getRadiologyObs","getID","length","thirdpartyapps","getThirdpartyApps","url","app","isEmpty","savedObsData","accessionNumber","order","children","accession_number","orders","Promise","all","map","value_text","obs_id","patientData","getFullName","getAge","getBirthdate","getGender","getNationalID","getEncounterID","getDate","provider","getUserName","getUserID","getUserRoles","postJson","lastAccessionNumber","getAccesionNumber","observations","concept_id","getConceptName","child","value_coded","printService","PrintoutService","patientNationalId","patientName","urls","fullXrayOrder","HisDate","toStandardHisDisplayFormat","obs_datetime","batchPrintLbls","_hoisted_1","style","_component_ion_text","_component_ion_label","_component_ion_chip","_component_ion_col","_component_ion_row","_component_ion_item","_component_ion_list","_component_ion_checkbox","_component_ion_grid","_component_view_port","_createElementBlock","_createVNode","showFull","_withCtx","size","_Fragment","_renderList","checkedItems","index","key","color","onClick","uncheck","_createTextVNode","_toDisplayString","_","overflowY","height","margin","getSpecificRadiologyOrders","detail","ActiveCategory","_createElementVNode","activeCategoryItems","entry","isChecked","slot","onIonChange","onselect","_createCommentVNode","IonCheckbox","IonText","IonChip","SelectMixin","radiologyOrdersList","clearValue","group","option","getRadiologyList","mapListToOptions","getChecked","$nextTick","opt","checked","ok","category","radiologyOrders","list","other","parent","forEach","mounted","init","activated","_hoisted_2","_component_base_keyboard","activeLayout","layout","onKeyPress","BaseKeyboard","initalKeyboardName","kbConfig","Array","switchKeyboard","isFunctionKey","kbIndex","KEY_BTN_NAV","btn","indexOf"],"mappings":"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","file":"js/TouchFormElement40.08496626.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SelectMixin.vue?vue&type=style&index=0&id=f5aee92a&scoped=true&lang=css\"","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_input = _resolveComponent(\"ion-input\")!\n\n  return (_openBlock(), _createBlock(_component_ion_input, {\n    ref: \"input\",\n    class: \"input_display\",\n    modelValue: _ctx.text,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.text) = $event)),\n    type: _ctx.type,\n    disabled: _ctx.disabled,\n    readonly: _ctx.readOnly,\n    autocapitalize: \"sentences\"\n  }, null, 8, [\"modelValue\", \"type\", \"disabled\", \"readonly\"]))\n}","\nimport { computed, defineComponent } from \"vue\";\nimport { IonInput } from \"@ionic/vue\";\nimport usePlatform from \"@/composables/usePlatform\"\n\nexport default defineComponent({\n  name: \"HisInput\",\n  components: { IonInput },\n  setup() {\n    const { activePlatformProfile } = usePlatform()\n    const readOnly = computed(() => activePlatformProfile.value.keyboard === 'HIS_KEYBOARD_ONLY')\n    return {\n      readOnly\n    }\n  },\n  data:() => ({\n    text: '' as string | number\n  }),\n  watch: {\n    value(val: number | string) {\n      this.text = val\n    },\n    text(text: string | number) {\n      this.$emit('onValue', text)\n    }\n  },\n  props: {\n    value: {\n      required: false,\n    },\n    type: {\n      type: String,\n      default: () => \"text\",\n    },\n    disabled: {\n      type: Boolean,\n      default: () => false,\n    }\n  },\n});\n","import { render } from \"./BaseTextInput.vue?vue&type=template&id=64dded10&scoped=true&ts=true\"\nimport script from \"./BaseTextInput.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseTextInput.vue?vue&type=script&lang=ts\"\n\nimport \"./BaseTextInput.vue?vue&type=style&index=0&id=64dded10&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-64dded10\"]])\n\nexport default __exports__","\nimport { isPlatform } from '@ionic/core'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n    emits: [\n        'onValue',\n        'onFieldActivated'\n    ],\n    props: {\n        config: {\n            type: Object,\n            default: () => ({})\n        },\n        preset: {\n            type: Object,\n            default: () => ({\n                label: '',\n                value: ''\n            })\n        },\n        defaultValue: {\n            type: Function\n        },\n        fdata: {\n            type: Object,\n            required: true\n        },\n        cdata: {\n            type: Object,\n            required: true\n        },\n        options: {\n            type: Function,\n            default: () => ([])\n        },\n        activationState: {\n            type: String,\n            default: ''\n        },\n        onValue: {\n            type: Function\n        },\n        onValueUpdate: {\n            type: Function\n        },\n        footerButtonEvent: {\n            type: Object\n        }\n    }\n})\n","import script from \"./FieldMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./FieldMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./HisRadiologyPicker.vue?vue&type=style&index=0&id=0603a79d&scoped=true&lang=css\"","\nimport { defineComponent } from 'vue'\nimport HisKeyboard from \"@/components/Keyboard/HisKeyboard.vue\"\nimport handleVirtualInput from \"@/components/Keyboard/KbHandler\"\nimport HisTextInput from \"@/components/FormElements/BaseTextInput.vue\";\nimport { FooterBtnEvent, Option } from '../Forms/FieldInterface'\nimport { QWERTY } from \"@/components/Keyboard/HisKbConfigurations\"\nimport ViewPort from \"@/components/DataViews/ViewPort.vue\"\nimport FieldMixinVue from './FieldMixin.vue';\nimport {\n    IonList, \n    IonItem, \n    IonLabel, \n    IonGrid, \n    IonRow, \n    IonCol,\n    IonInfiniteScroll, \n    IonInfiniteScrollContent, \n    IonContent\n} from \"@ionic/vue\"\nimport { find, isPlainObject } from 'lodash';\n\nexport default defineComponent({\n    components: { \n        IonList, \n        IonItem, \n        IonLabel, \n        HisTextInput, \n        HisKeyboard, \n        ViewPort, \n        IonGrid, \n        IonRow, \n        IonCol, \n        IonInfiniteScroll, \n        IonInfiniteScrollContent, \n        IonContent \n    },\n    mixins: [FieldMixinVue],\n    data: () => ({ \n        showKeyboard: false,\n        selected: '',\n        filter: '',\n        filtered: [] as any,\n        keyboard: QWERTY,\n        listData: [] as Array<Option>,\n        infiniteScroll: {\n            enabled: false,\n            page: 1,\n            limit: 10,\n            threshold: '100px',\n            handler: async (filter: string, page: number, limit: number) => [] as Option[]\n        },\n    }),\n    created(){\n        this.showKeyboard = this.config?.showKeyboard === true\n        this.infiniteScroll.enabled = this.config?.infiniteScroll?.enabled === true\n        this.infiniteScroll.page = this.config?.infiniteScroll?.page || 1\n        this.infiniteScroll.limit = this.config?.infiniteScroll?.limit || 10\n        this.infiniteScroll.threshold = this.config?.infiniteScroll?.threshold || '100px'\n        this.infiniteScroll.handler = this.config?.infiniteScroll?.handler \n    },\n    watch: {\n        footerButtonEvent : {\n            handler(event: FooterBtnEvent) {\n                if (isPlainObject(event.onClickComponentEvents)) {\n                    const e: any = event?.onClickComponentEvents || {}\n                    if (e  && typeof e.setValue === 'function') {\n                        const value = e.setValue(event)\n                        if (typeof value === 'string') {\n                            this.filter = value\n                            this.selected = value\n                            this.$emit('onValue', { label: value, value })\n                        }\n                    }\n                }\n            },\n            deep: true\n        },\n        listData: {\n            handler(data: any) { if (data) this.filtered = data },\n            deep: true,\n            immediate: true\n        },\n        filter: {\n            async handler(filter: string) {\n                // restore initial list data if filter used is empty\n                if (!filter) {\n                    this.filtered = this.listData\n                    return\n                }\n                /** Filter data from an external source  if config is true*/\n                if (this.config?.isFilterDataViaApi) {\n                    this.filtered = await this.options(this.fdata, filter)\n                    // Find and select data that matches selected value\n                    if (this.selected === this.filter) {\n                        const foundOption = find(this.filtered, { label: this.filter})\n                        if (foundOption) {\n                            this.$emit('onValue', foundOption)\n                        }\n                    }\n                    return\n                }\n                /** Reset page if infinite scroll is enabled */\n                if(this.infiniteScroll.enabled) {\n                    this.infiniteScroll.page = 1\n                }\n                // Filter locallist\n                this.filtered = this.listData.filter(item => this.isMatch(item.label, this.filter))\n\n            },\n            immediate: true\n        },\n    },\n    methods: {\n        /**\n         * Special method that the TouchScreenForm Parent component form \n         * triggers to change value\n         * @param value \n         */\n        onTTsetValueComponentEvent(value: string) {\n            if (typeof value === 'string') {\n                this.filter = value\n                this.selected = value\n                this.$emit('onValue', { label: value, value })\n            }\n        },\n        isMatch(itemA: string, itemB: string){\n            return itemA.match(new RegExp(itemB, 'i')) \n        },\n        clearSelection() {\n            this.filter = ''\n            this.selected = ''\n        },\n        onKbValue(text: any, filtered = true) {\n            // check if a selected item from list matches keyboard input. \n            // We dont want selected options to filter anything\n            if (!filtered || this.selected === text) return\n\n            this.filter = text\n            this.selected = this.filter\n        },\n        keypress(text: any){\n            if (!this.filter) this.selected = ''\n            this.filter = handleVirtualInput(text, this.selected)\n            this.selected = this.filter\n        },\n        async pushData(evt: any) {\n            if(this.infiniteScroll.enabled && typeof this.infiniteScroll.handler === 'function') {\n                this.infiniteScroll.page++\n                const items: Option[] = await this.infiniteScroll.handler(this.filter, this.infiniteScroll.page, this.infiniteScroll.limit)\n                this.listData.push(...items)\n            }\n            evt.target.complete()\n        }\n    }\n})\n","import script from \"./SelectMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectMixin.vue?vue&type=script&lang=ts\"\n\nimport \"./SelectMixin.vue?vue&type=style&index=0&id=f5aee92a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f5aee92a\"]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\nimport { PrintoutService } from \"@/services/printout_service\";\nimport { Service } from \"@/services/service\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\n\nexport class PatientRadiologyService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 121, providerID) \n  }\n\n  static async getRadiologyList(radiologyType: string, filter = '') {\n    return ConceptService.getConceptSet(radiologyType, filter) \n  }\n\n  async getRadiologyObs(patientId: number) {\n    try {\n      const path = 'radiology/radiology_orders?patient_id='+patientId\n      const data = await Service.getJson(path)\n      return data\n    } catch (error) {\n      return 0\n    }\n  }\n\n  async showPreviousRadiolgy(patient: any): Promise<boolean> {\n    if ( (await this.getRadiologyObs(patient.getID())).length > 0 ) {\n      return true\n    }\n    return false\n  }\n\n  async getPreviousRadiologyExaminations(patient: any): Promise<any>{\n    const thirdpartyapps  =  await Service.getThirdpartyApps()\n    let url = '' \n    for (const app of thirdpartyapps) {\n      if(app.name == 'pacs') {\n        url = app.url\n      }\n    }\n    if (isEmpty(url)) {\n      url = `opd/encounters/radiology/${this.patientID}`\n    }\n    const data =  await this.getRadiologyObs(patient.getID())\n    if(!(data.length > 0)) { \n      return false;\n    } else {\n      return { data: data, url: url}\n    }\n  }\n\n  async submitToPacs(savedObsData: any, patient: any) {\n    let accessionNumber\n    for(const order of savedObsData) {\n      accessionNumber = order.children[0].accession_number\n    }\n    const orders = await Promise.all(savedObsData.map(async (order: any) => ({\n      \"main_value_text\": order.value_text,\n      \"obs_id\": order.obs_id,\n      \"sub_value_text\": order.children[0].value_text\n    })))\n    const patientData = {\n      \"patient_name\": patient.getFullName(),\n      \"patientAge\": patient.getAge(),\n      \"patientDOB\": patient.getBirthdate(),\n      \"patientGender\": patient.getGender(),\n      \"national_id\": patient.getNationalID(),\n      \"person_id\": patient.getID(),\n      \"encounter_id\": this.getEncounterID(),\n      \"date_created\": this.getDate(),\n      \"accession_number\": accessionNumber\n    }\n    const provider = {\n      \"username\": Service.getUserName(),\n      \"userID\": Service.getUserID(),\n      \"userRoles\": Service.getUserRoles(),\n    }\n    return Service.postJson(`radiology/radiology_orders`, {\n      'patient_details': patientData,\n      'physician_details': provider,\n      'radiology_orders': orders\n    }) \n  }\n\n  async getAccesionNumber() {\n    return (await Service.getJson(`sequences/next_accession_number`))['accession_number']\n  }\n\n  async obsObj(data: Array<any>) {\n    const lastAccessionNumber = await this.getAccesionNumber()\n    const observations = [] as Array<any>\n    for (const order of data) {\n      observations.push(\n        {\n          'concept_id': order.concept_id, \n          'value_text':  await ConceptService.getConceptName(order.child.concept_id),\n          child: [{\n            'concept_id': order.child.concept_id,\n            'accession_number': lastAccessionNumber,\n            'value_text': await ConceptService.getConceptName(order.child.value_coded)\n          }]\n        }\n      )\n    }\n    return observations\n  } \n\n  async printOrders(orders: any, patient: Patientservice) {\n    const printService = new PrintoutService()\n    const patientNationalId = patient.getNationalID()\n    const patientName = patient.getFullName()\n    const urls: string[] = [];\n    for(const order of orders) {\n      const fullXrayOrder = order.value_text +\": \"+ order.children[0].value_text\n      urls.push(`/radiology/barcode`\n        + `?accession_number=${order.children[0].accession_number}`\n        + `&patient_national_id=${patientNationalId}`\n        + `&patient_name=${patientName}`\n        + `&radio_order=${fullXrayOrder}`\n        + `&date_created=${HisDate.toStandardHisDisplayFormat(order.obs_datetime)}`\n      )\n    }\n\n    await printService.batchPrintLbls(urls, true)\n  }\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0603a79d\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { style: {} }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_text = _resolveComponent(\"ion-text\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_view_port = _resolveComponent(\"view-port\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_view_port, {\n      showFull: !_ctx.showKeyboard,\n      style: {\"padding\":\"0\"}\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"12\" }, {\n                  default: _withCtx(() => [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.checkedItems, (item, index) => {\n                      return (_openBlock(), _createElementBlock(\"span\", { key: index }, [\n                        _createVNode(_component_ion_chip, {\n                          color: \"danger\",\n                          onClick: ($event: any) => (_ctx.uncheck(item))\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_ion_label, null, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(_toDisplayString(item.label), 1)\n                                  ]),\n                                  _: 2\n                                }, 1024)\n                              ]),\n                              _: 2\n                            }, 1024)\n                          ]),\n                          _: 2\n                        }, 1032, [\"onClick\"])\n                      ]))\n                    }), 128))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"4\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'80vh', margin: 0} }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.listData, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            key: index,\n                            onClick: ($event: any) => (_ctx.getSpecificRadiologyOrders(data.value)),\n                            detail: true,\n                            color: _ctx.ActiveCategory === data.label ? 'lightblue':''\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(data.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024)\n                                ]),\n                                _: 2\n                              }, 1024)\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\", \"color\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.ActiveCategory)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'78vh'}\n                    }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", _hoisted_1, [\n                          _createVNode(_component_ion_list, { class: \"view-port-content\" }, {\n                            default: _withCtx(() => [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.activeCategoryItems, (entry, index) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  key: index,\n                                  color: entry.isChecked ? 'lightblue':''\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withCtx(() => [\n                                        _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                          default: _withCtx(() => [\n                                            _createTextVNode(_toDisplayString(entry.label), 1)\n                                          ]),\n                                          _: 2\n                                        }, 1024)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_checkbox, {\n                                      slot: \"end\",\n                                      modelValue: entry.isChecked,\n                                      \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event),\n                                      onIonChange: (e) => _ctx.onselect(entry, e),\n                                      disabled: entry?.disabled\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\", \"disabled\"])\n                                  ]),\n                                  _: 2\n                                }, 1032, [\"color\"]))\n                              }), 128))\n                            ]),\n                            _: 1\n                          })\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"showFull\"])\n  ]))\n}","\nimport { Option } from \"../Forms/FieldInterface\";\nimport { defineComponent } from \"vue\";\nimport { IonCheckbox, IonText, IonChip } from \"@ionic/vue\";\nimport SelectMixin from \"@/components/FormElements/SelectMixin.vue\"\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\"\nimport { isEmpty } from \"lodash\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\n\nexport default defineComponent({\n  components: { IonCheckbox, IonText, IonChip },\n  name: \"HisRadiologyPicker\",\n  mixins: [SelectMixin],\n  data: () => ({\n    radiologyOrdersList: {} as Record<string, Option[]>,\n    ActiveCategory: '',\n  }),\n  methods: {\n    clearValue(){\n      for (const group in this.radiologyOrdersList) {\n        this.radiologyOrdersList[group] = this.radiologyOrdersList[group].map(option => {\n          option.isChecked = false\n          return option\n        })\n      }\n    },\n    async init() {\n      this.$emit('onFieldActivated', this)\n      const data = await PatientRadiologyService.getRadiologyList('Radiology Orders')\n      this.listData = this.mapListToOptions(data)\n      this.$emit('onValue', this.getChecked(this.radiologyOrdersList))\n    },\n    async onselect(option: Option, event: any){\n      this.$nextTick(async ()=> {\n        const opt = {...option}\n        opt.isChecked = event.target.checked\n\n        if (this.onValue && opt.isChecked) {\n          const ok = await this.onValue(opt)\n          if (!ok) {\n            return event.target.checked = false\n          }\n        }\n        if (this.onValueUpdate) {\n          this.radiologyOrdersList = await this.onValueUpdate({...this.radiologyOrdersList}, opt)\n        }\n        this.$emit('onValue', this.getChecked(this.radiologyOrdersList))\n      })\n    },\n    async getSpecificRadiologyOrders(category: string) {\n      if (!(category in this.radiologyOrdersList)) {\n        const radiologyOrders = await PatientRadiologyService.getRadiologyList(category)\n        this.radiologyOrdersList[category] = this.mapListToOptions(radiologyOrders, category)\n      }\n      this.ActiveCategory = category\n    },\n    mapListToOptions(list: ConceptName[], category = ''){\n      if(isEmpty(list)) return []\n      return list.map(item => {\n        const option: Option = {\n          label: item.name,\n          value: item.name,\n          isChecked: false,\n          other: item\n        }\n        if(category) option.other.parent = category\n        return option\n      })\n    },\n    uncheck(option: Option){\n      this.radiologyOrdersList[option.other.parent].forEach(opt => {\n        if(opt.label === option.label) opt.isChecked = false\n      })\n    },\n    getChecked(list: Record<string, Option[]>) {\n      const checkedItems: Array<Option> = [];\n      for (const group in list) {\n        checkedItems.push(\n          ...list[group].filter(option => option.isChecked)\n        )\n      }\n\n      return checkedItems\n    },\n  },\n  computed: {\n    checkedItems(): Option[] {\n      return this.getChecked(this.radiologyOrdersList)\n    },\n    activeCategoryItems(): Option[] {\n      return this.radiologyOrdersList[this.ActiveCategory]\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  activated() {\n    this.init()\n  }\n})\n","import { render } from \"./HisRadiologyPicker.vue?vue&type=template&id=0603a79d&scoped=true&ts=true\"\nimport script from \"./HisRadiologyPicker.vue?vue&type=script&lang=ts\"\nexport * from \"./HisRadiologyPicker.vue?vue&type=script&lang=ts\"\n\nimport \"./HisRadiologyPicker.vue?vue&type=style&index=0&id=0603a79d&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0603a79d\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BaseTextInput.vue?vue&type=style&index=0&id=64dded10&scoped=true&lang=css\"","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"his-floating-keyboard\" }\nconst _hoisted_2 = { class: \"his-floating-keyboard-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_base_keyboard = _resolveComponent(\"base-keyboard\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.activeLayout, (layout, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n          _createVNode(_component_base_keyboard, {\n            layout: layout,\n            onKeyPress: _ctx.keypress\n          }, null, 8, [\"layout\", \"onKeyPress\"])\n        ]))\n      }), 128))\n    ])\n  ]))\n}","\nimport { defineComponent } from \"vue\";\nimport { KEY_BTN_NAV } from \"@/components/Keyboard/HisKbConfigurations\"\nimport BaseKeyboard from \"@/components/Keyboard/BaseKeyboard.vue\";\nexport default defineComponent({\n  components: { BaseKeyboard},\n  props: {\n    initalKeyboardName: {\n      type: String\n    },\n    kbConfig: {\n      type: Array,\n      required: true\n    },\n    onKeyPress: {\n      type: Function,\n      required: true,\n    },\n  },\n  data: () => ({\n    activeLayout: {} as Array<any>\n  }),\n  watch: {\n    initalKeyboardName: {\n      handler(name: string) {\n        if (name) {\n          this.$nextTick(() => this.switchKeyboard(name))\n        }\n      },\n      immediate: true\n    },\n    kbConfig: {\n      handler(keyboard: Array<any>){\n        if(keyboard) {\n          this.activeLayout = keyboard\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    keypress(key: any) {\n      if (!this.isFunctionKey(key)) {\n        this.onKeyPress(key);\n      }\n    },\n    isFunctionKey(key: string) {  \n      if (this.switchKeyboard(key)) {\n        return true\n      }\n      return false\n    },\n    switchKeyboard(key: string): boolean {\n      const kbIndex = KEY_BTN_NAV.map(item => item.btn).indexOf(key)\n      if (kbIndex >= 0) {\n        this.activeLayout = KEY_BTN_NAV[kbIndex].keyboard\n        return true\n      }\n      return false\n    }\n  },\n});\n","import { render } from \"./HisKeyboard.vue?vue&type=template&id=7167c7d4&ts=true\"\nimport script from \"./HisKeyboard.vue?vue&type=script&lang=ts\"\nexport * from \"./HisKeyboard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}