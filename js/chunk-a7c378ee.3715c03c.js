(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a7c378ee"],{"640e":function(t,e,i){"use strict";i.r(e);var n=i("7a23");function a(t,e,i,a,o,s){const r=Object(n["resolveComponent"])("his-standard-form"),c=Object(n["resolveComponent"])("ion-page");return Object(n["openBlock"])(),Object(n["createBlock"])(c,null,{default:Object(n["withCtx"])(()=>[Object(n["createVNode"])(r,{cancelDestinationPath:t.cancelDestination,fields:t.fields,onFinishAction:t.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])]),_:1})}i("14d9");var o=i("7920"),s=i("7365"),r=i("97ed"),c=i("2706"),l=i("d95e"),d=i("66fd"),u=i("5a0c"),h=i.n(u),p=Object(n["defineComponent"])({components:{HisStandardForm:o["a"]},mixins:[s["a"]],data:()=>({radiologyService:{},isPacsEnabled:!1,previousRadiologyExaminations:{}}),watch:{ready:{async handler(t){t&&(this.radiologyService=new r["a"](this.patientID,this.providerID),this.isPacsEnabled=await d["b"].isPACsEnabled(),this.previousRadiologyExaminations=await this.radiologyService.showPreviousRadiolgy(this.patient),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(t,e){const i=await Promise.all(e.radiology);await this.radiologyService.createEncounter();const n=await this.radiologyService.obsObj(i),a=await this.radiologyService.saveObservationList(n);if(await this.radiologyService.printOrders(a,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(a,this.patient)}catch(o){console.log(o)}this.gotoPatientDashboard()},async getTableData(){const t=await this.radiologyService.getPreviousRadiologyExaminations(this.patient),e=t.data,i=t.url,n=["Accession#","Body Part","Order Type","Ordered","Result"],a=[];for(const o in e){const t=[e[o].children[0].accession_number,e[o].value_text,e[o].children[0].value_text,h()(e[o].obs_datetime).format("DD/MMM/YYYY"),`<ion-button slot="end" size="large" href="${i}" color="success">\n            View\n          </ion-button>`];a.push(t)}return[{label:"",value:"",other:{columns:n,rows:a}}]},getFields(){return[{id:"radiology_results",helpText:"Previous Radiology Examinations",condition:()=>this.previousRadiologyExaminations,type:l["b"].TT_TABLE_VIEWER,options:t=>this.getTableData(),config:{hiddenFooterBtns:["Clear"]}},{id:"radiology",helpText:"Radiology Examination",type:l["b"].TT_RADIOLOGY_PICKER,validation:t=>c["a"].required(t),config:{hiddenFooterBtns:[this.disableBackBtn()]},computedValue:t=>t.map(async t=>({...await this.radiologyService.buildValueCoded("Radiology Orders",t.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(t.other.parent,t.other.concept_id)]}))}]},disableBackBtn(){return this.previousRadiologyExaminations?"":"Back"}}}),f=i("6b0d"),m=i.n(f);const g=m()(p,[["render",a]]);e["default"]=g},7365:function(t,e,i){"use strict";i("14d9"),i("13d5");var n,a=i("7a23"),o=i("ad60"),s=i("2ef0"),r=i("0fa1"),c=i("7f35"),l=i("9283");(function(t){t["SET_PROVIDER"]="SET_PROVIDER",t["CHANGE_SESSION_DATE"]="change_session_date",t["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",t["CHANGE_PATIENT_OUTCOME"]="change_outcome",t["CONTINUE"]="continue",t["EXIT"]="exit"})(n||(n={}));const d=t=>l["b"].toStandardHisDisplayFormat(t),u={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:t})=>{const e=await Object(c["a"])("Data Integrity Issue Found","Patient died on "+d(t),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===e?n.GO_TO_PATIENT_DASHBOARD:"Change outcome"===e?n.CHANGE_PATIENT_OUTCOME:n.CONTINUE}},conditions:{outcome(t){return"Patient died"===t},outcomeStartDate(t,{sessionDate:e}){return e>=t}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:t,sessionDate:e})=>{const i=await Object(c["a"])("Data integrity issue found","",`Session date ${d(e)} is less than birth date of ${d(t)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===i?n.CHANGE_SESSION_DATE:n.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(t,{sessionDate:e}){return e<t}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:t,encounterName:e,sessionDate:i,apiDate:a})=>{const o=await Object(c["c"])("Please select a provider for "+e,`BDE: ${d(i)} | Current: ${d(a)}`,t,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:n.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:n.SET_PROVIDER}}},conditions:{isBdeMode(t){return t}}}};var h=i("c21d"),p=i("7920"),f=i("b5e4"),m=i("8e8b"),g=i("b432"),b=i("5a0c"),y=i.n(b),v=i("cc6f"),D=Object(a["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({offlineID:null,patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{age:-1,gender:"",birthDate:"",sessionDate:"",apiDate:"",isEnrolledInProgam:!1,encounterName:"N/A",providers:[],isBdeMode:!1,outcome:"",outcomeStartDate:"",village:"",district:"",currentTA:""},formLabel:"",ready:!1}),created(){this.$route.params.patient_id&&(this.offlineID=this.$route.params.patient_id,this.patientID=parseInt(""+this.$route.params.patient_id),this.goOffline()?this.initOfflineData():m["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(t=>{this.patient=t,Object(s["isEmpty"])(this.patient)||Object(g["a"])().cachePatient(this.patient),this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0}).catch(t=>console.log(t))}).catch(()=>{this.goOffline()&&this.initOfflineData()})}))},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{goOffline(){return!g["c"].value||g["b"].value},isOnline(){return g["c"].value},isOfflineMode(){return g["b"].value},initOfflineData(){var t;const e=Object(g["a"])().findByID(this.offlineID),i=null===e||void 0===e||null===(t=e.personParams)||void 0===t?void 0:t.person;i&&(this.facts.birthDate=i.birthdate,this.facts.age=y()(o["a"].getSessionDate()).diff(this.facts.birthDate,"years"),this.facts.district=i.current_district,this.facts.village=i.current_village,this.facts.currentTA=i.current_traditional_authority,this.facts.gender=i.gender,this.ready=!0)},async saveFormEncounterAndProceed(t={}){let e="Pending",i=!1,n=null;try{n=await this.resolveObs(t.computedData)}catch(a){return console.error(""+a),Object(f["e"])("Unable to resolve observations")}if(!this.isOfflineMode()){try{const a=new v["a"](this.patientID,t.encounterTypeID,this.providerID);await a.createEncounter()&&await a.saveObservationList(n)&&(e="Success",i=!0),"function"===typeof t.callback&&await t.callback(a)}catch(a){i=!1,/NetworkError|Failed to fetch/i.test(""+a)?e="NetworkError":(e="Exception",console.error("Exception while saving an encounter: "+a))}if("Exception"===e)return Object(f["c"])("An error has occured!")}Object(g["a"])().saveObsOffline({observations:n,id:this.offlineID,uploadStatus:e,encounterName:this.$route.name,encounterTypeID:t.encounterTypeID,meta:t.formData,labOrders:t.labOrders,created:i}),t.skipNextTask||this.nextTask()},runflowState(t,e=null){const i={};if(i[n.SET_PROVIDER]=t=>{const[e]=t.split(" "),i=Object(s["find"])(this.providers,{username:e});return i&&(this.providerID=i.person_id),n.CONTINUE},i[n.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),n.EXIT),i[n.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),n.EXIT),i[n.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),n.EXIT),t in i)return i[t](e)},async checkEncounterGuidelines(){const t=Object(h["a"])(this.facts,u);for(const s in t){var e,i;const r=t[s];if(null!==r&&void 0!==r&&null!==(e=r.actions)&&void 0!==e&&e.alert){var a;const t=this.runflowState(await(null===r||void 0===r||null===(a=r.actions)||void 0===a?void 0:a.alert(this.facts)));if(t===n.EXIT)return}if(null!==r&&void 0!==r&&null!==(i=r.actions)&&void 0!==i&&i.selection){var o;const t=await(null===r||void 0===r||null===(o=r.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(t.flowState,t.value)}}},async setEncounterFacts(){try{const t=await m["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.isEnrolledInProgam=t.programID===o["a"].getProgramID(),this.facts.outcome=t.outcome,this.facts.outcomeStartDate=t.startDate}catch(t){console.error(t),Object(f["c"])(""+t)}this.facts.currentTA=this.patient.getCurrentTA(),this.facts.district=this.patient.getCurrentDistrict(),this.facts.village=this.patient.getCurrentVillage(),this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.age=this.patient.getAge(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await m["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((t,e)=>{const i=t.username.toUpperCase(),n=e.username.toUpperCase();return i<n?-1:i>n?1:0}).map(t=>{var e;let i=""+t.username;if(!Object(s["isEmpty"])(null===t||void 0===t||null===(e=t.person)||void 0===e?void 0:e.names)){var n;const[e]=(null===(n=t.person)||void 0===n?void 0:n.names)||[];i+=` (${e.given_name} ${e.family_name})`}return i}))},toOption(t,e={}){return{label:t,value:t,other:e}},mapStrToOptions(t){return t.map(t=>"string"===typeof t||"number"===typeof t?{label:t,value:t}:t)},patientDashboardUrl(){return"/patient/dashboard/"+this.$route.params.patient_id},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},async nextTask(){try{const t=this.offlineID||this.patientID;await Object(r["b"])(t,this.$router,this.$route)}catch(t){console.error("Workflow error "+t),this.gotoPatientDashboard()}},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(t,e={}){return{label:t,value:"",other:{...e,values:this.yesNoOptions()}}},mapOptions(t){return t.map(t=>({label:t,value:t}))},toConditionalOptions(t){const e=[];for(const i of t)("boolean"!==typeof i[1]||i[1])&&e.push(this.toOption(i[0]));return e},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(t,e=""){const i=Object.values(t).filter(t=>t&&(t.tag===e||""===e)).reduce((t,e)=>{const i=e.obs?e.obs:e;return Array.isArray(i)?t=t.concat(i):"function"===typeof i?t.push(i()):t.push(i),t},[]);return Promise.all(i)},inArray(t,e){try{return t.filter(t=>e(t)).length>0}catch(i){return!1}},validateSeries(t){try{for(const e in t){const i=t[e]();if(i)return i}}catch(e){return[e]}}}});const _=D;e["a"]=_},7920:function(t,e,i){"use strict";var n=i("7a23");function a(t,e,i,a,o,s){return Object(n["openBlock"])(),Object(n["createBlock"])(Object(n["resolveDynamicComponent"])(t.formType),{fields:t.fields,skipSummary:t.skipSummary,activeField:t.activeField,cancelDestinationPath:t.cancelDestinationPath,onOnFinish:t.onFinish,onFinish:t.onFinishAction,onOnIndex:t.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=i("9441"),s=Object(n["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(t,e){this.$emit("onFinish",t,e)},onIndex(t){this.$emit("onIndex",t)}}}),r=i("6b0d"),c=i.n(r);const l=c()(s,[["render",a]]);e["a"]=l},"97ed":function(t,e,i){"use strict";i.d(e,"a",(function(){return l}));i("14d9");var n=i("cc6f"),a=i("8158"),o=i("b89f"),s=i("1c74"),r=i("2ef0"),c=i("9283");class l extends n["a"]{constructor(t,e){super(t,121,e)}static async getRadiologyList(t,e=""){return a["a"].getConceptSet(t,e)}async getRadiologyObs(t){try{const e="radiology/radiology_orders?patient_id="+t,i=await s["e"].getJson(e);return i}catch(e){return 0}}async showPreviousRadiolgy(t){return(await this.getRadiologyObs(t.getID())).length>0}async getPreviousRadiologyExaminations(t){const e=await s["e"].getThirdpartyApps();let i="";for(const a of e)"pacs"==a.name&&(i=a.url);Object(r["isEmpty"])(i)&&(i="opd/encounters/radiology/"+this.patientID);const n=await this.getRadiologyObs(t.getID());return n.length>0&&{data:n,url:i}}async submitToPacs(t,e){let i;for(const s of t)i=s.children[0].accession_number;const n=await Promise.all(t.map(async t=>({main_value_text:t.value_text,obs_id:t.obs_id,sub_value_text:t.children[0].value_text}))),a={patient_name:e.getFullName(),patientAge:e.getAge(),patientDOB:e.getBirthdate(),patientGender:e.getGender(),national_id:e.getNationalID(),person_id:e.getID(),encounter_id:this.getEncounterID(),date_created:this.getDate(),accession_number:i},o={username:s["e"].getUserName(),userID:s["e"].getUserID(),userRoles:s["e"].getUserRoles()};return s["e"].postJson("radiology/radiology_orders",{patient_details:a,physician_details:o,radiology_orders:n})}async getAccesionNumber(){return(await s["e"].getJson("sequences/next_accession_number"))["accession_number"]}async obsObj(t){const e=await this.getAccesionNumber(),i=[];for(const n of t)i.push({concept_id:n.concept_id,value_text:await a["a"].getConceptName(n.child.concept_id),child:[{concept_id:n.child.concept_id,accession_number:e,value_text:await a["a"].getConceptName(n.child.value_coded)}]});return i}async printOrders(t,e){const i=new o["a"],n=e.getNationalID(),a=e.getFullName(),s=[];for(const o of t){const t=o.value_text+": "+o.children[0].value_text;s.push("/radiology/barcode?accession_number="+o.children[0].accession_number+"&patient_national_id="+n+"&patient_name="+a+"&radio_order="+t+"&date_created="+c["b"].toStandardHisDisplayFormat(o.obs_datetime))}await i.batchPrintLbls(s,!0)}}},c21d:function(t,e,i){"use strict";i.d(e,"a",(function(){return s}));i("14d9");function n(t,e){const i=[],n=[-1,"",null,void 0];for(const a in e){if(!(a in t))continue;const o=t[a];n.includes(o)?i.push(!1):i.push(e[a](o,t))}return i.every(Boolean)}function a(t){return t.sort((t,e)=>t.priority&&e.priority&&t.priority<e.priority?-1:1)}function o(t){return t.sort((t,e)=>t.weight&&e.weight&&t.weight>e.weight?-1:1)}function s(t,e,i="",s="",r="priority"){const c=[];for(const a in e){const o=e[a],r=[o.target&&i&&o.target!=i,o.targetEvent&&s&&o.targetEvent!=s];r.some(Boolean)||n(t,o.conditions)&&(o.title=a,o.description&&(o.description.text=o.description.info(t)),c.push(o))}return"priority"===r?a(c):o(c)}}}]);
//# sourceMappingURL=chunk-a7c378ee.3715c03c.js.map