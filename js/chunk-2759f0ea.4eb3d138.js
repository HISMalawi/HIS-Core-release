(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2759f0ea"],{"188c":function(e,t,i){"use strict";i.r(t);var s=i("7a23");function a(e,t,i,a,n,r){const l=Object(s["resolveComponent"])("his-standard-form");return Object(s["openBlock"])(),Object(s["createBlock"])(l,{key:e.hisFormKey,fields:e.fields,activeField:e.fieldComponent,skipSummary:!0,onOnIndex:t[0]||(t[0]=t=>e.fieldComponent=""),onOnFinish:e.onFinish},null,8,["fields","activeField","onOnFinish"])}i("13d5"),i("14d9");var n=i("7920"),r=i("d95e"),l=i("b446"),o=i("5b71"),u=i("2706"),c=i("b5e4"),d=i("2ef0"),h=i("9283"),p=i("1c74"),m=i("9b7c"),b=i("8e8b"),T=Object(s["defineComponent"])({components:{HisStandardForm:n["a"]},data:()=>({fieldComponent:"",labResult:{},hisFormKey:0,patient:{},fields:[],selectedTest:{},testOptions:[],testIndicators:[]}),watch:{$route:{async handler({params:e}){e&&e.patient_id&&(this.patient=e.patient_id,this.labResult=new o["a"](this.patient),await this.initData(),this.fields=this.getFields())},deep:!0,immediate:!0}},methods:{async onFinish(e,t){try{const e=Object.values(t).filter(e=>"result_indicator"===e.tag&&e.measures).map(e=>e.measures);this.labResult.setTestID(this.selectedTest.value),this.labResult.setResultDate(t.result_date),await this.labResult.createEncounter(),await this.labResult.createLabResult(e),b["a"].invalidate("PATIENT_LAB_ORDERS"),this.testOptions=[],this.selectedTest={},this.testIndicators=[],await this.initData(),this.hisFormKey=Math.floor(5e3*Math.random()),Object(c["d"])("Lab result saved!")}catch(i){Object(c["c"])(""+i),console.error(i)}},generateTestIndicatorsFields(){return this.testIndicators.reduce((e,t)=>e.concat(this.buildTestIndicatorFields(t.indicatorId,t.indicatorName,t.specimen,t.testId)),[])},async validateVLresults(e,t,i){if("HIV viral load"!==e)return!0;const s=i.substring(0,1),a=i.substring(1,i.length);if(m["a"].isValidVLResult(t,s,a))return!0;const n=await Object(c["a"])(`Invalid results for ${t} HIV viral load`,{cancelBtnLabel:"Process result",confirmBtnLabel:"Re-enter result"});return!n},alphaValueIsValid(e){try{return!!e.match(/^(>|<|=)(.*)/)}catch(t){return!1}},numericValueIsValid(e){try{return!!e.match(/^(=|<|>)([0-9]*)$/m)}catch(t){return!1}},isMalariaResult(e){return!!e.match(/mrdt|malaria/i)},isUrineLamResult(e){return!!e.match(/Lam/i)},buildTestIndicatorFields(e,t,i,s){const a=e*s,n=e=>[this.selectedTest.value===s,!!Object(d["find"])(e.result_indicators,{label:t})].every(Boolean),l=e=>this.validateVLresults(t,i,e.value.toString()),o=(i,s)=>{if("Other"===i.value&&t.match(/HIV viral load/i))return{};const n=this.isMalariaResult(t)||this.isUrineLamResult(t)?"text":s["type_"+a].value,r=this.isMalariaResult(t)||this.isUrineLamResult(t)?"="+i.value:i.value.toString(),l=r.charAt(0),o="numeric"===n?parseInt(r.substring(1)):r.substring(1),u=s["result_indicators"].filter(t=>t.value===e)[0];return{tag:"result_indicator",measures:{indicator:{concept_id:u.value},value:o,value_modifier:l,value_type:n},result:o,modifier:l,test:u.label}};return[{id:"type_"+a,helpText:`Result type (${t})`,type:r["b"].TT_SELECT,group:"test_indicator",condition:e=>n(e)&&!this.isMalariaResult(t)&&!this.isUrineLamResult(t),appearInSummary:()=>!1,validation:e=>u["a"].required(e),options:()=>[{label:"Numeric (numbers only)",value:"numeric"},{label:"Alphanumeric(text and numbers)",value:"text"}]},{id:"urine_result_"+a,helpText:`Select Test Result (${t})`,type:r["b"].TT_SELECT,group:"test_indicator",computedValue:o,validation:e=>u["a"].required(e),condition:e=>n(e)&&this.isUrineLamResult(t),options:()=>[{label:"Positive",value:"positive"},{label:"Negative",value:"negative"}]},{id:"num_"+a,helpText:`Test Result (${t})`,type:r["b"].TT_TEXT,group:"test_indicator",computedValue:o,beforeNext:l,onValue:e=>!(e&&e.value&&!this.numericValueIsValid(e.value.toString()))||(Object(c["e"])("You must enter a modifer and numbers only. i.e =90 / >19 / < 750"),!1),validation:e=>u["a"].required(e),condition:e=>n(e)&&"numeric"===e["type_"+a].value,config:{customKeyboard:[[["1","2","3"],["4","5","6","=","<",">"],["7","8","9","."],["","0",""]],[["Delete"]]]}},{id:"alpha_"+a,helpText:`Test Result (${t})`,type:r["b"].TT_TEXT,group:"test_indicator",onValue:e=>!(e&&e.value&&!this.alphaValueIsValid(e.value.toString()))||(Object(c["e"])("You must enter a modifier plus result (for example =LDL)"),!1),computedValue:o,validation:e=>u["a"].required(e),condition:e=>n(e)&&"text"===e["type_"+a].value&&!t.match(/HIV viral load/i)},{id:"VL_alpha_"+a,helpText:`Select Test Result (${t})`,type:r["b"].TT_SELECT,group:"test_indicator",computedValue:o,validation:e=>u["a"].required(e),condition:e=>n(e)&&"text"===e["type_"+a].value&&t.match(/HIV viral load/i),options:()=>[{label:"Collect Another Sample",value:"=Collect Another Sample"},{label:"<LDL",value:"<LDL"},{label:"=LDL",value:"=LDL"},{value:"Other",label:"Other"}]},{id:"other_VL_alpha_"+a,helpText:`Test Result (${t})`,type:r["b"].TT_TEXT,group:"test_indicator",onValue:e=>!(e&&e.value&&!this.alphaValueIsValid(e.value.toString()))||(Object(c["e"])("You must enter a modifier plus result (for example =LDL)"),!1),computedValue:o,validation:e=>u["a"].required(e),condition:e=>n(e)&&"text"===e["type_"+a].value&&t.match(/HIV viral load/i)&&"Other"===e["VL_alpha_"+a].value},{id:"malaria_result_"+a,helpText:`Select Test Result (${t})`,type:r["b"].TT_SELECT,group:"test_indicator",computedValue:o,validation:e=>u["a"].required(e),condition:e=>n(e)&&this.isMalariaResult(t),options:()=>t.match(/mrdt/i)?[{label:"Positive",value:"positive"},{label:"Negative",value:"negative"}]:[{label:"Parasites seen",value:"parasites seen"},{label:"No parasites seen",value:"no parasites seen"}]}]},async initData(){const e=await this.labResult.getTestsWithoutResults();for(const t in e){const i=e[t];for(const e in i.tests){const t=i.tests[e];if(!Object(d["isEmpty"])(t.result))continue;this.labResult.setTestTypeID(t.concept_id);const s=await this.labResult.getTestIndicators(),a=s.map(e=>({testId:t.id,indicatorName:e.name,indicatorId:e.concept_id,specimen:i.specimen.name}));this.testIndicators=[...this.testIndicators,...a],this.testOptions.push({label:t.name,value:t.id,other:{accession:i.accession_number,specimen:i.specimen.name,test:t.name,orderDate:i.order_date,testIndicators:a}})}}},getFields(){return[{id:"test_type",helpText:"Tests without results",type:r["b"].TT_TABLE_VIEWER,options:()=>{const e=this.testOptions.map(e=>[e.other.accession,e.other.specimen,e.other.test,h["b"].toStandardHisDisplayFormat(e.other.orderDate),{type:"button",name:"Select",action:()=>{this.selectedTest=e,this.$nextTick(()=>this.fieldComponent="year_result_date")}}]);return[{label:"",value:"",other:{rows:e,columns:["Acession#","Specimen","Test","Order date"]}}]},validation:e=>u["a"].required(e),config:{overrideDefaultFooterBtns:{nextBtn:{name:"Finish",onClick:()=>this.$router.back()}},hiddenFooterBtns:["Clear","Cancel"]}},...Object(l["b"])({id:"result_date",helpText:"Result",required:!0,estimation:{allowUnknown:!1},minDate:()=>h["b"].toStandardHisFormat(this.selectedTest.other.orderDate),maxDate:()=>p["e"].getSessionDate(),computeValue:e=>e}),{id:"result_indicators",helpText:"Select test result indicators",type:r["b"].TT_MULTIPLE_SELECT,validation:e=>u["a"].required(e),options:()=>this.selectedTest.other.testIndicators.map(e=>({label:e.indicatorName,value:e.indicatorId}))},...this.generateTestIndicatorsFields(),{id:"entry_confirmation",helpText:"Confirm entry",type:r["b"].TT_TABLE_VIEWER,options:(e,t)=>{const i=Object.values(t).filter(e=>"object"===typeof e&&null!=e&&"result_indicator"===e.tag).map(e=>[e.test,e.modifier,e.result]);return[{label:"",value:"",other:{rows:i,columns:["Test","Modifier","Result"]}}]}}]}}}),v=i("6b0d"),_=i.n(v);const y=_()(T,[["render",a]]);t["default"]=y},"5b71":function(e,t,i){"use strict";i.d(t,"a",(function(){return r}));var s=i("ade3"),a=i("9b7c"),n=i("cc6f");class r extends n["a"]{constructor(e){super(e,57),Object(s["a"])(this,"patientID",void 0),Object(s["a"])(this,"testTypeID",void 0),Object(s["a"])(this,"resultDate",void 0),Object(s["a"])(this,"testID",void 0),this.patientID=e,this.testTypeID=-1,this.resultDate="",this.testID=-1}createLabResult(e){return n["a"].postJson(`lab/tests/${this.testID}/results`,{encounter_id:this.encounterID,date:this.resultDate,measures:e})}getTestID(){return this.testID}getTestTypeID(){return this.testTypeID}setTestTypeID(e){this.testTypeID=e}setResultDate(e){this.resultDate=e}setTestID(e){this.testID=e}getTestsWithoutResults(){return a["a"].getOrders(this.patientID,{status:"drawn"})}getTestIndicators(){return a["a"].getJson("lab/test_result_indicators",{test_type_id:this.testTypeID})}}},7920:function(e,t,i){"use strict";var s=i("7a23");function a(e,t,i,a,n,r){return Object(s["openBlock"])(),Object(s["createBlock"])(Object(s["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var n=i("9441"),r=Object(s["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:n["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),l=i("6b0d"),o=i.n(l);const u=o()(r,[["render",a]]);t["a"]=u}}]);
//# sourceMappingURL=chunk-2759f0ea.4eb3d138.js.map