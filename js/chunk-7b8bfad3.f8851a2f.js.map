{"version":3,"sources":["webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?37b1","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/apps/ANC/Views/Encounters/CurrentPregnancy.vue?228d","webpack:///./src/apps/ANC/Views/Encounters/CurrentPregnancy.vue","webpack:///./src/apps/ANC/Views/Encounters/CurrentPregnancy.vue?99da","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts","webpack:///./src/apps/ANC/Services/anc_current_pregnancy.ts"],"names":["FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","async","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","patientID","providerID","facts","isEnrolledInProgam","formLabel","ready","watch","handler","route","params","patient_id","this","toUpperCase","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","programID","ProgramService","getProgramID","e","console","error","toastDanger","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","loadingController","create","backdropDismiss","message","present","nextTask","getTop","v","dismiss","yesNoOptions","toYesNoOption","values","mapOptions","options","option","toConditionalOptions","final","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","_component_his_standard_form","_resolveComponent","_component_ion_page","_withCtx","_createVNode","_","IonPage","mixins","EncounterMixinVue","service","AncCurrentPregnancyService","getFields","enrollPatient","RecordConflictError","warn","createEncounter","saveObservationList","buildDelieveryDateObs","lmpDate","buildValueDate","estimateDelieveryDate","buildValueNumber","calculateWeekOfFirstVisit","id","proxyID","helpText","FieldType","TT_ANC_LMP_DATE_INPUT","computedValue","beforeNext","gestationWeeks","alertConfirmation","validation","Validation","Date","today","config","initialDate","date","calculateDelieveryDate","calculateGestationWeeks","allowUnknown","TT_NUMBER","f","lnmp","calculateGestationDateFromPeriod","rangeOf","TT_SELECT","buildValueText","getFacilities","footerBtns","onClickComponentEvents","setValue","btnEvent","btnOutput","onClick","getLocationName","showKeyboard","isFilterDataViaApi","buildValueCoded","bed_net_available_for_use","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","facilities","LocationService","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","AppEncounterService","constructor","super","PatientProgramService","enrollProgram","setStateDate","setStateId","updateState","lnmpDate","theDate","setDate","getDate","s","Math","floor","period","dayjs","subtract","endOf","format","setMonth","getMonth","month","AppendleadingZero","day","getFullYear"],"mappings":"wIAIYA,E,yEAAZ,SAAYA,GACRA,iCACAA,+CACAA,uDACAA,6CACAA,yBACAA,kBANJ,CAAYA,MAAS,KAQrB,MAAMC,EAAWC,GAAcC,OAAQC,2BAA2BF,GAErDG,EAA2D,CACpE,qEAAsE,CAClEC,SAAU,EACVC,QAAS,CACLC,MAAOC,OAASC,uBACZ,MAAMC,QAAeC,eACjB,6BACA,mBAAmBX,EAAQS,GAC3B,qEACA,CACI,CAAEG,KAAM,SAAUC,KAAM,MAAOC,MAAO,WACtC,CAAEF,KAAM,iBAAkBC,KAAM,MAAOC,MAAO,WAC9C,CAAEF,KAAM,kBAAmBC,KAAM,MAAOC,MAAO,YAGvD,MAAkB,WAAXJ,EACDX,EAAUgB,wBACC,mBAAXL,EACAX,EAAUiB,uBACVjB,EAAUkB,WAGxBC,WAAY,CACRC,QAAQA,GACJ,MAAmB,iBAAZA,GAEXV,iBAAiBW,GAAmB,YAAEC,IAClC,OAAOA,GAAeD,KAIlC,+DAAgE,CAC5Df,SAAU,EACVC,QAAS,CACLC,MAAOC,OAASc,YAAWD,kBACvB,MAAMX,QAAeC,eACjB,6BAA8B,GAC9B,gBAAgBX,EAAQqB,iCAA2CrB,EAAQsB,KAC3E,CACI,CAAEV,KAAM,SAAUC,KAAM,MAAOC,MAAO,UACtC,CAAEF,KAAM,sBAAuBC,KAAM,MAAOC,MAAO,aAG3D,MAAkB,wBAAXJ,EACDX,EAAUwB,oBACVxB,EAAUgB,0BAGxBG,WAAY,CACRI,UAAUA,GAAmB,YAAED,IAC3B,OAAOA,EAAcC,KAIjC,oDAAqD,CACjDjB,SAAU,EACVC,QAAS,CACLkB,UAAWhB,OAASiB,YAAWC,gBAAeL,cAAaM,cACvD,MAAMC,QAAcC,eAChB,gCAAgCH,EAChC,QAAQ1B,EAAQqB,iBAA2BrB,EAAQ2B,KACnDF,EACA,CACI,CAAEb,KAAM,SAAUE,MAAO,SAAUD,KAAM,QAASiB,KAAM,WACxD,CAAElB,KAAM,UAAWC,KAAM,MAAOiB,KAAM,YAG9C,MAAwB,WAAjBF,EAAMlB,OACP,CAAEqB,OAAQ,EAAGC,UAAWjC,EAAUgB,yBAClC,CAAEgB,MAAOH,EAAMJ,UAAWQ,UAAWjC,EAAUkC,gBAG7Df,WAAY,CACRgB,UAAUC,GACN,OAAOA,M,gEC3ERC,+BAAgB,CAC3BC,WAAY,CAAEC,wBACdC,KAAM,KAAM,CACRC,QAAS,GACTC,OAAQ,GACRC,UAAW,GACXC,YAAa,EACblB,UAAW,GACXmB,MAAO,CACHvB,YAAa,GACbM,QAAS,GACTkB,oBAAoB,EACpBnB,cAAe,MACfD,UAAW,GACXS,WAAW,EACXZ,UAAW,GACXH,QAAS,GACTV,iBAAkB,IAEtBqC,UAAW,GACXC,OAAO,IAEXC,MAAO,CACJ,OAAU,CACLC,QAAQC,GACDA,EAAMC,OAAOC,YAAcC,KAAKX,WAAaQ,EAAMC,OAAOC,aACzDC,KAAKP,WAAY,GAAGI,EAAMtC,MAAO0C,cACjCD,KAAKX,UAAYa,SAASL,EAAMC,OAAOC,YACvCI,OAAMC,IAAI,iBAAkB,CAAEf,UAAWW,KAAKX,YACzCgB,KAAKC,IACFN,KAAKb,QAAUmB,EACfN,KAAKO,oBAAoBF,KAAK,KAC1BL,KAAKQ,2BAA2BH,KAAK,KACjCL,KAAKN,OAAQ,UAMrCe,WAAW,EACXC,MAAM,IAGdC,SAAU,CACNC,oBACI,OAAOZ,KAAKa,wBAGpBC,QAAS,CACLC,aAAaC,EAAkBlB,EAAO,MAClC,MAAMmB,EAAc,GAmBpB,GAlBAA,EAAOvE,EAAUkC,cAAiBT,IAC9B,MAAQ+C,GAAa/C,EAAUgD,MAAM,KAC/BC,EAAWC,kBAAKrB,KAAK5B,UAAW,CAAE8C,aAExC,OADIE,IAAUpB,KAAKV,WAAa8B,EAASE,WAClC5E,EAAUkB,UAErBqD,EAAOvE,EAAUwB,qBAAuB,KACpC8B,KAAKuB,QAAQC,KAAK,kDAAkDxB,KAAKX,WAClE3C,EAAU+E,MAErBR,EAAOvE,EAAUiB,wBAA0B,KACvCqC,KAAKuB,QAAQC,KAAK,qBAAqBxB,KAAKX,WACrC3C,EAAU+E,MAErBR,EAAOvE,EAAUgB,yBAA2B,KACxCsC,KAAK0B,uBACEhF,EAAU+E,MAEjBT,KAASC,EACT,OAAOA,EAAOD,GAAOlB,IAG7B,iCACI,MAAM6B,EAAWC,eAAkB5B,KAAKT,MAAOxC,GAC/C,IAAI,MAAM8E,KAASF,EAAU,SACzB,MAAMG,EAAUH,EAASE,GACzB,GAAW,OAAPC,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAAS7E,eAAO,OAAhB,EAAkBC,MAAO,OACzB,MAAM6E,EAAS/B,KAAKe,mBAA2B,OAAPe,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAAS7E,eAAO,WAAT,EAAP,EAAkBC,MAAM8C,KAAKT,SACrE,GAAIwC,IAAWrF,EAAU+E,KAAM,OAEnC,GAAW,OAAPK,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAAS7E,eAAO,OAAhB,EAAkBkB,UAAW,OAC7B,MAAMA,QAAyB,OAAP2D,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAAS7E,eAAO,WAAT,EAAP,EAAkBkB,UAAU6B,KAAKT,QACzDS,KAAKe,aAAa5C,EAAUQ,UAAWR,EAAUO,UAI7D,0BACI,IACI,MAAMsD,QAAgB7B,OAAMC,IAAI,kBAAmB,CAAEf,UAAWW,KAAKX,YACrEW,KAAKT,MAAMC,mBAAqBwC,EAAQC,YAAcC,OAAeC,eACrEnC,KAAKT,MAAMzB,QAAUkE,EAAQlE,QAC7BkC,KAAKT,MAAMnC,iBAAmB4E,EAAQjE,UACxC,MAAOqE,GACLC,QAAQC,MAAMF,GACdG,eAAY,GAAGH,GAEnBpC,KAAKT,MAAMvB,YAAckE,OAAeM,iBACxCxC,KAAKT,MAAMjB,QAAU4D,OAAeO,mBACpCzC,KAAKT,MAAMV,UAAYqD,OAAepD,QACtCkB,KAAKT,MAAMtB,UAAY+B,KAAKb,QAAQuD,eACpC1C,KAAKT,MAAMlB,cAAgB2B,KAAK2C,OAAOpF,KACjCyC,KAAK2C,OAAOpF,KAAKqF,WAAW3C,cAC5B,MACFiC,OAAepD,UACfkB,KAAK5B,gBAAkB+B,OAAMC,IAAI,aACjCJ,KAAKT,MAAMnB,UAAY4B,KAAK5B,UACvByE,KAAK,CAACC,EAAQC,KACX,MAAMC,EAAYF,EAAE5B,SAASjB,cACvBgD,EAAYF,EAAE7B,SAASjB,cAC7B,OAAO+C,EAAYC,GAAa,EAAID,EAAYC,EAAa,EAAI,IAEpEC,IAAKC,IAAU,MACZ,IAAI5F,EAAO,GAAG4F,EAAEjC,SAChB,IAAKkC,qBAAS,OAADD,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGE,cAAM,WAAR,EAAD,EAAWC,OAAQ,OAC5B,MAAQC,IAAuB,QAAR,EAAAJ,EAAEE,cAAM,aAAR,EAAUC,QAAS,GAC1C/F,GAAQ,KAAKgG,EAAWC,cAAcD,EAAWE,eAErD,OAAOlG,MAIvBmG,SAASC,EAAeC,EAAM,IAC1B,MAAO,CACHD,QACAjF,MAAOiF,EACPC,UAGRC,gBAAgBC,GACZ,OAAOA,EAAMZ,IAAIa,GAAkB,kBAANA,GAA+B,kBAANA,EAC/C,CAAEJ,MAAOI,EAAGrF,MAAOqF,GAAMA,IAGpClD,sBACI,MAAO,sBAAsBb,KAAKX,WAEtCqC,uBACI,OAAO1B,KAAKuB,QAAQC,KAAK,CAACwC,KAAMhE,KAAKa,yBAEzC,wBACWoD,OAAkBC,OAAO,CAC5BC,iBAAiB,EACjBC,QAAS,0BACTC,UACJ,UACUC,eAAStE,KAAKX,UAAWW,KAAKuB,QAASvB,KAAK2C,QACpD,MAAOP,GACLC,QAAQC,MAAMF,GAElB6B,OAAkBM,SAASlE,KAAKmE,GAAKA,GAAKP,OAAkBQ,YAEhEC,eACI,MAAO,CACH,CAAEf,MAAO,MAAOjF,MAAO,OACvB,CAAEiF,MAAO,KAAMjF,MAAO,QAG9BiG,cAAchB,EAAeC,EAAW,IACpC,MAAO,CACHD,QACAjF,MAAO,GACPkF,MAAO,IACAA,EACHgB,OAAQ5E,KAAK0E,kBAIzBG,WAAWC,GACP,OAAOA,EAAQ5B,IAAK6B,IACT,CAAEpB,MAAOoB,EAAQrG,MAAOqG,MAGvCC,qBAAqBF,GACjB,MAAMG,EAAkB,GACxB,IAAI,MAAMF,KAAUD,GACS,mBAAdC,EAAO,IACVA,EAAO,KAGfE,EAAMzD,KAAKxB,KAAK0D,SAASqB,EAAO,KAEpC,OAAOE,GAEXC,sBACI,MAAO,CACH,CAAEvB,MAAO,MAAOjF,MAAO,OACvB,CAAEiF,MAAO,KAAMjF,MAAO,MACtB,CAAEiF,MAAO,UAAWjF,MAAO,aAGnCyG,WAAWC,EAAUC,EAAI,IACrB,MAAMT,EAAcU,OAAOV,OAAOQ,GAC7BG,OAAQ3I,GAAWA,IAAMA,EAAEyI,MAAQA,GAAe,KAARA,IAC1CG,OAAO,CAACC,EAAYC,KACjB,MAAMxG,EAAOwG,EAAIN,IAAMM,EAAIN,IAAMM,EAQjC,OAPIC,MAAMC,QAAQ1G,GACduG,EAAQA,EAAMI,OAAO3G,GACE,oBAATA,EACduG,EAAMjE,KAAKtC,KAEXuG,EAAMjE,KAAKtC,GAERuG,GACJ,IACX,OAAOK,QAAQC,IAAInB,IAEvBoB,QAAQC,EAAiBC,GACrB,IACI,OAAOD,EAAIV,OAAQxB,GAAWmC,EAAWnC,IAAIoC,OAAS,EACxD,MAAO/D,GACL,OAAO,IAGfgE,eAAevI,GACX,IACI,IAAI,MAAMkG,KAAKlG,EAAY,CACvB,MAAMwI,EAAYxI,EAAWkG,KAE7B,GAAIsC,EAAW,OAAOA,GAE5B,MAAOjE,GACL,MAAO,CAACA,QCxOxB,MAAMkE,EAAc,EAEL,U,kDCHT,SAAUC,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQC,yBAAcC,yBAAaC,qCAAyBR,EAAKS,UAAW,CAC1E7H,OAAQoH,EAAKpH,OACb8H,YAAaV,EAAKU,YAClBC,YAAaX,EAAKW,YAClBC,sBAAuBZ,EAAKY,sBAC5BC,WAAYb,EAAKc,SACjBA,SAAUd,EAAKe,eACfC,UAAWhB,EAAKiB,SACf,KAAM,GAAI,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN5F1I,+BAAgB,CAC3BxB,KAAM,kBACNyB,WAAY,CAAE0I,wBACdC,MAAO,CACH,WACA,WAEJzI,KAAM,KAAM,CACR+H,SAAU,sBAEdW,MAAO,CACHL,eAAgB,CACZM,KAAMC,UAEVZ,YAAa,CACTW,KAAME,QACNC,SAAS,GAEbb,YAAa,CACTU,KAAMI,QAEV7I,OAAQ,CACJyI,KAAMvC,OACN4C,UAAU,GAEdd,sBAAuB,CACnBS,KAAMI,OACNC,UAAU,IAGlBpH,QAAS,CACLwG,SAASa,EAAeC,GACpBpI,KAAKqI,MAAM,WAAYF,EAAUC,IAErCX,QAAQ1D,GACJ/D,KAAKqI,MAAM,UAAWtE,O,qBCnClC,MAAMuC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD,U,yDCLT,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMyB,EAA+BC,8BAAkB,qBACjDC,EAAsBD,8BAAkB,YAE9C,OAAQzB,yBAAcC,yBAAayB,EAAqB,KAAM,CAC5DR,QAASS,qBAAS,IAAM,CACtBC,yBAAaJ,EAA8B,CACzClJ,OAAQoH,EAAKpH,OACb8H,aAAa,EACbK,eAAgBf,EAAKc,SACrBF,sBAAuBZ,EAAK5F,mBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,4BAE3C+H,EAAG,I,gHCDQ5J,+BAAgB,CAC7BC,WAAY,CAAE4J,gBACdC,OAAQ,CAACC,QACT5J,KAAM,KAAM,CACV6J,QAAS,KAEXpJ,MAAO,CACLD,MAAO,CACL,cAAcA,GACRA,IACAM,KAAK+I,QAAU,IAAIC,OAA2BhJ,KAAKX,UAAWW,KAAKV,YACnEU,KAAKZ,OAASY,KAAKiJ,cAGzBxI,WAAW,IAGfK,QAAS,CACP,eAAe6H,EAAQP,GACrB,UACQpI,KAAK+I,QAAQG,gBACnB,MAAO9G,GACR,KAAGA,aAAa+G,QAGd,MAAM/G,EAFPC,QAAQ+G,KAAK,GAAGhH,GAKlB,MAAMgD,QAAYpF,KAAKmF,WAAWiD,SAC5BpI,KAAK+I,QAAQM,wBACbrJ,KAAK+I,QAAQO,oBAAoBlE,GACvCpF,KAAKsE,YAEPiF,sBAAsBC,GACpB,GAAe,WAAXA,EACF,MAAO,CACLxJ,KAAK+I,QAAQU,eAAe,wBAAyBD,GACrDxJ,KAAK+I,QAAQU,eAAe,6BAC1BzJ,KAAK+I,QAAQW,sBAAsBF,IAErCxJ,KAAK+I,QAAQY,iBAAiB,sBAC5B3J,KAAK+I,QAAQa,0BAA0BJ,MAK/CP,YACI,MAAO,CACH,CACIY,GAAI,OACJC,QAAS,gBACTC,SAAU,+BACVlC,KAAMmC,OAAUC,sBAChBC,cAAgB1F,GAAcxE,KAAKuJ,sBAAsB/E,EAAE9F,OAC3DyL,WAAYhN,UACV,MAAMiN,EAAiBlK,SAASsE,EAAEZ,OAClC,MAA8B,kBAAnBwG,KACLA,GAAkB,GAAKA,EAAiB,aAC/BC,eAAkB,6EASnCC,WAAa9F,GAAcxE,KAAKoG,eAAe,CAC7C,IAAMmE,OAAWrC,SAAS1D,GAC1B,KACI,GAAIA,EAAE9F,MAAO,CACX,MAAM8K,EAAU,IAAIgB,KAAKhG,EAAE9F,OACrB+L,EAAQ,IAAID,KAClB,GAAIhB,EAAUiB,EACZ,MAAO,CAAC,iDAGZ,OAAO,QAGbC,OAAQ,CACJC,YAAa,IAAM3K,KAAK+I,QAAQ6B,KAChCC,uBAAyBjO,GAAcC,OAAQC,2BAC7CkD,KAAK+I,QAAQW,sBAAsB9M,IAErCkO,wBAA0BlO,GAAcoD,KAAK+I,QAAQa,0BAA0BhN,GAC/EmO,cAAc,IAGtB,CACIlB,GAAI,eACJC,QAAS,gBACTC,SAAU,qBACVlC,KAAMmC,OAAUgB,UAChB3E,UAAY4E,GAA4B,YAAjBA,EAAEC,KAAKxM,MAC9BwL,cAAgB1F,GACLxE,KAAKuJ,sBAAsBvJ,KAAK+I,QAAQoC,iCAAiC3G,EAAE9F,QAEtF4L,WAAa9F,GAAcxE,KAAKoG,eAAe,CAC3C,IAAMmE,OAAWrC,SAAS1D,GAC1B,IAAM+F,OAAWa,QAAQ5G,EAAG,EAAG,OAGvC,CACIqF,GAAI,yBACJE,SAAU,yBACVlC,KAAMmC,OAAUqB,UAChBnB,cAAgB1F,GAAcxE,KAAK+I,QAAQuC,eAAe,yBAA0B9G,EAAEb,OACtF2G,WAAa9F,GAAc+F,OAAWrC,SAAS1D,GAC/CM,QAAS,CAAC6D,EAAQpD,EAAO,KAAOgG,eAAchG,GAC9CmF,OAAQ,CACJc,WAAY,CACV,CACEjO,KAAM,OACNC,KAAM,MACNiO,uBAAwB,CACtBC,SAAWC,GACFA,EAASC,WAGpBC,QAAS,IAAM7C,OAA2B8C,oBAG9CC,cAAc,EACdC,oBAAoB,IAG5B,CACInC,GAAI,4BACJE,SAAU,uDACVlC,KAAMmC,OAAUqB,UAChBnB,cAAgB1F,GAAcxE,KAAK+I,QAAQkD,gBAAgB,sBAAuBzH,EAAE9F,OACpF4L,WAAa9F,GAAc+F,OAAWrC,SAAS1D,GAC/CM,QAAS,IACE9E,KAAK0E,gBAGpB,CACImF,GAAI,gBACJE,SAAU,sBACVlC,KAAMmC,OAAUqB,UAChBnB,cAAgB1F,GAAcxE,KAAK+I,QAAQkD,gBAAgB,uBAAwBzH,EAAE9F,OACrF4L,WAAa9F,GAAc+F,OAAWrC,SAAS1D,GAC/C6B,UAAY4E,GAAiD,OAAtCA,EAAEiB,0BAA0BxN,MACnDoG,QAAS,IACE9E,KAAK0E,gBAGpB,CACImF,GAAI,qBACJE,SAAU,2CACVlC,KAAMmC,OAAUgB,UAChBd,cAAgB1F,GAAcxE,KAAK+I,QAAQY,iBAAiB,MAAOnF,EAAE9F,OACrE4L,WAAa9F,GAAc+F,OAAWrC,SAAS1D,S,qBClK/D,MAAM8B,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD,gB,8ECsBf,SAAS4F,EAAY5M,EAA4B1B,GAC7C,MAAMmD,EAAQ,GACRoL,EAAU,EAAE,EAAG,GAAI,UAAMC,GAE/B,IAAI,MAAMC,KAAQzO,EAAY,CAC1B,KAAMyO,KAAQ/M,GACV,SAEJ,MAAMb,EAAQa,EAAM+M,GAChBF,EAAQG,SAAS7N,GACjBsC,EAAMQ,MAAK,GAIfR,EAAMQ,KAAK3D,EAAWyO,GAAM5N,EAAOa,IAEvC,OAAOyB,EAAMwL,MAAMzE,SAQvB,SAAS0E,EAAe9K,GACpB,OAAOA,EAASkB,KAAK,CAACC,EAAGC,IAAOD,EAAE9F,UAAY+F,EAAE/F,UAAa8F,EAAE9F,SAAW+F,EAAE/F,UAAY,EAAI,GAGhG,SAAS0P,EAAa/K,GAClB,OAAOA,EAASkB,KAAK,CAACC,EAAGC,IAAOD,EAAE6J,QAAU5J,EAAE4J,QAAW7J,EAAE6J,OAAS5J,EAAE4J,QAAU,EAAI,GAgBlF,SAAU/K,EACZrC,EACAqN,EACAC,EAAO,GACPC,EAAY,GACZC,EAAO,YACP,MAAMC,EAAU,GAChB,IAAI,MAAMC,KAAkBL,EAAY,CACpC,MAAM1N,EAA2B0N,EAAWK,GACtCC,EAAoB,CACrBhO,EAAK2N,QAAUA,GAAU3N,EAAK2N,QAAUA,EACxC3N,EAAK4N,aAAeA,GACd5N,EAAK4N,aAAeA,GAG3BI,EAAkBC,KAAKpF,UAIvBoE,EAAY5M,EAAOL,EAAKrB,cACxBqB,EAAKkO,MAAQH,EACT/N,EAAKmO,cACLnO,EAAKmO,YAAYC,KAAOpO,EAAKmO,YAAYE,KAAKhO,IAElDyN,EAAQxL,KAAKtC,IAGrB,MAAkB,aAAX6N,EAAwBN,EAAeO,GAAWN,EAAaM,K,kCCrG1E,4SAIO7P,eAAeoO,EAAchG,EAAO,IACvC,MAAMiI,QAAmBC,OAAgBlC,cAAc,CAAChO,KAAMgI,IAC9D,OAAOiI,EAAWjI,OAAQ0F,IAAY7H,qBAAQ6H,IAAsB,IAAhBA,EAAE1N,KAAKmQ,QACtDxK,IAAKyK,IAAa,CACfhK,MAAOgK,EAASpQ,KAChBmB,MAAOiP,EAASC,YAChBhK,MAAO+J,KAIZxQ,eAAe0Q,EAAiBtI,EAAO,IAC1C,MAAMiI,QAAmBC,OAAgBK,QAAQ,CAAC,YAAevI,IACjE,OAAOiI,EAAWtK,IAAKyK,IAAa,CAC5BhK,MAAOgK,EACPjP,MAAOiP,KAIZxQ,eAAe4Q,EAAiBxI,EAAO,IAC1C,MAAMyI,QAAcP,OAAgBlC,cAAc,CAC9ChO,KAAMgI,EACNF,IAAK,4BAGT,OAAO2I,EAAM9K,IAAK+K,IAAS,CACvBtK,MAAOsK,EAAK1Q,KACZmB,MAAOuP,EAAK1Q,KACZqG,MAAOqK,KAIR9Q,eAAe+Q,IAClB,MAAMC,QAAgBV,OAAgBS,uBACtC,OAAOC,EAAQjL,IAAKkL,IAAW,CAC3BzK,MAAOyK,EAAO7Q,KACdmB,MAAO0P,EAAO7Q,KACdqG,MAAOwK,KAIRjR,eAAekR,IAClB,MAAMC,QAAgBb,OAAgBY,aACtC,OAAOC,EAAQpL,IAAKqL,IAAW,CAC3B5K,MAAO4K,EAAOhR,KACdmB,MAAO6P,EAAOC,UACd5K,MAAO2K,KAIRpR,eAAesR,EAAaC,GAC/B,MAAMC,QAAkBlB,OAAgBgB,aAAaC,GACrD,OAAOC,EAAUzL,IAAK0L,IAAa,CAC/BjL,MAAOiL,EAASrR,KAChBmB,MAAOkQ,EAASC,YAChBjL,MAAOgL,KAIRzR,eAAe2R,EAA0BC,EAAoBxR,EAAK,IACrE,MAAMyR,QAAYvB,OAAgBqB,0BAA0BC,EAAYxR,GACxE,OAAOyR,EAAI9L,IAAK+L,IAAO,CACnBtL,MAAOsL,EAAG1R,KACVmB,MAAOuQ,EAAGC,yBACVtL,MAAOqL,KAIR9R,eAAegS,EAAYC,EAAgC7R,EAAK,IACnE,MAAM8R,QAAiB5B,OAAgB0B,YAAYC,EAAwB7R,GAC3E,OAAO8R,EAASnM,IAAKoM,IAAY,CAC7B3L,MAAO2L,EAAQ/R,KACfmB,MAAO4Q,EAAQC,WACf3L,MAAO0L,O,kCC5Ef,+FAKM,MAAOtG,UAAmCwG,OAC5CC,YAAYpQ,EAAmBC,GAC3BoQ,MAAMrQ,EAAW,GAAIC,GAGzB,sBACI,MAAM0C,EAAU,IAAI2N,OAAsB3P,KAAKX,iBAIzC2C,EAAQ4N,gBACd5N,EAAQ6N,aAAa7P,KAAK4K,MAC1B5I,EAAQ8N,WAAW,WACb9N,EAAQ+N,cAGlBnG,0BAA0BoG,GACtB,MAAMC,EAAe,IAAIzF,KAAKwF,GAC9BC,EAAQC,QAAQD,EAAQE,UAAY,GACpC,MAAM1F,EAAa,IAAID,KAAKxK,KAAKmQ,WAC3BC,EAAI3F,EAAQwF,EAClB,OAAOhI,OAAOoI,KAAKC,MAAMF,EAAI,SAGjCjF,iCAAiCoF,GAC7B,OAAOC,IAAMxQ,KAAK4K,MAAM6F,SAASF,EAAQ,UAAUG,MAAM,SAASC,OAAO,cAG7EjH,sBAAsBsG,GAClB,MAAMC,EAAe,IAAIzF,KAAKwF,GAC9BC,EAAQC,QAAQD,EAAQE,UAAY,GACpCF,EAAQW,SAASX,EAAQY,WAAa,GACtC,MAAMC,EAAQC,eAAkBd,EAAQY,WAAW,GAC7CG,EAAMD,eAAkBd,EAAQE,WACtC,MAAO,GAAGF,EAAQgB,iBAAiBH,KAASE","file":"js/chunk-7b8bfad3.f8851a2f.js","sourcesContent":["import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\nimport { loadingController } from '@ionic/core'\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            isEnrolledInProgam: false as boolean,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        formLabel: '' as string,\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.formLabel = `${route.name}`.toUpperCase()\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.isEnrolledInProgam = program.programID === ProgramService.getProgramID()\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: Array<string | Option>) {\n            return items.map(i => typeof i === 'string' || typeof i === 'number'  \n                ?  { label: i, value: i } : i \n            )\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        async nextTask() {\n            (await loadingController.create({\n                backdropDismiss: false,\n                message: 'Checking Next task..'\n            })).present()\n            try {\n                await nextTask(this.patientID, this.$router, this.$route)\n            } catch (e) {\n                console.error(e)\n            }\n            loadingController.getTop().then(v => v && loadingController.dismiss())\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });        \n        },\n        toConditionalOptions(options: Array<Array<string | boolean | undefined>>) {\n            const final: Option[] = []\n            for(const option of options) {\n                if (typeof option[1] === 'boolean') {\n                    if (option[1]) final.push(this.toOption(option[0] as string))\n                    continue\n                }\n                final.push(this.toOption(option[0] as string))\n            }\n            return final\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { AncCurrentPregnancyService } from \"@/apps/ANC/Services/anc_current_pregnancy\"\nimport { Field, FooterBtnEvent, Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { ObsValue } from '@/services/observation_service'\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\"\nimport HisDate from \"@/utils/Date\"\nimport { alertConfirmation } from '@/utils/Alerts'\nimport { RecordConflictError } from '@/services/service'\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    service: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n            this.service = new AncCurrentPregnancyService(this.patientID, this.providerID)\n            this.fields = this.getFields()\n        } \n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      try {\n        await this.service.enrollPatient()\n      } catch (e) {\n       if(e instanceof RecordConflictError) {\n        console.warn(`${e}`)\n       } else {\n         throw e\n       }\n      }\n      const obs = await this.resolveObs(computedData)\n      await this.service.createEncounter()\n      await this.service.saveObservationList(obs as ObsValue[])\n      this.nextTask()\n    },\n    buildDelieveryDateObs(lmpDate: string) {\n      if (lmpDate != 'Unknown') {\n        return [\n          this.service.buildValueDate('Last menstrual period', lmpDate),\n          this.service.buildValueDate('Estimated date of delivery', \n            this.service.estimateDelieveryDate(lmpDate)\n          ),\n          this.service.buildValueNumber('Week of First Visit', \n            this.service.calculateWeekOfFirstVisit(lmpDate)\n          )\n        ]\n      }\n    },\n    getFields(): Field[] {\n        return [\n            {\n                id: 'lnmp',\n                proxyID: 'delivery_date',\n                helpText: 'Last Normal Menstrual Period',\n                type: FieldType.TT_ANC_LMP_DATE_INPUT,\n                computedValue: (v: Option) => this.buildDelieveryDateObs(v.value as string),\n                beforeNext: async (v: Option) => {\n                  const gestationWeeks = parseInt(v.other)\n                  if (typeof gestationWeeks === 'number') {\n                    if (gestationWeeks <= 0 || gestationWeeks > 42) {\n                      if ((await alertConfirmation('Gestation weeks out of range of 0-42. Are you sure you want to continue?'))) {\n                        return true\n                      } else {\n                        return false\n                      }\n                    }\n                  }\n                  return true\n                },\n                validation: (v: Option) => this.validateSeries([\n                  () => Validation.required(v),\n                  () => {\n                      if (v.value) {\n                        const lmpDate = new Date(v.value)\n                        const today = new Date()\n                        if (lmpDate > today) {\n                          return ['Last menstrual period cannot be in the future']\n                        }\n                      }\n                      return null\n                  }\n                ]),\n                config: {\n                    initialDate: () => this.service.date,\n                    calculateDelieveryDate: (d: string) => HisDate.toStandardHisDisplayFormat(\n                      this.service.estimateDelieveryDate(d)\n                    ),\n                    calculateGestationWeeks: (d: string) => this.service.calculateWeekOfFirstVisit(d),\n                    allowUnknown: true\n                }\n            },\n            {\n                id: 'estimate_lmp',\n                proxyID: 'delivery_date',\n                helpText: 'Gestation (months)',\n                type: FieldType.TT_NUMBER,\n                condition: (f: any) => f.lnmp.value === 'Unknown',\n                computedValue: (v: Option) => {\n                    return this.buildDelieveryDateObs(this.service.calculateGestationDateFromPeriod(v.value))\n                },\n                validation: (v: Option) => this.validateSeries([\n                    () => Validation.required(v),\n                    () => Validation.rangeOf(v, 1, 10)\n                ])\n            },\n            {\n                id: 'planned_delivery_place',\n                helpText: 'Planned delivery place',\n                type: FieldType.TT_SELECT,\n                computedValue: (v: Option) => this.service.buildValueText('Planned Delivery Place', v.label),\n                validation: (v: Option) => Validation.required(v),\n                options: (_: any, filter='') => getFacilities(filter),\n                config: {\n                    footerBtns: [\n                      {\n                        name: \"Here\",\n                        slot: \"end\",\n                        onClickComponentEvents: {\n                          setValue: (btnEvent: FooterBtnEvent) => {\n                            return btnEvent.btnOutput\n                          }\n                        },\n                        onClick: () => AncCurrentPregnancyService.getLocationName()\n                      }\n                    ],\n                    showKeyboard: true,\n                    isFilterDataViaApi: true\n                }\n            },\n            {\n                id: 'bed_net_available_for_use',\n                helpText: 'Mosquito net in good condition available for own use',\n                type: FieldType.TT_SELECT,\n                computedValue: (v: Option) => this.service.buildValueCoded('Do you use bed nets', v.value),\n                validation: (v: Option) => Validation.required(v),\n                options: () => {\n                    return this.yesNoOptions()\n                }\n            },\n            {\n                id: 'bed_net_given',\n                helpText: 'Bed net given today',\n                type: FieldType.TT_SELECT,\n                computedValue: (v: Option) => this.service.buildValueCoded('Mosquito net started', v.value),\n                validation: (v: Option) => Validation.required(v),\n                condition: (f: any) => f.bed_net_available_for_use.value === 'No',\n                options: () => {\n                    return this.yesNoOptions()\n                }\n            },\n            {\n                id: 'previous_ttv_given',\n                helpText: 'Previous TTV given before this pregnancy',\n                type: FieldType.TT_NUMBER,\n                computedValue: (v: Option) => this.service.buildValueNumber('TTV', v.value),\n                validation: (v: Option) => Validation.required(v)\n            }\n        ]\n    }\n  }\n})\n","import { render } from \"./CurrentPregnancy.vue?vue&type=template&id=1e0496c7&ts=true\"\nimport script from \"./CurrentPregnancy.vue?vue&type=script&lang=ts\"\nexport * from \"./CurrentPregnancy.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { PatientProgramService } from \"@/services/patient_program_service\"\nimport dayjs from \"dayjs\";\nimport { AppendleadingZero } from \"@/utils/Strs\";\n\nexport class AncCurrentPregnancyService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 81, providerID)\n    }\n\n    async enrollPatient() {\n        const program = new PatientProgramService(this.patientID)\n        /**\n         * TODO: Check if patient is already enrolled first\n        */\n        await program.enrollProgram()\n        program.setStateDate(this.date)\n        program.setStateId(118) //Currently on treatment state... Please remove this ID hack if you can\n        await program.updateState()\n    }\n\n    calculateWeekOfFirstVisit(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        const today: any = new Date(this.getDate());\n        const s = today - theDate;\n        return String(Math.floor(s / (24 * 60 * 60 * 7 * 1000)));\n    }\n\n    calculateGestationDateFromPeriod(period: number) {\n        return dayjs(this.date).subtract(period, 'months').endOf('month').format('YYYY-MM-DD')\n    }\n\n    estimateDelieveryDate(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        theDate.setMonth(theDate.getMonth() + 9);\n        const month = AppendleadingZero(theDate.getMonth()+1)\n        const day = AppendleadingZero(theDate.getDate())\n        return `${theDate.getFullYear()}-${month}-${day}`\n    }\n}\n"],"sourceRoot":""}