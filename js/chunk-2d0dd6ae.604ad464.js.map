{"version":3,"sources":["webpack:///./src/apps/OPD/views/encounters/OutcomeStatus.vue?bf8d","webpack:///./src/apps/OPD/services/patient_referral_service.ts","webpack:///./src/apps/OPD/services/patient_admit_service.ts","webpack:///./src/apps/OPD/views/encounters/OutcomeStatus.vue","webpack:///./src/apps/OPD/views/encounters/OutcomeStatus.vue?722a"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","PatientReferralService","patientID","providerID","AppEncounterService","PatientAdmitService","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","referralService","admissionService","watch","ready","handler","isReady","getFields","immediate","deep","methods","formData","computedData","opd_outcome","value","createEncounter","resolveObs","admissionData","saveObservationList","referralData","nextTask","id","helpText","type","FieldType","TT_SELECT","validation","Validation","required","options","label","computedValue","tag","obs","buildValueText","condition","_","filter","getFacilities","config","showKeyboard","isFilterDataViaApi","other","buildValueCodedFromConceptId","concept_id","getSpecialistClinics","getFacilityWards","__exports__"],"mappings":"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","file":"js/chunk-2d0dd6ae.604ad464.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onSubmit\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class PatientReferralService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 114, providerID) \n    }\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class PatientAdmitService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 42, providerID) \n    }\n}","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { getFacilities, getFacilityWards, getSpecialistClinics } from '@/utils/HisFormHelpers/LocationFieldOptions';\nimport { PatientReferralService } from '@/apps/OPD/services/patient_referral_service'\nimport { PatientAdmitService } from '@/apps/OPD/services/patient_admit_service'\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    referralService: {} as any,\n    admissionService: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.referralService = new PatientReferralService(this.patientID, this.providerID)\n          this.admissionService = new PatientAdmitService(this.patientID, this.providerID)\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(formData: any, computedData: any){\n      if(formData.opd_outcome.value === 'Admission') {\n        await this.admissionService.createEncounter()\n        const admissionData = await this.resolveObs({...computedData}, 'admission')\n        await this.admissionService.saveObservationList(admissionData)\n      } else {\n        await this.referralService.createEncounter()\n        const referralData = await this.resolveObs({...computedData}, 'referral')\n        await this.referralService.saveObservationList(referralData)\n      }\n      \n      this.nextTask()        \n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: 'opd_outcome',\n          helpText: 'Select outcome',\n          type: FieldType.TT_SELECT,\n          validation: (value: any) => Validation.required(value),\n          options: () => {\n            return [\n              { label: 'Admit', value: 'Admission' },\n              { label: 'Internal referral', value: 'Internal referral' },\n              { label: 'Refer to another hospital/clinic', value: 'External referral' },\n            ]\n          }\n        },\n        {\n          id: 'facility_name',\n          helpText: 'Select Facility name',\n          type: FieldType.TT_SELECT,\n          validation: (value: any) => Validation.required(value),\n          computedValue: ({ value }: Option) => ({\n            tag: 'referral',\n            obs: this.referralService.buildValueText('Referred', value)\n          }),\n          condition: (fields: any) => fields.opd_outcome.value === 'External referral',\n          options: (_: any, filter='') => getFacilities(filter),\n          config: {\n              showKeyboard: true,\n              isFilterDataViaApi: true\n          }\n        },\n        {\n          id: 'specialist_clinic',\n          helpText: 'Select clinic',\n          type: FieldType.TT_SELECT,\n          validation: (value: any) => Validation.required(value),\n          computedValue: ({ other }: Option) => ({\n            tag: 'referral',\n            obs: this.referralService.buildValueCodedFromConceptId('Specialist clinic', other.concept_id)\n          }),\n          condition: (fields: any) => fields.opd_outcome.value === 'Internal referral',\n          options: () => getSpecialistClinics(),\n          config: { showKeyboard: true }\n        },    \n        {\n          id: 'wards',\n          helpText: 'Select ward',\n          type: FieldType.TT_SELECT,\n          condition: (fields: any) => fields.opd_outcome.value === 'Admission',\n          validation: (value: any) => Validation.required(value),\n          computedValue: ({ value }: Option) => ({\n            tag: 'admission',\n            obs: this.admissionService.buildValueText('Admit to ward', value)\n          }),\n          options: (_: any, filter='') => getFacilityWards(filter),\n          config: {\n              showKeyboard: true,\n              isFilterDataViaApi: true\n          }\n        },  \n      ]\n    }\n  }\n})\n","import { render } from \"./OutcomeStatus.vue?vue&type=template&id=11619aa6&ts=true\"\nimport script from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}