{"version":3,"sources":["webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?f5b0","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?1898","webpack:///./src/apps/ART/views/encounters/Vitals.vue?708f","webpack:///./src/apps/ART/views/encounters/Vitals.vue","webpack:///./src/apps/ART/views/encounters/Vitals.vue?fbfe","webpack:///./src/apps/ART/services/vitals_service.ts","webpack:///./node_modules/core-js/modules/es.number.to-fixed.js","webpack:///./src/utils/GuidelineEngine.ts"],"names":["toInteger","requireObjectCoercible","module","exports","repeat","count","str","String","this","result","n","Infinity","RangeError","classof","value","TypeError","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","patientID","providerID","facts","ready","watch","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","split","username","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","e","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","required","formData","computedData","$emit","_component_his_standard_form","_resolveComponent","onOnskip","$event","mixins","EncounterMixinVue","app","HisApp","getActiveApp","age","gender","hasBPinfo","finalHeightValue","recentHeight","recentHeightObsID","HTNEnabled","optionWhiteList","hasHTNObs","vitals","weightForHeight","medianWeightandHeight","canEditHeight","patientAgeAtPrevRecordedHeight","init","VitalsService","getAge","getGender","getFields","getOptions","modifier","icon","visible","o","includes","canCheckWeightHeight","canCheckBp","createEncounter","encounter","toastWarning","buildObs","saveObservationList","observations","toastSuccess","mapObs","sanitizeVitals","element","on_htn_medication","buildValueText","splitBP","forEach","bpSystolic","bpDiastolic","getBMI","weight","getVal","height","currentWeightPercentile","parseFloat","toFixed","currentHeightPercentile","currentHeightRounded","Math","floor","medianWeightHeight","weightForHeightPercentile","isNaN","BMI","BMIService","calculateBMI","val","key","j","buildValueNumber","validateVitals","l","checkRequiredVitals","v","validateAll","id","helpText","FieldType","TT_SELECT","applicationName","getAll","validation","Validation","TT_VITALS_ENTRY","query","vital_options","getRecentHeightObs","lastHeight","dayjs","diff","getMedianWeightHeight","getWeightForHeightValues","beforeNext","heightOption","enteredHeight","prevHeight","prevHeightBtnTxt","newHeightBtnTxt","alertConfirmation","voidObs","config","hiddenFooterBtns","onUpdateAlertStatus","weightOption","onChangeOption","activeItem","errs","validator","vital","match","min","max","errors","holder","isValidBP","checkMinMax","mergeErrors","emptyErrors","isNotEmptyandFloat","minErrors","isNotEmptyandNumber","isValidBPReading","AppEncounterService","$","thisNumberValue","fails","nativeToFixed","pow","x","acc","log","x2","FORCED","call","target","proto","forced","fractionDigits","z","k","number","fractDigits","sign","multiply","c","c2","divide","dataToString","s","t","slice","isCondition","ignored","undefined","prop","every","sortByPriority","sortByWeight","guidelines","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info"],"mappings":"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","file":"js/chunk-4a601f68.cebc456a.js","sourcesContent":["'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onOnskip: _cache[1] || (_cache[1] = $event => (_ctx.activeField = '')),\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"activeField\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport { alertConfirmation, toastSuccess, toastWarning } from \"@/utils/Alerts\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { BMIService } from \"@/services/bmi_service\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { find, isEmpty } from \"lodash\";\nimport HisApp from \"@/apps/app_lib\"\nimport { infoActionSheet } from \"@/utils/ActionSheets\"\nimport dayjs from \"dayjs\";\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    app: HisApp.getActiveApp() as any,\n    activeField: \"\",\n    age: null as any,\n    gender: null as any,\n    hasBPinfo: false,\n    finalHeightValue: null as number | null,\n    recentHeight: null,\n    recentHeightObsID: -1,\n    HTNEnabled: false,\n    optionWhiteList: [] as string[],\n    hasHTNObs: false,\n    vitals: {} as any,\n    weightForHeight: {} as any,\n    medianWeightandHeight: {} as any,\n    canEditHeight: false as boolean,\n    patientAgeAtPrevRecordedHeight: -1 as number\n  }),\n  watch: {\n    ready: {\n      handler(ready) {\n        if (ready) this.init()\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    init() {\n      this.vitals = new VitalsService(this.patientID, this.providerID);\n      this.age = this.patient.getAge();\n      this.gender = this.patient.getGender();\n      this.fields = this.getFields();\n    },\n    getOptions() {\n      let recentHeight = ''\n      if (this.recentHeight) {\n        if (this.age > 18 || this.patientAgeAtPrevRecordedHeight >= 18 ) {\n          recentHeight = this.recentHeight || ''\n        }\n      }\n      const options = [\n        {\n          label: \"Weight\",\n          value: \"\",\n          other: {\n            modifier: \"KG\",\n            icon: \"weight\",\n            required: true,\n          },\n        },\n        {\n          label: \"Height\",\n          value: `${recentHeight}`,\n          other: {\n            modifier: \"CM\",\n            icon: \"height\",\n            recentHeight: this.recentHeight,\n            visible: this.canEditHeight,\n            required: this.canEditHeight\n          },\n        },\n        { label: \"BP\", value: \"\", other: { modifier: \"mmHG\", icon: \"bp\" } },\n        {\n          label: \"Temp\",\n          value: \"\",\n          other: { modifier: \"°C\", icon: \"temp\" },\n        },\n        {\n          label: \"SP02\",\n          value: \"\",\n          other: { modifier: \"%\", icon: \"spo2\" },\n        },\n        {\n          label: \"Pulse\",\n          value: \"\",\n          other: { modifier: \"BPM\", icon: \"pulse-rate\" },\n        },\n        {\n          label: \"Age\",\n          value: this.age,\n          other: { modifier: \"Years old\", icon: \"\", visible: false },\n        }\n      ]\n\n      if (!isEmpty(this.optionWhiteList)) {\n        return options.filter((o: any) => this.optionWhiteList.includes(o.label))\n          .map((o: any) => {\n            o.other.required = true\n            return o\n          })\n      }\n      return options\n    },\n    canCheckWeightHeight() {\n      return isEmpty(this.optionWhiteList) || this.optionWhiteList.includes('Height') \n        && this.optionWhiteList.includes('Weight')\n    },\n    canCheckBp() {\n      return isEmpty(this.optionWhiteList) || this.optionWhiteList.includes('BP')\n    },\n    async onFinish(formData: any) {\n      const encounter = await this.vitals.createEncounter();\n\n      if (!encounter) return toastWarning(\"Unable to create treatment encounter\");\n\n      const obs = await this.buildObs(formData);\n      const observations = await this.vitals.saveObservationList(obs);\n\n      if (!observations) return toastWarning(\"Unable to save patient observations\");\n\n      toastSuccess(\"Observations and encounter created!\");\n\n      this.nextTask();\n    },\n    async buildObs(formData: any) {\n      const observations: any = await this.mapObs(\n        this.sanitizeVitals(formData.vitals).filter(\n          (element) => element.label !== \"BP\"\n        ).map((e: any) => {\n          if (e.label === 'Height' && e.other.visible && this.finalHeightValue) {\n            e.value = this.finalHeightValue\n          }\n          return e\n        })\n      );\n      if (this.HTNEnabled && !this.hasHTNObs && formData.on_htn_medication) {\n        const obs = await this.vitals.buildValueText(\n          \"Treatment status\",\n          formData.on_htn_medication.value\n        );\n        observations.push(obs);\n      }\n      return observations;\n    },\n    splitBP(formData: Option[]) {\n      const p: Option[] = [];\n      formData.forEach((element) => {\n        if (element.label === \"BP\") {\n          const value = `${element.value}`.split(\"/\");\n          const bpSystolic = value[0];\n          const bpDiastolic = value[1];\n\n          p.push({ label: \"Systolic\", value: bpSystolic });\n          p.push({ label: \"Diastolic\", value: bpDiastolic });\n        }\n      });\n      return p;\n    },\n    getBMI(formData: Option[]) {\n      const weight = this.getVal(formData, \"Weight\");\n      const height = this.getVal(formData, \"Height\");\n      const obs: any = [];\n      if (this.age <= 14) {\n        const currentWeightPercentile = (\n          (weight / parseFloat(this.medianWeightandHeight[\"weight\"])) *\n          100\n        ).toFixed(0);\n        const currentHeightPercentile = (\n          (height / parseFloat(this.medianWeightandHeight[\"height\"])) *\n          100\n        ).toFixed(0);\n        const currentHeightRounded =\n          (height % Math.floor(height) < 0.5 ? 0 : 0.5) + Math.floor(height);\n        const medianWeightHeight =\n          this.weightForHeight[currentHeightRounded.toFixed(1)];\n        const weightForHeightPercentile = (\n          (weight / medianWeightHeight) *\n          100\n        ).toFixed(0);\n        if(!isNaN(parseFloat(weightForHeightPercentile))) {\n          obs.push({\n            label: \"Weight for height percent of median\",\n            value: weightForHeightPercentile,\n          });\n        }\n        obs.push({\n          label: \"Weight for age percent of median\",\n          value: currentWeightPercentile,\n        });\n        obs.push({\n          label: \"Height for age percent of median\",\n          value: currentHeightPercentile,\n        });\n      } else {\n        const BMI = BMIService.calculateBMI(weight, height);\n        obs.push({ label: \"BMI\", value: BMI });\n      }\n      return obs;\n    },\n    getVal(formData: Option[], val: string): number {\n      const value = formData.filter((key: any) => key.label === val);\n      return value[0].value === \"\" ? 0 : parseFloat(`${value[0].value}`);\n    },\n    async mapObs(vitals: any) {\n      const j = vitals.map(async (element: any) => {\n        const obs = await this.vitals.buildValueNumber(\n          element.label,\n          element.value\n        );\n        return obs;\n      });\n      return Promise.all(j);\n    },\n    validateVitals(vitals: any) {\n      const l = this.checkRequiredVitals(vitals);\n      if (l.length > 0) {\n        return l.map((val) => {\n          return [`${val.label} can not be empty`];\n        });\n      }\n      const v = this.sanitizeVitals(vitals);\n      return this.vitals.validateAll(v);\n    },\n    sanitizeVitals(vitals: Array<Option>) {\n      let p = vitals.filter((element) => {\n        if (element.label === \"Height\" && element.other.required == false) {\n          return false;\n        }\n        return element.value !== \"\" && element.label !== \"Age\";\n      })\n      if (this.canCheckBp()) {\n        p = p.concat(this.splitBP(p))\n      }\n      if (this.canCheckWeightHeight()){\n        p = p.concat(this.getBMI(vitals))\n      }\n      return p\n    },\n    checkRequiredVitals(vitals: Array<Option>) {\n      return vitals.filter((element) => {\n        return element.value === \"\" && element.other.required === true;\n      });\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"on_htn_medication\",\n          helpText: \"Already taking drugs for blood pressure?\",\n          type: FieldType.TT_SELECT,\n          init: async () => {\n            if (this.app?.applicationName === 'ART') {\n              this.HTNEnabled = await Store.get('IS_ART_HTN_ENABLED')\n              if (this.HTNEnabled) {\n                await VitalsService.getAll(this.patientID, \"Treatment status\").then(\n                  (data: any) => {\n                    this.hasHTNObs = data && data.length > 0;\n                  }\n                )\n              }\n            }\n            return true\n          },\n          validation: (val: any) => Validation.required(val),\n          condition: () => {\n            return this.HTNEnabled && !this.hasHTNObs;\n          },\n          options: () => [\n            {\n              label: \"Yes\",\n              value: \"BP Drugs started\",\n            },\n            {\n              label: \"No\",\n              value: \"Not on BP Drugs\",\n            },\n          ],\n        },\n        {\n          id: \"vitals\",\n          helpText: \"Vitals entry\",\n          type: FieldType.TT_VITALS_ENTRY,\n          init: async () => {\n            const optionWhiteList = this.$route.query.vital_options as string\n            if (optionWhiteList) this.optionWhiteList = optionWhiteList.split(',')\n            if (this.canCheckWeightHeight()) {\n              const lastHeight = await this.patient.getRecentHeightObs();\n              if (!isEmpty(lastHeight)) {\n                this.patientAgeAtPrevRecordedHeight = dayjs(lastHeight['obs_datetime'])\n                  .diff(this.patient.getBirthdate(), 'year')\n                this.recentHeight = lastHeight['value_numeric'];\n                this.recentHeightObsID = lastHeight['obs_id'];\n                /**\n                 * For a scenario where a patient's height was last updated when they were a minor\n                 * and they return as an adult, provide an option to update their height.\n                 */\n                this.canEditHeight = this.patientAgeAtPrevRecordedHeight < 18 || this.age < 18\n              } else {\n                this.canEditHeight = true\n              }\n              if (this.age <= 14) {\n                this.medianWeightandHeight = await this.patient.getMedianWeightHeight();\n                this.weightForHeight = await ProgramService.getWeightForHeightValues();\n              }\n            }\n            return true\n          },\n          validation: (value: any) => this.validateVitals(value),\n          beforeNext: async (val: Option[]) => {\n            const heightOption = find(val, { label: \"Height\" });\n            if (heightOption && this.recentHeight && heightOption.other.visible) {\n              const enteredHeight = parseInt(`${heightOption.value || 0}`);\n              const prevHeight = parseInt(`${this.recentHeight || 0}`);\n\n              /** Warn if inconsistent height is detected */\n              if (enteredHeight < prevHeight) {\n                const prevHeightBtnTxt = `Use ${prevHeight} CM`\n                const newHeightBtnTxt = `Use ${enteredHeight} CM`\n                const action = await infoActionSheet(\n                  `Previous Height \"${prevHeight} CM\"`,\n                  `Current Height \"${enteredHeight} CM\"`,\n                  `Inconsistent Height Reading (Height can not be lower than previous height of \" ${this.recentHeight} \"CM. Please SELECT the correct height.)`,\n                  [\n                    {\n                      name: prevHeightBtnTxt,\n                      slot: 'start',\n                      color: 'success'\n                    },\n                    {\n                      name: newHeightBtnTxt,\n                      slot: 'end',\n                      color: 'danger'\n                    }\n                  ]\n                )\n                if (action === newHeightBtnTxt && this.recentHeightObsID) {\n                  if ((await alertConfirmation(\n                    `Do you want to void height observation for ${prevHeight}`\n                  ))) {\n                    await VitalsService.voidObs(this.recentHeightObsID)\n                  }\n                } else {\n                  this.finalHeightValue = prevHeight\n                }\n              }\n            }\n            return true\n          },\n          config: {\n            hiddenFooterBtns : [\n              'Clear'\n            ],\n            onUpdateAlertStatus: async (params: Option[]) => {\n              const weightOption = find(params, { label: 'Weight'})\n              const heightOption = find(params, { label: 'Height'})\n\n              if (!(weightOption && heightOption)) return\n\n              const weight = parseFloat(weightOption.value as string)\n              const height = parseFloat(heightOption.value as string)\n\n              if (weight <= 0 || height <=0) return { \n                label: 'BMI',\n                value: 'N/A',\n                color: '', \n                status: ''\n              }\n\n              const BMI = await BMIService.getBMI(weight, height, this.gender, this.age);\n\n              return {\n                label: 'BMI',\n                value: BMI.index,\n                color: BMI.color, \n                status: BMI.result\n              }\n            },\n            onChangeOption: (activeItem: any) => {\n              if (!activeItem.value && activeItem.other.required) {\n                throw `Value for ${activeItem.label} is required`\n              }else if (activeItem.value) {\n                const errs = this.vitals.validator(activeItem)\n                if(errs && errs.length) throw errs\n              }\n            }\n          },\n          options: () => this.getOptions(),\n        },\n      ];\n    },\n  },\n});\n","import { render } from \"./Vitals.vue?vue&type=template&id=0953bc40&ts=true\"\nimport script from \"./Vitals.vue?vue&type=script&lang=ts\"\nexport * from \"./Vitals.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n"],"sourceRoot":""}