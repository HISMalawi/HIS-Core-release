{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/clinic/ClinicAppointments.vue?08d1","webpack:///./src/apps/ART/views/reports/clinic/ClinicAppointments.vue","webpack:///./src/apps/ART/views/reports/clinic/ClinicAppointments.vue?b900","webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?5c96","webpack:///./src/views/reports/BaseTableReport.vue?be7b","webpack:///./src/views/reports/BaseTableReport.vue","webpack:///./src/views/reports/BaseTableReport.vue?3283","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/views/reports/BaseTableReport.vue?a4bb"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","period","rows","fields","columns","showtitleOnly","config","showIndex","encryptPDF","onReportConfiguration","onPeriod","_","defineComponent","mixins","ReportMixin","components","ReportTemplate","IonPage","data","date","appointments","table","thTxt","csvExportable","pdfExportable","created","this","report","PatientReportService","id","helpText","type","FieldType","TT_DATE_PICKER","defaultValue","getSessionDate","validation","val","Validation","required","onValue","async","setStartDate","getBookedAppointments","infoItems","_this$appointments$da","label","value","length","methods","form","HisDate","toStandardHisDisplayFormat","setRows","sort","asc","d","given_name","forEach","push","tdARV","arv_number","td","family_name","formatGender","gender","tdDate","birthdate","district","village","land_mark","cell_phone","tdBtn","confirmPatient","person_id","__exports__","app","App","getActiveApp","reportReady","startDate","endDate","customFileName","isMilitarySite","drillDownCache","upCaseGender","toUpperCase","test","toDate","sortByArvNumber","attr","a","b","getArvInt","e","console","error","arv","prfx","art","arvNumStr","split","arvNumInt","parseInt","params","sortValue","patient","$router","asyncRows","canExport","modal","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","present","rowParser","getDefaultDrillDownTable","ARV_NUM_INDEX","t","tableRows","map","index","isArray","defaultRow","num","key","oldIndex","rest","Patientservice","findByID","row","getArvNumber","getGender","getBirthdate","toString","path","Promise","all","runTableDrill","drilldownData","drill","values","tdLink","getQuaterOptions","quarters","ArtReportService","getReportQuarters","q","name","start","other","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","minDate","TT_SELECT","condition","options","items","generateDateFields","f","quarter","estimation","allowUnknown","computeValue","unload","s","c","end_date","start_date","init","Store","get","computedValue","v","_this$app","applicationName","_hoisted_1","class","_hoisted_2","_hoisted_3","_component_his_standard_form","_component_ion_img","_component_ion_thumbnail","_component_ion_label","_component_report_filter","_component_ion_toolbar","_component_ion_header","_component_report_table","_component_ion_content","_component_pagination","_component_ion_chip","_component_ion_footer","_component_his_footer","_createElementBlock","_Fragment","_withDirectives","onOnFinish","skipSummary","_vShow","showForm","_createCommentVNode","slot","src","logo","_createElementVNode","_createTextVNode","_toDisplayString","customInfo","showPerPageFilter","disableSearchFilter","isTableLoading","disablePerPageFilter","totalRowCount","customFilter","onOnItemsPerPage","i","itemsPerPage","onOnItemsVLtype","itemsVLtype","onOnSearchFilter","searchFilter","tableCssTheme","newPage","currentPage","onOnIsLoading","l","onOnTableRows","r","onOnPagination","p","totalPages","onOnActiveColumns","activeColumns","onOnActiveRows","activeRows","perPage","maxVisibleButtons","onOnChangePage","color","coreVersion","apiVersion","btns","HisStandardForm","IonHeader","ReportTable","HisFooter","IonContent","IonToolbar","Pagination","ReportFilter","IonFooter","IonChip","IonLabel","props","String","Function","Boolean","Object","Array","customBtns","canExportPDf","canExportCsv","showVLFilter","Number","formData","computeFormData","isLoadingData","getApiVersion","getCoreVersion","siteUUID","getSiteUUID","getFileName","getLocationName","pdfEncryptionData","password","getUserName","encryption","userPassword","ownerPassword","userPermissions","computedData","presentLoading","loadingController","toastDanger","loading","message","backdropDismiss","size","visible","onClick","toExportableFormat","toCsv","mode","option","infoActionSheet","toTablePDF","reloadReport","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","$emit"],"mappings":"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","file":"js/chunk-72cec5a0.bde03a65.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        period: _ctx.period,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        showtitleOnly: true,\n        config: {\n                showIndex: false\n            },\n        encryptPDF: true,\n        onReportConfiguration: _ctx.onPeriod\n      }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { PatientReportService } from \"@/apps/ART/services/reports/patient_report_service\"\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport { FieldType } from '@/components/Forms/BaseFormElements'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport HisDate from \"@/utils/Date\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { IonPage } from \"@ionic/vue\"\nimport { sort } from 'fast-sort'\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate, IonPage },\n    data: () => ({\n        title: 'Booked clients',\n        date: '' as string,\n        rows: [] as Array<any>,\n        appointments: {} as Record<string, any>,\n        columns: [\n            [\n                table.thTxt('ARV#'),\n                table.thTxt('First name', { csvExportable: false, pdfExportable: true }),\n                table.thTxt('Last name', { csvExportable: false, pdfExportable: true }) ,\n                table.thTxt('Gender'),\n                table.thTxt('birthdate'),\n                table.thTxt('Current Address', { csvExportable: false, pdfExportable: true }),\n                table.thTxt('Actions')\n            ]\n        ]\n    }),\n    created() {\n        this.report = new PatientReportService()\n        this.fields = [\n            {\n                id: 'date',\n                helpText: 'Select date',\n                type: FieldType.TT_DATE_PICKER,\n                defaultValue: () => PatientReportService.getSessionDate(),\n                validation: (val: any) => Validation.required(val),\n                onValue: async (date: string) => {\n                    this.report.setStartDate(date)\n                    if (!this.appointments[date]) {\n                        this.appointments[date] = (await this.report.getBookedAppointments(date)) || []\n                    }\n                    return true\n                },\n                config: {\n                    infoItems: (date: string) => {\n                        return [{\n                            label: 'Appointments',\n                            value: this.appointments[date]?.length || 0\n                        }]\n                   } \n                }\n            }\n        ]\n    },\n    methods: {\n        onPeriod(form: any) {\n            this.rows = []\n            this.period = HisDate.toStandardHisDisplayFormat(form.date)\n            this.setRows(this.appointments[form.date])\n        },\n        setRows(data: Array<any>) {\n            sort(data).asc((d: any) => d.given_name).forEach((data: any) => {\n                this.rows.push([\n                    this.tdARV(data.arv_number || 'N/A'),\n                    table.td(data.given_name),\n                    table.td(data.family_name),\n                    table.td(this.formatGender(data.gender)),\n                    table.tdDate(data.birthdate),\n                    table.td(\n                       `District: <br/> <b>${data.district}</b><br/>\n                        Village: <br/> <b>${data.village}</b><br/>\n                        Land-mark: <br/> <b>${data.land_mark}</b><br/>\n                        Cellphone: <br/> <b>${data.cell_phone}</b>`\n                    ),\n                    table.tdBtn('Select', () => this.confirmPatient(data.person_id))\n                ])\n            })\n        }\n    }\n})\n","import { render } from \"./ClinicAppointments.vue?vue&type=template&id=5a34bf81&ts=true\"\nimport script from \"./ClinicAppointments.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicAppointments.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport Store from \"@/composables/ApiStore\"\nimport App from \"@/apps/app_lib\"\n\nexport default defineComponent({\n    data: () => ({\n        app: App.getActiveApp(),\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        isMilitarySite: false as boolean,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            const upCaseGender = `${gender}`.toUpperCase()\n            if (upCaseGender === 'M' || upCaseGender === 'MALE') {\n                return 'Male'\n            }\n            if (upCaseGender === 'F' || upCaseGender === 'FEMALE') {\n                return 'Female'\n            }\n            if (/fbf|fnp|fp/i.test(gender)) {\n                return upCaseGender\n            }\n            return gender\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const [prfx, art, arvNumStr] = arv.split('-')\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            const [oldIndex, ...rest] = this.drillDownCache[key]\n                            return [index, ...rest] // Assign new index number and maintain patient record\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                }),\n                {\n                    id: 'occupation',\n                    helpText: \"Report Group\",\n                    type: FieldType.TT_SELECT,\n                    init: async () => {\n                        this.isMilitarySite = await Store.get('IS_MILITARY_SITE')\n                        return true\n                    },\n                    computedValue: (v: Option) => v.value, \n                    condition: () => this.app?.applicationName === 'ART' && this.isMilitarySite,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        return [\n                            { label: 'All', value: 'All'},\n                            { label: 'Military', value: 'Military'},\n                            { label: 'Civilian', value: 'Civilian'},\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-081fcbca\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"header-text-list\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"report-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_img = _resolveComponent(\"ion-img\")!\n  const _component_ion_thumbnail = _resolveComponent(\"ion-thumbnail\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_report_filter = _resolveComponent(\"report-filter\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_pagination = _resolveComponent(\"pagination\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_his_footer = _resolveComponent(\"his-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createVNode(_component_his_standard_form, {\n      onOnFinish: _ctx.onFinish,\n      skipSummary: true,\n      fields: _ctx.fields\n    }, null, 8, [\"onOnFinish\", \"fields\"]), [\n      [_vShow, _ctx.showForm]\n    ]),\n    (!_ctx.showForm)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 0 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_thumbnail, { slot: \"start\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_img, { src: _ctx.logo }, null, 8, [\"src\"])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_label, null, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"ul\", _hoisted_1, [\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Title \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.title), 1)\n                          ]),\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Period \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.period), 1)\n                          ]),\n                          (_ctx.customInfo)\n                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_2, [\n                                _createTextVNode(_toDisplayString(_ctx.customInfo.label) + \" \", 1),\n                                _createElementVNode(\"b\", null, _toDisplayString(_ctx.customInfo.value), 1)\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_report_filter, {\n                      slot: \"end\",\n                      showPerPageFilter: _ctx.showFilters || _ctx.paginated,\n                      disableSearchFilter: _ctx.isTableLoading,\n                      disablePerPageFilter: _ctx.isTableLoading,\n                      totalRowCount: _ctx.tableRows.length,\n                      customFilter: _ctx.customFilter,\n                      onOnItemsPerPage: _cache[0] || (_cache[0] = (i) => _ctx.itemsPerPage = i),\n                      onOnItemsVLtype: _cache[1] || (_cache[1] = (f) => _ctx.itemsVLtype = f),\n                      onOnSearchFilter: _cache[2] || (_cache[2] = (f) => _ctx.searchFilter = f)\n                    }, null, 8, [\"showPerPageFilter\", \"disableSearchFilter\", \"disablePerPageFilter\", \"totalRowCount\", \"customFilter\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createVNode(_component_report_table, {\n                    rows: _ctx.rows,\n                    paginated: _ctx.paginated,\n                    asyncRows: _ctx.asyncRows,\n                    rowParser: _ctx.rowParser,\n                    config: {..._ctx.config, tableCssTheme: _ctx.tableCssTheme},\n                    columns: _ctx.columns,\n                    showFilters: _ctx.showFilters,\n                    newPage: _ctx.currentPage,\n                    searchFilter: _ctx.searchFilter,\n                    rowsPerPage: _ctx.itemsPerPage,\n                    onOnIsLoading: _cache[3] || (_cache[3] = (l) => _ctx.isTableLoading = l),\n                    onOnTableRows: _cache[4] || (_cache[4] = (r) => _ctx.tableRows = r),\n                    onOnPagination: _cache[5] || (_cache[5] = (p) => _ctx.totalPages = p.length),\n                    onOnActiveColumns: _cache[6] || (_cache[6] = (c) => _ctx.activeColumns = c),\n                    onOnActiveRows: _cache[7] || (_cache[7] = (r) => _ctx.activeRows = r)\n                  }, null, 8, [\"rows\", \"paginated\", \"asyncRows\", \"rowParser\", \"config\", \"columns\", \"showFilters\", \"newPage\", \"searchFilter\", \"rowsPerPage\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                (!_ctx.searchFilter && _ctx.paginated || !_ctx.searchFilter && _ctx.totalPages > 0 && _ctx.paginated)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 0 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_pagination, {\n                          perPage: _ctx.itemsPerPage,\n                          maxVisibleButtons: 10,\n                          totalPages: _ctx.totalPages,\n                          onOnChangePage: _cache[8] || (_cache[8] = (p) => _ctx.currentPage=p)\n                        }, null, 8, [\"perPage\", \"totalPages\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.showReportStamp)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 1 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Date Created: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.date), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"His-Core Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.coreVersion), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"API Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.apiVersion), 1)\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, {\n              color: _ctx.footerColor,\n              btns: _ctx.btns\n            }, null, 8, [\"color\", \"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { toCsv, toTablePDF } from \"@/utils/Export\"\nimport { toExportableFormat, ColumnInterface, RowInterface} from \"@/components/DataViews/tables/ReportDataTable\" \nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { \n  IonPage,\n  IonHeader,\n  IonContent,\n  IonToolbar,\n  loadingController,\n  IonChip, \n  IonFooter,\n  IonLabel\n} from \"@ionic/vue\"\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport ReportFilter from \"@/components/ReportFilter.vue\"\nimport Pagination from \"@/components/Pagination.vue\"\nimport { toastDanger } from \"@/utils/Alerts\";\nimport { EncryptionOptions } from \"jspdf\";\nimport { infoActionSheet } from \"@/utils/ActionSheets\";\n\nexport default defineComponent({\n  components: { \n    HisStandardForm,   \n    IonHeader,\n    ReportTable, \n    HisFooter, \n    IonPage, \n    IonContent, \n    IonToolbar,\n    Pagination, \n    ReportFilter,  \n    IonFooter,\n    IonChip, \n    IonLabel\n  },\n  props: {\n      title: {\n      type: String,\n      required: true,\n    },\n    customFilter: {\n      type: Function\n    },\n    period: {\n      type: String,\n      default: '',\n    },\n    encryptPDF: {\n      type: Boolean,\n      default: false\n    },\n    config: {\n      type: Object as PropType<Record<string, any>>\n    },\n    fields: {\n      type: Array as PropType<Field[]>,\n      default: () => []\n    },\n    columns: {\n      type: Array as PropType<Array<ColumnInterface[]>>,\n      required: true\n    },\n    rows: {\n      type: Array as PropType<Array<RowInterface[]>>,\n      required: true\n    },\n    paginated: {\n        type: Boolean,\n        default: false\n    },\n    customBtns: {\n      type: Array,\n      default: () => []\n    },\n    canExportPDf: {\n      type: Boolean,\n      default: true\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true\n    },\n    onReportConfiguration: {\n      type: Function,\n      required: false\n    },\n    rowParser: {\n      type: Function as PropType<((data: any) => any[][])>\n    },\n    showFilters: {\n      type: Boolean,\n      default: false\n    },\n    showVLFilter: {\n      type: Boolean,\n      default: false\n    },\n    rowsPerPage: {\n      type: Number\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[][]>>\n    },\n    footerColor: {\n      type: String,\n      default: 'dark'\n    },\n    customFileName: {\n      type: String,\n      default: ''\n    },\n    canExport: {\n      type: Boolean,\n      default: true\n    },\n    showReportStamp: {\n      type: Boolean,\n      default: true\n    },\n    customInfo: {\n      type: Object as PropType<Option>\n    }\n  },\n  data: () => ({\n    formData: {} as any,\n    computeFormData: {} as any,\n    btns: [] as Array<any>,\n    isLoadingData: false as boolean,\n    showForm: false as boolean,\n    logo: \"/assets/images/login-logos/Malawi-Coat_of_arms_of_arms.png\" as string,\n    isTableLoading: false as boolean,\n    searchFilter: '' as string,\n    itemsPerPage: 50 as number,\n    itemsVLtype: '' as string,\n    currentPage: 0 as number,\n    tableRows: [] as any,\n    totalPages: 0 as number,\n    activeColumns: [] as any,\n    activeRows: [] as any,\n    date: HisDate.toStandardHisDisplayFormat(Service.getSessionDate()),\n    apiVersion: Service.getApiVersion(),\n    coreVersion: Service.getCoreVersion(),\n    siteUUID: Service.getSiteUUID() as string,\n    tableCssTheme: 'opd-report-theme',\n  }),\n  methods: {\n    getFileName() {\n      return `${Service.getLocationName()} ${this.title} ${this.period}`\n    },\n    pdfEncryptionData(): Record<\"encryption\", EncryptionOptions> {\n      const password = Service.getUserName()\n      return {\n        encryption: {\n          userPassword: password,\n          ownerPassword: password,\n          userPermissions: [\"print\"]\n        }\n      }\n    },\n    async onFinish(formData: any, computedData: any) {\n      this.formData = formData\n      this.computeFormData = computedData\n      this.showForm = false\n      await this.presentLoading()\n      try {\n        if(this.onReportConfiguration) await this.onReportConfiguration(this.formData, this.computeFormData)\n        loadingController.dismiss ()\n      }catch(e) {\n        console.error(e)\n        toastDanger(`${e}`)\n        loadingController.dismiss()\n      }\n    },\n    async reloadReport() {\n      await this.onFinish(this.formData, this.computeFormData)\n    },\n    async presentLoading() {\n      const loading = await loadingController\n        .create({\n          message: 'Please wait...',\n          backdropDismiss: false\n        })\n      await loading.present()\n    }\n  },\n  created() {\n    this.showForm = !!this.fields.length\n    this.btns = this.customBtns\n    this.btns.push(\n      {\n        name: \"CSV\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportCsv,\n        onClick: async () => {\n          const {columns, rows} = toExportableFormat(this.columns, this.rows)\n          toCsv(columns, [\n            ...rows,\n            [`Date Created: ${this.date}`],\n            [`Period: ${this.period}`],\n            [`HIS-Core Version: ${this.coreVersion}`],\n            [`API Version: ${this.apiVersion}`],\n            [`Site UUID: ${this.siteUUID}`]\n          ], this.getFileName())\n        }\n      },\n      {\n        name: \"PDF\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportPDf,\n        onClick: async () => {\n          let mode: 'pdfMode' | 'ignorePDFColumnexport' = 'pdfMode'\n          if (this.encryptPDF) {\n            const option = await infoActionSheet(\n              'Security warning',\n              'PDF may contain private data that will require a password to unlock',\n              'To access private data choose Secure PDF over Regular PDF',\n              [\n                { \n                  name: \"Secure PDF\",\n                  slot: \"start\",\n                  color: \"success\"\n                },\n                { \n                  name: \"Regular PDF\",\n                  slot: \"start\",\n                  color: \"success\"\n                }\n              ],\n              'his-danger-color'\n            )\n            mode = option === 'Secure PDF' ? 'pdfMode' : 'ignorePDFColumnexport'\n          }\n          const {columns, rows} = toExportableFormat(this.activeColumns, this.activeRows, mode)\n          toTablePDF(\n            columns, \n            rows, \n            this.getFileName(),\n            false,\n            this.encryptPDF && mode !='ignorePDFColumnexport' ? this.pdfEncryptionData() : {}\n          )\n        }\n      },\n      {\n        name: \"Back\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"primary\",\n        visible: true,\n        onClick: () => this.showForm = true\n      },\n      {\n        name: \"Refresh\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"warning\",\n        visible: true,\n        onClick: () => this.reloadReport()\n      },\n      {\n        name: \"Finish\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"success\",\n        visible: true,\n        onClick: () => this.$router.push({ path:'/' })\n      }\n    )\n  }\n})\n","import { render } from \"./BaseTableReport.vue?vue&type=template&id=081fcbca&scoped=true&ts=true\"\nimport script from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\n\nimport \"./BaseTableReport.vue?vue&type=style&index=0&id=081fcbca&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-081fcbca\"]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BaseTableReport.vue?vue&type=style&index=0&id=081fcbca&scoped=true&lang=css\""],"sourceRoot":""}