{"version":3,"sources":["webpack:///./src/apps/ANC/Views/DataManagement/AncDrugsetManager.vue?05ce","webpack:///./src/apps/ANC/Views/DataManagement/AncDrugsetManager.vue","webpack:///./src/apps/ANC/Views/DataManagement/AncDrugsetManager.vue?1d7d","webpack:///./src/apps/ANC/Views/DataManagement/AncDrugsetManager.vue?9129","webpack:///./src/apps/ANC/Services/anc_drug_set.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_item","_component_ion_list","_component_ion_col","_component_report_data_table","_component_ion_row","_component_ion_grid","_component_view_port","_component_ion_content","_component_ion_button","_component_ion_footer","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","class","_createTextVNode","_","style","size","_createElementBlock","_Fragment","_renderList","drugSets","dataSet","dIndex","button","detail","color","selectedDrugSet","id","onClick","$event","key","_toDisplayString","name","columns","drugSetColumns","rows","drugSetRows","config","tableCssTheme","cancel","slot","hasSelectedDrugSet","voidDrugset","_createCommentVNode","addDrugset","defineComponent","components","IonPage","ReportDataTable","IonList","IonItem","IonLabel","ViewPort","IonButton","IonContent","IonHeader","IonGrid","IonRow","IonCol","IonTitle","IonFooter","IonToolbar","setup","router","useRouter","ref","Table","thTxt","computed","isEmpty","value","_selectedDrugSet$valu","drugs","map","drugSet","td","duration","frequency","back","push","async","alertConfirmation","AncDrugSetService","voidDrugSet","filter","d","e","toastWarning","onMounted","getDrugSets","__exports__","Service","data","getSessionDate","this","postJson","setID","void","date","getJson","Object","keys","reduce","sets","setKey","description","parseInt","a","k","drug_name","units"],"mappings":"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","file":"js/chunk-0c5b2e2c.b8cb78cc.js","sourcesContent":["import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_report_data_table = _resolveComponent(\"report-data-table\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_view_port = _resolveComponent(\"view-port\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" Drug Set \")\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_view_port, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_grid, {\n                style: {\"background-color\":\"white\"},\n                class: \"view-port-content\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_row, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, { size: \"4\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_ion_list, null, {\n                            default: _withCtx(() => [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.drugSets, (dataSet, dIndex) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  class: \"his-sm-text\",\n                                  button: \"\",\n                                  detail: \"\",\n                                  color: _ctx.selectedDrugSet.id === dataSet.id ? 'lightblue': '',\n                                  onClick: ($event: any) => (_ctx.selectedDrugSet=dataSet),\n                                  key: dIndex\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(dataSet.name), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1024)\n                                  ]),\n                                  _: 2\n                                }, 1032, [\"color\", \"onClick\"]))\n                              }), 128))\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, { size: \"8\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_report_data_table, {\n                            columns: _ctx.drugSetColumns,\n                            rows: _ctx.drugSetRows,\n                            config: {\n                                    tableCssTheme: 'art-report-theme'\n                                }\n                          }, null, 8, [\"columns\", \"rows\"])\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                onClick: _ctx.cancel,\n                slot: \"start\",\n                color: \"danger\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" Cancel \")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              (_ctx.hasSelectedDrugSet)\n                ? (_openBlock(), _createBlock(_component_ion_button, {\n                    key: 0,\n                    onClick: _ctx.voidDrugset,\n                    slot: \"end\",\n                    color: \"danger\",\n                    size: \"large\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\" Void Drug Set \")\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]))\n                : _createCommentVNode(\"\", true),\n              _createVNode(_component_ion_button, {\n                onClick: _ctx.addDrugset,\n                slot: \"end\",\n                color: \"success\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" Add Drug Set \")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { computed, defineComponent, onMounted, ref } from 'vue'\nimport ViewPort from \"@/components/DataViews/ViewPort.vue\"\nimport ReportDataTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport Table from \"@/components/DataViews/tables/ReportDataTable\"\nimport {\n    IonPage,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonTitle,\n    IonFooter,\n    IonToolbar\n} from \"@ionic/vue\"\nimport { AncDrugSetService, NewDrugSet } from '../../Services/anc_drug_set'\nimport { isEmpty } from 'lodash'\nimport { useRouter } from 'vue-router'\nimport { alertConfirmation, toastWarning } from '@/utils/Alerts'\n\nexport default defineComponent({\n    components: {\n        IonPage,\n        ReportDataTable,\n        IonList,\n        IonItem,\n        IonLabel,\n        ViewPort,\n        IonButton,\n        IonContent,\n        IonHeader,\n        IonGrid,\n        IonRow,\n        IonCol,\n        IonTitle,\n        IonFooter,\n        IonToolbar\n    },\n    setup() {\n        const router = useRouter()\n        const selectedDrugSet = ref({} as NewDrugSet) \n        const drugSets = ref([] as NewDrugSet[])\n        const drugSetColumns = [\n            [\n                Table.thTxt('Drug'),\n                Table.thTxt('Duration in days'),\n                Table.thTxt('Frequency')\n            ]\n        ]\n        const hasSelectedDrugSet = computed(() => {\n            return !isEmpty(drugSets.value)\n        })\n        const drugSetRows = computed(() => {\n            return selectedDrugSet.value?.drugs?.map(drugSet => [\n                Table.td(drugSet['drug_name'] || 'N/A'),\n                Table.td(drugSet.duration || 'N/A'),\n                Table.td(drugSet.frequency)\n            ]) || []\n        })\n        onMounted(async () => {\n            drugSets.value = await AncDrugSetService.getDrugSets() as NewDrugSet[]\n            if (!isEmpty(drugSets.value)) {\n                selectedDrugSet.value = drugSets.value[0]\n            }\n        })\n\n        function cancel() {\n            router.back()\n        }\n\n        function addDrugset() {\n            router.push({\n                name: 'add anc drugset'\n            })\n        }\n\n        async function voidDrugset() {\n            if((await alertConfirmation('Are you sure you want to void this drug set?'))){\n                try {\n                    await AncDrugSetService.voidDrugSet(selectedDrugSet.value.id || -1)\n                    drugSets.value = drugSets.value.filter(d => d.id != selectedDrugSet.value.id)\n                    if (!isEmpty(drugSets.value)) {\n                        selectedDrugSet.value = drugSets.value[0]\n                    } else {\n                        selectedDrugSet.value = {} as any\n                    }\n                } catch (e) {\n                    toastWarning(`e`)\n                }\n            }\n        }\n        return {\n            cancel,\n            addDrugset,\n            voidDrugset,\n            drugSets,\n            hasSelectedDrugSet,\n            selectedDrugSet,\n            drugSetColumns,\n            drugSetRows\n        }\n    }\n})\n","import { render } from \"./AncDrugsetManager.vue?vue&type=template&id=31e11cd2&scoped=true&ts=true\"\nimport script from \"./AncDrugsetManager.vue?vue&type=script&lang=ts\"\nexport * from \"./AncDrugsetManager.vue?vue&type=script&lang=ts\"\n\nimport \"./AncDrugsetManager.vue?vue&type=style&index=0&id=31e11cd2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-31e11cd2\"]])\n\nexport default __exports__","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AncDrugsetManager.vue?vue&type=style&index=0&id=31e11cd2&scoped=true&lang=css\"","import { Service } from \"@/services/service\";\n\nexport interface AncDrugSetDrugs {\n    drug: number;\n    drug_name?: string;\n    quantity: number;\n    duration?: number;\n    frequency: string;\n}\n\nexport interface NewDrugSet {\n    id?: number;\n    datetime?: string;\n    name: string;\n    description: string;\n    drugs: AncDrugSetDrugs[];\n}\n\nexport class AncDrugSetService extends Service {\n    static saveDrugSet(drugSet: NewDrugSet) {\n        const data  = {...drugSet}\n        data['datetime'] = Service.getSessionDate()\n        return this.postJson('/drug_sets', drugSet)\n    }\n\n    static voidDrugSet(setID: number) {\n        return this.void(`/drug_sets/${setID}`, { date: this.getSessionDate()})\n    }\n\n    static async getDrugSets() {\n        const data = await this.getJson('drug_sets')\n        if (data) {\n            return Object.keys(data['set_names'])\n                .reduce((sets: Array<any>, setKey: string) => {\n                    const name = data['set_names'][setKey]\n                    const description = data['set_descriptions'][setKey]\n                    const drugs = data['drug_sets'][setKey]\n                    sets.push({\n                        id: parseInt(setKey),\n                        name,\n                        description,\n                        drugs: Object.keys(drugs).reduce(\n                            (a: any, k: string) => [\n                                ...a, { \n                                    'id': parseInt(k), ...drugs[k],\n                                    'drug_name': drugs[k].drug_name,\n                                    'duration': parseInt(drugs[k].duration),\n                                    'frequency': drugs[k].frequency,\n                                    'units': drugs[k].units,\n                                }], []\n                        )\n                    })\n                    return sets\n                }, [])\n        }\n        return []\n    }\n}"],"sourceRoot":""}