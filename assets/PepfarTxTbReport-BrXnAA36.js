import{d as C,I as S,cg as N,K as u,N as M,ac as B,O as D,n as $,t as O,ae as x,q as E,_ as I,r as w,o as j,c as k,w as G,b as h}from"./index-C-Wf7IuL.js";import{D as X}from"./ReportDateSelectionPrompt-CrlqSABS.js";import{T as q}from"./tb_report_service-BOUWolBq.js";import{v as L}from"./TableView-D3Avejt1.js";import{A as U}from"./ArtDrilldown-CPxJ_UjE.js";import"./Export-DKDjU6pH.js";const V=C({components:{IonPage:S,IonLoading:N,v2Datatable:L},setup(){const e=u([]),g=u(""),d=u(!1),i=new q,F=u(void 0),P=u(void 0),a=(p,l)=>({ref:l,label:p,toValue:o=>o.length,tdClick:async o=>{o.refData.length&&(await D.create({component:U,backdropDismiss:!1,cssClass:"large-modal",componentProps:{subtitle:g,patientIdentifiers:o.refData,title:"".concat(o.data.ageGroup," ").concat(o.data.gender," ").concat(o.column.label),onFinish:()=>D.getTop().then(n=>n&&D.dismiss())}})).present()}}),f=[[{label:"#",ref:"index"},{label:"Age group",ref:"ageGroup"},{label:"Gender",ref:"gender"},a("TX_CURR","tx_curr"),a("Symptom Screen (alone)","symptom_screen_alone"),a("CXR screen","cxr_screen"),a("mWRD screen","mwrd_screen"),a("New on ART/Screen Positive","sceen_pos_new"),a("New on ART/Screen Negative","sceen_neg_new"),a("Already on ART/Screen Positive","sceen_pos_prev"),a("Already on ART/Screen Negative","sceen_neg_prev"),a("TB RX_New on ART","started_tb_new"),a("TB RX_Prev on ART","started_tb_prev")]],_=async()=>v(await $("Do you want to rebuild report?")),v=async(p=!1)=>{if(!(F.value&&P.value))return O("Start date and end date required!");d.value=!0,e.value=[];try{const l=await i.getTxTbReport(p,"pepfar"),o={F:"Female",M:"Male"},n=Object.keys(l).reduce((t,s)=>{if(s==="Unknown")return t;const c=l[s];return Object.keys(c).forEach(r=>{t[r].rows.push({ageGroup:s,gender:o[r],...c[r]}),t[r].aggregate=Object.keys(c[r]).reduce((b,m)=>Array.isArray(c[r][m])?{...b,[m]:[...b[m]||[],...c[r][m]]}:b,t[r].aggregate)}),t},{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}});e.value=[...n.F.rows,...n.M.rows,{ageGroup:"All",gender:"Male",...n.M.aggregate}];const A=Object.values(n.F.aggregate).reduce((t,s)=>t.concat(s),[]),R=await i.getMaternalStatus(x.uniq(A)),y=R.FBf.concat(R.FP);["FP","FNP","FBf"].forEach(t=>{e.value.push(Object.keys(n.F.aggregate).reduce((s,c)=>({...s,[c]:n.F.aggregate[c].filter(r=>t==="FNP"?!y.includes(r):R[t].includes(r))}),{ageGroup:"All",gender:t}))}),e.value=e.value.map((t,s)=>({index:s+1,...t}))}catch(l){console.error(l),E("Unable to generate report!")}d.value=!1},T=()=>X({onFinish:(p,l,o,n)=>{g.value="Period: ".concat(o),i.startDate=p,i.endDate=l,n&&i.setOccupation(n),v()}});return M(()=>T()),{Img:B,reportData:e,isLoading:d,onRefreshReport:_,configure:T,generate:v,columns:f,period:g}}});function W(e,g,d,i,F,P){const a=w("ion-loading"),f=w("v2Datatable"),_=w("ion-page");return j(),k(_,null,{default:G(()=>[h(a,{"is-open":e.isLoading,message:"Please wait..."},null,8,["is-open"]),h(f,{title:"Tx TB Report","icon-url":e.Img("login-logos/PEPFAR.png"),subtitle:e.period,columns:e.columns,columnData:e.reportData,rowsPerPage:100,onConfigure:e.configure,onRefresh:e.onRefreshReport,"report-prefix":"Pepfar"},null,8,["icon-url","subtitle","columns","columnData","onConfigure","onRefresh"])]),_:1})}const Z=I(V,[["render",W]]);export{Z as default};
