import{H as I}from"./HisStandardForm-DO3sZVdL.js";import{d as L,T as R,U as g,q as V,b5 as S,n as $,F as o,V as u,t as p,ah as f,H as b,ai as D,S as x,_ as E,r as F,o as C,c as O}from"./index-BFVcutZq.js";import{P as w}from"./patient_lab_result_service-DGNYQ43M.js";const H=L({components:{HisStandardForm:I},data:()=>({fieldComponent:"",labResult:{},hisFormKey:0,patient:{},fields:[],selectedTest:{},testOptions:[],testIndicators:[]}),watch:{$route:{async handler({params:s}){s&&s.patient_id&&(this.patient=s.patient_id,this.labResult=new w(this.patient),await this.initData(),this.fields=this.getFields())},deep:!0,immediate:!0}},methods:{async onFinish(s,t){try{const r=Object.values(t).filter(a=>a.tag==="result_indicator"&&a.measures).map(a=>a.measures);this.labResult.setTestID(this.selectedTest.value),this.labResult.setResultDate(t.result_date),await this.labResult.createEncounter(),await this.labResult.createLabResult(r),R.invalidate("PATIENT_LAB_ORDERS"),this.testOptions=[],this.selectedTest={},this.testIndicators=[],await this.initData(),this.hisFormKey=Math.floor(Math.random()*5e3),g("Lab result saved!")}catch(r){V("".concat(r)),console.error(r)}},generateTestIndicatorsFields(){return this.testIndicators.reduce((s,t)=>s.concat(this.buildTestIndicatorFields(t.indicatorId,t.indicatorName,t.specimen,t.testId)),[])},async validateVLresults(s,t,r){if(s!=="HIV viral load")return!0;const a=r.substring(0,1),i=r.substring(1,r.length);return S.isValidVLResult(t,a,i)?!0:!await $("Invalid results for ".concat(t," HIV viral load"),{cancelBtnLabel:"Process result",confirmBtnLabel:"Re-enter result"})},alphaValueIsValid(s){try{return!!s.match(/^(>|<|=)(.*)/)}catch(t){return!1}},numericValueIsValid(s){try{return!!s.match(/^(=|<|>)([0-9]*)$/m)}catch(t){return!1}},isMalariaResult(s){return!!s.match(/mrdt|malaria/i)},isUrineLamResult(s){return!!s.match(/Lam/i)},buildTestIndicatorFields(s,t,r,a){const i=s*a,l=e=>[this.selectedTest.value===a,!!f.find(e.result_indicators,{label:t})].every(Boolean),d=e=>this.validateVLresults(t,r,e.value.toString()),n=(e,h)=>{if(e.value==="Other"&&t.match(/HIV viral load/i))return{};const m=this.isMalariaResult(t)||this.isUrineLamResult(t)?"text":h["type_".concat(i)].value,c=this.isMalariaResult(t)||this.isUrineLamResult(t)?"="+e.value:e.value.toString(),T=c.charAt(0),v=m==="numeric"?parseInt(c.substring(1)):c.substring(1),_=h.result_indicators.filter(y=>y.value===s)[0];return{tag:"result_indicator",measures:{indicator:{concept_id:_.value},value:v,value_modifier:T,value_type:m},result:v,modifier:T,test:_.label}};return[{id:"type_".concat(i),helpText:"Result type (".concat(t,")"),type:o.TT_SELECT,group:"test_indicator",condition:e=>l(e)&&!this.isMalariaResult(t)&&!this.isUrineLamResult(t),appearInSummary:()=>!1,validation:e=>u.required(e),options:()=>[{label:"Numeric (numbers only)",value:"numeric"},{label:"Alphanumeric(text and numbers)",value:"text"}]},{id:"urine_result_".concat(i),helpText:"Select Test Result (".concat(t,")"),type:o.TT_SELECT,group:"test_indicator",computedValue:n,validation:e=>u.required(e),condition:e=>l(e)&&this.isUrineLamResult(t),options:()=>[{label:"Positive",value:"positive"},{label:"Negative",value:"negative"}]},{id:"num_".concat(i),helpText:"Test Result (".concat(t,")"),type:o.TT_TEXT,group:"test_indicator",computedValue:n,beforeNext:d,onValue:e=>e&&e.value&&!this.numericValueIsValid(e.value.toString())?(p("You must enter a modifer and numbers only. i.e =90 / >19 / < 750"),!1):!0,validation:e=>u.required(e),condition:e=>l(e)&&e["type_".concat(i)].value==="numeric",config:{customKeyboard:[[["1","2","3"],["4","5","6","=","<",">"],["7","8","9","."],["","0",""]],[["Delete"]]]}},{id:"alpha_".concat(i),helpText:"Test Result (".concat(t,")"),type:o.TT_TEXT,group:"test_indicator",onValue:e=>e&&e.value&&!this.alphaValueIsValid(e.value.toString())?(p("You must enter a modifier plus result (for example =LDL)"),!1):!0,computedValue:n,validation:e=>u.required(e),condition:e=>l(e)&&e["type_".concat(i)].value==="text"&&!t.match(/HIV viral load/i)},{id:"VL_alpha_".concat(i),helpText:"Select Test Result (".concat(t,")"),type:o.TT_SELECT,group:"test_indicator",computedValue:n,validation:e=>u.required(e),condition:e=>l(e)&&e["type_".concat(i)].value==="text"&&t.match(/HIV viral load/i),options:()=>[{label:"Collect Another Sample",value:"=Collect Another Sample"},{label:"<LDL",value:"<LDL"},{label:"=LDL",value:"=LDL"},{value:"Other",label:"Other"}]},{id:"other_VL_alpha_".concat(i),helpText:"Test Result (".concat(t,")"),type:o.TT_TEXT,group:"test_indicator",onValue:e=>e&&e.value&&!this.alphaValueIsValid(e.value.toString())?(p("You must enter a modifier plus result (for example =LDL)"),!1):!0,computedValue:n,validation:e=>u.required(e),condition:e=>l(e)&&e["type_".concat(i)].value==="text"&&t.match(/HIV viral load/i)&&e["VL_alpha_".concat(i)].value==="Other"},{id:"malaria_result_".concat(i),helpText:"Select Test Result (".concat(t,")"),type:o.TT_SELECT,group:"test_indicator",computedValue:n,validation:e=>u.required(e),condition:e=>l(e)&&this.isMalariaResult(t),options:()=>t.match(/mrdt/i)?[{label:"Positive",value:"positive"},{label:"Negative",value:"negative"}]:[{label:"Parasites seen",value:"parasites seen"},{label:"No parasites seen",value:"no parasites seen"}]}]},async initData(){const s=await this.labResult.getTestsWithoutResults();for(const t in s){const r=s[t];for(const a in r.tests){const i=r.tests[a];if(!f.isEmpty(i.result))continue;this.labResult.setTestTypeID(i.concept_id);const d=(await this.labResult.getTestIndicators()).map(n=>({testId:i.id,indicatorName:n.name,indicatorId:n.concept_id,specimen:r.specimen.name}));this.testIndicators=[...this.testIndicators,...d],this.testOptions.push({label:i.name,value:i.id,other:{accession:r.accession_number,specimen:r.specimen.name,test:i.name,orderDate:r.order_date,testIndicators:d}})}}},getFields(){return[{id:"test_type",helpText:"Tests without results",type:o.TT_TABLE_VIEWER,options:()=>[{label:"",value:"",other:{rows:this.testOptions.map(t=>[t.other.accession,t.other.specimen,t.other.test,b.toStandardHisDisplayFormat(t.other.orderDate),{type:"button",name:"Select",action:()=>{this.selectedTest=t,this.$nextTick(()=>this.fieldComponent="year_result_date")}}]),columns:["Acession#","Specimen","Test","Order date"]}}],validation:s=>u.required(s),config:{overrideDefaultFooterBtns:{nextBtn:{name:"Finish",onClick:()=>this.$router.back()}},hiddenFooterBtns:["Clear","Cancel"]}},...D({id:"result_date",helpText:"Result",required:!0,estimation:{allowUnknown:!1},minDate:()=>b.toStandardHisFormat(this.selectedTest.other.orderDate),maxDate:()=>x.getSessionDate(),computeValue:s=>s}),{id:"result_indicators",helpText:"Select test result indicators",type:o.TT_MULTIPLE_SELECT,validation:s=>u.required(s),options:()=>this.selectedTest.other.testIndicators.map(s=>({label:s.indicatorName,value:s.indicatorId}))},...this.generateTestIndicatorsFields(),{id:"entry_confirmation",helpText:"Confirm entry",type:o.TT_TABLE_VIEWER,options:(s,t)=>[{label:"",value:"",other:{rows:Object.values(t).filter(a=>typeof a=="object"&&a!=null&&a.tag==="result_indicator").map(a=>[a.test,a.modifier,a.result]),columns:["Test","Modifier","Result"]}}]}]}}});function q(s,t,r,a,i,l){const d=F("his-standard-form");return C(),O(d,{key:s.hisFormKey,fields:s.fields,activeField:s.fieldComponent,skipSummary:!0,onOnIndex:t[0]||(t[0]=n=>s.fieldComponent=""),onOnFinish:s.onFinish},null,8,["fields","activeField","onOnFinish"])}const M=E(H,[["render",q]]);export{M as default};
