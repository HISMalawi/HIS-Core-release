import{d as j,aE as q,b1 as Y,ac as G,du as W,at as Q,b2 as X,a7 as J,ag as Z,ah as ee,l as te,ai as se,a5 as ne,a4 as oe,I as ae,i as ie,cd as re,co as le,ci as de,d_ as ce,z as ue,bk as b,q as v,aD as he,aw as pe,a_ as me,bs as _,y as ye,b4 as fe,dl as A,am as be,ar as a,h as u,b as r,e as n,w as o,j as y,a as f,a6 as O,a9 as I,aa as k,t as p,g as i,ak as ve,al as _e}from"./index-DrAzzURJ.js";import{L as Ie}from"./lab_order_service-BH_qmvX5.js";const ge=j({name:"Lab-modal",props:{activities:{type:Object,required:!0},ordersToday:{type:Object},onOrderAdded:{type:Object,required:!1},testFilters:{type:Array},title:{type:String,default:""}},watch:{activities:{handler(e){e&&(this.appActivities=[...e],this.getActivities())},immediate:!0}},async created(){var e;this.printCopies=(e=await A.labOrderPrintCopies())!=null?e:1,this.extendedLabsEnabled=await A.extendedLabEnabled(),this.canScanDBS=await A.canScanDBS()},methods:{onFilter(e){this.searchFilter=fe(e,this.searchFilter)},testAlreadyDoneToday(e){return!!(this.ordersToday||{})[e]},async onScanEIDbarcode(e){if((await _.create({message:"Checking ".concat(e)})).present(),this.testTypes[this.activeIndex].accessionNumber=null,"".concat(e||"").length<=0){v("Barcode is required"),_.getTop().then(t=>t&&_.dismiss());return}try{await b.accessionNumExists(e)?v("Barcode ".concat(e," was already used")):this.testTypes[this.activeIndex].accessionNumber=e}catch(t){ye("Failed to confirm barcode "+e+", Please try again later",8e3)}_.getTop().then(t=>t&&_.dismiss())},async onSelectTest(e,t,l){if(this.testAlreadyDoneToday(e))return v("Test was already ordered today, please void and try again!");this.searchFilter="",this.showKeyboard=!1,this.testTypes[t].isChecked=l.target.checked,this.testTypes[t].isChecked?(this.activeIndex=t,await this.setSpecimens(t)):this.removeOrder(t)},async setSpecimens(e){this.specimens=await b.getSpecimens(this.testTypes[e].name)},async getActivities(){const e=await b.getTestTypes(),t=me.findIndex(e,{name:"HIV viral load"}),l=t!==-1?e.splice(t,1):null,c=e.sort((d,h)=>"".concat(d.name).toUpperCase()>"".concat(h.name).toUpperCase()?1:-1).filter(d=>Array.isArray(this.testFilters)?this.testFilters.includes(d.name):!0);this.testTypes=(l?[...l,...c]:c).map((d,h)=>({...d,id:h}))},async removeOrder(e){this.testTypes[e].isChecked=!1,this.testTypes[e].reason=null,this.testTypes[e].specimen=null,this.testTypes[e].specimenConcept=null,this.testTypes[e].accessionNumber=null;const t=this.finalOrders.reverse();t[0]?(this.activeIndex=t[0].id,await this.setSpecimens(this.activeIndex)):(this.activeIndex=null,this.specimens=[])},addSpecimen(e){this.testTypes[this.activeIndex].specimenConcept=e.concept_id},async postActivities(){this.isPostingOrder=!0;try{const e="".concat(this.$route.params.patient_id),l=await new Ie(parseInt(e),-1).createEncounter();if(l){const c=await b.buildLabOrders(l,this.finalOrders),d=await b.saveOrdersArray(l.encounter_id,c);if(!d)return v("Unable to save lab orders");he.invalidate("PATIENT_LAB_ORDERS");const h=this.finalOrders.some(m=>!m.accessionNumber),C=!d.every(m=>m.tests.some(g=>["FBS","RBS"].includes(g.name)))&&h&&await pe("Lab orders and encounter created!, print out your last orders?",{confirmBtnLabel:"Yes",cancelBtnLabel:"No"});typeof this.onOrderAdded=="function"&&this.finalOrders.forEach(m=>this.onOrderAdded&&this.onOrderAdded(m.name)),await this.closeModal(d),C&&await this.onPrintOrder(d)}}catch(e){v("Unable to save order: ".concat(e))}this.isPostingOrder=!1},async closeModal(e){await ue.dismiss(e)},async onPrintOrder(e){const t=this.getOrdersToPrint(e);await ce(t)},getOrdersToPrint(e){const t=this.finalOrders.map(l=>"".concat(l.accessionNumber).toUpperCase());return e.reduce((l,c)=>[c.tests.some(h=>["FBS","RBS"].includes(h.name)),t.includes("".concat(c.accession_number).toUpperCase())].every(Boolean)?l:[...l,c.order_id],[])}},computed:{searchIcon(){return de},searchColor(){return this.showKeyboard?"primary":"dark"},testTypesOnDisplay(){return this.searchFilter?new le(this.testTypes,{threshold:.3,keys:["name"],useExtendedSearch:!0}).search(this.searchFilter).map(t=>t.item):this.testTypes},dbsBarcodeActivated(){var e,t;return this.canScanDBS&&/dbs|plasma/i.test("".concat((e=this.testTypes[this.activeIndex])==null?void 0:e.specimen))&&/hiv viral load/i.test("".concat((t=this.testTypes[this.activeIndex])==null?void 0:t.name))},isOrderComplete(){return typeof this.activeIndex!="number"||this.dbsBarcodeActivated&&/dbs/i.test(this.testTypes[this.activeIndex].specimen)&&!this.testTypes[this.activeIndex].accessionNumber?!1:this.extendedLabsEnabled?!!this.testTypes[this.activeIndex].reason:(this.testTypes[this.activeIndex].specimenConcept||this.testTypes[this.activeIndex].specimen)&&this.testTypes[this.activeIndex].reason},selectedOrders(){return this.testTypes.filter(e=>e.isChecked===!0)},finalOrders(){return this.selectedOrders.filter(e=>this.dbsBarcodeActivated&&/dbs/i.test(e.specimen)&&!e.accessionNumber?!1:e.reason&&(e.specimen&&!this.extendedLabsEnabled||this.extendedLabsEnabled))},testReasons(){let e=this.reasons;return this.testTypes[this.activeIndex].name.match(/Viral load/i)&&(e=e.filter(t=>t!=="Stat"),e=e.concat(["Follow up after Low Level Viremia","Follow up after High Viral Load"])),e}},mounted(){this.getActivities()},data(){return{printCopies:1,isPostingOrder:!1,searchFilter:"",showKeyboard:!1,keyboardLayout:re,canScanDBS:!1,content:"Content",extendedLabsEnabled:!1,appActivities:[],testTypes:[],specimens:[],reasons:["Routine","Targeted","Confirmatory","Stat","Repeat / Missing"],activeIndex:null}},components:{IonButton:ie,IonContent:ae,IonHeader:oe,IonTitle:ne,IonInput:se,IonToolbar:te,IonLabel:ee,IonList:Z,IonItem:J,BarcodeInput:X,IonCheckbox:Q,IonRadioGroup:W,IonRow:G,HisKeyboard:Y,IonIcon:q}}),B=e=>(ve("data-v-6a4e1ea1"),e=e(),_e(),e),Te={key:0},Oe={key:1},ke={class:"ion-margin-bottom"},Ce=B(()=>i("div",{class:"his-md-text side-title"}," Select specimen ",-1)),we={key:1},Se={class:"his-md-text side-title"},Le=B(()=>i("div",{class:"his-md-text side-title"}," Main test(s) reason ",-1)),Ae={style:{background:"lightyellow",height:"34vh"}},Be={class:"his-sm-text"},Ee=B(()=>i("thead",null,[i("tr",null,[i("th",null,"Test"),i("th",null,"Specimen"),i("th",null,"Reason"),i("th",null,"Action")])],-1));function Fe(e,t,l,c,d,h){const E=a("ion-title"),C=a("ion-icon"),m=a("ion-input"),g=a("ion-toolbar"),N=a("ion-header"),w=a("ion-label"),R=a("ion-checkbox"),S=a("ion-item"),F=a("ion-list"),P=a("ion-col"),$=a("ion-radio"),D=a("ion-radio-group"),V=a("ion-text"),K=a("BarcodeInput"),L=a("ion-button"),U=a("ion-row"),x=a("ion-grid"),z=a("his-keyboard"),M=a("ion-content"),H=a("ion-footer");return r(),u(I,null,[n(N,null,{default:o(()=>[n(g,null,{default:o(()=>[n(E,{class:"his-lg-text",slot:"start"},{default:o(()=>[y(" Lab orders ")]),_:1}),n(C,{size:"large",slot:"end",icon:e.searchIcon,color:e.searchColor},null,8,["icon","color"]),n(m,{readonly:!0,value:e.searchFilter,disabled:e.activeIndex&&!e.isOrderComplete,color:e.searchColor,onClick:t[0]||(t[0]=()=>e.showKeyboard=!e.showKeyboard),placeholder:"Search for tests",style:{"text-align":"left",width:"35%"},class:"input_display",slot:"end"},null,8,["value","disabled","color"])]),_:1})]),_:1}),n(M,{style:{overflow:"hidden",background:"grey",height:"70vh"}},{default:o(()=>[n(x,null,{default:o(()=>[n(U,null,{default:o(()=>[n(P,{size:"6"},{default:o(()=>[n(F,{style:{overflowY:"auto",height:"75vh"}},{default:o(()=>[(r(!0),u(I,null,k(e.testTypesOnDisplay,s=>(r(),f(S,{class:"his-sm-text",key:s.id,color:e.activeIndex===s.id?"primary":"none",disabled:e.activeIndex!=null&&e.activeIndex!==s.id&&!e.isOrderComplete,detail:""},{default:o(()=>[n(w,{"text-wrap":""},{default:o(()=>[e.testAlreadyDoneToday(s.name)?(r(),u("s",Te,p(s.name),1)):(r(),u("span",Oe,p(s.name),1))]),_:2},1024),n(R,{slot:"start",checked:s.isChecked,onIonChange:T=>e.onSelectTest(s.name,s.id,T)},null,8,["checked","onIonChange"])]),_:2},1032,["color","disabled"]))),128))]),_:1})]),_:1}),e.activeIndex!=null&&e.selectedOrders.length>0?(r(),f(P,{key:0,style:{overflowY:"auto",height:"79vh"}},{default:o(()=>[i("div",ke,[e.extendedLabsEnabled?O("",!0):(r(),f(F,{key:0},{default:o(()=>[n(D,{modelValue:e.testTypes[e.activeIndex].specimen,"onUpdate:modelValue":t[1]||(t[1]=s=>e.testTypes[e.activeIndex].specimen=s)},{default:o(()=>[Ce,(r(!0),u(I,null,k(e.specimens,s=>(r(),f(S,{key:s},{default:o(()=>[n(w,null,{default:o(()=>[y(p(s.name),1)]),_:2},1024),n($,{slot:"start",value:s.name,onClick:T=>e.addSpecimen(s)},null,8,["value","onClick"])]),_:2},1024))),128))]),_:1},8,["modelValue"])]),_:1})),e.dbsBarcodeActivated?(r(),u("div",we,[i("div",Se,[y(" Barcode ID: "),n(V,{color:e.testTypes[e.activeIndex].accessionNumber?"success":"dark"},{default:o(()=>[i("b",null,p(e.testTypes[e.activeIndex].accessionNumber||"None"),1)]),_:1},8,["color"])]),n(K,{size:"small",onOnScan:e.onScanEIDbarcode},null,8,["onOnScan"])])):O("",!0),n(D,{modelValue:e.testTypes[e.activeIndex].reason,"onUpdate:modelValue":t[2]||(t[2]=s=>e.testTypes[e.activeIndex].reason=s)},{default:o(()=>[Le,(r(!0),u(I,null,k(e.testReasons,s=>(r(),f(S,{class:"his-sm-text",key:s},{default:o(()=>[n(w,null,{default:o(()=>[y(p(s),1)]),_:2},1024),n($,{slot:"start",value:s},null,8,["value"])]),_:2},1024))),128))]),_:1},8,["modelValue"])]),i("div",Ae,[i("table",Be,[Ee,i("tbody",null,[(r(!0),u(I,null,k(e.finalOrders,(s,T)=>(r(),u("tr",{key:T},[i("td",null,p(s.name),1),i("td",null,p(s.specimen||"N/A"),1),i("td",null,p(s.reason),1),i("td",null,[n(L,{onClick:Pe=>e.removeOrder(s.id),slot:"end",color:"danger"},{default:o(()=>[y("X")]),_:2},1032,["onClick"])])]))),128))])])])]),_:1})):O("",!0)]),_:1})]),_:1}),e.showKeyboard?(r(),f(z,{key:0,kbConfig:e.keyboardLayout,onKeyPress:e.onFilter,disabled:!1},null,8,["kbConfig","onKeyPress"])):O("",!0)]),_:1}),n(H,null,{default:o(()=>[n(g,null,{default:o(()=>[n(L,{onClick:e.postActivities,size:"large",slot:"end",disabled:e.isPostingOrder||e.finalOrders.length===0},{default:o(()=>[y(" Place orders ")]),_:1},8,["onClick","disabled"]),n(L,{disabled:e.isPostingOrder,onClick:t[3]||(t[3]=s=>e.closeModal([])),size:"large",slot:"start",color:"danger"},{default:o(()=>[y(" Close ")]),_:1},8,["disabled"])]),_:1})]),_:1})],64)}const Ne=be(ge,[["render",Fe],["__scopeId","data-v-6a4e1ea1"]]);export{Ne as L};
