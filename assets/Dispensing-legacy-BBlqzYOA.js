System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./index-legacy--hxN_V8z.js","./dispensation_service-legacy-BN5y8OMY.js","./EncounterMixin.vue_vue_type_script_lang-legacy-BYNMg0KB.js","./Arrays-legacy-K5SD4h1d.js","./drug_order_service-legacy-BZSuSNX0.js","./encounter_guidelines-legacy-BZk5BWg2.js","./GuidelineEngine-legacy-KsvQuFdF.js","./HisStandardForm-legacy-C7VqHmr3.js","./TouchScreenForm-legacy-DxIQwsU4.js","./ToolbarMediumCard-legacy-CzmL2SiF.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-TUlObaz7.js"],(function(e,t){"use strict";var i,s,a,n,r,o,d,u,l,c,p,h,g,m,y;return{setters:[e=>{i=e.F},e=>{s=e.d,a=e.ab,n=e.H,r=e.n,o=e.R,d=e.q,u=e.t,l=e._,c=e.r,p=e.o,h=e.c},e=>{g=e.D},e=>{m=e._},e=>{y=e.j},null,null,null,null,null,null,null,null],execute:function(){const t=s({mixins:[m],data:()=>({dispensation:{}}),watch:{ready:{handler(e){e&&(this.dispensation=new g(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{saveDispensations(e){return this.dispensation.saveDispensations(this.buildDispensations(e))},buildDispensations(e){if(!a.isEmpty(e.other?.dispenses)){let t=[];return e.other.dispenses.forEach((([i,s])=>{t=[...t,...this.dispensation.buildDispensations(e.other.order_id,i,s)]})),t}return this.dispensation.buildDispensations(e.other.order_id,parseInt(e.value.toString()),1)},async buildMedicationHistory(){return await this.dispensation.loadDrugHistory(),this.dispensation.getDrugHistory().sort(((e,t)=>{const i=new Date(e.order.start_date);return new Date(t.order.start_date)-i})).map((e=>({medication:e.drug.name,date:n.toStandardHisDisplayFormat(e.order.start_date),amount:e.quantity})))},buildOrderOptions(){return this.dispensation.getCurrentOrder().map((e=>({label:e.drug.name,value:e.quantity||0,other:{order:e,drug_id:e.drug.drug_id,order_id:e.order.order_id,available_stock:this.getCumulativeStocks(e.stocks),amount_needed:this.calculateCompletePack(e),pack_sizes:this.getPackSizesRows(e.drug.drug_id,e.stocks)}})))},getCumulativeStocks:e=>e?e.reduce(((e,t)=>e+t.quantity),0):"-",getPackSizesRows(e,t){const i=t?.map((e=>[e.packSize,Math.floor(e.quantity/e.packSize)||"-",0,0]))||[];return this.dispensation.getDrugPackSizes(e).forEach((e=>{-1===i.findIndex((([t])=>t===e))&&i.push([e,"-",0,0])})),i.sort(((e,t)=>e[0]-t[0]))},calculateCompletePack(e){const t=parseFloat(e.amount_needed)-(e.quantity||0);return t<=0?0:this.dispensation.calcCompletePack(e,t)},isDoneDispensing:e=>e.map((e=>0!=e.value)).every(Boolean),async isValidDispensation(e){const t=parseInt(e.value.toString())/e.other.amount_needed*100;if(t>110&&!(await r("Are you sure you want to dispense over 110% of the prescribed pill count?")))return!1;if(t<100&&!(await r("Are you sure you want to dispense less than 100% of the prescribe amount?")))return!1;if(this.dispensation.useDrugManagement){const t=e.other?.dispenses.filter((([t])=>e.other?.pack_sizes.some((([e,i,s])=>e===t&&"-"===i&&s>0)))).map((([e])=>e));if(!a.isEmpty(t))return r(`Are you sure you want to dispense drugs of ${y(t)} pack size(s) that have no associated stocks available?`)}return!0},getFields(){return[{id:"dispenses",helpText:"Dispensation",type:i.TT_DISPENSATION_INPUT,init:async()=>{try{return this.dispensation.setIsDrugManagementEnabled(await o.get("IS_ART_DRUG_MANAGEMENT_ENABLED")),await this.dispensation.loadCurrentDrugOrder(),!0}catch(e){return d(`Unable to load current order: ${e}`),!1}},onValueUpdate:async(e,t)=>-1!=e.value&&this.isDoneDispensing(t)?this.$router.push({name:"appointment"}):(e.other.amount_needed=e.other.amount_needed-(parseInt(e.value.toString())||0),e.other.amount_needed<0&&(e.other.amount_needed=0),await this.dispensation.loadCurrentDrugOrder(),this.buildOrderOptions()),onValue:async(e,t)=>-1===e.value?!(await this.dispensation.voidOrder(e.other.order_id)):!(!t&&!(await this.isValidDispensation(e)))&&(!!(await this.saveDispensations(e))||(u("Unable to save dispensation"),!1)),config:{isDrugManagementEnabled:()=>this.dispensation.useDrugManagement,medicationHistory:()=>this.buildMedicationHistory(),toolbarInfo:[{label:"Name",value:this.patient.getFullName()},{label:"Gender",value:this.patient.getGender()},{label:"Date Of Birth",value:n.toStandardHisDisplayFormat(this.patient.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>this.buildOrderOptions()}]}}});e("default",l(t,[["render",function(e,t,i,s,a,n){const r=c("his-standard-form");return p(),h(r,{fields:e.fields,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","cancelDestinationPath"])}]]))}}}));
