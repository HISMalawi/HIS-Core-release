import{S as H,d as R,aw as F,q as S,I as A,p as L,aa as P,n as G,ab as V,ah as q,ac as z,ai as J,m as E,ax as U,u as j,aq as K,r as c,ay as n,c as O,o as Q,v as x,H as W,as as X,ak as Y,b as T,w as t,ap as s,a as k,e as o,h as l,t as g,f as C,g as Z,a4 as ee,a5 as te}from"./index-CJleCCtM.js";class w extends H{static getMergeHistory(e){return this.getJson("/rollback/merge_history",{identifier:e})}static rollback(e){return this.postJson("/rollback/rollback_patient",{patient_id:e,program_id:this.getProgramID()})}}const oe=R({components:{IonText:F,IonPage:S,IonContent:A,IonToolbar:L,IonHeader:P,IonFooter:G,IonTitle:V,IonList:q,IonItem:z,IonLabel:J,IonButton:E,ReportTable:U},setup(){const r=j(),e=K(),u=c(-1),y=c([]),_=c([]),d="".concat(r.params.id).toUpperCase(),p=c("N/A"),i=c([{label:"Birthdate",value:"N/A"},{label:"Gender",value:"N/A"}]),m=[[n.thTxt("Merge type"),n.thTxt("Merge date"),n.thTxt("First Name"),n.thTxt("Last name"),n.thTxt("Birthdate"),n.thTxt("Gender")]],h=O(()=>_.value.length>0);Q(async()=>{if(!d){e.back();return}try{_.value=await w.getMergeHistory(d)||[]}catch(a){x("Merge history not found for ".concat(d))}y.value=_.value.map(a=>(u.value===-1&&(u.value=a.secondary_id,p.value="".concat(a.secondary_first_name," ").concat(a.secondary_surname),i.value=[{label:"Birthdate",value:W.toStandardHisDisplayFormat(a.secondary_birthdate)},{label:"Gender",value:a.secondary_gender}]),[n.td(a.merge_type),n.tdDate(a.merge_date),n.td(a.primary_first_name),n.td(a.primary_surname),n.tdDate(a.primary_birthdate),n.td(a.primary_gender)]))});function f(){e.back()}async function b(){await X("Are you sure you want to merge transactions")&&(await w.rollback(u.value)?e.back():x("Failed to rollback"))}return{cancel:f,holderName:p,isReversible:h,patientInfo:i,rollback:b,columns:m,rows:y,npid:d}}});function ae(r,e,u,y,_,d){const p=s("ion-text"),i=s("ion-title"),m=s("ion-toolbar"),h=s("ion-header"),f=s("ion-label"),b=s("ion-item"),a=s("ion-list"),N=s("report-table"),D=s("ion-content"),v=s("ion-button"),M=s("ion-footer"),B=s("ion-page");return k(),T(B,null,{default:t(()=>[o(h,null,{default:t(()=>[o(m,null,{default:t(()=>[o(i,{class:"his-lg-text"},{default:t(()=>[o(p,{color:"danger"},{default:t(()=>[l(g(r.npid),1)]),_:1}),e[0]||(e[0]=l(" Merge history "))]),_:1})]),_:1})]),_:1}),o(D,null,{default:t(()=>[o(i,{class:"his-md-text his-card"},{default:t(()=>e[1]||(e[1]=[l("NPID Holder: ")])),_:1}),o(a,null,{default:t(()=>[o(b,{lines:"none",class:"his-md-text"},{default:t(()=>[o(f,null,{default:t(()=>e[2]||(e[2]=[l(" Person name ")])),_:1}),C("b",null,g(r.holderName),1)]),_:1}),(k(!0),Z(te,null,ee(r.patientInfo,(I,$)=>(k(),T(b,{lines:"none",class:"his-md-text",key:$},{default:t(()=>[o(f,null,{default:t(()=>[l(g(I.label)+": ",1)]),_:2},1024),C("b",null,g(I.value),1)]),_:2},1024))),128))]),_:1}),o(i,{class:"his-md-text his-card"},{default:t(()=>e[3]||(e[3]=[l("Transactions:")])),_:1}),o(N,{config:{tableCssTheme:"art-report-theme"},columns:r.columns,rows:r.rows},null,8,["columns","rows"])]),_:1}),o(M,null,{default:t(()=>[o(m,{color:"dark"},{default:t(()=>[o(v,{onClick:r.cancel,color:"danger",size:"large",slot:"start"},{default:t(()=>e[4]||(e[4]=[l(" Cancel ")])),_:1},8,["onClick"]),o(v,{onClick:r.rollback,disabled:!r.isReversible,color:"success",size:"large",slot:"end"},{default:t(()=>e[5]||(e[5]=[l(" Reverse ")])),_:1},8,["onClick","disabled"])]),_:1})]),_:1})]),_:1})}const se=Y(oe,[["render",ae],["__scopeId","data-v-f5608659"]]);export{se as default};
