import{d as L,r as c,t as I,u as V,v as q,w as N,x as O,y as S,dV as U,a9 as F,aa as M,a5 as A,aM as X,O as j,d3 as f,aq as b}from"./index-5HNeqEZr.js";import{v as H}from"./TableView-8wC6VTLY.js";import{T as G}from"./tb_report_service-MseB3BzL.js";import{w as Q,d as W}from"./v2utils-C4g-PufD.js";import{T as Y}from"./TBDrilldown-BdIke-lC.js";import"./Export-xOOutIU0.js";import"./index-D89U3den.js";const se=L({__name:"TBCaseFindingReport",setup(z){const R=new G,_=c([]),y=c(""),u=c(""),p=c(""),r=c([]),h=c([]),T=c([]),$=["0-4","5-14","15-24","25-34","35-44","45-54","55-64","65+"],n=[{label:"New Smear positive",ref:"new_smear_positive",tags:["cases"]},{label:"New MTB Detected Xpert",ref:"new_mtb_detected_xpert",tags:["cases"]},{label:"New Pulmonary Clinically Diagnosed",ref:"new_pulmonary_clinically_diagnosed",tags:["cases"]},{label:"New EPTB",ref:"new_eptb",tags:["cases"]},{label:"Relapse Bacteriologically Confirmed",ref:"relapse_bacteriologically_confirmed",tags:["cases"]},{label:"Treatment Failure Bacteriologically Confirmed",ref:"treatment_failure_bacteriologically_confirmed",tags:["cases"]},{label:"Treatment LTF Bacteriologically Confirmed",ref:"treatment_ltf_bacteriologically_confirmed",tags:["cases"]},{label:"Treatment LTF Clinically Diagnosed Pulmonary",ref:"treatment_ltf_clinically_diagnosed_pulmonary",tags:["cases"]},{label:"Treatment LTF EPTB",ref:"treatment_ltf_eptb",tags:["cases"]},{label:"Relapse Clinical Pulmonary",ref:"relapse_clinical_pulmonary",tags:["cases"]},{label:"Relapse EPTB",ref:"relapse_eptb",tags:["cases"]},{label:"Other Previously Treated Bacteriologically Confirmed",ref:"other_previously_treated_bacteriologically_confirmed",tags:["cases"]},{label:"Other Previously Treated Clinical Pulmonary",ref:"other_previously_treated_clinical_pulmonary",tags:["cases"]},{label:"Other Previously Treated EPTB",ref:"other_previously_treated_eptb",tags:["cases"]},{label:"Unknown Previous Treatment History Bacteriological",ref:"unknown_previous_treatment_history_bacteriological",tags:["cases"]},{label:"Unknown Previous Treatment History EPTB",ref:"unknown_previous_treatment_history_eptb",tags:["cases"]},{label:"Patients with Presumptive TB Undergoing Bacteriological Examination Via Xpert",ref:"patients_with_presumptive_tb_undergoing_bacteriological_examination_via_xpert",tags:["presumptives"]},{label:"Patients with Presumptive TB Undergoing Bacteriological Examination Via Microscopy",ref:"patients_with_presumptive_tb_undergoing_bacteriological_examination_via_microscopy",tags:["presumptives"]},{label:"Patients with Presumptive TB with Positive Bacteriological Examination Via Xpert",ref:"patients_with_presumptive_tb_with_positive_bacteriological_examination_via_xpert",tags:["presumptives"]},{label:"Patients with Presumptive TB with Positive Bacteriological Examination Via Microscopy",ref:"patients_with_presumptive_tb_with_positive_bacteriological_examination_via_microscopy",tags:["presumptives"]}];async function k(e,s){(await b.create({component:Y,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:e,patientIdentifiers:s,onFinish:()=>b.getTop().then(o=>o&&b.dismiss())}})).present()}function m(){const e=[{label:"#",ref:"index",span:{thRowspan:2}},{label:"Age Category",ref:"age_group",span:{thRowspan:2}},...r.value.map(o=>({...o,ref:"",span:{thColspan:2}}))],s=r.value.reduce((o,a)=>{const i=l=>({label:l,ref:"".concat(a.ref,"_").concat(l.toLowerCase()),secondaryLabel:"".concat(a.label," (").concat(l==="M"?"Male":"Female",")"),toValue:t=>"".concat(t.length),tdClick:t=>t.refData.length&&k(a.label,t.refData)});return[...o,i("F"),i("M")]},[]);T.value=[e,s]}const g=()=>Q(async()=>{if(!(u.value&&p.value))return j("Year and quarter are required!");const s=(await R.getTBCaseFindingReport(u.value,parseInt("".concat(p.value)),r.value.map(a=>a.ref))).reduce((a,i)=>{const{indicator:l,...t}=i;return{...a,[l]:t}},{}),o=$.reduce((a,i)=>{const l={age_group:i};return Object.keys(s).forEach(t=>{var B,x,E,D;const d="".concat(t,"_m"),v="".concat(t,"_f"),C=s[t][i].male,P=s[t][i].female;l[d]=C,l[v]=P,a.aggregates={...a.aggregates,[d]:[...(x=(B=a.aggregates)==null?void 0:B[d])!=null?x:[],...C],[v]:[...(D=(E=a.aggregates)==null?void 0:E[v])!=null?D:[],...P]}}),a.rows.push(l),a},{aggregates:{},rows:[]});return _.value=W([...o.rows,{age_group:"Totals",...o.aggregates}]),h.value=[{text:"All",icon:f,color:"primary",action:()=>{r.value=n,m(),g()}},{text:"Show Presumptives",icon:f,color:"primary",action:()=>{r.value=n.filter(a=>a.tags.includes("presumptives")),m(),g()}},{text:"Cases",icon:f,color:"primary",action:()=>{r.value=n.filter(a=>a.tags.includes("cases")),m(),g()}}],!0}),w=()=>U([{id:"indicator",helpText:"Indicators",type:F.TT_SELECT,validation:e=>M.required(e),options:()=>[{label:"All",value:"all",other:()=>n},{label:"Cases",value:"cases",other:()=>n.filter(e=>e.tags.includes("cases"))},{label:"Presumptives",value:"presumptives",other:()=>n.filter(e=>e.tags.includes("presumptives"))},{label:"Custom Indicators",value:"custom"}]},{id:"custom",helpText:"Custom indicators",type:F.TT_MULTIPLE_SELECT,validation:e=>M.required(e),condition:e=>e.indicator.value==="custom",options:()=>n.map(e=>({label:e.label,value:e.ref,other:e}))}],e=>{_.value=[],r.value=[],u.value=e.year.value,p.value=e.quarter.value,y.value="Q".concat(p.value," ").concat(u.value),typeof e.indicator.other=="function"?r.value=e.indicator.other():X.isEmpty(e.custom)||(r.value=e.custom.map(s=>s.other)),r.value.length&&(m(),g())});return I(()=>w()),(e,s)=>(V(),q(S(A),null,{default:N(()=>[O(H,{title:"TB Case Finding Report",subtitle:y.value,columns:T.value,columnData:_.value,headerBadge:h.value,rowsPerPage:100,onConfigure:w},null,8,["subtitle","columns","columnData","headerBadge"])]),_:1}))}});export{se as default};
