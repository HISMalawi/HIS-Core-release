import{H as d}from"./HisStandardForm-tUhdyeHF.js";import{_ as p}from"./EncounterMixin.vue_vue_type_script_lang-CTi-0KTN.js";import{b5 as c,d as u,t as o,P as m,cB as v,V as t,_ as h,r as f,o as g,c as T}from"./index-DxdybAew.js";import{F as a}from"./dynamic-import-helper-Bsjrd6Ro.js";import{g as _}from"./LocationFieldOptions-B2-r49Wv.js";import{C as b}from"./KbLayouts-VRA-vjeH.js";import"./TouchScreenForm-CWGDOcQm.js";import"./ToolbarMediumCard-DpQmY2Av.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-Bxq2iSVB.js";import"./encounter_guidelines-C9OjyTHu.js";import"./GuidelineEngine-D6V1_Znr.js";class y extends c{constructor(i,n){super(i,104,n)}}const S=u({components:{HisStandardForm:d},mixins:[p],data:()=>({registrationService:{}}),watch:{ready:{async handler(e){e&&(this.registrationService=new y(this.patient.getID(),this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{mapToOption(e){return e.map(i=>({label:i,value:i}))},async onSubmit(e,i){if(await this.asignNID(e),!await this.registrationService.createEncounter())return o("Unable to create registration encounter");const r=await this.resolveObs({...i});if(!await this.registrationService.saveObservationList(r))return o("Unable to save observations");this.nextTask()},async asignNID(e){const i=e.national_id_available,n=e.national_id;i&&i.value==="Yes"&&await this.patient.updateMWNationalId(n.value)},async mwIdExists(e){return e?(await m.findByOtherID(v,e)).length>0:!1},getFields(){return[{id:"visit_type",helpText:"Type of visit",type:a.TT_SELECT,validation:e=>t.required(e),computedValue:e=>({obs:this.registrationService.buildValueCoded("Type of visit",e.value)}),options:()=>[{label:"New",value:"New patient"},{label:"Referral",value:"Referral"},{label:"Re-visiting",value:"Re-visiting"}]},{id:"referring_facility_name",helpText:"Referred from",type:a.TT_SELECT,validation:e=>t.required(e),computedValue:({label:e})=>({obs:this.registrationService.buildValueText("Referred from",e)}),condition:e=>e.visit_type.value==="Referral",options:(e,i="")=>_(i),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"life_threatening_condition",helpText:"Life threatening condition",type:a.TT_SELECT,computedValue:e=>({obs:this.registrationService.buildValueCoded("Life threatening condition",e.value)}),validation:e=>t.required(e),options:()=>this.mapToOption(["Airway","Breathing","Coma","Confusion","Convulsion","Disability","none","other","Temperatur (The child is very hot)"])},{id:"national_id_available",helpText:"National ID Available",type:a.TT_SELECT,validation:e=>t.required(e),condition:()=>this.patient.getMWNationalID()==="Unknown",options:()=>this.yesNoUnknownOptions(),appearInSummary:()=>!1},{id:"national_id",helpText:"Enter National ID",type:a.TT_TEXT,validation:e=>t.isMWNationalID(e),condition:e=>e.national_id_available.value==="Yes",beforeNext:async e=>e.value&&await this.mwIdExists(e.value.toString())?(o("National ID already exists"),!1):!0,summaryMapValue:({value:e})=>({value:e,label:"National ID"}),config:{casing:"uppercase",customKeyboard:[b,[["Delete"]]]}},{id:"triage",helpText:"Select Triage Category",type:a.TT_SELECT,computedValue:e=>({obs:this.registrationService.buildValueCoded("Triage category",e.value)}),validation:e=>t.required(e),options:()=>this.mapToOption(["Emergency","Priority","Queue"])}]}}});function E(e,i,n,r,s,D){const l=f("his-standard-form");return g(),T(l,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}const B=h(S,[["render",E]]);export{B as default};
