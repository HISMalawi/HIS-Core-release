System.register(["./lab_report_service-legacy-C__5-36A.js","./ReportMixin.vue_vue_type_script_lang-legacy-nksRd-YK.js","./TableReportTemplate-legacy-Duu1WlWk.js","./index-legacy-DzF0J2nr.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./MultiFieldDateHelper-legacy-BKSEfgg6.js","./KbLayouts-legacy-BKvPSxzZ.js","./HisKbConfigurations-legacy-vrLd9Pgz.js","./BasicReportTemplate-legacy-C0yGLBl6.js","./Export-legacy-nGdXEsf9.js","./SIngleTouchField-legacy-C-DlUswk.js","./Pagination-legacy-B8DL8hGq.js","./HisStandardForm-legacy-DHvPmsWP.js","./TouchScreenForm-legacy-CDzY5o9b.js","./ToolbarMediumCard-legacy-BDSK2XWR.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-BcrZm7RF.js","./ReportErrors-legacy-ChlvZs0b.js"],(function(e,t){"use strict";var s,r,l,o,a,i,n,d,p,u,c;return{setters:[e=>{s=e.L},e=>{r=e._},e=>{l=e.R},e=>{o=e.d,a=e.L,i=e.cz,n=e._,d=e.r,p=e.o,u=e.c},e=>{c=e.F},null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){const t=o({mixins:[r],components:{ReportTemplate:l},data:()=>({title:"Tests requested",rows:[],cohort:[],reportType:"",reportReady:!1,columns:[],patientLevelColumns:[[a.thTxt("ARV#"),a.thTxt("Gender"),a.thTxt("Birthdate"),a.thTxt("Ordered Date"),a.thTxt("Test"),a.thTxt("Reason")]],disaggregatedColumns:[a.thTxt("Age group"),a.thTxt("Gender")]}),created(){this.report=new s,this.fields=this.getFormFields()},methods:{async onPeriod({type:e,tests:t}){this.reportReady=!0,this.rows=[],this.period=this.report.getDateIntervalPeriod(),this.reportType=e.value,"disaggregated"===this.reportType?this.setDisaggregatedRows(t):"patient_level"===this.reportType&&this.setPatientLevelRows(t)},getFormFields(){return[...this.getDateDurationFields(),{id:"tests",helpText:"Test(s) Requested",type:c.TT_MULTIPLE_SELECT,options:async(e,t,s)=>{this.report.setStartDate(s.start_date),this.report.setEndDate(s.end_date);const r=await this.report.getSamplesDrawnReport(),l=this.buildAvailableTests(r);return this.buildAvailableTestOptions(l)}},{id:"type",helpText:"Select report type",type:c.TT_SELECT,options:()=>[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}]}]},buildAvailableTests(e){const t={};return e.forEach((e=>{e.tests.forEach((s=>{s in t||(t[s]=[]),t[s].push(e)}))})),t},buildAvailableTestOptions(e){const t=[];for(const s in e){const r=e[s];t.push({label:s,value:r.length,other:r})}return t},setDisaggregatedRows(e){const t=[],s=[];this.columns=[this.disaggregatedColumns.concat(e.map((e=>a.thTxt(e.label))))];for(const r in i){const l=i[r],o=[a.td(l),a.td("M")],n=[a.td(l),a.td("F")];e.forEach((({other:e})=>{const t=t=>e.filter((e=>e.gender===t&&e.age_group===l)).map((e=>e.patient_id));o.push(this.drill(t("M"),`Males of ${l}`)),n.push(this.drill(t("F"),`Females of ${l}`))})),t.push(o),s.push(n),this.rows=[...s,...t]}},setPatientLevelRows(e){this.columns=this.patientLevelColumns,e.forEach((({other:e})=>{this.sortByArvNumber(e).forEach((e=>{this.rows.push([a.td(e.arv_number),a.td(e.gender),a.tdDate(e.birthdate),a.tdDate(e.order_date),a.td(e.tests.join(",")),a.td(e.reason_for_test)])}))}))}}});e("default",n(t,[["render",function(e,t,s,r,l,o){const a=d("report-template");return p(),u(a,{title:e.title,period:e.period,rows:e.rows,fields:e.fields,columns:e.columns,canExportCsv:!0,canExportPDf:!0,reportReady:e.reportReady,onReportConfiguration:e.onPeriod},null,8,["title","period","rows","fields","columns","reportReady","onReportConfiguration"])}]]))}}}));
