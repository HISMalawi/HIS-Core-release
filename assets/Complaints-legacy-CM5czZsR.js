System.register(["./HisStandardForm-legacy-DMJkhfrq.js","./EncounterMixin.vue_vue_type_script_lang-legacy-BmCg9KlZ.js","./patient_complaints_service-legacy-D14F8v1m.js","./LabOrderModal-legacy-o8oN8gFF.js","./index-legacy-X--GYU37.js","./patient_radiology_service-legacy-DyZeYcqL.js","./HisRadiologyPicker-legacy-B7u8pEwL.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./TouchScreenForm-legacy-C_f8Ho2H.js","./ToolbarMediumCard-legacy-CdhT4OJW.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-1het9QhE.js","./encounter_guidelines-legacy-wNYbMa3T.js","./GuidelineEngine-legacy-KsvQuFdF.js","./lab_order_service-legacy-Don-pO-D.js","./HisKbConfigurations-legacy-vrLd9Pgz.js","./KbLayouts-legacy-BKvPSxzZ.js","./HisKeyboard-legacy-xCeSPKZ_.js","./BaseKeyboard-legacy-CHBQXo1z.js","./KbHandler-legacy-De8o5nTq.js","./fuse-legacy-CQoBB3MK.js","./SelectMixin-legacy-CNf4SSLY.js","./BaseTextInput-legacy-Bu9_0AFj.js","./FieldMixin.vue_vue_type_script_lang-legacy-D491T2T6.js"],(function(e,t){"use strict";var i,a,n,s,l,o,r,c,d,u,g,h,m,p,y,b,S,v,C,_,f,w,T,P,O,j,E,x,I,D,R;return{setters:[e=>{i=e.H},e=>{a=e._},e=>{n=e.P},e=>{s=e.L},e=>{l=e.d,o=e.f,r=e.l,c=e.j,d=e.k,u=e.i,g=e.m,h=e.cC,m=e.ab,p=e.O,y=e._,b=e.r,S=e.o,v=e.x,C=e.b,_=e.w,f=e.u,w=e.F,T=e.I,P=e.aT,O=e.aL,j=e.H,E=e.V,x=e.c},e=>{I=e.P},e=>{D=e.default},e=>{R=e.F},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){var t=document.createElement("style");t.textContent=".his-table tr{height:50px}\n",document.head.appendChild(t);const B=l({name:"Modal",components:{IonButton:o,IonContent:r,IonHeader:c,IonTitle:d,IonToolbar:u,IonFooter:g,HisRadiologyPicker:D},mixins:[a],data:()=>({radiologyService:{},isPacsEnabled:!1,emitedSelectedOptions:{}}),watch:{ready:{async handler(e){e&&(this.radiologyService=new I(this.patientID,this.providerID),this.isPacsEnabled=await h.isPACsEnabled())},immediate:!0,deep:!0}},methods:{async onValue(e){this.emitedSelectedOptions=e},async getSelected(){return this.emitedSelectedOptions.map((async e=>({...await this.radiologyService.buildValueCoded("Radiology Orders",e.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]})))},async onSubmit(){if(!m.isEmpty(this.emitedSelectedOptions)){this.closeModal();let t=await this.getSelected();t=await Promise.all(t),await this.radiologyService.createEncounter();const i=await this.radiologyService.obsObj(t),a=await this.radiologyService.saveObservationList(i);if(await this.radiologyService.printOrders(a,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(a,this.patient)}catch(e){console.log(e)}}},async closeModal(){await p.dismiss([])}}}),F=y(B,[["render",function(e,t,i,a,n,s){const l=b("ion-title"),o=b("ion-toolbar"),r=b("ion-header"),c=b("his-radiology-picker"),d=b("ion-content"),u=b("ion-button"),g=b("ion-footer");return S(),v(w,null,[C(r,null,{default:_((()=>[C(o,null,{default:_((()=>[C(l,{class:"his-lg-text"},{default:_((()=>[f("Radiology Examination")])),_:1})])),_:1})])),_:1}),C(d,{style:{overflow:"hidden",background:"grey",height:"70vh"}},{default:_((()=>[C(c,{onOnValue:e.onValue},null,8,["onOnValue"])])),_:1}),C(g,null,{default:_((()=>[C(o,null,{default:_((()=>[C(u,{onClick:t[0]||(t[0]=t=>e.onSubmit()),size:"large",slot:"end",disabled:0===e.emitedSelectedOptions.length},{default:_((()=>[f(" Place orders ")])),_:1},8,["disabled"]),C(u,{onClick:t[1]||(t[1]=t=>e.closeModal()),size:"large",slot:"start",color:"danger"},{default:_((()=>[f(" Close ")])),_:1})])),_:1})])),_:1})],64)}]]),k=l({components:{HisStandardForm:i,IonPage:T},mixins:[a],data:()=>({complaintsService:{},todaysDate:P.getSessionDate(),presentingComplaints:"",isPacsEnabled:!1,radiologyBtnName:"Radiology Order",hasTriageComplaints:!1}),watch:{ready:{async handler(e){e&&(this.complaintsService=new n(this.patientID,this.providerID),this.isPacsEnabled=await h.isPACsEnabled(),this.hasTriageComplaints=await this.getTriagePresentingComplaints(),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const i=await Promise.all(t.complaints);await this.complaintsService.createEncounter(),await this.complaintsService.saveObservationList(i),this.nextTask()},async launchOrderSelection(){const e=await p.create({component:s,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async launchRadiologyOrderSelection(){const e=await p.create({component:F,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async getTriagePresentingComplaints(){if(!((await this.complaintsService.fetchLatestTriageEncounter()).length>0))return!1;const e=(await O.getEncounters(this.patientID,this.todaysDate)).filter((function(e){return"TRIAGE PRESENTING COMPLAINTS"==e.type.name&&j.toStandardHisFormat(e.encounter_datetime)==P.getSessionDate()}));return e.length>0&&(this.presentingComplaints=e[0].observations,!0)},buildResults(){let e="",t=this.presentingComplaints.map((t=>{if(null!=t.obs_group_id)return[e,t.value_text];e=t.value_text}));return t=t.filter((e=>null!=e)),this.presentingComplaints=t,[{label:"",value:"",other:{columns:["Group","Presenting complaints"],rows:t}}]},getFields(){return[{id:"triage_complaints",helpText:"Triaging Complaints",condition:()=>this.hasTriageComplaints,type:R.TT_TABLE_VIEWER,options:()=>this.buildResults(),config:{hiddenFooterBtns:["Clear"]}},{id:"complaints",helpText:"Presenting Complaints",type:R.TT_COMPLAINTS_PICKER,validation:e=>E.required(e),computedValue:e=>e.map((async e=>({...await this.complaintsService.buildValueCoded("Presenting complaint",e.other.parent),child:[await this.complaintsService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]}))),config:{hiddenFooterBtns:[this.showRadiologyOdersBtn(),this.disableBackBtn()],footerBtns:[{name:"Lab Order",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchOrderSelection(),visibleOnStateChange:e=>1===e.index},{name:this.radiologyBtnName,size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchRadiologyOrderSelection(),visibleOnStateChange:e=>1===e.index}]}},{id:"all_presenting_complaints",helpText:"Summary",condition:()=>this.presentingComplaints.length>0,type:R.TT_SUMMARY,options:e=>this.buildSummaryResults(e),config:{hiddenFooterBtns:["Clear"]}}]},showRadiologyOdersBtn(){return this.isPacsEnabled?"":this.radiologyBtnName},buildSummaryResults(e){const t=e.complaints.map((e=>({label:"OPD Complaints",value:e.label}))),i=this.presentingComplaints.map((e=>({label:"Triaging Complaints",value:e[1]})));return t.concat(i)},disableBackBtn(){return this.hasTriageComplaints?"":"Back"}}});e("default",y(k,[["render",function(e,t,i,a,n,s){const l=b("his-standard-form"),o=b("ion-page");return S(),x(o,null,{default:_((()=>[C(l,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit,skipSummary:!0},null,8,["cancelDestinationPath","fields","onFinishAction"])])),_:1})}]]))}}}));
