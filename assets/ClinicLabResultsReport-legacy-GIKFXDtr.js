System.register(["./lab_report_service-legacy-Cz489L0V.js","./ReportMixin.vue_vue_type_script_lang-legacy-Cbxcxwf4.js","./TableReportTemplate-legacy-CxKxnBF6.js","./index-legacy--hxN_V8z.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./MultiFieldDateHelper-legacy-B97J9Bxd.js","./KbLayouts-legacy-BKvPSxzZ.js","./HisKbConfigurations-legacy-vrLd9Pgz.js","./BasicReportTemplate-legacy-B1A4xCu4.js","./Export-legacy-BAJiCfrv.js","./SIngleTouchField-legacy-X9PnjTsk.js","./Pagination-legacy-Dw_YvCGa.js","./HisStandardForm-legacy-C7VqHmr3.js","./TouchScreenForm-legacy-DxIQwsU4.js","./ToolbarMediumCard-legacy-CzmL2SiF.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-TUlObaz7.js","./ReportErrors-legacy-Btn46Hsy.js"],(function(e,t){"use strict";var s,r,a,l,i,o,n,d,p,u,h;return{setters:[e=>{s=e.L},e=>{r=e._},e=>{a=e.R},e=>{l=e.d,i=e.L,o=e.cx,n=e._,d=e.r,p=e.o,u=e.c},e=>{h=e.F},null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){const t=l({mixins:[r],components:{ReportTemplate:a},data:()=>({title:"Lab test result(s)",rows:[],cohort:[],reportType:"",reportReady:!1,columns:[],patientLevelColumns:[[i.thTxt("ARV#"),i.thTxt("Gender"),i.thTxt("Birthdate"),i.thTxt("Ordered"),i.thTxt("Specimen"),i.thTxt("Test"),i.thTxt("Result"),i.thTxt("Released")]],disaggregatedColumns:[i.thTxt("Age group"),i.thTxt("Gender")]}),created(){this.report=new s,this.fields=this.getFormFields()},methods:{async onPeriod({type:e,tests:t},s){this.reportReady=!0,this.rows=[],this.period=this.report.getDateIntervalPeriod(),this.report.setOccupation(s.occupation),this.reportType=e.value,"disaggregated"===this.reportType?this.setDisaggregatedRows(t):"patient_level"===this.reportType&&this.setPatientLevelRows(t)},getFormFields(){return[...this.getDateDurationFields(),{id:"tests",helpText:"Available test(s) results",type:h.TT_MULTIPLE_SELECT,options:async(e,t,s)=>{this.report.setStartDate(s.start_date),this.report.setEndDate(s.end_date);const r=await this.report.getLabResultsReport(),a=this.buildAvailableTests(r);return this.buildAvailableTestOptions(a)}},{id:"type",helpText:"Select report type",type:h.TT_SELECT,options:()=>[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}]}]},buildAvailableTests(e){const t={};return e.forEach((e=>{e.measures.forEach((s=>{s.name in t||(t[s.name]=[]),t[s.name].push({id:e.patient_id,arv:e.arv_number,gender:e.gender,ageGroup:e.age_group,birthdate:this.toDate(e.birthdate),ordered:this.toDate(e.order_date),specimen:e.test,test:s.name,result:`${s.modifier} ${s.value}`,released:this.toDate(e.result_date)})}))})),t},buildAvailableTestOptions(e){const t=[];for(const s in e){const r=e[s];t.push({label:s,value:r.length,other:r})}return t},setDisaggregatedRows(e){const t=[],s=[];this.columns=[this.disaggregatedColumns.concat(e.map((e=>i.thTxt(e.label))))];for(const r in o){const a=o[r],l=[i.td(a),i.td("Male")],n=[i.td(a),i.td("Female")];e.forEach((({other:e})=>{const t=t=>e.filter((e=>e.gender===t&&e.ageGroup===a)).map((e=>e.id));l.push(this.drill(t("M"))),n.push(this.drill(t("F")))})),t.push(l),s.push(n),this.rows=[...s,...t]}},setPatientLevelRows(e){this.columns=this.patientLevelColumns,e.forEach((({other:e})=>{this.sortByArvNumber(e,"arv").forEach((e=>{this.rows.push([this.tdARV(e.arv),i.td(this.formatGender(e.gender)),i.tdDate(e.birthdate),i.tdDate(e.ordered),i.td(e.specimen),i.td(e.test),i.td(e.result),i.tdDate(e.released)])}))}))}}});e("default",n(t,[["render",function(e,t,s,r,a,l){const i=d("report-template");return p(),u(i,{title:e.title,period:e.period,rows:e.rows,fields:e.fields,columns:e.columns,onReportConfiguration:e.onPeriod,"report-prefix":"Clinic"},null,8,["title","period","rows","fields","columns","onReportConfiguration"])}]]))}}}));
