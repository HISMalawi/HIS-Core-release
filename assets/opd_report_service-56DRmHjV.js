var b=Object.defineProperty;var y=(c,p,t)=>p in c?b(c,p,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[p]=t;var h=(c,p,t)=>y(c,typeof p!="symbol"?p+"":p,t);import{cl as R,cm as O,bC as _,ao as g,cj as A,dd as f,aN as $,S as v,H as D}from"./index-CMZASHAR.js";var S={exports:{}};(function(c,p){(function(t,e){c.exports=e()})(R,function(){var t="month",e="quarter";return function(a,i){var s=i.prototype;s.quarter=function(r){return this.$utils().u(r)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(r-1))};var o=s.add;s.add=function(r,n){return r=Number(r),this.$utils().p(n)===e?this.add(3*r,t):o.bind(this)(r,n)};var d=s.startOf;s.startOf=function(r,n){var u=this.$utils(),l=!!u.u(n)||n;if(u.p(r)===e){var m=this.quarter()-1;return l?this.month(3*m).startOf(t).startOf("day"):this.month(3*m+2).endOf(t).endOf("day")}return d.bind(this)(r,n)}}})})(S);var w=S.exports;const P=O(w);_.extend(P);const I={one:"AL 1",two:"AL 2",three:"AL 3",four:"LA 4"},N=["Diabetes","Hypertension","Stroke","Suspected cancer","Confirmed cancer","Palliative cancer","Asthma","Depression","Acute psychosis","Chronic psychosis","Epilepsy"],E=["Organic mental disorder (Chronic)","Organic mental disorder (acute)","Alcohol use mental disorder","Drug use mental disorder","Schizophrenia","Acute and transient psychotic disorder","Schizo-affective disorder","Mood-affective disorder (MANIC)","Mood-affective disorder (BIPOLAR)","Mood-affective disorder (DEPRESSION)","Anxiety disorder","Stress reaction adjustment disorder","Dissociative conversion disorder","Somatoform disorder","Puerperal mental disorder","Personality/Behaviour disorder","Mental retardation","Psychological mental disorder","Hyperkinetic conduct disorder","Epilepsy"],j={total:"Total Clients",prev_pos_not_on_art:"Pre Pos not on ART",prev_pos_on_art:"Pre Pos on ART",new_neg:"New Neg",new_pos:"New Pos",not_done:"Not Done",screened:"Screened for TB",not_screened:"Not Screened for TB"};class q extends g{constructor(){super();h(this,"programID");h(this,"startDate");h(this,"endDate");h(this,"date");h(this,"epiweek");this.endDate="",this.startDate="",this.epiweek="",this.date=g.getSessionDate(),this.programID=g.getProgramID()}async getDisaggReport(){const t=await this.getReport("programs/".concat(this.programID,"/reports/opd_disaggregated")),e=this.aggregateDisagReportData(t.data);return[...e.F.rows,...e.M.rows,{ageGroup:"All",gender:"Male",...e.M.aggregate},...await this.buildMaternityAgreggateRows(e.F.aggregate,t.aggregated)]}aggregateDisagReportData(t){return Object.entries(t).reduce((e,[a,i])=>(a!=="Unknown"&&Object.entries(i).forEach(([s,o])=>{e[s].rows.push({ageGroup:a,gender:A(s),...o}),Object.entries(o).forEach(([d,r])=>{var n;e[s].aggregate[d]=[...(n=e[s].aggregate[d])!=null?n:[],...r]})}),e),{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}})}async getMaternalStatus(t,e="pepfar"){const a=f.parameterizeObjToString(this.buildRequest({report_definition:e}));return g.postJson("vl_maternal_status?".concat(a),{patient_ids:t})}async buildMaternityAgreggateRows(t,e,a="pepfar"){const i=Object.keys(t);let s=[],o={FBf:[],FP:[]};if(e)o.FBf=e.bf,o.FP=e.p;else{const d=$.uniq(Object.values(t).flat(1).map(r=>r instanceof Object?r.patient_id:r));o=await this.getMaternalStatus(d,a)}return s=o.FBf.concat(o.FP),["FP","FNP","FBf"].map(d=>i.reduce((r,n)=>({[n]:t[n].filter(u=>{const l=u instanceof Object?u.patient_id:u;return d==="FNP"?!s.includes(l):o[d].includes(l)}),...r}),{ageGroup:"All",gender:d}))}getMentalHealth(){return this.getReport("programs/".concat(this.programID,"/reports/mental_health"))}getCasesSeen(){return this.getReport("programs/".concat(this.programID,"/reports/cases_seen"))}getPatientsWithNIDs(){return this.getReport("with_nids")}getClinicRegistrations(){return this.getReport("registration")}getAttendance(){return this.getReport("programs/".concat(this.programID,"/reports/attendance"))}getDrugs(){const t="programs/".concat(this.programID,"/reports/drug");return g.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}getDiagnosis(){const t="programs/".concat(this.programID,"/reports/diagnosis");return g.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}getDiagnosisByAddress(){return this.getReport("diagnosis_by_address")}getLaPrescriptions(){const t="programs/".concat(this.programID,"/reports/la_prescriptions");return g.getJson(t,{start_date:this.startDate,end_date:this.endDate})}getMalariaReport(){const t="programs/".concat(this.programID,"/reports/malaria_report");return g.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}printLaReport(t){const e=new v,a="programs/".concat(this.programID,"/barcodes/la_report"),i={"date[start]":this.startDate,"date[end]":this.endDate};return Object.keys(I).forEach((s,o)=>{o++,i["".concat(o,"[prescription]")]=t["total_la_".concat(s,"_prescribed_drugs")],i["".concat(o,"[dispensed]")]=t["total_la_".concat(s,"_dispensed_drugs")]}),e.printLbl("".concat(a,"?").concat(f.parameterizeObjToString(i)))}getDateIntervalPeriod(){return"".concat(D.toStandardHisDisplayFormat(this.startDate)," - ").concat(D.toStandardHisDisplayFormat(this.endDate))}setStartDate(t){this.startDate=t}setEndDate(t){this.endDate=t}setEpiWeek(t){this.epiweek=t}getReportPeriod(){return this.startDate&&this.endDate?"".concat(D.toStandardHisDisplayFormat(this.startDate)," - ").concat(D.toStandardHisDisplayFormat(this.endDate)):"-"}getReport(t,e={}){return g.getJson(t,this.buildRequest(e))}buildRequest(t={}){const e={date:this.date,program_id:this.programID};return this.startDate&&this.endDate&&(e.start_date=this.startDate,e.end_date=this.endDate),this.epiweek&&(e.epiweek=this.epiweek),{...e,...t}}static getReportQuarters(t=4){const e=[];let a=_();for(let i=0;i<t*4;i++)e.push({start:a.startOf("quarter").format("YYYY-MM-DD"),end:a.endOf("quarter").format("YYYY-MM-DD"),name:"Q".concat(a.quarter()," ").concat(a.year())}),a=a.subtract(1,"quarter");return e}}export{j as D,I as L,E as M,N,q as O};
