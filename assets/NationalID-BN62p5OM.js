import{d as T,r as u,ao as m,ab as d,ac as o,u as v,v as y,w as N,x as D,y as c,dU as _,aL as g,M as h,au as w,a5 as M}from"./index-Cpa1Vu_O.js";import{H as x}from"./HisStandardForm-XdnY6fvn.js";import{u as E}from"./useEncounter-8lPOhkwU.js";import{I as W}from"./identifier_service-c8PXbuvB.js";import"./isEmpty-_82UNsn5.js";import"./encounter_guidelines-Cl074Os2.js";import"./GuidelineEngine-D6V1_Znr.js";const C=T({__name:"NationalID",setup(b){const r=u([]),i=u(),n=m(),l=()=>!/unknown/i.test(i.value.getMWNationalID()),{goToNextTask:p,patientDashboardUrl:f}=E((t,s,e)=>{i.value=e,r.value=[{id:"currentNationalID",helpText:"Current national identifier:",type:d.TT_TEXT_BANNER,condition:()=>!n.query.reassign&&l(),options:()=>{const a="<b>".concat(e.getMWNationalID(),"</b>");return[{label:a,value:a}]}},{id:"patientIdentifier",helpText:"Malawi National ID",type:d.TT_TEXT,defaultValue:()=>l()?e.getMWNationalID():"",validation:a=>o.validateSeries([()=>o.required(a),()=>o.isMWNationalID(a)])}]});async function I(t){const s="".concat(t.patientIdentifier.value),e=new W;if(e.identifierType=_.MW,!g.isEmpty(await e.getPatientsByIdentifier(s)))return h("ID was already assigned",15e3);if(n.query.reassign){const a=parseInt("".concat(n.query.reassign));await i.value.changeMwNationalId(a,t.patientIdentifier.value)}else await i.value.updateMWNationalId(t.patientIdentifier.value);w.invalidate("ACTIVE_PATIENT"),p()}return(t,s)=>(v(),y(c(M),null,{default:N(()=>[D(x,{cancelDestinationPath:c(f),onFinishAction:I,fields:r.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{C as default};
