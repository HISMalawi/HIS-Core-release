System.register(["./index-legacy-DDADMnop.js"],(function(t,e){"use strict";var r,a,s,i,o,n;return{setters:[t=>{r=t.al,a=t.cd,s=t.d5,i=t.aL,o=t.K,n=t.ai}],execute:function(){const e=t("L",{one:"AL 1",two:"AL 2",three:"AL 3",four:"LA 4"});t("N",["Diabetes","Hypertension","Stroke","Suspected cancer","Confirmed cancer","Palliative cancer","Asthma","Depression","Acute psychosis","Chronic psychosis","Epilepsy"]),t("M",["Organic mental disorder (Chronic)","Organic mental disorder (acute)","Alcohol use mental disorder","Drug use mental disorder","Schizophrenia","Acute and transient psychotic disorder","Schizo-affective disorder","Mood-affective disorder (MANIC)","Mood-affective disorder (BIPOLAR)","Mood-affective disorder (DEPRESSION)","Anxiety disorder","Stress reaction adjustment disorder","Dissociative conversion disorder","Somatoform disorder","Puerperal mental disorder","Personality/Behaviour disorder","Mental retardation","Psychological mental disorder","Hyperkinetic conduct disorder","Epilepsy"]),t("D",{total:"Total Clients",prev_pos_not_on_art:"Pre Pos not on ART",prev_pos_on_art:"Pre Pos on ART",new_neg:"New Neg",new_pos:"New Pos",not_done:"Not Done",screened:"Screened for TB",not_screened:"Not Screened for TB"}),t("O",class extends r{programID;startDate;endDate;date;epiweek;constructor(){super(),this.endDate="",this.startDate="",this.epiweek="",this.date=r.getSessionDate(),this.programID=r.getProgramID()}async getDisaggReport(){const t=await this.getReport(`programs/${this.programID}/reports/opd_disaggregated`),e=this.aggregateDisagReportData(t.data);return[...e.F.rows,...e.M.rows,{ageGroup:"All",gender:"Male",...e.M.aggregate},...await this.buildMaternityAgreggateRows(e.F.aggregate,t.aggregated)]}aggregateDisagReportData(t){return Object.entries(t).reduce(((t,[e,r])=>("Unknown"!==e&&Object.entries(r).forEach((([r,s])=>{t[r].rows.push({ageGroup:e,gender:a(r),...s}),Object.entries(s).forEach((([e,a])=>{t[r].aggregate[e]=[...t[r].aggregate[e]??[],...a]}))})),t)),{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}})}async getMaternalStatus(t,e="pepfar"){const a=s.parameterizeObjToString(this.buildRequest({report_definition:e}));return r.postJson(`vl_maternal_status?${a}`,{patient_ids:t})}async buildMaternityAgreggateRows(t,e,r="pepfar"){const a=Object.keys(t);let s=[],o={FBf:[],FP:[]};if(e)o.FBf=e.bf,o.FP=e.p;else{const e=i.uniq(Object.values(t).flat(1).map((t=>t instanceof Object?t.patient_id:t)));o=await this.getMaternalStatus(e,r)}return s=o.FBf.concat(o.FP),["FP","FNP","FBf"].map((e=>a.reduce(((r,a)=>({[a]:t[a].filter((t=>{const r=t instanceof Object?t.patient_id:t;return"FNP"===e?!s.includes(r):o[e].includes(r)})),...r})),{ageGroup:"All",gender:e})))}getMentalHealth(){return this.getReport(`programs/${this.programID}/reports/mental_health`)}getCasesSeen(){return this.getReport(`programs/${this.programID}/reports/cases_seen`)}getPatientsWithNIDs(){return this.getReport("with_nids")}getClinicRegistrations(){return this.getReport("registration")}getAttendance(){return this.getReport(`programs/${this.programID}/reports/attendance`)}getDrugs(){const t=`programs/${this.programID}/reports/drug`;return r.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}getDiagnosis(){const t=`programs/${this.programID}/reports/diagnosis`;return r.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}getDiagnosisByAddress(){return this.getReport("diagnosis_by_address")}getLaPrescriptions(){const t=`programs/${this.programID}/reports/la_prescriptions`;return r.getJson(t,{start_date:this.startDate,end_date:this.endDate})}getMalariaReport(){const t=`programs/${this.programID}/reports/malaria_report`;return r.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}printLaReport(t){const r=new o,a=`programs/${this.programID}/barcodes/la_report`,i={"date[start]":this.startDate,"date[end]":this.endDate};return Object.keys(e).forEach(((e,r)=>{r++,i[`${r}[prescription]`]=t[`total_la_${e}_prescribed_drugs`],i[`${r}[dispensed]`]=t[`total_la_${e}_dispensed_drugs`]})),r.printLbl(`${a}?${s.parameterizeObjToString(i)}`)}getDateIntervalPeriod(){return`${n.toStandardHisDisplayFormat(this.startDate)} - ${n.toStandardHisDisplayFormat(this.endDate)}`}setStartDate(t){this.startDate=t}setEndDate(t){this.endDate=t}setEpiWeek(t){this.epiweek=t}getReportPeriod(){return this.startDate&&this.endDate?`${n.toStandardHisDisplayFormat(this.startDate)} - ${n.toStandardHisDisplayFormat(this.endDate)}`:"-"}getReport(t,e={}){return r.getJson(t,this.buildRequest(e))}buildRequest(t={}){const e={date:this.date,program_id:this.programID};return this.startDate&&this.endDate&&(e.start_date=this.startDate,e.end_date=this.endDate),this.epiweek&&(e.epiweek=this.epiweek),{...e,...t}}static getReportQuarters(t=4){const e=[];let r=n.getCurrentYear();for(let a=0;a<t;++a)e.push({name:`Q4 ${r}`,start:`${r}-10-01`,end:`${r}-12-31`}),e.push({name:`Q3 ${r}`,start:`${r}-07-01`,end:`${r}-09-30`}),e.push({name:`Q2 ${r}`,start:`${r}-04-01`,end:`${r}-06-30`}),e.push({name:`Q1 ${r}`,start:`${r}-01-01`,end:`${r}-03-31`}),--r;return e}})}}}));
