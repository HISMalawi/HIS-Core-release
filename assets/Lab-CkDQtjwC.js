import{d as N,r as A,bT as x,bY as F,au as w,ai as c,S as l,t as P,e0 as n,aj as _,ag as I,g as m,e4 as p,dj as C,d_ as B,a as $,c as Y,w as V,b as q,u as f,f as H,bX as k}from"./index-4ZhJu3VE.js";import{H as W}from"./HisStandardForm-K1lIrz3_.js";import{u as X}from"./useEncounter-BL6Y94J5.js";import{m as E,r as j}from"./commons-D-SkGAiW.js";import"./isEmpty-Cw9u0tW9.js";import"./encounter_guidelines-DE8ypU-x.js";import"./GuidelineEngine-D6V1_Znr.js";const ae=N({__name:"Lab",setup(G){const v=A([]),a=new x(-1,F.LAB_ORDER),r=w();async function O(o,i){var s,T,h,b;const u={tests:[{test_type:"TB",sample_status:"N/A",target_lab:o.target_lab.value,sample_type:o.sample_type.value,recommended_examination:o.examination.value,sample_date:a.date,sending_facility:l.getLocationName(),time_line:((s=o.time_line)==null?void 0:s.value)==="Other"?"Month ".concat((T=o.otherTimeLine)==null?void 0:T.value):((h=o.time_line)==null?void 0:h.value)||"N/A",treatment_history:"N/A",reason:(b=o.time_line)!=null&&b.value?"Follow up":"Diagnosis"}],encounter_id:i,requesting_clinician:l.getUserName()};await l.postJson("programs/".concat(l.getProgramID(),"/lab_tests/orders"),u),await k.printLabOrder(a.patientID,u.tests[0])}const{goToNextTask:y,patientDashboardUrl:R}=X((o,i,u,s)=>{a.patientID=i,a.providerID=o;const T=()=>{let t=[];return{id:"sample_type",helpText:"TB Test Specimens Types",type:c.TT_SELECT,requireNext:!1,init:async()=>{try{t=await l.getJson("/programs/".concat(l.getProgramID(),"/lab_tests/panels"),{test_type:"TB Tests"})}catch(e){return P("Unable to load samples!"),!1}return!0},computedValue:e=>({concept_id:n("SAMPLE"),value_coded:n("".concat(e.value)),obs_datetime:a.date}),validation:e=>_.required(e),options:()=>E(t)}},h=()=>{const t={};return{id:"examination",helpText:"Examination",type:c.TT_SELECT,beforeNext:async e=>{if(!t[e.other])try{const[d,L]=(await I.get(e.other)).split("_");t[e.other]=m("".concat(a.date," ").concat(m().format("HH:mm:ss"))).add(parseInt(d),L).format("YYYY-MM-DD HH:mm:ss")}catch(d){console.warn("".concat(d))}return!0},defaultValue:()=>{var e;return(e=r==null?void 0:r.query)==null?void 0:e.test},computedValue:e=>[{concept_id:n("TEST_REQUESTED"),value_coded:n("".concat(e.value)),obs_datetime:a.date},...t[e.other]?[{concept_id:n("Estimated turnaround time for result"),value_datetime:t[e.other],obs_datetime:a.date}]:[]],validation:e=>_.required(e),options:()=>[{value:"MICROSCOPY",label:"Microscopy",other:p.MICROSCOPY_RESULT_TURN_AROUND},{value:"XPERT_MTB_RIF",label:"Xpert MTB/RIF",other:p.XPERT_MTB_RIF_RESULT_TURN_AROUND},{value:"CULTURE_AND_DST",label:"Culture and DST",other:p.CULTURE_AND_DST_RESULT_TURN_AROUND},{value:"LPA",label:"LPA",other:p.LPA_RESULT_TURN_AROUND},{value:"LAM",label:"LAM",other:p.LAM_RESULT_TURN_AROUND}]}},b=()=>({id:"target_lab",helpText:"Select Lab:",type:c.TT_SELECT,computedValue:t=>({concept_id:n("LAB"),value_text:"".concat(t.value),obs_datetime:a.date}),validation:t=>_.required(t),defaultValue:()=>l.getLocationName(),options:async(t,e="")=>{try{return await C(e)}catch(d){return E(["".concat(l.getLocationName())])}},config:{showKeyboard:!0,isFilterDataViaApi:!0}}),g=()=>{let t=!1;return{id:"time_line",helpText:"Follow Up Lab Order Month for Month",type:c.TT_SELECT,init:async()=>{const e=await B.getRecentOrders(i);if(e){const d=m(e.encounter_datetime).format("YYYY-MM-DD");t=m(a.date).diff(d,"days",!0)>=28}return!0},defaultValue:()=>{const e=m(a.date).diff(s.outcomeStartDate||a.date,"months");if(!(s.isBdeMode||e<=0))return"Month ".concat(e)},condition:()=>t,validation:e=>_.required(e),computedValue:e=>{if(e.value!="Other")return[{concept_id:n("FOLLOW_UP"),value_text:e.value,obs_datetime:a.date}]},options:()=>[{value:"Month 2",label:"Month 2"},{value:"Month 3",label:"Month 3"},{value:"Month 4",label:"Month 4"},{value:"Month 6",label:"Month 6"},{value:"Other",label:"Other"}]}},U=()=>({id:"otherTimeLine",helpText:"Other Follow Up Lab Order Month for Month:",type:c.TT_NUMBER,computedValue:t=>({concept_id:n("FOLLOW_UP"),value_text:"Month ".concat(t.value),obs_datetime:a.date}),validation:t=>_.required(t),condition:t=>t.time_line.value==="Other"});v.value=[T(),h(),b(),g(),U()]});function S(o){var i,u,s;return(i=r==null?void 0:r.query)!=null&&i.reason?"".concat((u=r==null?void 0:r.query)==null?void 0:u.reason):(s=o.time_line)!=null&&s.value?"FOLLOW_UP":"DIAGNOSIS"}function D(o){return[{concept_id:n("TEST_TYPE"),value_coded:n("TB"),obs_datetime:a.date},{concept_id:n("REASON_FOR_TEST"),value_coded:n(S(o)),obs_datetime:a.date}]}async function M(o,i){await a.createEncounter(),await a.saveObservationList([...D(o),...await j(i)]),await O(o,a.encounterID),y()}return(o,i)=>($(),Y(f(H),null,{default:V(()=>[q(W,{cancelDestinationPath:f(R),onFinishAction:M,fields:v.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{ae as default};
