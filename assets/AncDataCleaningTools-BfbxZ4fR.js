import{d as u,I as p,F as _,V as T,ai as l,ah as f,dq as x,L as t,dr as n,S as d,H as w,_ as I,r as m,o as D,c as v,w as S,b as g}from"./index-C6EjxQ0a.js";import{_ as N}from"./ReportMixin.vue_vue_type_script_lang-w4VtTENp.js";import{R as E}from"./TableReportTemplate-Bex2T2ri.js";import"./HisStandardForm-CHL0RBXf.js";import"./ReportErrors-DibpB--Z.js";const C=u({mixins:[N],components:{ReportTemplate:E,IonPage:p},data:()=>({title:"Data cleaning report",rows:[],columns:[],defaultIndicator:{}}),created(){this.fields=[{id:"indicator",helpText:"Select indicator",type:_.TT_SELECT,requireNext:!1,condition:()=>!this.defaultIndicator,defaultOutput:()=>this.defaultIndicator,validation:e=>T.required(e),options:()=>this.getIndicatorOptions()},...l({id:"start_date",helpText:"Start",required:!0,minDate:()=>"2000-01-01",maxDate:()=>d.getSessionDate(),estimation:{allowUnknown:!1},computeValue:e=>e}),...l({id:"end_date",helpText:"End",required:!0,minDate:(e,a)=>a.start_date,maxDate:()=>d.getSessionDate(),estimation:{allowUnknown:!1},computeValue:e=>e})],this.defaultIndicator=f.find(this.getIndicatorOptions(),{value:this.$route.query.cleaning_tool})||null},methods:{async onPeriod(e,a){const s=o=>w.toStandardHisDisplayFormat(o);this.rows=[],this.title=e.indicator.label;const i=e.indicator;this.columns=i.other.columns,this.report=new x,this.report.setStartDate(a.start_date),this.report.setEndDate(a.end_date),this.period="".concat(s(a.start_date)," - ").concat(s(a.end_date));const r=await this.report.getDataToolReport(i.value);r&&(this.rows=await Promise.all(r.map(o=>i.other.formatRow(o))))},showPatientBtn(e){return t.tdBtn("View",()=>this.$router.push("/patient/dashboard/"+e))},getIndicatorOptions(){return[{label:"Males with ANC Encounters",value:n.MALES_WITH_ANC_ENCOUNTERS,other:{columns:[[t.thTxt("National ID"),t.thTxt("First name"),t.thTxt("Last name"),t.thTxt("Total Encounters"),t.thTxt("Action")]],formatRow:e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),t.td(e.total_encounters),this.showPatientBtn(e.patient_id)]}},{label:"Encounters after death",value:n.ENCOUNTERS_AFTER_DEATH,other:{columns:[[t.thTxt("National ID"),t.thTxt("First name"),t.thTxt("Last name"),t.thTxt("Date of death"),t.thTxt("Recent encounter date"),t.thTxt("Count"),t.thTxt("Action")]],formatRow:e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),t.tdDate(e.patient_died_date),t.tdDate(e.minimum_encounter_datetime),t.td(e.total_encounters),this.showPatientBtn(e.patient_id)]}},{label:"Incomplete visits",value:n.INCOMPLETE_VISITS,other:{columns:[[t.thTxt("National ID"),t.thTxt("Name"),t.thTxt("Visit date"),t.thTxt("Incomplete count"),t.thTxt("Action")]],formatRow:e=>[t.td(e.n_id),t.td(e.name),t.td(e.visit_date),t.td(e.visit_no),this.showPatientBtn(e.patient_id)]}},{label:"Duplicate encounters",value:n.DUPLICATE_ENCOUNTERS,other:{columns:[[t.thTxt("National ID"),t.thTxt("Given name"),t.thTxt("Family name"),t.thTxt("Name"),t.thTxt("Total"),t.thTxt("Action")]],formatRow:e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),t.td(e.name),t.td(e.total),this.showPatientBtn(e.patient_id)]}},{label:"Missing HIV Status",value:n.MISSING_HIV_STATUS,other:{columns:[[t.thTxt("National ID"),t.thTxt("Given name"),t.thTxt("Family name"),t.thTxt("Action")]],formatRow:e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),this.showPatientBtn(e.patient_id)]}},{label:"Missing Last Menstrual Period (LMP)",value:n.MISSING_LMP,other:{columns:[[t.thTxt("National ID"),t.thTxt("Given name"),t.thTxt("Family name"),t.thTxt("Action")]],formatRow:e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),this.showPatientBtn(e.patient_id)]}}]}}});function R(e,a,s,i,r,o){const h=m("report-template"),c=m("ion-page");return D(),v(c,null,{default:S(()=>[g(h,{title:e.title,period:e.period,rows:e.rows,fields:e.fields,columns:e.columns,showFilters:!0,onReportConfiguration:e.onPeriod},null,8,["title","period","rows","fields","columns","onReportConfiguration"])]),_:1})}const B=I(C,[["render",R]]);export{B as default};
