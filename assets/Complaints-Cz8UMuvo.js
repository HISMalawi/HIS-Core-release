import{H as E}from"./HisStandardForm-BCjM4-bc.js";import{_ as g}from"./EncounterMixin.vue_vue_type_script_lang-v2aYCq6R.js";import{P as I}from"./patient_complaints_service-C5sIRiqT.js";import{d as b,a8 as D,_ as R,X as F,Z as x,Y as B,a9 as V,dF as _,aN as y,au as f,aa as v,af as s,a as S,E as k,b as n,w as o,C as m,J as A,I as L,by as h,W as $,bq as N,H as G,ad as r,ae as H,bz as M,aw as z,aj as W,bQ as j,c as U}from"./index-CMZASHAR.js";import{P as Y}from"./patient_radiology_service-DNwD6pzQ.js";import q from"./HisRadiologyPicker-FKU4Qe5i.js";import"./encounter_guidelines-CJXpBOk4.js";import"./GuidelineEngine-D6V1_Znr.js";import"./SelectMixin-DB1clgUW.js";import"./BaseTextInput-DJ8sG-L8.js";import"./FieldMixin.vue_vue_type_script_lang-Bg-mZnL5.js";const X=b({name:"Modal",components:{IonButton:D,IonContent:R,IonHeader:F,IonTitle:x,IonToolbar:B,IonFooter:V,HisRadiologyPicker:q},mixins:[g],data:()=>({radiologyService:{},isPacsEnabled:!1,emitedSelectedOptions:{}}),watch:{ready:{async handler(e){e&&(this.radiologyService=new Y(this.patientID,this.providerID),this.isPacsEnabled=await _.isPACsEnabled())},immediate:!0,deep:!0}},methods:{async onValue(e){this.emitedSelectedOptions=e},async getSelected(){return this.emitedSelectedOptions.map(async e=>({...await this.radiologyService.buildValueCoded("Radiology Orders",e.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]}))},async onSubmit(){if(!y.isEmpty(this.emitedSelectedOptions)){this.closeModal();let e=await this.getSelected();e=await Promise.all(e),await this.radiologyService.createEncounter();const t=await this.radiologyService.obsObj(e),i=await this.radiologyService.saveObservationList(t);if(await this.radiologyService.printOrders(i,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(i,this.patient)}catch(a){console.log(a)}}},async closeModal(){await f.dismiss([])}}});function J(e,t,i,a,l,c){const p=s("ion-title"),d=s("ion-toolbar"),C=s("ion-header"),O=s("his-radiology-picker"),w=s("ion-content"),u=s("ion-button"),T=s("ion-footer");return S(),k(A,null,[n(C,null,{default:o(()=>[n(d,null,{default:o(()=>[n(p,{class:"his-lg-text"},{default:o(()=>t[2]||(t[2]=[m("Radiology Examination")])),_:1})]),_:1})]),_:1}),n(w,{style:{overflow:"hidden",background:"grey",height:"70vh"}},{default:o(()=>[n(O,{onOnValue:e.onValue},null,8,["onOnValue"])]),_:1}),n(T,null,{default:o(()=>[n(d,null,{default:o(()=>[n(u,{onClick:t[0]||(t[0]=P=>e.onSubmit()),size:"large",slot:"end",disabled:e.emitedSelectedOptions.length===0},{default:o(()=>t[3]||(t[3]=[m(" Place orders ")])),_:1},8,["disabled"]),n(u,{onClick:t[1]||(t[1]=P=>e.closeModal()),size:"large",slot:"start",color:"danger"},{default:o(()=>t[4]||(t[4]=[m(" Close ")])),_:1})]),_:1})]),_:1})],64)}const K=v(X,[["render",J]]),Q=b({components:{HisStandardForm:E,IonPage:L},mixins:[g],data:()=>({complaintsService:{},todaysDate:h.getSessionDate(),presentingComplaints:"",isPacsEnabled:!1,radiologyBtnName:"Radiology Order",hasTriageComplaints:!1,labOrderFieldContext:{},labOrders:[]}),watch:{ready:{async handler(e){e&&(this.complaintsService=new I(this.patientID,this.providerID),this.isPacsEnabled=await _.isPACsEnabled(),this.hasTriageComplaints=await this.getTriagePresentingComplaints(),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){try{const i=await this.resolveObs(t,"complaints");await this.complaintsService.createEncounter(),await this.complaintsService.saveObservationList(i),this.nextTask()}catch(i){console.error(i),$("An error occurred while saving the complaints")}},async launchRadiologyOrderSelection(){const e=await f.create({component:K,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async getTriagePresentingComplaints(){if(!((await this.complaintsService.fetchLatestTriageEncounter()).length>0))return!1;const i=(await N.getEncounters(this.patientID,this.todaysDate)).filter(function(a){return a.type.name=="TRIAGE PRESENTING COMPLAINTS"&&G.toStandardHisFormat(a.encounter_datetime)==h.getSessionDate()});return i.length>0?(this.presentingComplaints=i[0].observations,!0):!1},buildResults(){const e=["Group","Presenting complaints"];let t="",i=this.presentingComplaints.map(a=>{if(a.obs_group_id!=null)return[t,a.value_text];t=a.value_text});return i=i.filter(a=>a!=null),this.presentingComplaints=i,[{label:"",value:"",other:{columns:e,rows:i}}]},getFields(){return[{id:"triage_complaints",helpText:"Triaging Complaints",condition:()=>this.hasTriageComplaints,type:r.TT_TABLE_VIEWER,options:()=>this.buildResults(),config:{hiddenFooterBtns:["Clear"]}},{id:"complaints",helpText:"Presenting Complaints",type:r.TT_COMPLAINTS_PICKER,validation:e=>H.required(e),computedValue:e=>({tag:"complaints",obs:e.filter(t=>!/other (specify)/i.test(t.label)).map(async t=>({...await this.complaintsService.buildValueCoded("Presenting complaint",t.other.parent),child:[await this.complaintsService.buildValueCodedFromConceptId(t.other.parent,t.other.concept_id)]}))})},{id:"other_complaints",helpText:"Other Complaints",type:r.TT_TEXT,condition:e=>e.complaints.some(t=>t.label==="Other (specify)"&&t.isChecked),computedValue:async e=>({tag:"complaints",obs:{...await this.complaintsService.buildValueCoded("Presenting complaint","Other"),child:[await this.complaintsService.buildValueText("Other",e.label)]}})},{id:"lab_order",helpText:"Lab Orders",type:r.TT_LAB_ORDERS,onload:e=>this.labOrderFieldContext=e,init:async()=>(this.labOrders=M.formatLabs(await z.get("GET_LAB_ORDERS_WITH_GIVEN_RESULT_STATUS",{patientID:this.patientID})),!0),unload:async()=>{const e=this.labOrders.filter(t=>t.result_given==="No");if(e.length&&await W("Result(s) Given to Client?")){const t=new j(this.patientID,-1,this.providerID),i=e.reduce((a,l)=>[...a,...l.resultIds.map(async c=>(t.encounterID=l.encounter_id,t.saveObs(await t.buildObs("Result Given to Client",{value_coded:"Yes",obs_group_id:c}))))],[]);await Promise.all(i)}},options:()=>[{label:"Lab orders",value:"order trail",other:{values:this.labOrders}}],config:{hiddenFooterBtns:[this.showRadiologyOdersBtn()],footerBtns:[{name:"Order",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>{y.isEmpty(this.labOrderFieldContext)||await this.labOrderFieldContext.launchOrderSelection()}},{name:this.radiologyBtnName,size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchRadiologyOrderSelection(),visibleOnStateChange:e=>e.index===1}]}},{id:"all_presenting_complaints",helpText:"Summary",condition:()=>this.presentingComplaints.length>0,type:r.TT_SUMMARY,options:e=>this.buildSummaryResults(e),config:{hiddenFooterBtns:["Clear"]}}]},showRadiologyOdersBtn(){return this.isPacsEnabled?"":this.radiologyBtnName},buildSummaryResults(e){const t=e.complaints.map(a=>({label:"OPD Complaints",value:a.label})),i=this.presentingComplaints.map(a=>({label:"Triaging Complaints",value:a[1]}));return t.concat(i)}}});function Z(e,t,i,a,l,c){const p=s("his-standard-form"),d=s("ion-page");return S(),U(d,null,{default:o(()=>[n(p,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit,skipSummary:!0},null,8,["cancelDestinationPath","fields","onFinishAction"])]),_:1})}const pe=v(Q,[["render",Z]]);export{pe as default};
