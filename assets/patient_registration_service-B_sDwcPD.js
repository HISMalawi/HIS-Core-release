var c=Object.defineProperty;var p=(r,t,e)=>t in r?c(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var n=(r,t,e)=>(p(r,typeof t!="symbol"?t+"":t,e),e);import{S as a,aI as P,b7 as u}from"./index-BPESSmpp.js";import{P as i}from"./person_service-EFaIAs-B.js";class d extends a{constructor(){super()}static create(t){return super.postJson("/person_attributes",t)}}class S extends a{constructor(){super();n(this,"personId");this.personId=0}getPersonID(){return this.personId}setPersonID(e){this.personId=e}async registerPatient(e,s){await this.createPerson(e),await this.createPersonAttributes(s);const o=await this.createPatient();return await this.printPatient(),o}async registerGuardian(e){return this.createPerson(e)}updatePerson(e){return new i(e).update(this.personId)}async createPerson(e){const s=await new i(e).create();return this.personId=s.person_id,s}createPatient(){return P.createPatient(this.personId)}async createPersonAttributes(e){for(const s in e)await d.create({...e[s],person_id:this.personId})}printPatient(){return new u(this.personId).printNidLbl()}}export{S as P};
