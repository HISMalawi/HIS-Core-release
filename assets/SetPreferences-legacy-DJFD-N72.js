System.register(["./index-legacy-pSEoxn3J.js","./anc_global_props-legacy-CYcEHMpr.js","./HisStandardForm-legacy-CGi-zolz.js"],(function(e,a){"use strict";var n,t,i,r,o,u,c,l,s,d,p,y,m,f,T,_,v,I,h,L;return{setters:[e=>{n=e.d,t=e.r,i=e.o,r=e.u,o=e.an,u=e.ao,c=e.a,l=e.w,s=e.e,d=e.f,p=e.m,y=e.a_,m=e.as,f=e.b,T=e.aq,_=e.p,v=e.y},e=>{I=e.a,h=e.A},e=>{L=e.H}],execute:function(){e("default",n({__name:"SetPreferences",setup(e){const a=t(""),n=r(),S=m(),C=[...function(){const e=I.APPOINTMENT_LIMIT;return[{id:e,helpText:"Enter Appointment Limit",type:u.TT_NUMBER,computedValue:e=>e.value,condition:()=>A(e),defaultValue:()=>h.appointmentLimit(),validation:e=>o.required(e)}]}(),...function(){const e=I.CLINIC_DAYS;return[{id:e,helpText:"Set Clinic day(s)",type:u.TT_MULTIPLE_SELECT,condition:()=>A(e),computedValue:e=>(e=>e.map((e=>e.value)).join())(e),validation:e=>o.required(e),options:async()=>{return e=await h.clinicDays(),["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"].map((a=>({label:a,value:a,isChecked:!y.isEmpty(e)&&e.search(a)>=0})));var e}}]}(),...function(){const e=I.CLINIC_HOLIDAYS;return[{id:e,helpText:"Set clinic holiday(s)",type:u.TT_CLINIC_HOLIDAY_PICKER,condition:()=>A(e),computedValue:e=>e.value,defaultValue:()=>h.clinicHolidays(),validation:e=>o.required(e)}]}()];function A(e){return console.log("prop",e,a.value),e===a.value}async function E(e,a){try{for(const e in a)await T.set(e,a[e]),_("Property has been updated",2e3);S.back()}catch(n){console.error(n),v("An error occurred while saving the preferences")}}return i((()=>a.value=n.name)),(e,a)=>(f(),c(d(p),null,{default:l((()=>[s(L,{fields:C,onFinishAction:E,skipSummary:!0})])),_:1}))}}))}}}));
