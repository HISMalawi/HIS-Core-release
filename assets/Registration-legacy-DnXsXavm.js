System.register(["./index-legacy-CA6M7ipO.js","./StagingMixin.vue_vue_type_script_lang-legacy--7m_DrSs.js","./vitals_service-legacy-Dr1dMWAK.js","./EncounterMixin.vue_vue_type_script_lang-legacy-qUwf12Yn.js","./encounter_guidelines-legacy-Bcz_Mw7r.js","./GuidelineEngine-legacy-KsvQuFdF.js","./HisStandardForm-legacy-a9YJRGaH.js"],(function(e,t){"use strict";var i,a,s,n,o,r,l,d,u,g,c,h,_,p,v,m,T,b,y,f,w,V,E;return{setters:[e=>{i=e.bQ,a=e.d,s=e.bD,n=e.bE,o=e.aw,r=e.R,l=e.ad,d=e.ae,u=e.aN,g=e.aV,c=e.H,h=e.bC,_=e.bZ,p=e.ds,v=e.W,m=e.dt,T=e.aW,b=e.aa,y=e.c,f=e.af,w=e.a},e=>{V=e._},e=>{E=e.V},null,null,null,null],execute:function(){class t extends i{constructor(e,t){super(e,9,t)}}const D=a({mixins:[V],data:()=>({registration:{},prescription:{},dispensation:{},regimens:[],customRegimens:[],vitals:{}}),watch:{ready:{async handler(e){e&&(this.canShowStagingFields=!1,this.registration=new t(this.patientID,this.providerID),this.vitals=new E(this.patientID,this.providerID),this.showStagingWeightChart=!1,this.fields=this.getRegistrationFields())},immediate:!0}},methods:{async onSubmit(e,t){const i={...t};if(await this.registration.createEncounter(),this.hasStaging(e)&&(await this.submitStaging(t),await this.vitals.createEncounter(),await this.vitals.saveObservationList(await this.resolveObs(i,"vitals"))),await this.registration.saveObservationList(await this.resolveObs(i,"reg")),e?.cell_phone_number?.value){const e=new s;e.setPersonID(this.patientID),await e.updatePerson(n.resolvePerson(t)),o.invalidate("ACTIVE_PATIENT")}r("Clinic registration complete!"),this.nextTask()},buildDateObs(e,t,i){let a={};return a=t.match(/unknown/i)?this.registration.buildValueText(e,"Unknown"):i?this.registration.buildValueDateEstimated(e,t):this.registration.buildValueDate(e,t),a},getRegistrationFields(){return[{id:"followup_agreement",helpText:"Agrees to follow-up",type:l.TT_MULTIPLE_YES_NO,summaryMapValue:({value:e,label:t})=>({value:e,label:`${t} followup`}),validation:e=>this.validateSeries([()=>d.required(e),()=>d.anyEmpty(e)]),computedValue:e=>{const t=[];return e.forEach((({label:e,value:i})=>{t.push(this.registration.buildValueCoded(e,i)),t.push(this.registration.buildValueCoded("Agrees to followup",e))})),{tag:"reg",obs:t}},options:e=>u.isEmpty(e.followup_agreement)?[{label:"Phone",value:"",other:{values:this.yesNoOptions()}},{label:"Home visit",value:"",other:{values:this.yesNoOptions()}}]:e.followup_agreement},(()=>({...n.getCellNumberField(),config:{customKeyboard:[[["1","2","3"],["4","5","6"],["7","8","9"],["","0",""]],[["+265","/"],["Delete"]]]},condition:e=>{const t=this.patient.getPhoneNumber();return e.followup_agreement.some((e=>"Phone"===e.label&&"Yes"===e.value&&(!t||/unknown|n\/a/i.test(t))))}}))(),{id:"has_linkage_code",helpText:"HTS Linkage number confirmation",type:l.TT_YES_NO,summaryMapValue:e=>({label:"Has HTS Linkage number?",value:e}),validation:e=>d.required(e),options:()=>[{label:"Does client have an HTS Linkage number?",value:"",values:this.yesNoOptions()}]},{id:"hts_serial_number",helpText:"HTS Linkage Number",type:l.TT_LINKAGE_CODE,validation:e=>d.validateSeries([()=>d.required(e),()=>e?.other?.isValidLinkageCode?null:["Invalid Scanform linkage code"]]),condition:e=>"Yes"===e.has_linkage_code,computedValue:e=>({tag:"reg",obs:this.registration.buildValueText("HTC Serial number",e.value)})},{id:"received_arvs",helpText:"Ever received ARVs for treatment or prophylaxis?",type:l.TT_SELECT,computedValue:({value:e})=>({tag:"reg",obs:this.registration.buildValueCoded("Ever received ART",e)}),validation:e=>d.required(e),options:()=>this.yesNoOptions()},...g({id:"date_last_taken_arvs",helpText:"Last taken ARVS",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),condition:e=>"Yes"===e.received_arvs.value,estimation:{allowUnknown:!0},computeValue:(e,t)=>({date:e,tag:"reg",isEstimate:t,obs:this.buildDateObs("Date ART last taken",e,t)})}),{id:"taken_art_in_last_two_months",helpText:"Taken ARVs in the last two months?",type:l.TT_SELECT,validation:e=>d.required(e),computedValue:({value:e})=>({tag:"reg",obs:[this.registration.buildValueCoded("Has the patient taken ART in the last two months",e)]}),options:()=>this.yesNoUnknownOptions(),condition:e=>"Unknown"===e.year_date_last_taken_arvs.value},{id:"taken_art_in_last_two_weeks",helpText:"Taken ARV's in the last two weeks?",type:l.TT_SELECT,computedValue:({value:e},t)=>{let i="";const a=[];let s=-1;return"Yes"===e?s=14:"Yes"===t.taken_art_in_last_two_months.value&&(s=60),s>0&&(i=c.getDateBeforeByDays(this.registration.getDate(),s),a.push(this.registration.buildValueDateEstimated("Date ART last taken",i))),{date:i,tag:"reg",obs:[...a,this.registration.buildValueCoded("Has the patient taken ART in the last two weeks",e)]}},validation:e=>d.required(e),condition:e=>"Yes"===e.taken_art_in_last_two_months.value,options:()=>this.yesNoUnknownOptions()},{id:"ever_registered_at_art_clinic",helpText:"Ever registered at an ART clinic?",type:l.TT_SELECT,computedValue:({value:e})=>({tag:"reg",obs:this.registration.buildValueCoded("Ever registered at ART clinic",e)}),validation:e=>d.required(e),condition:e=>"Yes"===e.received_arvs.value,options:()=>this.yesNoOptions()},{id:"location_of_art_initialization",helpText:"Location of ART initiation",type:l.TT_SELECT,computedValue:({label:e})=>({tag:"reg",obs:this.registration.buildValueText("Location of ART initiation",e)}),validation:e=>d.required(e),condition:e=>"Yes"===e.ever_registered_at_art_clinic.value,options:(e,t="")=>this.getFacilities(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}},...g({id:"date_started_art",helpText:"Started ART",required:!0,init:async()=>(await this.initStaging(this.patient),!0),beforeNext:e=>{const t=h(e).diff(this.patient.getBirthdate(),"years");return this.staging.setAge(t),this.stagingFacts.age=t,this.stagingFacts.ageInMonths=12*t,!0},condition:e=>"Yes"===e.ever_registered_at_art_clinic.value,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),estimation:{allowUnknown:!0,estimationFieldType:_.MONTH_ESTIMATE_FIELD},computeValue:(e,t)=>(this.staging.setDate(e),this.vitals.setDate(e),{date:e,tag:"reg",isEstimate:t,obs:this.buildDateObs("Date ART started",e,t)})}),{id:"previous_art_number",helpText:"ART number at previous location",type:l.TT_TEXT,condition:e=>"Yes"===e.ever_registered_at_art_clinic.value,computedValue:e=>({tag:"reg",obs:this.registration.buildValueText("ART number at previous location",e.value)}),validation:e=>d.required(e)},{id:"has_transfer_letter",helpText:"Has staging information?",type:l.TT_SELECT,validation:e=>d.required(e),computedValue:({value:e})=>({tag:"reg",obs:this.registration.buildValueCoded("Has transfer letter",e)}),options:()=>this.yesNoOptions(),condition:e=>"Yes"===e.ever_registered_at_art_clinic.value},{id:"height",helpText:"Height (CM)",type:l.TT_NUMBER,condition:e=>"Yes"===e.has_transfer_letter.value,computedValue:({value:e})=>({tag:"vitals",obs:this.vitals.buildValueNumber("Height",e)}),validation:e=>this.validateSeries([()=>d.required(e),()=>d.isNumber(e),()=>d.rangeOf(e,40,222)])},{id:"weight",helpText:"Weight (Kg)",type:l.TT_TEXT,unload:async(e,t,i)=>{const a=i.weight.value,s=i.height.value,n=await p.getBMI(a,s,this.patient.getGender(),this.patient.getAge());if(this.stagingFacts.bmi=n.index,!this.staging.isPedaid())return;const o=await this.patient.getMedianWeightHeight();try{this.stagingFacts.weightPercentile=parseFloat(a)/parseFloat(o.weight)*100}catch(r){this.stagingFacts.weightPercentile=0}},computedValue:({value:e})=>({tag:"vitals",obs:this.vitals.buildValueNumber("weight",e)}),condition:e=>"Yes"===e.has_transfer_letter.value,validation:e=>this.validateSeries([()=>{const t={...e,other:{modifier:"."}};return this.vitals.isNotEmptyandFloat(t)},()=>d.rangeOf(e,1,300)]),config:{customKeyboard:[[["1","2","3",""],["4","5","6",""],["7","8","9","."],["","0","",""]],[["Delete"]]]}},...this.getStagingFields(),{id:"new_cd4_percent_available",helpText:"CD4 percent available",type:l.TT_SELECT,options:()=>this.yesNoOptions(),condition:e=>"Yes"===e.has_transfer_letter.value,validation:e=>d.required(e)},{id:"cd4_percent",helpText:"CD4 Percent",type:l.TT_TEXT,condition:e=>"Yes"===e.new_cd4_percent_available.value,computedValue:({value:e})=>({tag:"staging",obs:this.registration.buildValueNumber("CD4 percent",parseInt(e.toString().substring(1)),"%")}),onValue:e=>!(e.value&&!this.staging.cd4CountIsValid(e.value)&&(v("Cd4 percentage invalid. Use one modifier or start with either of these symbols: >, < or ="),1)),validation:e=>d.required(e),config:{customKeyboard:[m,[["Delete"]]]}},{id:"type_of_confirmatory_hiv_test",helpText:"Confirmatory HIV test",type:l.TT_SELECT,beforeNext:e=>(this.stagingFacts.testType=`${e.value}`,!0),validation:e=>d.required(e),onValue:async e=>("Not done"===e.value&&await T("Reminder","UNKNOWN HIV CONFIRMATORY TEST","Please arrange for a confirmatory test",[{name:"Agreed",color:"success",slot:"start"}]),!0),computedValue:({value:e})=>({tag:"reg",obs:this.registration.buildValueCoded("Confirmatory hiv test type",e)}),options:e=>[{label:"Rapid antibody test",value:"HIV rapid test"},{label:"DNA PCR",value:"HIV DNA polymerase chain reaction"},{label:"Not done",value:"Not done",disabled:"Yes"===e.has_linkage_code}]},{id:"confirmatory_hiv_test_location",helpText:"Location of confirmatory HIV test",type:l.TT_SELECT,defaultValue:e=>"Yes"===(e.ever_registered_at_art_clinic&&e.ever_registered_at_art_clinic.value)?"":t.getLocationName(),computedValue:e=>({tag:"reg",obs:this.registration.buildValueText("Confirmatory HIV test location",e.label)}),validation:e=>d.required(e),condition:e=>"Not done"!=e.type_of_confirmatory_hiv_test.value,options:(e,t="")=>this.getFacilities(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}},...g({id:"date_of_confirmatory_hiv_test",helpText:"Confirmatory HIV test",beforeNext:async(e,t)=>{if("Yes"!=t.received_arvs.value){const t=h(this.staging.getDate()).diff(e,"days");if(t>=20)return"Yes, its accurate"===await T("Data inconsistency warning",`Confirmatory Date for newly initiated ART patient is ${t} days ago`,"Are you sure this is accurate?",[{name:"No, Re-enter date",slot:"start",color:"success"},{name:"Yes, its accurate",slot:"end",color:"danger"}])}return!0},condition:e=>e.confirmatory_hiv_test_location.value,required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),estimation:{allowUnknown:!0,estimationFieldType:_.MONTH_ESTIMATE_FIELD},computeValue:(e,t)=>({date:e,tag:"reg",isEstimate:t,obs:this.buildDateObs("Confirmatory HIV test date",e,t)})}),this.getStagingSummaryField("Staging summary")]}}});e("default",b(D,[["render",function(e,t,i,a,s,n){const o=f("his-standard-form");return w(),y(o,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}]]))}}}));
