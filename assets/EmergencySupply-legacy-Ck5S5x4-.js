System.register(["./index-legacy-DA9zHw1d.js","./HisStandardForm-legacy-D6wc8RJ-.js","./useEncounter-legacy-D9FamCx2.js","./commons-legacy-DMGZ1bbq.js","./adherence_service-legacy-oKpi5g1B.js","./isEmpty-legacy-DJGM5tZW.js","./encounter_guidelines-legacy-DTjGeHdm.js","./GuidelineEngine-legacy-KsvQuFdF.js","./htn_service-legacy-Bz7oko23.js"],(function(e,t){"use strict";var a,i,n,r,l,u,d,o,s,c,g,m,p,y,h,_;return{setters:[e=>{a=e.d,i=e.bS,n=e.r,r=e.ad,l=e.bC,u=e.ak,d=e.ck,o=e.ae,s=e.b_,c=e.a,g=e.c,m=e.u},e=>{p=e.H},e=>{y=e.u},e=>{h=e.r},e=>{_=e.A},null,null,null,null],execute:function(){e("default",a({__name:"EmergencySupply",setup(e){const t=new i(-1,25),a=n([]),{patientDashboardUrl:f,goToPatientDashboard:v}=y(((e,i)=>{t.patientID=i,t.providerID=e;const n=new _(t.patientID,t.providerID);a.value=[{id:"date_of_emergency_refill",helpText:"Date of emergency refill",type:r.TT_FULL_DATE,init:async()=>(await n.loadPreviousDrugs(),!0),beforeNext:async e=>{const t=n.getLastDrugs()?.[0]?.order?.start_date;return!t||!l(e.value).isBefore(t)||u(`Date entered is less than last known dispensation of ${d(t)}`)},validation:e=>o.validateSeries([()=>o.required(e),()=>{if(l(e.value).isAfter(t.date))return[`Date entered is after current date of ${d(t.date)}`]}]),computedValue:e=>t.buildValueDate("Prescription refill date",e.value)},{id:"facility",type:r.TT_SELECT,helpText:"Facility where emergency refill was collected",validation:e=>o.required(e),options:(e,t="")=>s(t),computedValue:e=>t.buildValueText("Health facility name",e.label),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"drug",helpText:"Emmergency Supply Drugs",type:r.TT_DRUG_RETROSPECTIVE_INPUT,init:async()=>(await n.loadPreviousDrugs(),!0),options:e=>e.drug.length?e.drug:n.getLastDrugs().map((e=>({label:e.drug.name,value:e.drug.concept_id,other:{givenAmount:"",remainingAmount:"",drug:e}}))),computedValue:(e,t)=>e.map((async e=>{const a=n.calculateAdherence(e.other.drug.quantity,e.other.remainingAmount,(i=e.other.drug,n.calculateExpected(i.quantity,i.equivalent_daily_dose,i.order.start_date,`${r=i.frequency}`.match(/qod/i)?"QOD":`${r}`.match(/weekly/i)?"QW":r)));var i,r;return{...await n.buildValueCoded("Medications dispensed",e.value),child:[await n.buildPillCountObs(e.other.drug.order_id,e.other.remainingAmount),await n.buildAdherenceObs(e.other.drug.order_id,e.other.drug.drug_id,a,t.date_of_emergency_refill.value),await n.buildValueNumber("Amount of drug dispensed",e.other.givenAmount)]}})),validation:e=>{if(e.every((e=>""===e.other.givenAmount||""===e.other.remainingAmount)))return["Please enter drug details for all drugs"]}},{id:"next_appointment",helpText:"Appointment date",type:r.TT_DATE_PICKER,computedValue:e=>t.buildValueDate("Appointment date",e),validation:e=>o.required(e)}]}));async function D(e,a){await t.createEncounter(),await t.saveObservationList(await h(a)),v()}return(e,t)=>(c(),g(p,{fields:a.value,onFinishAction:D,skipSummary:!0,cancelDestinationPath:m(f)},null,8,["fields","cancelDestinationPath"]))}}))}}}));
