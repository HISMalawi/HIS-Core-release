import{_ as u}from"./EncounterMixin.vue_vue_type_script_lang-Btc3zcWc.js";import{d,I as c,F as a,ah as m,ct as p,aW as h,ba as _,V as f,t as D,_ as b,r as n,o as T,c as v,w as y,b as R}from"./index-C6EjxQ0a.js";import{P as F}from"./patient_lab_result_service-Blt8xtAG.js";import"./encounter_guidelines-C0mDoJuD.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-CHL0RBXf.js";const I=d({components:{IonPage:c},mixins:[u],data:()=>({lab:{},orders:[]}),watch:{ready:{async handler(e){e&&(this.lab=new F(this.patientID),this.orders=await this.lab.getTestsWithoutResults(),this.fields=[this.ordersWithoutResultsField(),this.alphaResultField(),this.resultField(),this.resultDateField()])},immediate:!0}},methods:{async onFinish(e,t){this.lab.setTestID(t.result.testID),this.lab.setResultDate(e.result_date.label),await this.lab.createEncounter(),await this.lab.createLabResult([t.result.measures]),this.nextTask()},ordersWithoutResultsField(){let e=[];return{id:"orders",helpText:"Select DBS Order",type:a.TT_SELECT,init:async()=>(e.filter(t=>/dbs/i.test(t.specimen.name)&&t.tests.some(s=>/viral load|HIV DNA polymerase chain reaction/i.test(s.name)&&s.result===null)),!0),isRequired:()=>!0,options:t=>t.orders!=null?t.orders:this.orders.map(s=>{const r=m.find(s.tests,i=>/viral load|HIV DNA polymerase chain reaction/i.test(i.name));return{label:"#".concat(s.accession_number," ").concat(p(s.order_date)),value:r.concept_id,other:{testID:r.id}}})}},resultDateField(){return{id:"result_date",helpText:"Result date",type:a.TT_FULL_DATE,isRequired:()=>!0,condition:e=>e.orders.value,validation:(e,t)=>{const s=h(t.orders.other.order_date).format(_);return new Date(e.label)>new Date(s)?["Result date ".concat(e.label," cannot be greater than order date of ").concat(s)]:null}}},alphaResultField(){return{id:"result",helpText:"Select Test Result",type:a.TT_SELECT,group:"test_indicator",finalComputedValue:(e,t)=>({testID:t.orders.other.testID,measures:{indicator:{concept_id:t.orders.value},value:e.value,value_type:"text"}}),appearInSummary:()=>!1,validation:e=>f.required(e),condition:async()=>this.orders.filter(e=>/dbs/i.test(e.specimen.name)&&e.tests.some(t=>/HIV DNA polymerase chain reaction/i.test(t.name)&&t.result===null)).length>0,options:()=>[{label:"Positive",value:"positive"},{label:"Negative",value:"negative"}]}},resultField(){return{id:"result",helpText:"Test result",type:a.TT_TEXT,isRequired:()=>!0,condition:()=>this.orders.filter(e=>/dbs/i.test(e.specimen.name)&&e.tests.some(t=>/viral load/i.test(t.name)&&t.result===null)).length>0,config:{customKeyboard:[[["1","2","3"],["4","5","6","=","<",">"],["7","8","9","."],["","0",""]],[["Delete"]]]},onValue:e=>/^(=|<|>)([0-9]*)$/m.test("".concat(e.value))?!0:(D("You must enter a modifer and numbers only. i.e =90 / >19 / < 750"),!1),finalComputedValue:(e,t)=>({testID:t.orders.other.testID,measures:{indicator:{concept_id:t.orders.value},value:parseInt("".concat(e.value).substring(1)),value_modifier:"".concat(e.value).charAt(0),value_type:"numeric"}})}}}});function g(e,t,s,r,i,$){const l=n("his-standard-form"),o=n("ion-page");return T(),v(o,null,{default:y(()=>[R(l,{formLabel:"DBS Result",fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}const C=b(I,[["render",g]]);export{C as default};
