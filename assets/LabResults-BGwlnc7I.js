var _=Object.defineProperty;var m=(e,t,i)=>t in e?_(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var l=(e,t,i)=>m(e,typeof t!="symbol"?t+"":t,i);import{_ as b}from"./EncounterMixin.vue_vue_type_script_lang-v2aYCq6R.js";import{bQ as d,bC as c,bJ as S,ao as v,S as y,ab as V,d as f,I as P,ad as r,H as N,ae as a,aV as g,aN as p,aj as E,dI as O,aa as A,af as h,a as L,c as C,w as R,b as H}from"./index-CMZASHAR.js";import"./encounter_guidelines-CJXpBOk4.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-BCjM4-bc.js";class D extends d{constructor(i,s){super(i,32,s);l(this,"hivStatus");l(this,"artStatus");l(this,"arvNumber");l(this,"arvStartDate");l(this,"isSubsequentVisit");l(this,"isPregnancyTestDone");l(this,"lastHivTestInMonths");this.lastHivTestInMonths=-1,this.hivStatus="",this.artStatus="",this.arvNumber="",this.arvStartDate="",this.isPregnancyTestDone=!1,this.isSubsequentVisit=!1}getHivStatus(){return this.hivStatus}getArtStatus(){return this.artStatus}getArvNumber(){return this.arvNumber}getArvStartDate(){return this.arvStartDate}isHivPositive(){return!!this.hivStatus.match(/positive/i)}async isAtRiskOfPreEclampsia(){const i=await d.getFirstValueNumber(this.patientID,"Systolic blood pressure"),s=await d.getFirstValueNumber(this.patientID,"Diastolic blood pressure");return i&&s&&i>=140&&s>=90}async loadTimeSinceLastHivTest(){const i=await d.getFirstObs(this.patientID,"HIV status");if(!i)return;const s=c(i.obs_datetime).format(S);this.lastHivTestInMonths=c(this.date).diff(s,"months")}async loadSubsequentVisit(){const i=await v.getJson("programs/".concat(this.programID,"/patients/").concat(this.patientID,"/subsequent_visit"),{date:this.date});if(i){if(this.hivStatus=i.hiv_status,!this.hivStatus){const s=await this.getFirstValueCoded("HIV status");this.hivStatus="".concat(s).match(/positive/i)?"Positive":""}this.isSubsequentVisit=i.subsequent_visit,this.isPregnancyTestDone=i.pregnancy_test}}printLabResults(){return new y().printLbl("/programs/".concat(this.programID,"/patients/").concat(this.patientID,"/labels/lab_results?date=").concat(this.date))}async loadArtStatus(){const i=await v.getJson("programs/".concat(this.programID,"/patients/").concat(this.patientID,"/art_hiv_status")),s=i.arv_start_date||"";s&&c(this.date).isBefore(s)||i&&(this.hivStatus=i.hiv_status||this.hivStatus,this.artStatus=i.art_status||"",this.arvNumber=i.arv_number||"",this.arvStartDate=i.arv_start_date||"")}}function I(){return V.isProp("recency_essay_activated=Yes")}const x={recencyEssayActivated:I},B=f({components:{IonPage:P},mixins:[b],data:()=>({formFields:[],arvNumber:"",hivStatus:"",artStatus:"",arvStartDate:"",recencyEssayActivated:!1,riskOfPreclampsia:null,service:{},previousHivDate:""}),watch:{ready:{async handler(e){e&&(this.service=new D(this.patientID,this.providerID),await this.service.loadSubsequentVisit(),await this.service.loadArtStatus(),this.recencyEssayActivated=await x.recencyEssayActivated(),this.formFields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){const i=await this.resolveObs(t);await this.service.createEncounter(),await this.service.saveObservationList(i),await this.service.printLabResults(),this.nextTask()},getFields(){return[{id:"art_summary",helpText:"ART Summary",type:r.TT_SUMMARY,condition:()=>this.service.isHivPositive(),options:()=>[{label:"HIV Status",value:'\n                                <b style="color:'.concat(this.service.isHivPositive()?"red":"green",'">\n                                    ').concat(this.service.getHivStatus(),"\n                                </b>\n                            ")},{label:"On Art",value:this.service.getArtStatus()||"N/A"},{label:"Art Start date",value:N.toStandardHisDisplayFormat(this.service.getArvStartDate())||"N/A"},{label:"ARV Number",value:this.service.getArvNumber()||"N/A"}]},{id:"lab_results",helpText:"Lab Results",type:r.TT_MULTIPLE_YES_NO,condition:()=>!this.service.isPregnancyTestDone&&!this.hivStatus,options:e=>{if(e.lab_results)return e.lab_results;const t=[];return this.service.isPrengnacyTestDone||t.push(this.toYesNoOption("Pregnancy test done",{concept:"B-HCG"})),this.service.hivStatus||t.push(this.toYesNoOption("Previous HIV test done",{concept:"Previous HIV test done"})),t},validation:e=>a.required(e),computedValue:e=>e.map(t=>this.service.buildValueCoded(t.other.concept,t.value))},{id:"prev_hiv_test_result",helpText:"Previous HIV test results",type:r.TT_SELECT,validation:e=>a.required(e),condition:e=>this.inArray(e.lab_results,t=>t.label==="Previous HIV test done"&&t.value==="Yes"),options:()=>this.mapStrToOptions(["Negative","Positive","Inconclusive","Unknown"]),computedValue:e=>this.service.buildValueCoded("Previous HIV Test Results",e.value)},...g({id:"prev_hiv_test_date",helpText:"Previous HIV test",required:!0,beforeNext:e=>(this.previousHivDate=e,!0),minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.service.getDate(),estimation:{allowUnknown:!1},condition:e=>{var t;return!!((t=e.prev_hiv_test_result)!=null&&t.value)},computeValue:e=>this.service.buildValueDate("Previous HIV Test Date",e)}),{id:"on_art",helpText:"Patient on ART",type:r.TT_SELECT,validation:e=>a.required(e),computedValue:e=>this.service.buildValueCoded("On Art",e.value),condition:e=>e.prev_hiv_test_result.value==="Positive",options:()=>this.yesNoOptions()},{id:"arv_number",helpText:"ARV Number",type:r.TT_TEXT,validation:e=>a.required(e),computedValue:e=>this.service.buildValueText("Art number",e.value),condition:e=>e.on_art.value==="Yes"},{id:"recency_essay",helpText:"Rapid Recency Essay - Asante Results",type:r.TT_MULTIPLE_YES_NO,condition:e=>e.prev_hiv_test_result.value==="Positive"&&this.recencyEssayActivated,computedValue:e=>e?e.map(t=>this.service.buildValueCoded(t.label,t.value)):null,options:e=>e.recency_essay?e.recency_essay:[this.toYesNoOption("Line 1. Control Line Present"),this.toYesNoOption("Line 2. Positive Verification Line Present"),this.toYesNoOption("Line 3. Long-Term Line Present")]},(()=>{const e=i=>{var s;return!this.service.isHivPositive()&&((s=i.prev_hiv_test_result)==null?void 0:s.value)!="Positive"};let t=!1;return{id:"available_test_results",helpText:"Available Lab Tests",type:r.TT_MULTIPLE_SELECT,init:async()=>(await this.service.loadTimeSinceLastHivTest(),!0),validation:i=>a.required(i),computedValue:i=>p.find(i,{label:"None"})?this.service.buildValueCoded("Lab test done","No"):null,onValueUpdate(i,s){return i.map(n=>(s.value==="None"&&n.value!="None"&&(n.isChecked=!1),s.value!="None"&&s.isChecked&&n.value==="None"&&(n.isChecked=!1),n))},options:async i=>{var u;const s=[];if(e(i)){let o=this.service.lastHivTestInMonths;i.prev_hiv_test_result?(o=c(this.service.date).diff(this.previousHivDate,"months"),t=((u=i.prev_hiv_test_result)==null?void 0:u.value)!="Positive"&&o>=3):t=this.service.lastHivTestInMonths<=-1||this.service.lastHivTestInMonths>=3,s.push({...this.toOption("HIV"),isChecked:t,description:{color:"danger",text:"".concat(o<=-1?"Consider HIV test because status is not known":o>=3?"Consider HIV test (".concat(o," months since last visit)"):"")}})}s.push(this.toOption("HB")),s.push(this.toOption("Syphilis")),s.push(this.toOption("Malaria")),s.push(this.toOption("Hepatitis B")),s.push(this.toOption("Blood Group"));const n={label:"Urine",value:"Urine",isChecked:!1};if(this.riskOfPreclampsia===null&&(this.riskOfPreclampsia=await this.service.isAtRiskOfPreEclampsia(),this.riskOfPreclampsia)){const o=await E("Select urine test to conduct urine protein test",{header:"Client is at risk of pre-eclampsia.",cancelBtnLabel:"Remind later",confirmBtnLabel:"Select Urine Test"});n.isChecked=o}return[...[...s,n],this.toOption("None")]},exitsForm:i=>p.find(i.available_test_results,{label:"None"})}})(),{id:"hepatitis_b",type:r.TT_SELECT,helpText:"Hepatitis B test results",validation:e=>a.required(e),condition:e=>e.available_test_results.map(t=>t.value).includes("Hepatitis B"),computedValue:e=>this.service.buildValueCoded("Hepatitis B Test Result",e.value),options:()=>this.mapStrToOptions(["Negative","Positive"])},{id:"hiv_status",helpText:"HIV Test Result",type:r.TT_SELECT,validation:e=>a.required(e),condition:e=>e.available_test_results.map(t=>t.value).includes("HIV"),computedValue:e=>this.service.buildValueCoded("HIV status",e.value),options:()=>this.mapStrToOptions(["Negative","Positive","Inconclusive","Not done"])},{id:"on_art_1",helpText:"Patient on ART",type:r.TT_SELECT,validation:e=>a.required(e),condition:e=>e.hiv_status.value==="Positive",computedValue:e=>this.service.buildValueCoded("On Art",e.value),options:()=>this.yesNoOptions()},{id:"arv_number_1",helpText:"ARV Number",type:r.TT_TEXT,validation:e=>a.required(e),computedValue:e=>this.service.buildValueText("Art number",e.value),condition:e=>e.on_art_1.value==="Yes"},{id:"recency_essay_1",helpText:"Rapid Recency Essay - Asante Results",type:r.TT_MULTIPLE_YES_NO,condition:e=>e.hiv_status.value==="Positive"&&this.recencyEssayActivated,computedValue:e=>e?e.map(t=>this.service.buildValueCoded(t.label,t.value)):null,options:()=>[this.toYesNoOption("Line 1. Control Line Present"),this.toYesNoOption("Line 2. Positive Verification Line Present"),this.toYesNoOption("Line 3. Long-term Line Present")]},{id:"hb_result",helpText:"HB Test Result (g/dl)",type:r.TT_NUMBER,validation:e=>this.validateSeries([()=>a.required(e),()=>a.isFloatingPointNumber(e),()=>a.rangeOf(e,2,16)]),config:{keypad:[O,[["Delete"]]]},computedValue:e=>this.service.buildValueNumber("HB Test Result",e.value),condition:e=>e.available_test_results.map(t=>t.value).includes("HB")},{id:"syphilis",helpText:"Syphilis Test Result",type:r.TT_SELECT,validation:e=>a.required(e),computedValue:e=>this.service.buildValueCoded("Syphilis Test Result",e.value),condition:e=>e.available_test_results.map(t=>t.value).includes("Syphilis"),options:()=>this.mapStrToOptions(["Negative","Positive"])},{id:"malaria",helpText:"Malaria Test Result",type:r.TT_SELECT,validation:e=>a.required(e),condition:e=>e.available_test_results.map(t=>t.value).includes("Malaria"),computedValue:e=>this.service.buildValueCoded("Malaria Test Result",e.value),options:()=>this.mapStrToOptions(["Negative","Positive"])},{id:"blood_group",helpText:"Blood Group Test Result",type:r.TT_SELECT,validation:e=>a.required(e),condition:e=>e.available_test_results.map(t=>t.value).includes("Blood Group"),computedValue:e=>this.service.buildValueText("Blood group",e.value),options:()=>this.mapStrToOptions(["A+","A-","B+","B-","AB+","AB-","O+","O-"])},{id:"available_urine_tests",helpText:"Available Urine Tests Results",type:r.TT_MULTIPLE_SELECT,validation:e=>a.required(e),condition:e=>e.available_test_results.map(t=>t.value).includes("Urine"),options:()=>this.mapStrToOptions(["Protein","Glucose","WBC","RBC","Nitrate"]),config:{buildOptionsOnce:!0}},{id:"protein",helpText:"Urine Protein Test Result",type:r.TT_SELECT,validation:e=>a.required(e),condition:e=>e.available_urine_tests.map(t=>t.value).includes("Protein"),computedValue:e=>this.service.buildValueText("Urine protein",e.value),options:()=>this.mapStrToOptions(["Negative","(+)","+","++","+++","++++"])},{id:"glucose",helpText:"Glucose Test Result (mg/dl)",type:r.TT_SELECT,validation:e=>a.required(e),condition:e=>e.available_urine_tests.map(t=>t.value).includes("Glucose"),computedValue:e=>this.service.buildValueText("Blood glucose",e.value),options:()=>this.mapStrToOptions(["Normal","+","++","+++"])},{id:"wbc",helpText:"White Blood Cells Test Result (cmm)",type:r.TT_NUMBER,validation:e=>this.validateSeries([()=>a.required(e),()=>a.rangeOf(e,1,1e6)]),computedValue:e=>this.service.buildValueNumber("White blood cells",e.value),condition:e=>e.available_urine_tests.map(t=>t.value).includes("WBC")},{id:"rbc",helpText:"Red Blood Cells Test Result (cmm)",type:r.TT_NUMBER,validation:e=>this.validateSeries([()=>a.required(e),()=>a.rangeOf(e,1,1e6)]),computedValue:e=>this.service.buildValueNumber("Red blood cells",e.value),condition:e=>e.available_urine_tests.map(t=>t.value).includes("RBC")},{id:"nitrate",helpText:"Nitrate Test Result",type:r.TT_SELECT,validation:e=>a.required(e),computedValue:e=>this.service.buildValueCoded("Urine Nitrate Test",e.value),condition:e=>e.available_urine_tests.map(t=>t.value).includes("Nitrate"),options:()=>this.mapStrToOptions(["Negative","Trace","Positive"])}]}}});function q(e,t,i,s,n,T){const u=h("his-standard-form"),o=h("ion-page");return L(),C(o,null,{default:R(()=>[H(u,{fields:e.formFields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}const Y=A(B,[["render",q]]);export{Y as default};
