System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./HisStandardForm-legacy-a-GAw9o3.js","./index-legacy-Dab_9-0G.js","./TouchScreenForm-legacy-BrA5VXvB.js","./ToolbarMediumCard-legacy-tyMOM4tZ.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-kf7cSfpw.js"],(function(e,t){"use strict";var i,a,s,o,r,n,d,l,c,u,h,m,p,v,y,g,f,w;return{setters:[e=>{i=e.F},e=>{a=e.H},e=>{s=e.d,o=e.Y,r=e.W,n=e.R,d=e.bd,l=e.ab,c=e.t,u=e.q,h=e.H,m=e.V,p=e.aR,v=e.T,y=e._,g=e.r,f=e.o,w=e.c},null,null,null,null],execute:function(){const t=s({components:{HisStandardForm:a},data:()=>({formKey:0,fields:[],activity:"",presets:{},programs:{},userData:{},fieldComponent:"",isSessionPasswordChange:!1,activeField:"",form:{}}),watch:{$route:{async handler(e){if(!e)return;const{query:t}=e;["edit","add"].includes(t.activity)?this.activity=t.activity:this.activity="add",t.update_password&&(this.userData=this.toUserData(await o.getCurrentUser()),this.isSessionPasswordChange=!0,this.activeField="new_password",this.fieldComponent=this.activeField),this.programs=this.removeObjectsByApplicationNames(o.getAvailableApps(),["CRVS"]),this.fields=this.getFields()},immediate:!0,deep:!0}},methods:{async onFinish(e,t){try{switch(this.activity){case"add":await this.create(t),this.activity="edit";break;case"edit":if(await this.update(t),this.isSessionPasswordChange){const e=new r;e.sessionDate=await o.getApiDate(),await e.resetUserPasswordChangeCheck(),this.$router.push("/")}}n.invalidate("PROVIDERS"),this.activeField="user_info",this.$nextTick((()=>this.fieldComponent=this.activeField)),this.formKey+=1}catch(i){i instanceof d&&!l.isEmpty(i.errors)?c(i.errors):u(`${i}`)}},removeObjectsByApplicationNames:(e,t)=>e.filter((e=>!t.includes(e.applicationName))),async create(e){const{user:t}=await o.createUser(e);if(t)return this.userData=this.toUserData(t);throw"Unable to create new user, Possibly the user already exists or incorrect info was entered"},async update(e){const t=await o.updateUser(this.userData.id,e);if(t)return this.userData=this.toUserData(t);throw"Unable to update user, possibly server error or incorrect information entered"},getProgramName(e){const t=l.find(this.programs,{programID:e});return t?t.applicationName:""},mapToOption:e=>e.map((e=>({label:e,value:e}))),async getRoles(){return(await o.getAllRoles()).filter((e=>{try{return!this.userData.role.split(",").includes(e.role)}catch(t){return!0}})).map((e=>({label:e.role,value:e.role,other:e})))},toUserData(e){const t=e.person.names[0];return{id:e.user_id,given_name:t.given_name,family_name:t.family_name,username:e.username,role:e.roles.map((e=>e.role)),created:h.toStandardHisDisplayFormat(e.date_created),status:e.deactivated_on?"Inactive":"Active",programs:e.programs.map((e=>e.program_id))}},editConditionCheck(e=[]){return"edit"!==this.activity||e.includes(this.activeField)},toLcase:e=>e.value.toString().toLowerCase(),getFields:function(){return[{id:"select_user",helpText:"Select Username",type:i.TT_SELECT,condition:()=>"edit"===this.activity&&o.isAdmin(),validation:e=>m.required(e),unload:({other:e})=>this.userData=this.toUserData(e),options:async()=>(await o.getAllUsers()).map((e=>({label:e.username,value:e.user_id,other:e}))),config:{showKeyboard:!0}},{id:"user_info",helpText:"User information",type:i.TT_TABLE_VIEWER,dynamicHelpText:()=>`User: ${this.userData.username} | Added On: ${this.userData.created}`,condition:()=>"edit"===this.activity&&o.isAdmin(),options:async(e,t,i)=>{const a=e=>({name:"Active"===e?"Deactivate":"Activate",type:"button",style:{width:"65%",fontWeight:"bold"},color:"Active"===e?"danger":"success",action:async()=>{try{"Active"===e&&(await o.deactivateUser(this.userData.id),this.userData.status="Inactive",i.rows[3]=["Status","Inactive",a("Inactive")],v("User has been deactivated",400)),"Inactive"===e&&(await o.activateUser(this.userData.id),this.userData.status="Active",i.rows[3]=["Status","Active",a("Active")],v("User has been activated",400))}catch(t){c(`${t}`)}}}),s=(e,t)=>({name:e,type:"button",color:"light",style:{fontWeight:"bold",width:"65%"},action:()=>{this.activeField=t,this.fieldComponent=this.activeField}}),r=[s("Add/Append Role","roles")];return this.userData.role.length>1&&r.push(s("Remove Role","remove_roles")),[{label:"",value:"",other:{columns:["Attributes","Values","Actions"],rows:[["<b>Name</b>",`${this.userData.given_name} ${this.userData.family_name}`,s("Edit Name","given_name"),""],["<b>Password</b>","*******",s("Change password","new_password"),""],["<b>Role</b>",this.userData.role.join("<br/>"),...r],["<b>Status</b>",this.userData.status,a(this.userData.status),""],["<b>Programs</b>",this.userData.programs.map((e=>this.getProgramName(e))).join("<br/>"),s("Edit Program","programs"),""]]}}]},config:{hiddenFooterBtns:["Clear"],overrideDefaultFooterBtns:{nextBtn:{name:"Finish",onClick:()=>this.$router.back()}}}},{id:"given_name",helpText:"First name",type:i.TT_TEXT,computedValue:e=>e.value,defaultValue:()=>this.userData.given_name,condition:()=>this.editConditionCheck(["given_name"])&&o.isAdmin(),validation:e=>m.isName(e),options:async e=>{if(!e.given_name||null===e.given_name.value)return[];const t=await p.searchGivenName(e.given_name.value);return this.mapToOption(t)}},{id:"family_name",helpText:"Last name",type:i.TT_TEXT,computedValue:e=>e.value,defaultValue:()=>this.userData.family_name,validation:e=>m.isName(e),condition:()=>this.editConditionCheck(["given_name"])&&o.isAdmin(),options:async e=>{if(!e.family_name||null===e.family_name.value)return[];const t=await p.searchFamilyName(e.family_name.value);return this.mapToOption(t)}},{id:"roles",helpText:"Role",type:i.TT_SELECT,computedValue:e=>[e.value],condition:()=>this.editConditionCheck(["roles"])&&o.isAdmin(),validation:e=>m.required(e),options:()=>this.getRoles(),config:{showKeyboard:!0}},{id:"remove_roles",helpText:"Remove Roles",proxyID:"roles",type:i.TT_SELECT,validation:e=>m.required(e),condition:()=>this.editConditionCheck(["remove_roles"])&&o.isAdmin()&&"edit"===this.activity,computedValue:e=>this.userData.role.filter((t=>t!=e.label)),options:()=>this.mapToOption(this.userData.role),config:{showKeyboard:!0}},{id:"must_append_roles",helpText:"Would you like to append role?",type:i.TT_SELECT,computedValue:e=>"Yes"===e.label,condition:()=>"edit"===this.activity&&this.editConditionCheck(["roles"])&&o.isAdmin(),defaultComputedOutput:()=>!1,validation:e=>m.required(e),options:()=>[{label:"Yes",value:"true"},{label:"No",value:"false"}]},{id:"programs",helpText:"Select Apps",type:i.TT_MULTIPLE_SELECT,condition:()=>o.isAdmin()&&this.editConditionCheck(["programs"]),validation:e=>m.required(e),computedValue:e=>e.map((e=>e.value)),options:()=>this.programs.map((e=>{let t=!1;return"edit"===this.activity&&(t=this.userData.programs.includes(e.programID)),{label:e.applicationName,value:e.programID,isChecked:t}}))},{id:"username",helpText:"Username",type:i.TT_TEXT,condition:()=>this.editConditionCheck(["nothing to see here"])&&o.isAdmin(),computedValue:e=>this.toLcase(e),validation:e=>m.validateSeries([()=>m.required(e),()=>m.hasLengthRangeOf(e,4,15)]),config:{casing:"lowercase"}},{id:"new_password",proxyID:"password",helpText:"New Password",type:i.TT_TEXT,computedValue:e=>this.toLcase(e),condition:()=>this.editConditionCheck(["new_password"]),validation:e=>m.validateSeries([()=>m.required(e),()=>m.hasLengthRangeOf(e,4,15)]),config:{inputType:"password"}},{id:"verify_password",proxyID:"password",helpText:"Confirm Password",type:i.TT_TEXT,computedValue:e=>this.toLcase(e),condition:()=>this.editConditionCheck(["new_password"]),validation:(e,t)=>m.validateSeries([()=>m.required(e),()=>{if(this.toLcase(t.verify_password)!=this.toLcase(t.new_password))return["New password does not match current password"]}]),config:{inputType:"password"}}]}}});e("default",y(t,[["render",function(e,t,i,a,s,o){const r=g("his-standard-form");return f(),w(r,{key:e.formKey,fields:e.fields,skipSummary:!0,activeField:e.fieldComponent,onOnIndex:t[0]||(t[0]=t=>e.fieldComponent=""),onFinishAction:e.onFinish},null,8,["fields","activeField","onFinishAction"])}]]))}}}));
