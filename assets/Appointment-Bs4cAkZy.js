import{d as w,br as h,Y as A,an as b,as as p,di as m,H as l,B as f,ao as v,ak as _,b as T,ap as g,a as $}from"./index-CJleCCtM.js";import{H as x}from"./HisStandardForm-BPNPJCrM.js";import{_ as F}from"./EncounterMixin.vue_vue_type_script_lang-Cy2p88dG.js";import{A as y}from"./appointment_service-Br5aqit0.js";import"./encounter_guidelines-CfQXyRxl.js";import"./GuidelineEngine-D6V1_Znr.js";const C=w({mixins:[F],components:{HisStandardForm:x},data:()=>({appointment:{}}),watch:{ready:{handler(n){n&&(this.appointment=new y(this.patientID,this.providerID),this.fields=[this.getAppointmentField()])},immediate:!0}},methods:{async onFinish(n,s){var a;await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(s)),["CxCa","ANC"].includes("".concat((a=h.getActiveApp())==null?void 0:a.applicationName))||await A(this.patientID),this.nextTask()},getAppointmentField(){const n=(t,e)=>new RegExp(t,"i").test("".concat(e));let s="",d="",a=-1,r=this.appointment.date,o=null;const i={},D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{id:"set_appointment",helpText:"Appointments booking",type:b.TT_DATE_PICKER,init:async()=>{try{const e=await this.appointment.getNextAppointment();r=e.appointment_date,o=e.drugs_run_out_date}catch(e){if(console.error(e),!await p("Next appointment/drug-runout date is not available, do you want to proceed anyway?"))return this.gotoPatientDashboard(),!0}const t=await m.appointmentLimit();return d=await m.clinicHolidays(),s=this.patient.getAge()>=18?await m.adultClinicDays():await m.peadsClinicDays(),a=t?parseInt(t):0,!0},onValue:async t=>{var c;const e=l.toStandardHisDisplayFormat(t),u=f(o).diff(t,"days");return!(o&&u>7&&!await p("\n              The selected appointment date ".concat(e," is ").concat(u," days earlier than the drug run-out date \n              ").concat(l.toStandardHisDisplayFormat(o),". \n              The client will have excess medication. \n              Do you want to proceed?\n            "))||((c=i[t])!=null||(i[t]=(await y.getDailiyAppointments(t)).length),r!==t&&(a>=1&&i[t]>=a&&await p("".concat(i[t]," clients were booked on ").concat(e),{header:"APPOINTMENT LIMIT (".concat(a,") REACHED"),cancelBtnLabel:"Proceed",confirmBtnLabel:"New date"})||n(t,d)&&!await p("".concat(e," is a clinic holiday, do you want to set an appointment?"))||!n(D[f(t).day()],s)&&!await p("".concat(e," is not a clinic day. Do you want to proceed with this date?")))))},validation:t=>v.required(t),defaultValue:()=>r,computedValue:t=>[this.appointment.buildValueDate("Appointment date",t),this.appointment.buildValueDate("Estimated date",r)],config:{hiddenFooterBtns:["Clear"],helpText:"The appointment date is the date the patient is scheduled to return for their next visit.<br><br>           The estimated date is the date the patient is scheduled to return based on their current visit interval.<br>           Ensure that the next appointment date at least 2 days before ARVs are finished to allow for the safety buffer.<br>           If the appointment date is not set, the estimated date will be used.",helpTitle:"Appointment Date",minDate:()=>this.appointment.date,maxDate:()=>o,supValue:t=>"".concat(i[t]),infoItems:t=>{var e;return((e=h.getActiveApp())==null?void 0:e.applicationName)==="CxCa"?[{label:"User set appointment date",value:l.toStandardHisDisplayFormat(t)},{label:"Appointments",value:i[t]},{label:"Appointment limit (per/day)",value:a}]:[{label:"Medication Run out Date",value:o?l.toStandardHisDisplayFormat(o):"Not available"},{label:"User set appointment date",value:l.toStandardHisDisplayFormat(t)},{label:"Appointments",value:i[t]},{label:"Appointment limit (per/day)",value:a}]}}}}}});function H(n,s,d,a,r,o){const i=g("his-standard-form");return $(),T(i,{fields:n.fields,onFinishAction:n.onFinish,skipSummary:!0,cancelDestinationPath:n.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const R=_(C,[["render",H]]);export{R as default};
