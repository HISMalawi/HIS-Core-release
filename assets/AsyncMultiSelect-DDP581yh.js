import{d as k,bO as b,a0 as C,W as y,a1 as x,aO as v,ac as O,cW as w,cZ as $,aR as V,a6 as E,ab as i,u as o,v as r,w as l,x as a,B as F,E as I,C as B,G as g,Z as L}from"./index-V3uTS3yc.js";import{_ as S}from"./FieldMixin.vue_vue_type_script_lang-DyZkDiJI.js";import D from"./BaseTextInput-RKIQcrzy.js";const H=k({components:{ViewPort:b,IonList:C,IonItem:y,IonLabel:x,HisKeyboard:v,HisTextInput:D,IonCheckbox:O},mixins:[S],data:()=>({filter:"",keyboard:w,listOptions:[]}),mounted(){this.init()},activated(){this.init()},watch:{clear(){this.filter="",this.listOptions.forEach(e=>e.isChecked=!1),this.updateValue()}},computed:{displayList(){return this.filter?new $(this.listOptions,{threshold:.4,keys:["label"],useExtendedSearch:!0}).search(this.filter).map(t=>t.item):this.listOptions}},methods:{init(){this.$emit("onFieldActivated",this),this.options(this.fdata).then(e=>this.indexData(e))},updateValue(){this.$nextTick(()=>{this.$emit("onValue",this.listOptions.filter(e=>e.isChecked))})},indexData(e){const t=this.listOptions.map(n=>n.label);e.forEach(n=>{t.includes(n.label)||this.listOptions.push(n)})},onFilter(e){this.filter=e,this.options(this.fdata,this.filter).then(this.indexData)},onSelect(e){this.listOptions.forEach(t=>{t.label===e.label&&(t.isChecked=!t.isChecked)}),this.updateValue()},keypress(e){this.onFilter(V(e,this.filter))}}}),K={class:"his-md-text"};function P(e,t,n,T,W,A){const c=i("his-text-input"),h=i("ion-checkbox"),d=i("ion-label"),u=i("ion-item"),f=i("ion-list"),p=i("his-keyboard"),m=i("view-port");return o(),r(m,{showFull:!1},{default:l(()=>[a(c,{value:e.filter,onOnValue:t[0]||(t[0]=s=>e.onFilter(s))},null,8,["value"]),a(f,{class:"view-port-content"},{default:l(()=>[(o(!0),F(I,null,B(e.displayList,(s,_)=>(o(),r(u,{key:_,onClick:N=>e.onSelect(s),color:s.isChecked?"lightblue":"",lines:s.isChecked?"none":void 0},{default:l(()=>[a(h,{slot:"start",checked:s.isChecked,disabled:s==null?void 0:s.disabled},null,8,["checked","disabled"]),a(d,null,{default:l(()=>[g("span",K,L(s.label),1)]),_:2},1024)]),_:2},1032,["onClick","color","lines"]))),128))]),_:1}),a(p,{kbConfig:e.keyboard,onKeyPress:e.keypress},null,8,["kbConfig","onKeyPress"])]),_:1})}const M=E(H,[["render",P]]);export{M as default};
