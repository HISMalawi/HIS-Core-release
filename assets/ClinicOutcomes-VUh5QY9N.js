import{d as m,r as n,dM as g,ar as v,t as b,u as D,v as _,w as h,x as u,y as c,cZ as w,a5 as C,M as R,aj as x,cM as P,cc as M,cY as d}from"./index-C_BWP2R5.js";import{v as O}from"./TableView-CkuhPmda.js";import"./Export-DaVb9-2I.js";const A=m({__name:"ClinicOutcomes",setup(S){const t=n([]),o=n(""),r=n(!1),a=new g,f=v(()=>[[{label:"Age Group",ref:"age_group"},{label:"Gender",ref:"gender"},{label:"Alive",ref:"alive"},{label:"Died",ref:"gender",value:e=>M(e.gender)},{label:"Referred Within",ref:"birthdate",value:e=>d(e.birthdate)},{label:"Transferred Out",ref:"order_date",value:e=>d(e.order_date)}]]),s=async()=>{if(!(a.startDate&&a.endDate))return R("Start date and end date required!");r.value=!0,t.value=[];try{t.value=await a.getOutcomesReport()}catch(e){x("Unable to generate report!")}r.value=!1},l=()=>P({onFinish:(e,i,p)=>{o.value="Period (".concat(p,")"),a.startDate=e,a.endDate=i,s()}});return b(()=>l()),(e,i)=>(D(),_(c(C),null,{default:h(()=>[u(c(w),{"is-open":r.value,message:"Please wait..."},null,8,["is-open"]),u(O,{title:"Clinic Outcomes Report",subtitle:o.value,columns:f.value,columnData:t.value,rowsPerPage:15,onConfigure:l,onRefresh:()=>s(),"report-prefix":"Clinic"},null,8,["subtitle","columns","columnData","onRefresh"])]),_:1}))}});export{A as default};
