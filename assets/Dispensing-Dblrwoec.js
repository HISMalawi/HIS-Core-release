import{d as g,H as u,ao as D,q as _,aD as y,y as b,aw as o,a_ as p,bi as v,cw as l,am as w,a as P,ar as S,b as k}from"./index-qFt4YszW.js";import{D as c}from"./dispensation_service-CBBCuYVl.js";import{_ as A}from"./EncounterMixin.vue_vue_type_script_lang-Ba1E7e4E.js";import{j as I}from"./Arrays-CufAqHE9.js";import"./drug_order_service-CyUQy2Ei.js";import"./encounter_guidelines-CLmFwnI6.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-B3LOSMqB.js";const C=g({mixins:[A],data:()=>({dispensation:{},hasTodayAppointment:!1}),watch:{ready:{async handler(e){if(e){this.dispensation=new c(this.patientID,this.providerID);try{await new v(this.patientID).enrollProgram()}catch(a){console.log("Probably already enrolled!")}const t=await c.getFirstObs(this.patientID,"Appointment date");this.hasTodayAppointment=t?l(t.obs_datetime)===l(this.dispensation.date):!1,this.fields=this.getFields()}},immediate:!0}},methods:{saveDispensations(e){return this.dispensation.saveDispensations(this.buildDispensations(e))},buildDispensations(e){var t;if(!p.isEmpty((t=e.other)==null?void 0:t.dispenses)){let a=[];return e.other.dispenses.forEach(([s,i])=>{a=[...a,...this.dispensation.buildDispensations(e.other.order_id,s,i)]}),a}return this.dispensation.buildDispensations(e.other.order_id,parseInt(e.value.toString()),1)},async buildMedicationHistory(){return await this.dispensation.loadDrugHistory(),this.dispensation.getDrugHistory().sort((e,t)=>{const a=new Date(e.order.start_date);return new Date(t.order.start_date)-a}).map(e=>({medication:e.drug.name,date:u.toStandardHisDisplayFormat(e.order.start_date),amount:e.quantity}))},buildOrderOptions(){return this.dispensation.getCurrentOrder().map(e=>({label:e.drug.name,value:e.quantity||0,other:{order:e,drug_id:e.drug.drug_id,order_id:e.order.order_id,available_stock:this.getCumulativeStocks(e.stocks),amount_needed:this.calculateCompletePack(e),pack_sizes:this.getPackSizesRows(e.drug.drug_id,e.stocks)}}))},getCumulativeStocks(e){return e?e.reduce((t,a)=>t+a.quantity,0):"-"},getPackSizesRows(e,t){const a=(t==null?void 0:t.map(s=>[s.packSize,Math.floor(s.quantity/s.packSize)||"-",0,0]))||[];return this.dispensation.getDrugPackSizes(e).forEach(s=>{a.findIndex(([n])=>n===s)===-1&&a.push([s,"-",0,0])}),a.sort((s,i)=>s[0]-i[0])},calculateCompletePack(e){const t=parseFloat(e.amount_needed)-(e.quantity||0);return t<=0?0:this.dispensation.calcCompletePack(e,t)},isDoneDispensing(e){return e.map(t=>t.value!=0).every(Boolean)},async isValidDispensation(e){var i;const t=parseInt(e.value.toString()),a=e.other.amount_needed,s=t/a*100;if(s>110&&!await o("Are you sure you want to dispense over 110% of the prescribed pill count?")||s<100&&!await o("Are you sure you want to dispense less than 100% of the prescribe amount?"))return!1;if(this.dispensation.useDrugManagement){const n=(i=e.other)==null?void 0:i.dispenses.filter(([r])=>{var d;return(d=e.other)==null?void 0:d.pack_sizes.some(([h,m,f])=>h===r&&m==="-"&&f>0)}).map(([r])=>r);if(!p.isEmpty(n))return o("Are you sure you want to dispense drugs of ".concat(I(n)," pack size(s) that have no associated stocks available?"))}return!0},getFields(){return[{id:"dispenses",helpText:"Dispensation",type:D.TT_DISPENSATION_INPUT,init:async()=>{try{return this.dispensation.setIsDrugManagementEnabled(await y.get("IS_ART_DRUG_MANAGEMENT_ENABLED")),await this.dispensation.loadCurrentDrugOrder(),!0}catch(e){return b("Unable to load current order: ".concat(e)),!1}},onValueUpdate:async(e,t)=>e.value!=-1&&this.isDoneDispensing(t)?this.hasTodayAppointment?this.gotoPatientDashboard():this.$router.push({name:"appointment"}):(e.other.amount_needed=e.other.amount_needed-(parseInt(e.value.toString())||0),e.other.amount_needed<0&&(e.other.amount_needed=0),await this.dispensation.loadCurrentDrugOrder(),this.buildOrderOptions()),onValue:async(e,t)=>e.value===-1?!await this.dispensation.voidOrder(e.other.order_id):!t&&!await this.isValidDispensation(e)?!1:await this.saveDispensations(e)?!0:(_("Unable to save dispensation"),!1),config:{isDrugManagementEnabled:()=>this.dispensation.useDrugManagement,medicationHistory:()=>this.buildMedicationHistory(),toolbarInfo:[{label:"Name",value:this.patient.getFullName()},{label:"Gender",value:this.patient.getGender()},{label:"Date Of Birth",value:u.toStandardHisDisplayFormat(this.patient.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>this.buildOrderOptions()}]}}});function O(e,t,a,s,i,n){const r=S("his-standard-form");return k(),P(r,{fields:e.fields,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","cancelDestinationPath"])}const x=w(C,[["render",O]]);export{x as default};
