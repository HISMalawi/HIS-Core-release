import{d as D,r as s,o as v,a as b,b as h,w,e as m,i as l,z as i,B as C,l as P,v as x,D as _,x as y,y as V,q as k}from"./index-CJleCCtM.js";import{v as f}from"./TableView-CMbHc5dx.js";import{D as M}from"./data_verification_service-m3u_oa_8.js";import"./Export-CXTwynHo.js";import"./index-DC9jnrfb.js";const H=D({__name:"PasswordChanges",setup(Y){const c=s([]),d=s(""),n=s(!1),r=new M,g=[[{label:"#",ref:"index"},{label:"User",ref:"provider"},{label:"Count",ref:"count"},{label:"View",ref:"drilldown",toValue:()=>"View",tdClick:async e=>{e.refData.length&&(await i.create({component:f,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:e.data.provider,columns:[[{label:"#",ref:"index"},{label:"Date changed",ref:"date",toValue:a=>C(a).format("DD/MMM/YYYY HH:mm:ss")}]],rowsPerPage:100,columnData:e.refData.reduce((a,t,o)=>[...a,{...t,index:o+1}],[]),onFinish:()=>i.getTop().then(a=>a&&i.dismiss())}})).present()}}]],u=async()=>{if(!(r.startDate&&r.endDate))return P("Start date and end date required!");n.value=!0;try{const e=await r.getPasswordChanges();c.value=Object.keys(e).reduce((a,t,o)=>[...a,{index:o+1,provider:t,count:e[t].length,drilldown:e[t]}],[])}catch(e){console.error(e),x("Unable to generate report!")}n.value=!1},p=()=>_({onFinish:(e,a,t)=>{d.value=t,r.startDate=e,r.endDate=a,u()}});return v(()=>p()),(e,a)=>(b(),h(l(k),null,{default:w(()=>[m(l(y),{"is-open":n.value,message:"Please wait.."},null,8,["is-open"]),m(f,{"icon-url":l(V)("reports.png"),title:"Password changes","report-prefix":"Clinic",subtitle:d.value,columns:g,columnData:c.value,rowsPerPage:100,onConfigure:p,onRefresh:u},null,8,["icon-url","subtitle","columnData"])]),_:1}))}});export{H as default};
