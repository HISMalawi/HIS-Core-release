System.register(["./index-legacy-DfH-8HCh.js","./HisStandardForm-legacy-Y3Pj6QSa.js","./EncounterMixin.vue_vue_type_script_lang-legacy-B7CplVpK.js","./encounter_guidelines-legacy-BvqdoWM4.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,n,o,i,s,l,r,c,u,d,m,h,g;return{setters:[e=>{a=e.bJ,n=e.d,o=e.M,i=e.bh,s=e.J,l=e.ab,r=e.ac,c=e.a8,u=e.ad,d=e.u,m=e.v},e=>{h=e.H},e=>{g=e._},null,null],execute:function(){class t extends a{constructor(e,t){super(e,184,t)}}const f=n({mixins:[g],components:{HisStandardForm:h},data:()=>({outcome:{}}),watch:{patient:{async handler(){this.outcome=new t(this.patientID,this.providerID),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(e){if(!(await this.outcome.createEncounter()))return o("Unable to create encounter");const t=i.getProgramID(),a=await i.getProgramWorkflows(i.getProgramID()),n=e.select_referral_outcome.value,l={};a.forEach((e=>{e.states.forEach((e=>{const t=e.program_workflow_state_id,a=e.concept.concept_names[0].name;l[a]=t}))})),console.log(n),console.log(l);const r={location_id:i.getLocationName(),state:l[n],date:i.getSessionDate()};if(!(await i.createState(this.patientID,t,r)))return o("Unable to update state");const c=e.select_referral_outcome.value,u=[await this.outcome.buildValueCoded("Outcome",c)];await this.outcome.saveObservationList(u),s("Observations and encounter created!"),this.nextTask()},getFields:()=>[{id:"select_referral_outcome",helpText:"Referral outcome",type:l.TT_SELECT,validation:e=>r.required(e),options:()=>[{label:"Continue follow-up",value:"Continue follow-up"},{label:"No Dysplasia/Cancer",value:"No Dysplasia/Cancer"},{label:"Palliative Care",value:"Palliative Care"},{label:"Patient died",value:"Patient died"}]}]}});e("default",c(f,[["render",function(e,t,a,n,o,i){const s=u("his-standard-form");return d(),m(s,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
