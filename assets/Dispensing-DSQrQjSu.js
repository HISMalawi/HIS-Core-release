var H=Object.defineProperty;var C=(u,r,t)=>r in u?H(u,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[r]=t;var f=(u,r,t)=>C(u,typeof r!="symbol"?r+"":r,t);import{H as P}from"./HisStandardForm-BCjM4-bc.js";import{bQ as l,d as I,r as S,ad as k,H as D,a as B,c as F,w as T,b as x,u as h,I as A,W as N,aj as y}from"./index-CMZASHAR.js";import{D as _}from"./drug_order_service-DwQHOfYk.js";import{u as E}from"./useEncounter-CsCeua2V.js";import"./isEmpty-DjKeGqZh.js";import"./encounter_guidelines-CJXpBOk4.js";import"./GuidelineEngine-D6V1_Znr.js";class G extends l{constructor(t,n){super(t,54,n);f(this,"drugHistory");f(this,"currentDrugOrder");this.drugHistory=[],this.currentDrugOrder=[]}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(t,n){return[{drug_order_id:t,date:this.date,quantity:n}]}saveDispensations(t){return l.postJson("/dispensations",{dispensations:t,program_id:l.getProgramID()})}async voidOrder(t){return l.void("/dispensations/".concat(t),{})}async loadDrugHistory(){const t=await _.getDrugOrderHistory(this.patientID);t&&(this.drugHistory=t)}async loadCurrentDrugOrder(){const t=await _.getDrugOrders(this.patientID);t&&(this.currentDrugOrder=await Promise.all(t))}calcCompletePack(t,n){const o=t.barcodes.sort(function(i,p){return i.tabs-p.tabs});if(o.length==0||n==0)return n;for(let i=0;i<=o.length-1;i++)if(parseInt(o[i].tabs)>=n)return o[i].tabs;const c=parseInt(o[0].tabs);let d=parseInt(o[o.length-1].tabs);for(;d<n;)d+=c;return d}}const Q=I({__name:"Dispensing",setup(u){let r;const t=S([]),{goToPatientDashboard:n,patientDashboardUrl:o}=E(async(e,a,s)=>{r=new G(a,e),await r.loadCurrentDrugOrder(),await r.loadDrugHistory(),t.value.push(O(s))});function c(e){return e.map(a=>a.value!=0).every(Boolean)}function d(e){const a=parseFloat(e.amount_needed)-(e.quantity||0),s=r.calcCompletePack(e,a);return s<0?0:s}function i(){return r.getCurrentOrder().map(e=>({label:e.drug.name,value:e.quantity||0,other:{drug_id:e.drug.drug_id,order_id:e.order.order_id,amount_needed:d(e)}}))}function p(){return r.getDrugHistory().sort((e,a)=>{const s=new Date(e.order.start_date);return new Date(a.order.start_date)-s}).map(e=>({medication:e.drug.name,date:D.toStandardHisDisplayFormat(e.order.start_date),amount:e.quantity}))}async function b(e){let a=!0;const s=parseInt(e.value.toString()),g=e.other.amount_needed,m=s/g*100;return m>110&&(a=await y("Are you sure you want to dispense over 110% of the prescribed pill count?")),m<100&&(a=await y("Are you sure you want to dispense less than 100% of the prescribe amount?")),a}async function v(e,a){return e.value!=-1&&c(a)?n():(e.other.amount_needed=0,await r.loadCurrentDrugOrder(),i())}async function w(e,a){if(e.value===-1)return!await r.voidOrder(e.other.order_id);if(!a&&!await b(e))return!1;const s=r.buildDispensations(e.other.order_id,e.value);return await r.saveDispensations(s)?!0:(N("Unable to save dispensation"),!1)}function O(e){return{id:"dispenses",helpText:"Dispensation",type:k.TT_DRUG_DISPENSER,onValueUpdate:v,onValue:w,config:{medicationHistory:p(),toolbarInfo:[{label:"Name",value:e==null?void 0:e.getFullName()},{label:"Gender",value:e==null?void 0:e.getGender()},{label:"Date Of Birth",value:D.toStandardHisDisplayFormat(e==null?void 0:e.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>i()}}return(e,a)=>(B(),F(h(A),null,{default:T(()=>[x(P,{skipSummary:!0,cancelDestinationPath:h(o),fields:t.value},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{Q as default};
