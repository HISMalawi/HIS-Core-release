System.register(["./index-legacy-pSEoxn3J.js","./HisStandardForm-legacy-CGi-zolz.js","./EncounterMixin.vue_vue_type_script_lang-legacy-B-rKFJn9.js","./encounter_guidelines-legacy-mYSO8ZN5.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var i,n,s,a,c,o,r,l,d,u;return{setters:[e=>{i=e.bW,n=e.d,s=e.an,a=e.ao,c=e.am,o=e.a,r=e.ar,l=e.b},e=>{d=e.H},e=>{u=e._},null,null],execute:function(){class t extends i{constructor(e,t){super(e,105,t)}}const h=n({mixins:[u],components:{HisStandardForm:d},data:()=>({service:{}}),watch:{ready:{async handler(e){e&&(this.service=new t(this.patientID,this.providerID),this.fields=[this.notesField()])},immediate:!0}},methods:{async onFinish(e,t){await this.service.createEncounter(),await this.service.saveObservationList(await this.resolveObs(t)),this.nextTask()},notesField(){return{id:"noted",helpText:"Clinical Notes",type:a.TT_NOTE,validation:e=>s.required(e),computedValue:e=>({obs:this.service.buildValueText("Notes",e.value)}),config:{helpText:"Enter any clinical notes you want to add to the patient's record",helpTitle:"Clinical Notes"}}}}});e("default",c(h,[["render",function(e,t,i,n,s,a){const c=r("his-standard-form");return l(),o(c,{fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
