import{d as m,K as A,b5 as V,cV as N,V as i,o as f,c as b,w as I,b as R,cl as u,I as h}from"./index-BCTN_bnC.js";import{F as o}from"./dynamic-import-helper-BkBZiFw5.js";import{H as O}from"./HisStandardForm-CaDwl-hA.js";import{u as D}from"./useEncounter-CDUT-p5Y.js";import{g as t}from"./util-CyjuS_4X.js";import{r as F}from"./commons-BDvZ1JFN.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";import"./isEmpty-OXtHK5dz.js";import"./_Set-VKtKUQAI.js";import"./_setToArray-BLmuRUHx.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";const K=m({__name:"Hiv",setup(x){const n=A([]),a=new V(-1,N.UPDATE_HIV_STATUS),{goToNextTask:s,patientDashboardUrl:d}=D((l,r)=>{a.patientID=r,a.providerID=l;const T=()=>({id:"hivStatus",helpText:"HIV Status",type:o.TT_SELECT,requireNext:!1,validation:e=>i.required(e),computedValue:e=>e.value==="NOT_DONE"?{concept_id:t("HIV_TEST_DONE_TODAY"),value_coded:t("NO_ANSWER"),obs_datetime:a.date}:{concept_id:t("HIV_STATUS"),value_coded:t("".concat(e.value)),obs_datetime:a.date},options:()=>[{value:"POSITIVE",label:"Positive"},{value:"NEGATIVE",label:"Negative"},{value:"NOT_DONE",label:"Not Tested"}]}),_=()=>({id:"timeOfHIVTest",helpText:"Time of HIV test",type:o.TT_SELECT,requireNext:!1,validation:e=>i.required(e),computedValue:e=>({concept_id:t("TIME_OF_HIV_TEST"),value_coded:t("".concat(e.value)),obs_datetime:a.date}),condition:e=>e.hivStatus.value==="POSITIVE"||e.hivStatus.value==="NEGATIVE",options:()=>[{value:"HIV_BEFORE_TB",label:"Before TB Registration"},{value:"HIV_AFTER_TB",label:"After TB Registration"}]}),p=()=>({id:"artStatus",helpText:"ART Started",type:o.TT_SELECT,requireNext:!1,validation:e=>i.required(e),condition:e=>e.hivStatus.value==="POSITIVE",computedValue:e=>({concept_id:t("ON_ART"),value_coded:t("".concat(e.value)),obs_datetime:a.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]}),S=()=>({id:"arvStatus",helpText:"ARV Status",type:o.TT_SELECT,requireNext:!1,validation:e=>i.required(e),condition:e=>e.artStatus.value==="YES_ANSWER",computedValue:e=>({concept_id:t("ARV_STATUS"),value_coded:t("".concat(e.value)),obs_datetime:a.date}),options:()=>[{value:"ARV_BEFORE_TB",label:"Started ARV before TB Treatment"},{value:"ARV_WHILE_TB",label:"Started ARV while on TB Treatment"},{value:"ARV_AFTER_DISCHARGE",label:"ARV not started by the time when discharged from TB treatment"}]}),v=()=>({id:"cptStatus",helpText:"Started CPT",type:o.TT_SELECT,requireNext:!1,validation:e=>i.required(e),condition:e=>e.artStatus.value==="YES_ANSWER",computedValue:e=>({concept_id:t("ON_CPT"),value_coded:t("".concat(e.value)),obs_datetime:a.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]}),E=()=>({id:"cptStartDate",helpText:"CPT Start Date",type:o.TT_FULL_DATE,validation:e=>i.required(e),computedValue:e=>({concept_id:t("CPT_START_DATE"),[/unknown/i.test("".concat(e.value))?"value_text":"value_datetime"]:e.value,obs_datetime:a.date}),condition:e=>e.cptStatus.value==="YES_ANSWER",config:{allowUnknown:!0}});n.value=[T(),_(),p(),S(),v(),E()]});async function c(l,r){await a.createEncounter(),await a.saveObservationList(await F(r)),s()}return(l,r)=>(f(),b(u(h),null,{default:I(()=>[R(O,{cancelDestinationPath:u(d),onFinishAction:c,fields:n.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{K as default};
