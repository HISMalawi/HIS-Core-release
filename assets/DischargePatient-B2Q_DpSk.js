import{H as _}from"./HisStandardForm-B3LOSMqB.js";import{bW as p,d as w,r as T,an as n,ao as s,c3 as D,aC as u,q as d,aw as x,y as C,a as E,w as F,e as P,f,m as V,b as A,a_ as L}from"./index-qFt4YszW.js";import{r as m}from"./commons-B4jZtVaM.js";import{u as O}from"./useEncounter-Bj5eamVf.js";import"./isEmpty-1LErKKNT.js";import"./encounter_guidelines-CLmFwnI6.js";import"./GuidelineEngine-D6V1_Znr.js";class k extends p{constructor(a,o){super(a,114,o)}}class q extends p{constructor(a,o){super(a,40,o)}}const N=w({__name:"DischargePatient",setup(l){let a,o;const c=T([]),{goToNextTask:b,patientDashboardUrl:h}=O((e,i)=>{o=new q(i,e),a=new k(i,e),c.value=[g(),y(),S()]});async function v(e,i){await o.createEncounter();const t=await m({...i},"outcome");await o.saveObservationList(t);const r=await m({...i},"referral");L.isEmpty(r)||(await a.createEncounter(),await a.saveObservationList(r)),b()}function g(){return{id:"outcome_status",helpText:"Select Discharge Outcome",type:s.TT_SELECT,validation:e=>n.required(e),computedValue:e=>({tag:"outcome",obs:o.buildValueCoded("outcome",e.value)}),options:()=>[{label:"Referred (Within the Facility)",value:"Patient transferred internally"},{label:"Dead",value:"Died in treatment"},{label:"Abscorded",value:"Absconded"},{label:"Alive (Discharged home)",value:"Discharged home"},{label:"Transferred (Another health facility)",value:"Discharged to another facility"}]}}function y(){return{id:"facility_name",helpText:"Select Facility name",type:s.TT_SELECT,validation:e=>n.required(e),computedValue:e=>({tag:"referral",obs:a.buildValueText("Referred",e.label)}),condition:e=>e.outcome_status.value==="Discharged to another facility",options:(e,i="")=>D(i),config:{showKeyboard:!0,isFilterDataViaApi:!0}}}function S(){return{id:"internal_sections",helpText:"Select Ward/internal section",type:s.TT_SELECT,validation:e=>n.required(e),computedValue:e=>({tag:"referral",obs:a.buildValueText("Specialist clinic",e.label)}),condition:e=>e.outcome_status.value==="Patient transferred internally",options:()=>u.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,i,t)=>{if(typeof t.filter!="string"||t.filter.length<3)return d("Please enter a valid section name");if(t.filtered.some(r=>r.label.toLowerCase()===t.filter.toLowerCase()))return d("Section already existing");if(await x("Do you want to add internal section?")){const r=await u.createInternalSection(t.filter.toUpperCase());r?(t.filter=r.name,t.listData=[{label:r.name,value:r.id},...t.listData]):C("Unable to add ".concat(t.filter))}}}]}}}return(e,i)=>(A(),E(f(V),null,{default:F(()=>[P(_,{cancelDestinationPath:f(h),fields:c.value,onFinishAction:v,skipSummary:""},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{N as default};
