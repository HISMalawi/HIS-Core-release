import{d as l,r as u,bJ as d,bO as m,ab as _,dR as o,u as f,v as T,w as v,x as E,y as s,a5 as N}from"./index-B-uGcoDO.js";import{H as P}from"./HisStandardForm-DB6-tfZz.js";import{u as S}from"./useEncounter-DXUjXTwC.js";import{r as b}from"./commons-CG7ghTuM.js";import"./isEmpty-8SRZJHd0.js";import"./encounter_guidelines-C1w2H-CO.js";import"./GuidelineEngine-D6V1_Znr.js";const C=l({__name:"Pregnancy",setup(A){const n=u([]),e=new d(-1,m.UPDATE_PREGNANCY_STATUS),{goToNextTask:r,patientDashboardUrl:i}=S((t,a)=>{e.patientID=a,e.providerID=t,n.value=[{id:"personIsPregnant",helpText:"Is Person pregnant?:",type:_.TT_SELECT,computedValue:p=>({concept_id:o("PATIENT_IS_PREGNANT"),value_coded:o("".concat(p.value)),obs_datetime:e.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]}]});async function c(t,a){await e.createEncounter(),await e.saveObservationList(await b(a)),r()}return(t,a)=>(f(),T(s(N),null,{default:v(()=>[E(P,{cancelDestinationPath:s(i),onFinishAction:c,fields:n.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{C as default};
