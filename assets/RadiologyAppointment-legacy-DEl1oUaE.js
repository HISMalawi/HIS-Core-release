System.register(["./index-legacy-pSEoxn3J.js","./HisStandardForm-legacy-CGi-zolz.js","./EncounterMixin.vue_vue_type_script_lang-legacy-B-rKFJn9.js","./appointment_service-legacy-sDc67874.js","./encounter_guidelines-legacy-mYSO8ZN5.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(t,e){"use strict";var n,i,a,s,o,p,r,l,d,m,c;return{setters:[t=>{n=t.d,i=t.an,a=t.ao,s=t.B,o=t.am,p=t.ar,r=t.a,l=t.b},t=>{d=t.H},t=>{m=t._},t=>{c=t.A},null,null],execute:function(){const e=n({mixins:[m],components:{HisStandardForm:d},data:()=>({appointmentDate:"",maxAppointmentDate:"",appointment:{}}),watch:{ready:{async handler(t){t&&(this.appointment=new c(this.patientID,this.providerID),this.init())},immediate:!0}},methods:{async onFinish(t,e){await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(e,"obs")),this.gotoPatientDashboard()},init(){this.appointmentDate=c.getSessionDate(),this.maxAppointmentDate=s(this.appointmentDate).add(100,"year").format("YYYY-MM-DD"),this.fields=this.getFields()},getFields(){return[{id:"set_appointment",helpText:"Appointments booking",type:a.TT_APPOINTMENTS_ENTRY,validation:t=>i.required(t),computedValue:t=>({tag:"obs",obs:[this.appointment.buildValueDate("Appointment date",t.value)]}),config:{patientAge:this.patient.getAge(),hideRunoutDate:!0,hiddenFooterBtns:["Clear"]},options:()=>[{label:"",value:"",other:{runOutDate:this.maxAppointmentDate,appointmentDate:this.appointmentDate}}]}]}}});t("default",o(e,[["render",function(t,e,n,i,a,s){const o=p("his-standard-form");return l(),r(o,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
