import{d as Y,ai as T,as as w,O as K,Q as J,R as Q,S as Z,a4 as ot,a3 as tt,a8 as q,ad as h,u as C,B as V,x as u,w as d,z as g,a1 as _,Y as P,E as x,bJ as B,a0 as rt,$ as lt,U as ut,dh as dt,Z as ct,C as W,v as R,aG as ht,G as pt,a6 as mt,a7 as ft,dg as b,M as L,aL as f,J as gt,aO as F,bh as G,di as bt,br as O,aK as k,bt as Tt,au as M,ab as l,bA as _t,af as U,ac as r,aN as H,k as vt,d9 as z,bS as j,aq as y,bw as yt,bR as Ct,aB as St}from"./index-DLUr6P7m.js";import{H as Pt}from"./HisStandardForm-CHh-Kykj.js";import{_ as Ot}from"./AdherenceMixin.vue_vue_type_script_lang-Ch86e5dd.js";import{P as X,R as Et}from"./prescription_service-7--CIptF.js";import{D as wt}from"./dispensation_service-CCys6Kyy.js";import"./htn_service-lhiBL_3D.js";import"./EncounterMixin.vue_vue_type_script_lang-Ch_BcKyA.js";import"./encounter_guidelines-Bg6Y9BA1.js";import"./GuidelineEngine-D6V1_Znr.js";import"./drug_order_service-D4JHkMln.js";const Nt=Y({name:"Modal",props:{VLData:{type:Object,required:!0}},async created(){this.artStartDate=T.toStandardHisDisplayFormat(this.VLData.earliest_start_date),this.monthsOnART=this.VLData.period_on_art,this.lastOrder=this.VLData.last_order_date?T.toStandardHisDisplayFormat(this.VLData.last_order_date):"N/A",this.currentRegimen=this.VLData.current_regimen.name?this.VLData.current_regimen.name:"Other",this.regimenStartDate=T.toStandardHisDisplayFormat(this.VLData.current_regimen.date_started)},methods:{async closeModal(t){await w.dismiss(t)}},data(){return{content:"Content",artStartDate:"",monthsOnART:"",lastOrder:"",currentRegimen:"",regimenStartDate:""}},components:{IonHeader:K,IonToolbar:J,IonTitle:Q,IonContent:Z,IonFooter:ot,IonButton:tt}});function It(t,e,i,n,o,s){const a=h("ion-title"),c=h("ion-toolbar"),p=h("ion-header"),m=h("ion-content"),v=h("ion-button"),N=h("ion-footer");return C(),V(x,null,[u(p,null,{default:d(()=>[u(c,null,{default:d(()=>[u(a,null,{default:d(()=>[g("VL milestone has been reached")]),_:1})]),_:1})]),_:1}),u(m,{style:{overflowY:"hidden",background:"grey"}},{default:d(()=>[_("p",null,"ART start date : "+P(t.artStartDate),1),_("p",null,"Months on ART: "+P(t.monthsOnART),1),_("p",null,"Last VL order date "+P(t.lastOrder),1),_("p",null,"Current regimen / start date: "+P(t.currentRegimen)+" - "+P(t.regimenStartDate),1)]),_:1}),u(N,null,{default:d(()=>[u(c,null,{default:d(()=>[u(v,{slot:"end",color:"success",size:"large",onClick:e[0]||(e[0]=E=>t.closeModal("order"))},{default:d(()=>[g(" Order VL")]),_:1}),u(v,{slot:"end",size:"large",onClick:e[1]||(e[1]=E=>t.closeModal("wait"))},{default:d(()=>[g(" Wait till next milestone")]),_:1}),u(v,{slot:"start",color:"danger",size:"large",onClick:e[2]||(e[2]=E=>t.closeModal("later"))},{default:d(()=>[g(" Remind me later ")]),_:1})]),_:1})]),_:1})],64)}const Ft=q(Nt,[["render",It],["__scopeId","data-v-2044e916"]]);class Ht extends B{constructor(e,i){super(e,13,i)}async buildDefferedOrder(e){const i=await B.getConceptID("HIV viral load"),n=await B.getConceptID("Delayed milestones");return[{concept_id:i,value_text:"Wait till next milestone",value_coded:n,value_numeric:e}]}}const Vt=Y({name:"Modal",props:{sideEffects:{type:Object,required:!0},drugs:{type:Array,default:()=>[]}},methods:{closeModal(){w.dismiss()},async postSideEffects(){await w.dismiss(this.sides)},selectSideEffect(t){this.activeIndex=t}},computed:{allSelected(){return this.sides.filter(t=>t.reason).length===this.sides.length}},mounted(){this.sides=this.sideEffects},data(){return{content:"Content",extendedLabsEnabled:!1,appActivities:[],sides:[],specimens:[],reasons:["Routine","Targeted","Confirmatory","Stat","Repeat / Missing"],activeIndex:null}},components:{IonButton:tt,IonContent:Z,IonHeader:K,IonTitle:Q,IonToolbar:J,IonLabel:rt,IonList:lt,IonItem:ut,IonRadioGroup:dt,IonRow:ct}}),A=t=>(mt("data-v-045e07c6"),t=t(),ft(),t),xt={style:{}},Bt=A(()=>_("div",{class:"side-title"}," Select reason ",-1)),Rt=A(()=>_("p",null,"Current Medication",-1)),At=A(()=>_("p",null,"Previous Medication",-1)),Dt=A(()=>_("p",null,null,-1));function Lt(t,e,i,n,o,s){const a=h("ion-title"),c=h("ion-toolbar"),p=h("ion-header"),m=h("ion-label"),v=h("ion-item"),N=h("ion-list"),E=h("ion-col"),D=h("ion-radio"),et=h("ion-radio-group"),it=h("ion-row"),nt=h("ion-grid"),st=h("ion-content"),$=h("ion-button"),at=h("ion-footer");return C(),V(x,null,[u(p,null,{default:d(()=>[u(c,null,{default:d(()=>[u(a,null,{default:d(()=>[g("Side effects suspected causes")]),_:1})]),_:1})]),_:1}),u(st,{style:{overflowY:"hidden",background:"grey"}},{default:d(()=>[u(nt,null,{default:d(()=>[u(it,null,{default:d(()=>[u(E,{size:"4"},{default:d(()=>[u(N,{style:{overflowY:"auto",height:"78vh"}},{default:d(()=>[(C(!0),V(x,null,W(t.sides,(S,I)=>(C(),R(v,{key:S,onClick:Yt=>t.selectSideEffect(I),detail:!0,style:ht(t.activeIndex===I?"color: green":"color: black")},{default:d(()=>[u(m,null,{default:d(()=>[g(P(S.label),1)]),_:2},1024)]),_:2},1032,["onClick","style"]))),128))]),_:1})]),_:1}),u(E,{style:{overflowY:"auto",height:"78vh"}},{default:d(()=>[_("div",xt,[u(N,null,{default:d(()=>[t.activeIndex!==null?(C(),R(et,{key:0,modelValue:t.sides[t.activeIndex].reason,"onUpdate:modelValue":e[0]||(e[0]=S=>t.sides[t.activeIndex].reason=S)},{default:d(()=>[Bt,Rt,(C(!0),V(x,null,W(t.drugs,(S,I)=>(C(),R(v,{key:I},{default:d(()=>[u(m,null,{default:d(()=>[g(P(S.drug.name),1)]),_:2},1024),u(D,{slot:"start",value:S.drug_inventory_id},null,8,["value"])]),_:2},1024))),128)),At,u(v,null,{default:d(()=>[u(m,null,{default:d(()=>[g("Other, not drug related")]),_:1}),u(D,{slot:"start",value:"other"})]),_:1}),u(v,null,{default:d(()=>[u(m,null,{default:d(()=>[g("Drug side effect")]),_:1}),u(D,{slot:"start",value:"drug"})]),_:1})]),_:1},8,["modelValue"])):pt("",!0)]),_:1})]),Dt]),_:1})]),_:1})]),_:1})]),_:1}),u(at,null,{default:d(()=>[u(c,null,{default:d(()=>[u($,{onClick:t.closeModal,slot:"end",color:"danger"},{default:d(()=>[g(" Close ")]),_:1},8,["onClick"]),u($,{onClick:t.postSideEffects,slot:"end",disabled:!t.allSelected},{default:d(()=>[g(" Save ")]),_:1},8,["onClick","disabled"])]),_:1})]),_:1})],64)}const kt=q(Vt,[["render",Lt],["__scopeId","data-v-045e07c6"]]),Mt=Y({mixins:[Ot],components:{HisStandardForm:Pt},data:()=>({fields:[],currentWeight:-1,weightTrail:[],customRegimens:[],labOrders:[],weightLossPercentageNum:0,lostTenPercentBodyWeight:!1,CxCaEnabled:!1,CxCaStartAge:-1,CxCaMaxAge:-1,DueForCxCa:!1,currentlyPregnant:!1,currentlyBreastfeeding:!1,patientHitMenopause:!1,hasPregnancyObsToday:!1,autoSelect3HP:!1,labOrderFieldContext:{},consultation:{},prescription:{},dispensation:{},hasTbHistoryObs:!1,allergicToSulphur:!1,TBSuspected:!1,presentedTBSymptoms:!1,askAdherence:!1,lastDrugsReceived:[],sideEffectsHistory:{},onPermanentFPMethods:!1,reasonForDecliningTPTObs:{},malawiSideEffectReasonObs:[],otherSideEffectReasonObs:[],wasTransferredIn:!1,dateStartedArt:"",clientHadAHysterectomy:!1,isNoneClientPatient:!1,tptStatus:{},customDrugs:[],CxCaAppointDate:{},hasTbTreatmentDate:!1,isEligibleForTpt:!1}),watch:{ready:{handler(t){t&&(this.consultation=new b(this.patientID,this.providerID),this.prescription=new X(this.patientID,this.providerID),this.dispensation=new wt(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(t,e){if(!await this.consultation.createEncounter())return L("Unable to create encounter");const n=await this.resolveObs(e,"consultation"),o=(await Promise.all([...this.malawiSideEffectReasonObs,...this.otherSideEffectReasonObs,this.reasonForDecliningTPTObs,this.buildTBStatusObs(t)])).filter(a=>!f.isEmpty(a)),s=await this.consultation.saveObservationList([...n,...o]);if(!f.isEmpty(this.drugObs)&&!this.isNoneClientPatient&&await this.saveAdherence(),!s)return L("Unable to save patient observations");if(gt("Observations and encounter created!"),t.refer_to_clinician&&t.refer_to_clinician.value==="Yes"){this.gotoPatientDashboard();return}this.nextTask()},async getTptDrugs(t){const e=[],i=t.routine_tb_therapy.value;return f.isEmpty(this.customDrugs)&&(this.customDrugs=await Et.getCustomIngridients()),i.match(/ipt/i)?e.push("INH or H (Isoniazid 300mg tablet)"):i.includes("3HP (RFP + INH)")?(e.push("INH or H (Isoniazid 300mg tablet)"),e.push("Rifapentine (150mg)")):i.includes("INH 300 / RFP 300 (3HP)")&&e.push("INH 300 / RFP 300 (3HP)"),f.isEmpty(e)?[]:this.customDrugs.filter(n=>e.includes(n.name)).map(n=>({label:n.name,value:"",other:n}))},async getTransferInStatus(){const t=await b.getFirstValueCoded(this.patientID,"Ever received ART"),e=await b.getFirstObs(this.patientID,"Has transfer letter"),i=e?T.toStandardHisFormat(e.obs_datetime):"";return t&&t.match(/yes/i)&&e&&"".concat(e.value_coded).match(/yes/i)&&i===this.consultation.getDate()},async getDateStartedArt(){const t=await b.getFirstValueDatetime(this.patientID,"Date ART started");return t?T.toStandardHisFormat(t):""},async checkIfWeightLossIsControlled(t){if(this.lostTenPercentBodyWeight&&"".concat(t.label).match(/malnutrition/i)&&"".concat(t.value).match(/no/i)){const e=await F("Recommendation","Patient's weight has dropped by ".concat(this.weightLossPercentageNum,"% , is this controlled weight loss??"),"Please verify",[{name:"Confirm weight loss",slot:"start",color:"success"},{name:"Confirm controlled",slot:"end",color:"primary"}]);t.value=e==="Confirm weight loss"?"Yes":"No"}},async checkVLReminder(){const t=await G.getPatientVLInfo(this.patientID);if(t.eligibile===!0){const e=await w.create({component:Ft,backdropDismiss:!1,cssClass:"large-modal",componentProps:{VLData:t}});e.present();const{data:i}=await e.onDidDismiss();switch(i){case"order":await this.labOrderFieldContext.launchOrderSelection();break;case"wait":await this.waitForVL();break}}},async waitForVL(t=null){const e=new Ht(this.patientID,this.providerID),i=await e.createEncounter(),n=await e.buildDefferedOrder(t);if(!i)return L("Unable to create encounter");await e.saveObservationList(n)},canScreenCxCa(){const t=this.patient.getAge();return this.patient.isFemale()&&this.DueForCxCa&&this.CxCaEnabled&&t>=this.CxCaStartAge&&t<=this.CxCaMaxAge&&!this.clientHadAHysterectomy},pregnancyEligible(){return this.patient.isChildBearing()&&!this.onPermanentFPMethods},showCurrentContraceptionMethods(t){return this.pregnancyEligible()&&!this.patientHitMenopause&&!this.isPregnant(t)&&!this.isANCclient()},showNewContraceptionMethods(t){return this.pregnancyEligible()&&!this.patientHitMenopause&&!this.isPregnant(t)&&!this.isLongTermFpMethod(t)&&!this.isANCclient()},isPregnant(t){return t.pregnant_breastfeeding?this.inArray(t.pregnant_breastfeeding,e=>e.label==="Pregnant"&&e.value==="Yes"):this.currentlyPregnant},isBreastFeeding(t){return t.pregnant_breastfeeding?this.inArray(t.pregnant_breastfeeding,e=>e.label==="Breastfeeding"&&e.value==="Yes"):this.currentlyBreastfeeding},isLongTermFpMethod(t){return(t.current_fp_methods||[]).some(e=>/contraceptive implant|intrauterine|tubal ligation/i.test("".concat(e.value)))},async disableFPMethods(t,e){if(e.isChecked&&e.label==="NONE")return t.map(i=>(i.label!="NONE"&&(i.isChecked=!1,i.disabled=!1),i));if(e.label!="NONE"&&e.isChecked){e.label.match(/condom/gi)&&bt("Combine with other modern methods of family planning");const i=f.findIndex(t,{label:"NONE"});t[i].isChecked=!1;const n=this.consultation.familyPlanningMethods(e.label,t),o=f.findIndex(n,{label:e.label});return n[o].isChecked=!0,n}else return t.map(i=>(i.disabled=!1,i))},disablePrescriptions(t,e){if(e.isChecked&&e.label==="NONE OF THE ABOVE")return t.map(i=>(i.label!="NONE OF THE ABOVE"&&(i.isChecked=!1),i));if(e.label!="NONE OF THE ABOVE"&&e.isChecked){const i=f.findIndex(t,{label:"NONE OF THE ABOVE"});t[i].isChecked=!1}return t},buildMedicationOrders(t){if(this.inArray(t,n=>n.label==="NONE OF THE ABOVE"))return this.consultation.buildValueCoded("Prescribe drugs","No");const e=this.consultation.buildValueCoded("Prescribe drugs","Yes"),i=t.map(n=>this.consultation.buildValueCoded("Medication orders",n.label));return[e,...i]},declinedFPM(t){return this.inArray(t.fp_methods,e=>e.value==="NONE")&&this.inArray(t.current_fp_methods,e=>e.value==="NONE")},riskOfUnplannedPregnancy(t){return t.reason_for_no_fpm.value==="At risk of unplanned pregnancy"},showOtherSideEffects(t){return this.inArray(t.side_effects,e=>e.label==="Other"&&e.value==="Yes")},hasTBSymptoms(t){return this.presentedTBSymptoms=this.inArray(t.tb_side_effects,e=>e.value==="Yes"),this.presentedTBSymptoms},isTBSuspect(t){return this.TBSuspected=!!t.value.toString().match(/Yes|TB Suspected/i),this.TBSuspected},isAllergicToSulphur(t){return this.allergicToSulphur=t.value.match(/unknown/i)?null:!!t.value.match(/yes/i),this.allergicToSulphur},async buildSideEffectObs(t,e){const i=await this.getSideEffectsReasons(t);if(this[e]=[],i===void 0)return!1;if(i!=-1){const n=O.getCachedConceptID("Drug induced",!0),o=s=>!!"".concat(s).match(/other|drug/i);this[e]=i.map(s=>({concept_id:n,value_coded:O.getCachedConceptID(s.label,!0),value_text:o(s.reason)?"Past medication history":null,value_drug:o(s.reason)?null:s.reason}))}return!0},async getSideEffectsReasons(t){const e=t.filter(i=>!"".concat(i.label).match(/other/i)&&i.value==="Yes");if(e.length>0){const i=await w.create({component:kt,backdropDismiss:!1,cssClass:"large-modal",componentProps:{sideEffects:e,drugs:this.lastDrugsReceived}});i.present();const{data:n}=await i.onDidDismiss();return n}return-1},getFPMethods(t=[],e){return this.consultation.getFamilyPlanningMethods().filter(o=>!t.includes(o)).map(o=>({label:o,value:o,isChecked:e.map(s=>s.label).includes(o)}))},getContraindications(t){const e=O.getConceptsByCategory("contraindication",!0).map(i=>i.name);return this.getOptions([...e,"Other"],t)},getOtherContraindications(t){const e=O.getConceptsByCategory("side_effect",!0).map(n=>n.name),i=e.pop();return this.getOptions([...e,"Other (Specify)","".concat(i)],t)},getTBSymptoms(t){const e=O.getConceptsByCategory("tb_symptom",!0).map(i=>i.name);return this.getOptions([...e],t)},getReasonsForNoCxcaOptions(){return O.getConceptsByCategory("reason_for_no_cxca").map(t=>({label:t.name,value:t.name,other:{c:t}}))},runAppendOptionParams(t,e){const i=e.filter(n=>n.isChecked).map(n=>n.label);return t.map(n=>{var o,s;if(typeof((o=n==null?void 0:n.other)==null?void 0:o.appendOptionParams)=="function"){const a=(s=n==null?void 0:n.other)==null?void 0:s.appendOptionParams();if(typeof a=="object"){const c={label:n.label,value:n.value,other:n.other};return a.isChecked?(c.isChecked=a.isChecked,delete a.isChecked):c.isChecked=i.includes(n.label),{...c,...a}}}return n})},didCompletedTPT(t){var e;return/complete/i.test((e=t.routine_tb_therapy)==null?void 0:e.value)||this.tptStatus.completed},patientOnTpt(t){return this.didCompletedTPT(t)},async on3HPValueUpdate(t,e){const i=s=>!!s.label.match(/IPT|3HP/i),n=(()=>{const s=t.reduce((a,c)=>(i(c)&&!(c.label in a)&&c.isChecked&&a.push(c.label),a),[]);return s.includes("IPT")&&(s.includes("3HP (RFP + INH)")||s.includes("INH 300 / RFP 300 (3HP)"))})(),o=i(e)&&t.filter(s=>i(s)).map(s=>!s.isChecked).every(Boolean);if(i(e)&&o&&!this.tptStatus.completed){const s=await k("Reasons for declining TPT","",["Patient declined","Side-effects (previous or current)","Stock-out","Starting TB treatment","Other"],[{name:"Done",slot:"start",role:"action"}]);this.reasonForDecliningTPTObs=this.consultation.buildValueText("Other reason for not seeking services",s.selection)}else this.reasonForDecliningTPTObs={};if(n){const s=await F("IPT / 3HP conflict","IPT and 3HP can NOT be prescribed together","Please pick either one",[{name:"Prescribe 3HP",slot:"start",color:"primary"},{name:"Prescribe IPT",slot:"end",color:"primary"}]);return t.map(a=>(i(a)&&(a.isChecked=s==="Prescribe IPT"&&a.label==="IPT"||s==="Prescribe 3HP"&&a.label==="INH 300 / RFP 300 (3HP)"),a))}return t.map(s=>((e.label==="3HP (RFP + INH)"&&s.label==="INH 300 / RFP 300 (3HP)"&&e.isChecked||e.label==="INH 300 / RFP 300 (3HP)"&&s.label==="3HP (RFP + INH)"&&e.isChecked)&&(s.isChecked=!1),s))},medicationOrderOptions(t,e=[]){this.isEligibleForTpt=!1;const i=this.didCompletedTPT(t),n=this.tptStatus.tpt!==null,o=this.isBreastFeeding(t),s=this.isPregnant(t),a=p=>({disabled:!0,isChecked:!1,description:{color:"danger",show:"always",text:p}}),c=o?{isChecked:!1,description:{color:"danger",show:"always",text:"Patient is breast feeding"}}:{};return this.runAppendOptionParams([this.toOption("ARVs",{appendOptionParams:()=>({isChecked:this.autoSelect3HP&&!this.TBSuspected})}),this.toOption("CPT",{appendOptionParams:()=>this.autoSelect3HP&&!this.TBSuspected&&!this.allergicToSulphur?{isChecked:!0}:this.allergicToSulphur?a("Allergic to CPT"):{disabled:!1}}),this.toOption("3HP (RFP + INH)",{appendOptionParams:()=>{var p,m;if(i)return a("Completed TPT treatment");if(((p=t.on_tb_treatment)==null?void 0:p.value)==="Yes")return a("On TB treatment");if(this.tptStatus.tb_treatment)return a("Completed/on TB treatment");if(/confirmed tb/i.test((m=t.tb_status)==null?void 0:m.value))return a("Confirmed TB Not on treatment");if(this.TBSuspected)return a("TB Suspect");if(s)return a("Pregnant patient");if(this.currentWeight<20)return a("Weight below regulation");if(!this.tptStatus.eligible["3HP"]&&!this.tptStatus.eligible["6H"])return a("Not eligible to start or re-start TPT");if(n&&this.tptStatus.tpt!=="3HP (RFP + INH)"&&!this.tptStatus.completed)return a("On ".concat(this.tptStatus.tpt," treatment"));if(this.isEligibleForTpt=this.tptStatus.eligible["3HP"],this.tptStatus.tpt==="3HP (RFP + INH)"&&!this.tptStatus.completed&&this.isEligibleForTpt)return{isChecked:!0,...c}}}),this.toOption("INH 300 / RFP 300 (3HP)",{appendOptionParams:()=>{var p,m;return i?a("Completed TPT treatment"):((p=t.on_tb_treatment)==null?void 0:p.value)==="Yes"?a("On TB treatment"):this.tptStatus.tb_treatment?a("Completed/on TB treatment"):this.TBSuspected?a("TB Suspect"):/confirmed tb/i.test((m=t.tb_status)==null?void 0:m.value)?a("Confirmed TB Not on treatment"):s?a("Pregnant patient"):this.currentWeight<30?a("Weight below regulation"):!this.tptStatus.eligible["3HP"]&&!this.tptStatus.eligible["6H"]?a("Not eligible to start or re-start TPT"):n&&this.tptStatus.tpt!=="INH 300 / RFP 300 (3HP)"&&!this.tptStatus.completed?a("On ".concat(this.tptStatus.tpt," treatment")):(this.isEligibleForTpt=this.tptStatus.eligible["3HP"],this.tptStatus.tpt==="INH 300 / RFP 300 (3HP)"&&!this.tptStatus.completed&&this.isEligibleForTpt?{isChecked:!0,...c}:{isChecked:this.autoSelect3HP&&this.isEligibleForTpt,...c})}}),this.toOption("IPT",{appendOptionParams:()=>{var p,m;if(i)return a("Completed TPT treatment");if(((p=t.on_tb_treatment)==null?void 0:p.value)==="Yes")return a("On TB treatment");if(this.tptStatus.tb_treatment)return a("Completed/on TB treatment");if(this.TBSuspected)return a("TB Suspect");if(/confirmed tb/i.test((m=t.tb_status)==null?void 0:m.value))return a("Confirmed TB Not on treatment");if(s)return a("Pregnant patient");if(!this.tptStatus.eligible["3HP"]&&!this.tptStatus.eligible["6H"])return a("Not eligible to start or re-start TPT");if(n&&this.tptStatus.tpt!=="IPT"&&!this.tptStatus.completed)return a("On ".concat(this.tptStatus.tpt," treatment"));if(this.isEligibleForTpt=this.tptStatus.eligible["6H"],this.tptStatus.tpt==="IPT"&&!this.tptStatus.completed&&this.isEligibleForTpt)return{isChecked:!0,...c}}}),this.toOption("NONE OF THE ABOVE")],e)},async getVlLabData(){return Tt.formatLabs(await M.get("GET_LAB_ORDERS_WITH_GIVEN_RESULT_STATUS",{patientID:this.patientID}))},isANCclient(){return G.getSuspendedProgram()==="ANC"},isRapidTestPositive(t){const e="chest x-ray",i="Molecular WHO Recommended Rapid Diagnostic test",n=t.tb_screening_testing_results.reduce((o,s)=>({...o,[s.label]:s.value}),{});return n[i]==="Negative"?!1:n[e]==="Positive"||n[i]==="Positive"},buildTBStatusObs(t){var e;return((e=t==null?void 0:t.on_tb_treatment)==null?void 0:e.value)==="Yes"?this.consultation.buildValueCoded("TB Status","Confirmed TB on treatment"):t!=null&&t.tb_status?this.consultation.buildValueCoded("TB Status",t.tb_status.value):t!=null&&t.tb_screening_testing_results?this.isRapidTestPositive(t)?this.consultation.buildValueCoded("TB Status","TB Suspected"):this.consultation.buildValueCoded("TB Status","TB NOT suspected"):t!=null&&t.tb_side_effects&&!this.hasTBSymptoms(t)?this.consultation.buildValueCoded("TB Status","TB NOT suspected"):{}},getFields(){return[{id:"other_patient_prescription",proxyID:"prescription",helpText:"Medication to prescribe during this visit",type:l.TT_MULTIPLE_SELECT,init:async()=>(await this.consultation.getClient()==="No"?this.isNoneClientPatient=!0:this.isNoneClientPatient=!!await _t.isDrugRefillPatient(this.patientID),this.isNoneClientPatient&&(this.currentWeight=Number(await this.patient.getRecentWeight()),this.autoSelect3HP=await M.get("ART_AUTO_3HP_SELECTION"),this.tptStatus=await this.consultation.getTptTreatmentStatus()),!0),beforeNext:async(t,e)=>{if(!Object.keys(this.reasonForDecliningTPTObs).length&&!this.isBreastFeeding(e)&&this.isEligibleForTpt&&!this.patientOnTpt(e)&&!t.some(i=>/3hp|ipt/i.test(i.label)))if(await U("Are you sure you want to proceed without prescribing TPT?")){const i=await k("Reasons for declining TPT","",["Patient declined","Side-effects (previous or current)","Stock-out","Starting TB treatment","Other"],[{name:"Done",slot:"start",role:"action"}]);this.reasonForDecliningTPTObs=this.consultation.buildValueText("Other reason for not seeking services",i.selection)}else return this.reasonForDecliningTPTObs={},!1;return!0},validation:t=>r.required(t),computedValue:t=>({tag:"consultation",obs:this.buildMedicationOrders(t)}),onValueUpdate:(t,e)=>{const i=this.disablePrescriptions(t,e);return this.on3HPValueUpdate(i,e)},options:(t,e,i,n)=>f.isEmpty(n)?this.medicationOrderOptions(t):n,condition:()=>this.isNoneClientPatient,exitsForm:()=>!0},...H({id:"date_last_received_arvs",helpText:"Last ARV Dispensation",required:!0,init:async()=>(this.wasTransferredIn=await this.getTransferInStatus()||!1,this.dateStartedArt=await this.getDateStartedArt(),!0),condition:()=>this.wasTransferredIn,minDate:()=>this.dateStartedArt,maxDate:()=>this.consultation.getDate(),computeValue:t=>(this.prescription.setDate(t),{tag:"consultation",date:t,obs:this.consultation.buildValueDate("Date drug received from previous facility",t)}),estimation:{allowUnknown:!1}}),{id:"previous_arvs_received",helpText:"Last ARV drugs dispensed",type:l.TT_MULTIPLE_SELECT,computedValue:t=>t.map(e=>e.other),validation:t=>r.required(t),options:async()=>{if(!f.isEmpty(this.customRegimens))return this.customRegimens;const t=new X(this.patientID,this.providerID);return this.customRegimens=(await t.getARVs()).map(e=>({label:e.name,value:e.drug_id,other:{...e}})),this.customRegimens},config:{showKeyboard:!0},condition:()=>this.wasTransferredIn},{id:"drug_interval",helpText:"Duration period for last received ARVs",type:l.TT_NEXT_VISIT_INTERVAL_SELECTION,condition:()=>this.wasTransferredIn,validation:t=>r.required(t),computedValue:t=>t.other.nextAppointment,options:()=>[{label:"2 weeks",value:14},{label:"1 month",value:28},{label:"2 months",value:56},{label:"3 months",value:84},{label:"4 months",value:112},{label:"5 months",value:140},{label:"6 months",value:168},{label:"7 months",value:196},{label:"8 months",value:224},{label:"9 months",value:252},{label:"10 months",value:280},{label:"11 months",value:308},{label:"12 months",value:336}].map(({label:e,value:i})=>{this.prescription.setNextVisitInterval(i);const n=this.prescription.calculateDateFromInterval();return{label:e,value:i,other:{label:"Medication run-out date:",value:T.toStandardHisDisplayFormat(n),nextAppointment:n,other:{label:"",value:[]}}}})},{id:"arv_quantities",helpText:"Amount of drugs dispensed (From last ART Facility)",type:l.TT_DRUG_TRANSFER_IN,validation:t=>this.validateSeries([()=>r.required(t),()=>t.map(e=>{var i;return e.value===""||((i=e==null?void 0:e.other)==null?void 0:i.pillsBrought)===""}).some(Boolean)?["Some Drugs are missing values"]:null]),computedValue:(t,e,i)=>({tag:"consultation",obs:t.map(async n=>{var s,a,c,p;const o=((a=(s=n==null?void 0:n.other)==null?void 0:s.drug)==null?void 0:a.drug_id)||0;return{...await this.consultation.buildObs("Drug received from previous facility",{value_drug:o,value_datetime:(i==null?void 0:i.drug_interval)||null,value_numeric:(n==null?void 0:n.value)||0}),child:[await this.consultation.buildObs("Number of tablets brought to clinic",{value_drug:o,value_numeric:((c=n==null?void 0:n.other)==null?void 0:c.pillsBrought)||-1,value_datetime:((p=i==null?void 0:i.date_last_received_arvs)==null?void 0:p.date)||null})]}})}),options:(t,e,i)=>e.previous_arvs_received.map(n=>{var p;const o=n.alternative_drug_name||n.drug_name||n.name,s=f.find(i,{label:o});let a="",c="";return s&&(a=s==null?void 0:s.value,c=(p=s==null?void 0:s.other)==null?void 0:p.pillsBrought),{label:o,value:a,other:{drug:n,pillsBrought:c}}}),condition:()=>this.wasTransferredIn},{id:"patient_lab_orders",helpText:"Lab orders",type:l.TT_LAB_ORDERS,init:async()=>(this.labOrders=await this.getVlLabData(),!0),unload:async()=>{await this.checkVLReminder();const t=this.labOrders.filter(e=>e.result_given==="No");if(t.length&&await U("Result(s) Given to Client?")){const e=new B(this.patientID,-1,this.providerID),i=t.reduce((n,o)=>[...n,...o.resultIds.map(async s=>(e.encounterID=o.encounter_id,e.saveObs(await e.buildObs("Result Given to Client",{value_coded:"Yes",obs_group_id:s}))))],[]);await Promise.all(i)}this.labOrders=await this.getVlLabData()},onload:t=>this.labOrderFieldContext=t,options:()=>[{label:"Lab orders",value:"order trail",other:{values:this.labOrders}}],config:{printOrder:t=>vt(t),hiddenFooterBtns:["Clear"],footerBtns:[{name:"Order",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>{f.isEmpty(this.labOrderFieldContext)||await this.labOrderFieldContext.launchOrderSelection()}}]}},{id:"pregnant_breastfeeding",helpText:"Patient Pregnant or breastfeeding?",init:async()=>(this.patient.isFemale()&&(this.patient.isChildBearing()&&(this.hasPregnancyObsToday=await this.patient.hasPregnancyObsToday(),this.currentlyPregnant=await this.patient.isPregnant(),this.currentlyBreastfeeding=await this.patient.isBreastfeeding()),this.onPermanentFPMethods=await this.consultation.getTLObs()),!0),condition:()=>!this.hasPregnancyObsToday&&this.pregnancyEligible(),type:l.TT_MULTIPLE_YES_NO,validation:t=>this.validateSeries([()=>r.required(t),()=>r.anyEmpty(t)]),computedValue:t=>({tag:"consultation",obs:t.map(e=>this.consultation.buildValueCoded(e.other.concept,e.value)).concat(this.isANCclient()?[this.consultation.buildValueCoded("Is patient pregnant","Yes")]:[])}),options:t=>{const e=[];return this.isANCclient()||e.push({label:"Pregnant",value:"",other:{values:this.yesNoOptions(),concept:"Is patient pregnant"}}),e.push({label:"Breastfeeding",value:"",other:{values:this.yesNoOptions(),concept:"Is patient breast feeding"}}),t.pregnant_breastfeeding||e}},{id:"patient_weight_chart",helpText:"Patient weight chart",type:l.TT_WEIGHT_CHART,init:async()=>(this.weightTrail=await this.patient.getWeightHistory(),this.weightLossPercentageNum=this.patient.getWeightLossPercentageFromTrail(this.weightTrail),this.lostTenPercentBodyWeight=this.weightLossPercentageNum>=10,!0),options:async()=>{const t=await this.patient.getBMI(),e=this.weightTrail;return[{label:"Weight for patient",value:"Weight trail",other:{bmi:t,values:e.map(i=>({x:T.toStandardHisDisplayFormat(i.date),y:i.weight})),age:this.patient.getAge()}}]},config:{hiddenFooterBtns:["Clear"]}},{id:"has_fp_methods",helpText:"",type:l.TT_TEXT_BANNER,condition:()=>this.onPermanentFPMethods,options:()=>this.mapStrToOptions(["Patient is on Tubal ligation method"])},{id:"current_fp_methods",helpText:"What method are you currently on?",type:l.TT_MULTIPLE_SELECT,init:async()=>(this.patient.isFemale()&&(this.patientHitMenopause=await this.consultation.patientHitMenopause()),!0),validation:t=>r.required(t),onValueUpdate:(t,e)=>this.disableFPMethods(t,e),computedValue:t=>({tag:"consultation",obs:t.map(e=>this.consultation.buildValueCoded("Family planning method",e.value))}),condition:t=>this.showCurrentContraceptionMethods(t),options:(t,e)=>this.getFPMethods([],e)},{id:"fp_methods",helpText:"What method are you providing today?",type:l.TT_MULTIPLE_SELECT,condition:t=>this.showNewContraceptionMethods(t),validation:t=>r.required(t),onValueUpdate:(t,e)=>this.disableFPMethods(t,e),computedValue:t=>({tag:"consultation",obs:t.map(e=>this.consultation.buildValueCoded("Family planning, action to take",e.value))}),options:(t,e)=>this.getFPMethods([],e)},{id:"reason_for_no_fpm",helpText:"Main reason for not using family planning methods",type:l.TT_SELECT,validation:t=>r.required(t),condition:t=>this.declinedFPM(t),computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueText("Why does the woman not use birth control",t.value)}),options:()=>this.mapStrToOptions(["Not Sexually active","Patient want to get pregnant","Not needed for medical reasons","At risk of unplanned pregnancy","Menopause"])},{id:"specific_reason_for_no_fpm",helpText:"Specific reason for not using family planning methods",type:l.TT_SELECT,validation:t=>r.required(t),computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueText("Reason for not using contraceptives",t.value)}),condition:t=>this.riskOfUnplannedPregnancy(t),options:()=>this.mapStrToOptions(["Following wishes of spouse","Religious reasons","Afraid of side effects","Never though about it","Indifferent (does not mind getting pregnant)"])},{id:"offer_contraceptives",helpText:"Offer contraceptives",type:l.TT_SELECT,validation:t=>r.required(t),condition:t=>this.riskOfUnplannedPregnancy(t),computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueCoded("Family planning, action to take",t.value)}),options:()=>[{label:"Accepted",value:"Yes"},{label:"Declined",value:"No"},{label:"Discuss with spouse",value:"Discuss with spouse"}]},{id:"offered_intervention",helpText:"Offered intervention",type:l.TT_MULTIPLE_SELECT,validation:t=>r.required(t),condition:t=>t.offer_contraceptives.value==="Accepted",computedValue:t=>({tag:"consultation",obs:t.map(e=>this.consultation.buildValueCoded(e.label,e.value))}),options:(t,e)=>this.getFPMethods(["NONE"],e)},{id:"offer_cxca",helpText:"Refer client for CxCa screening",type:l.TT_SELECT,init:async()=>{if(this.patient.isFemale()&&(this.CxCaEnabled=await z.cervicalCancerScreeningEnabled(),this.CxCaEnabled)){const{start:t,end:e}=await z.cervicalCancerScreeningAgeBounds();this.CxCaMaxAge=e,this.CxCaStartAge=t,this.DueForCxCa=await this.consultation.clientDueForCxCa(),this.clientHadAHysterectomy=await this.consultation.clientHasHadAHysterectomy()}return!0},validation:t=>r.required(t),condition:t=>this.canScreenCxCa()&&!this.isPregnant(t),computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueCoded("Offer CxCa",t.value)}),options:()=>this.yesNoOptions()},{id:"cxca_reminder",helpText:"CxCa Screening Reminder",type:l.TT_TEXT_BANNER,init:async()=>(this.CxCaEnabled&&this.patient.isFemale()&&(this.CxCaAppointDate=await this.patient.nextAppointment(24)),!0),condition:()=>30>T.dateDiffInDays(this.CxCaAppointDate,this.consultation.date),options:()=>this.mapStrToOptions(["Patient is due for Cervical Cancer Screening on ".concat(T.toStandardHisDisplayFormat(this.CxCaAppointDate.appointment_date))])},{id:"reason_for_no_cxca",helpText:"Reason for NOT offering CxCa",type:l.TT_SELECT,validation:t=>r.required(t),condition:t=>t.offer_cxca.value==="No",computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueCoded("Reason for NOT offering CxCa",t.value)}),options:()=>this.getReasonsForNoCxcaOptions()},...H({id:"previous_cxca_test_date",helpText:"Previous CxCa test",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>b.getSessionDate(),condition:t=>t.reason_for_no_cxca.value==="Not due for screening",computeValue:(t,e)=>e?{tag:"consultation",obs:this.consultation.buildValueDateEstimated("CxCa test date",t)}:{tag:"consultation",obs:this.consultation.buildValueDate("CxCa test date",t)},estimation:{allowUnknown:!0,estimationFieldType:j.MONTH_ESTIMATE_FIELD}}),{id:"previous_side_effects",helpText:"Side effects / Contraindications history",type:l.TT_DATA_TABLE,init:async()=>(this.sideEffectsHistory=await this.consultation.getDrugSideEffects(),!0),config:{columns:()=>[[y.thTxt("Date"),y.thTxt("Condition"),y.thTxt("Drug induced"),y.thTxt("Drug")]],rows:()=>Object.keys(this.sideEffectsHistory).map(t=>Object.values(this.sideEffectsHistory[t]).filter(e=>!f.isEmpty(e.name)).map(e=>[y.tdDate(t),y.td(e.name),y.td(e.drug_induced?"Yes":"No"),y.td(e.drug)])).reduce((t,e)=>t.concat(e),[])}},{id:"side_effects",helpText:"Contraindications / Side effects (select either 'Yes' or 'No')",type:l.TT_MULTIPLE_YES_NO,init:async()=>(this.lastDrugsReceived=await this.consultation.getPreviousDrugs(),!0),validation:t=>this.validateSeries([()=>r.required(t),()=>r.anyEmpty(t)]),computedValue:t=>({tag:"consultation",obs:t.map(async e=>({...await this.consultation.buildValueCoded("Malawi ART side effects",e.label),child:[await this.consultation.buildValueCoded(e.label,e.value)]}))}),beforeNext:t=>this.buildSideEffectObs(t,"malawiSideEffectReasonObs"),options:(t,e)=>this.getContraindications(e)},{id:"other_side_effects",helpText:"Other Contraindications / Side effects (select either 'Yes' or 'No')",type:l.TT_MULTIPLE_YES_NO,onValue:async t=>(await this.checkIfWeightLossIsControlled(t),!0),condition:t=>this.showOtherSideEffects(t),onConditionFalse:()=>this.otherSideEffectReasonObs=[],validation:t=>this.validateSeries([()=>r.required(t),()=>r.anyEmpty(t)]),computedValue:t=>({tag:"consultation",obs:t.filter(e=>e.label!="Other (Specify)").map(async e=>({...await this.consultation.buildValueCoded("Other side effect",e.label),child:[await this.consultation.buildValueCoded(e.label,e.value)]}))}),beforeNext:t=>this.buildSideEffectObs(t,"otherSideEffectReasonObs"),options:(t,e)=>this.getOtherContraindications(e)},{id:"other_side_effect_specify",helpText:"Other Contraindications / Side effects (specify)",type:l.TT_NOTE,computedValue:async t=>({tag:"consultation",obs:{...await this.consultation.buildValueCoded("Other side effect","Other (Specify)"),child:[await this.consultation.buildValueText("Other (Specify)",t.value)]}}),condition:t=>this.inArray(t.other_side_effects,e=>e.label==="Other (Specify)"&&e.value==="Yes"),validation:t=>r.required(t)},{id:"on_tb_treatment",helpText:"On TB Treatment?",type:l.TT_SELECT,validation:t=>r.required(t),computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueCoded("TB treatment",t.value)}),options:()=>this.yesNoOptions()},{id:"tb_date_started_treatment_known",helpText:"TB treatment history",type:l.TT_YES_NO,init:async()=>{this.hasTbTreatmentDate=!1;const t=await b.getFirstValueDatetime(this.patientID,"TB treatment start date"),e=await b.getFirstValueNumber(this.patientID,"TB treatment period");if(e&&t){const i=yt(this.consultation.date).diff(t,"months");this.hasTbTreatmentDate=i<=e}return!0},validation:t=>r.required(t),condition:t=>!this.hasTbTreatmentDate&&t.on_tb_treatment.label==="Yes",options:()=>[{label:"Date started treatment known?",values:this.yesNoOptions()}]},...H({id:"tb_start_date",helpText:"Enter start date for treatment?",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>b.getSessionDate(),condition:t=>t.tb_date_started_treatment_known==="Yes",computeValue:t=>({tag:"consultation",obs:this.consultation.buildValueDate("TB treatment start date",t)}),estimation:{allowUnknown:!1}}),{id:"tb_treatment_period",helpText:"Enter Full TB Treatment Period (In Months)",type:l.TT_NUMBER,validation:t=>r.validateSeries([()=>r.required(t),()=>r.isNumber(t),()=>r.rangeOf(t,3,9)]),condition:t=>t.tb_date_started_treatment_known==="Yes",computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueNumber("TB treatment period",t.value)})},{id:"tb_side_effects",helpText:"TB Associated symptoms",type:l.TT_MULTIPLE_YES_NO,onValue:async t=>(await this.checkIfWeightLossIsControlled(t),!0),validation:t=>this.validateSeries([()=>r.required(t),()=>r.anyEmpty(t)]),condition:t=>t.on_tb_treatment.value.match(/no/i),options:(t,e)=>this.getTBSymptoms(e),computedValue:t=>({tag:"consultation",obs:t.map(async e=>({...await this.consultation.buildValueCoded("Routine TB Screening",e.label),child:[await this.consultation.buildValueCoded(e.label,e.value)]}))})},{id:"tb_screening_testing_methods",helpText:"TB screening method used",type:l.TT_MULTIPLE_YES_NO,validation:t=>r.anyEmpty(t),condition:t=>t.on_tb_treatment.value.match(/no/i),options:t=>{var e,i;return[{label:"chest x-ray",value:((e=(t.tb_screening_testing_methods||[])[0])==null?void 0:e.value)||"",other:{values:this.yesNoOptions(),resultOptions:[{label:"Abnormal",value:"Positive"},{label:"Normal",value:"Negative"}]}},{label:"Molecular WHO Recommended Rapid Diagnostic test",value:((i=(t.tb_screening_testing_methods||[])[1])==null?void 0:i.value)||"",other:{values:this.yesNoOptions(),resultOptions:[{label:"Positive",value:"Positive"},{label:"Negative",value:"Negative"}]}}]}},{id:"tb_screening_testing_results",helpText:"TB screening result",type:l.TT_MULTIPLE_YES_NO,validation:t=>r.required(t),condition:t=>t.tb_screening_testing_methods.some(e=>e.value==="Yes"),options:t=>t.tb_screening_testing_methods.filter(i=>i.value==="Yes").map(i=>{var n;return{value:((n=(t.tb_screening_testing_results||[]).find(o=>o.label===i.label)||[])==null?void 0:n.value)||"",label:i.label,other:{values:i.other.resultOptions}}}),computedValue:t=>({tag:"consultation",obs:t.map(async e=>({...await this.consultation.buildValueCoded("TB screening method used",e.label),child:[await this.consultation.buildValueCoded(e.label,e.value)]}))})},{id:"tb_status",helpText:"TB Status",type:l.TT_SELECT,validation:t=>r.required(t),condition:t=>t.tb_screening_testing_results?this.isRapidTestPositive(t):this.hasTBSymptoms(t),onConditionFalse:()=>this.TBSuspected=!1,defaultValue:()=>"TB Suspected",beforeNext:async t=>(this.isTBSuspect(t)&&await F("Lab Order","The patient is a TB suspect. Do you want to take lab orders?","",[{name:"Order now",slot:"start",color:"success"},{name:"NOT now",slot:"end",color:"danger"}])==="Order now"&&this.labOrderFieldContext.launchOrderSelection(["TB Microscopic Exam","GeneXpert","Culture & Sensitivity","TB Tests"]),!0),options:()=>this.mapStrToOptions(["TB NOT suspected","TB Suspected","Confirmed TB Not on treatment"])},{id:"routine_tb_therapy",helpText:"TB preventive therapy (TPT) history",type:l.TT_SELECT,init:async()=>(this.hasTbHistoryObs=await this.consultation.hasTreatmentHistoryObs(),!0),validation:t=>r.required(t),condition:()=>!this.hasTbHistoryObs,computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueText("Previous TB treatment history",t.value)}),options:t=>{let e=[];return/no/i.test(t.on_tb_treatment.value)&&(e=["Currently on IPT","Currently on 3HP (RFP + INH)","Currently on INH 300 / RFP 300 (3HP)"]),e=e.concat(["Complete course of 3HP in the past (3 months RFP+INH)","Complete course of IPT in the past (min. 6 months of INH)","Aborted course of 3HP (RFP + INH) in the past","Aborted course of INH 300 / RFP 300 (3HP) in the past","Aborted course of IPT in the past","Never taken IPT or 3HP"]),this.mapStrToOptions(e)}},...H({id:"date_started_tpt",helpText:"Started TPT Treatment",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>b.getSessionDate(),condition:t=>t.routine_tb_therapy.value.match(/currently/i),computeValue:t=>t,estimation:{allowUnknown:!0,estimationFieldType:j.MONTH_ESTIMATE_FIELD}}),{id:"tpt_drugs_received",helpText:"TPT Drugs Received",required:!0,condition:t=>t.routine_tb_therapy.value.match(/currently/i),type:l.TT_ADHERENCE_INPUT,options:t=>this.getTptDrugs(t),computedValue:(t,e,i)=>({tag:"consultation",obs:t.map(async n=>{var o;return this.consultation.buildObs("TPT Drugs Received",{value_drug:((o=n==null?void 0:n.other)==null?void 0:o.drug_id)||0,value_datetime:(i==null?void 0:i.date_started_tpt)||null,value_numeric:(n==null?void 0:n.value)||0})})}),config:{titles:{label:"Drug name",value:"Tablets received"}}},{id:"tpt_tranfer_from",helpText:"Facility client is transferring in from",type:l.TT_SELECT,computedValue:({label:t})=>({tag:"consultation",obs:this.consultation.buildValueText("Location TPT last received",t)}),validation:t=>r.required(t),condition:t=>t.routine_tb_therapy.value.match(/currently/i),options:(t,e="")=>Ct(e),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"allergic_to_sulphur",helpText:"Allergic to Cotrimoxazole",type:l.TT_SELECT,validation:t=>r.required(t),computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueCoded("Allergic to sulphur",t.value)}),beforeNext:t=>(this.isAllergicToSulphur(t),!0),options:()=>this.yesNoUnknownOptions()},...this.getAdherenceFields(!0),{id:"refer_to_clinician",helpText:"Refer to clinician",type:l.TT_SELECT,condition:()=>St.isNurse(),validation:t=>r.required(t),computedValue:t=>({tag:"consultation",obs:this.consultation.buildValueCoded("Refer to clinician",t.value)}),options:()=>this.yesNoOptions()},{id:"medication_to_prescribe",proxyID:"prescription",helpText:"Medication to prescribe during this visit",type:l.TT_MULTIPLE_SELECT,init:async()=>(this.isNoneClientPatient||(this.currentWeight=Number(await this.patient.getRecentWeight()),this.autoSelect3HP=await M.get("ART_AUTO_3HP_SELECTION"),this.tptStatus=await this.consultation.getTptTreatmentStatus()),!0),beforeNext:async(t,e)=>{if(!Object.keys(this.reasonForDecliningTPTObs).length&&!this.isBreastFeeding(e)&&this.isEligibleForTpt&&!this.patientOnTpt(e)&&!t.some(i=>/3hp|ipt/i.test(i.label)))if(await U("Are you sure you want to proceed without prescribing TPT?")){const i=await k("Reasons for declining TPT","",["Patient declined","Side-effects (previous or current)","Stock-out","Starting TB treatment","Other"],[{name:"Done",slot:"start",role:"action"}]);this.reasonForDecliningTPTObs=this.consultation.buildValueText("Other reason for not seeking services",i.selection)}else return this.reasonForDecliningTPTObs={},!1;return!0},condition:t=>!t.refer_to_clinician||"".concat(t.refer_to_clinician.value).match(/no/i),validation:t=>r.required(t),computedValue:t=>({tag:"consultation",obs:this.buildMedicationOrders(t)}),onValueUpdate:(t,e)=>{const i=this.disablePrescriptions(t,e);return this.on3HPValueUpdate(i,e)},options:(t,e,i,n)=>this.medicationOrderOptions(t,n),config:{footerBtns:[{name:"Update allergic to CPT",onClickComponentEvents:{refreshOptions:(t,e,i)=>(this.allergicToSulphur=t.btnOutput==="Allergic",this.medicationOrderOptions(i,e))},onClick:()=>F("Allergic to Cotrimoxazole update","Is the patient allergic to cotrimoxazole.","",[{name:"Allergic",slot:"start",color:"success"},{name:"NOT Allergic",slot:"end"}])}]}}]}}});function Ut(t,e,i,n,o,s){const a=h("his-standard-form");return C(),R(a,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const Zt=q(Mt,[["render",Ut]]);export{Zt as default};
