import{H as d}from"./HisStandardForm-DTCBPBFW.js";import{_ as v}from"./EncounterMixin.vue_vue_type_script_lang-3aLRiEGa.js";import{bH as c,d as h,O as n,a9 as o,aa as r,aL as p,bQ as m,bP as b,a6 as f,ab as T,u as _,v as S}from"./index-DYyilVc9.js";import"./encounter_guidelines-DT95fKHF.js";import"./GuidelineEngine-D6V1_Znr.js";class s extends c{constructor(t,a){super(t,39,a)}}const V=h({components:{HisStandardForm:d},mixins:[v],data:()=>({hivService:{}}),watch:{ready:{async handler(e){e&&(this.hivService=new s(this.patient.getID(),this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){if(!await this.hivService.createEncounter())return n("Unable to create encounter");const i=await this.resolveObs({...t});if(!await this.hivService.saveObservationList(i))return n("Unable to save observations");this.nextTask()},buildDateObs(e,t,a){let i={};return t.match(/unknown/i)?i=this.hivService.buildValueText(e,"Unknown"):a?i=this.hivService.buildValueDateEstimated(e,t):i=this.hivService.buildValueDate(e,t),i},getFields(){return[{id:"hiv_status",helpText:"HIV status",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:({value:e})=>({obs:this.hivService.buildValueText("HIV status",e)}),options:()=>[{label:"Positive not ART",value:"Positive not ART"},{label:"Posititve on ART",value:"Positive on ART"},{label:"Previous negative",value:"Previous negative"},{label:"New positive",value:"New positive"},{label:"New negative",value:"New negative"},{label:"Never tested",value:"Never tested"}]},...p({id:"hiv_test_date",helpText:"HIV Test",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>s.getSessionDate(),condition:e=>e.hiv_status.value!=="Never tested",summaryLabel:"HIV test date",estimation:{allowUnknown:!0,estimationFieldType:m.MONTH_ESTIMATE_FIELD},computeValue:(e,t)=>this.buildDateObs("HIV test date",e,t)}),{id:"test_location",helpText:"HIV test location",type:o.TT_SELECT,validation:e=>r.required(e),defaultValue:()=>s.getLocationName(),computedValue:({label:e})=>({obs:this.hivService.buildValueText("HIV test location",e)}),condition:e=>e.hiv_status.value!=="Never tested",options:(e,t="")=>b(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}}]}}});function D(e,t,a,i,l,g){const u=T("his-standard-form");return _(),S(u,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}const x=f(V,[["render",D]]);export{x as default};
