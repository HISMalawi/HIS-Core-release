var b=Object.defineProperty;var y=(t,a,e)=>a in t?b(t,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[a]=e;var m=(t,a,e)=>(y(t,typeof a!="symbol"?a+"":a,e),e);import{O as v}from"./opd_report_service-CBztMTxL.js";import{S as g,d as T,D as _,L as u,_ as S,r as q,o as D,x as k,b as w}from"./index-DTBWhHAq.js";class Y extends v{constructor(){super();m(this,"regenerate");this.regenerate=!1}setRegenerate(e){this.regenerate=e}requestIDSRWeekly(){return this.getReport("generate_weekly_idsr_report",{request:"true"})}requestIDSRMonthly(){return this.getReport("generate_monthly_idsr_report",{request:"true"})}renderResults(e){const n=[];let s=1;for(const[o,l]of Object.entries(e)){const p=[],c=l,r={id:0,name:"",lessThanFiveYears:"",lessThanFiveYearsPatientIds:"",greaterThanEqualFiveYears:"",greaterThanEqualFiveYearsPatientIds:"",total:0,totalPatientIds:""};r.name=o;let d=0;r.id=s,s+=1;for(const[h,f]of Object.entries(c)){const i=f;i!=null&&(d+=i.length,r.total=d,i.length&&(p.push(...i),r.totalPatientIds=p),h=="<5yrs"&&(r.lessThanFiveYears=i.length,r.lessThanFiveYearsPatientIds=i),h==">=5yrs"&&(r.greaterThanEqualFiveYears=i.length,r.greaterThanEqualFiveYearsPatientIds=i))}n.push(r)}return n}getCSVString(e){let n="Diseases/Events/Conditions, <5 yrs, >=5 yrs, Total,\n";for(const s of e)n+="".concat(s.name,",").concat(s.lessThanFiveYears,",").concat(s.greaterThanEqualFiveYears,",").concat(s.total,",\n");return{CSVString:n}}static async getReportEpiWeeks(){const e=[];return(await g.getJson("get_weeks")).reverse().forEach(s=>{const o=s[1].split(" "),l=o[0],p=o[2],c=s[0].split("W"),r=c[0]+"/W"+c[1];e.push({name:r,start:l,end:p})}),e}static async getReportMonths(){const e=[];return(await g.getJson("get_months")).forEach(s=>{const o=s[1],l=o[0],c=o[1].split("to");e.push({name:l,start:c[0],end:c[1].trim()})}),e}}const O=T({components:{ReportTable:_},props:{clinicName:{type:String,default:""},reportparams:{type:Object,required:!0},totalOPDVisits:{type:Number,required:!0},reportName:{type:String,required:!0},periodLabel:{type:String,required:!0},periodDates:{type:String,required:!0},rangeLabel:{type:String,required:!0},range:{type:String,required:!0}},data:function(){return{tableCssTheme:"opd-report-theme",rows:[],columns:[[u.thTxt(this.reportName,{colspan:2,sortable:!1,exportable:!1})]]}},mounted(){this.initTable()},watch:{totalOPDVisits(){this.initTable()}},methods:{initTable(){const t=[];[{name:"Country:",value:"Malawi"},{name:"Reporting Facility Name:",value:this.clinicName},{name:this.rangeLabel+":",value:this.range},{name:this.periodLabel+":",value:this.periodDates},{name:"Total OPD Visits:",value:this.totalOPDVisits}].forEach(e=>{e.name!=="undefined:"&&t.push([u.td(e.name,{style:{textAlign:"left"}}),u.td(e.value,{style:{textAlign:"left"}})])}),this.rows=t}}}),R={style:{margin:"auto",width:"95%","margin-top":"1%"}};function E(t,a,e,n,s,o){const l=q("report-table");return D(),k("div",R,[w(l,{columns:t.columns,rows:t.rows,config:{tableCssTheme:t.tableCssTheme}},null,8,["columns","rows","config"])])}const C=S(O,[["render",E]]);export{C as I,Y as a};
