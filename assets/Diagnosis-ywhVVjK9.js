import{H as d}from"./HisStandardForm-D4x6GRNw.js";import{_ as p}from"./EncounterMixin.vue_vue_type_script_lang-BBWQMIB9.js";import{bT as r,bz as u,d as m,bB as h,S as g,aP as t,ao as S,ai as n,aj as v,af as _,c as f,ak as y,a as T}from"./index-DUHy09-D.js";import"./encounter_guidelines-BSirIoFm.js";import"./GuidelineEngine-D6V1_Znr.js";class o extends r{constructor(a,i){super(a,8,i)}static async getDiagnosis(a="",i=1,s=10){const c=u.getConceptID("Qech outpatient diagnosis list");return r.getJson("diagnosis",{id:c,name:a,page:i,page_size:s})}}class b extends r{constructor(a,i){super(a,105,i)}}const D=m({components:{HisStandardForm:d},mixins:[p],data:()=>({activeField:"",notesService:{},diagnosisService:{},malariaTestResult:"No"}),watch:{ready:{async handler(e){e&&(this.malariaTestResult=await h.getLatestMalariaTestResult(this.patientID),this.notesService=new b(this.patientID,this.providerID),this.diagnosisService=new o(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,a){await this.diagnosisService.createEncounter();const i=await this.resolveObs({...a,obs_datetime:g.getSessionDate()},"diagnosis");await this.diagnosisService.saveObservationList(i);const s=await this.resolveObs({...a},"notes");t.isEmpty(s)||(await this.notesService.createEncounter(),await this.notesService.saveObservationList(s)),this.nextTask()},mapListToOptions(e){return t.isEmpty(e)?[]:e.map(a=>({label:a.name,value:a.name,other:a.concept_id,isChecked:!1})).sort((a,i)=>a.label<i.label?-1:a.label>i.label?1:0)},async checkMalariaResult(e){return e.find(i=>i.label==="Malaria")?this.malariaTestResult==="Positive"?!0:await S("Patient has ".concat(this.malariaTestResult," malaria test result. Do you want to continue?")):!0},getFields(){return[{id:"primary_diagnosis",helpText:"Select primary diagnosis",type:n.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:e=>v.required(e),options:async(e,a="",i=1,s=10)=>this.mapListToOptions(await o.getDiagnosis(a,i,s)),beforeNext:async e=>await this.checkMalariaResult(e),computedValue:e=>({tag:"diagnosis",obs:e.map(({other:a})=>this.diagnosisService.buildValueCodedFromConceptId("Primary diagnosis",a))}),summaryMapValue:({value:e})=>({value:e,label:"Primary diagnosis"}),config:{isFilterDataViaApi:!0,showKeyboard:!0}},{id:"secondary_diagnosis",helpText:"Select secondary diagnosis",type:n.TT_INFINITE_SCROLL_MULTIPLE_SELECT,options:async(e,a="",i=1,s=10)=>this.mapListToOptions(await o.getDiagnosis(a,i,s)),beforeNext:async e=>await this.checkMalariaResult(e),computedValue:e=>!t.isEmpty(e)&&{tag:"diagnosis",obs:e.map(({other:a})=>this.diagnosisService.buildValueCodedFromConceptId("Secondary diagnosis",a))},summaryMapValue:({value:e})=>({value:e,label:"Secondary diagnosis"}),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"clinical_notes",helpText:"Clinical notes",type:n.TT_NOTE,computedValue:e=>e&&{tag:"notes",obs:this.notesService.buildValueText("Clinical notes construct",e.value)}}]}}});function w(e,a,i,s,c,C){const l=y("his-standard-form");return T(),f(l,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}const O=_(D,[["render",w]]);export{O as default};
