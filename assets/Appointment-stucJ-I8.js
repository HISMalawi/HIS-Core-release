import{d as w,bo as h,t as A,ad as _,ak as r,dj as m,H as l,bC as y,ae as b,aa as v,c as g,af as T,a as $}from"./index-DMkqWlw1.js";import{H as F}from"./HisStandardForm-BTvSx8oL.js";import{_ as C}from"./EncounterMixin.vue_vue_type_script_lang-D9Cxzq1d.js";import{A as f}from"./appointment_service-BIi39Fvm.js";import"./encounter_guidelines-BtwGHdk0.js";import"./GuidelineEngine-D6V1_Znr.js";const x=w({mixins:[C],components:{HisStandardForm:F},data:()=>({appointment:{}}),watch:{ready:{handler(n){n&&(this.appointment=new f(this.patientID,this.providerID),this.fields=[this.getAppointmentField()])},immediate:!0}},methods:{async onFinish(n,s){var e;await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(s)),["CxCa","ANC"].includes("".concat((e=h.getActiveApp())==null?void 0:e.applicationName))||await A(this.patientID),this.nextTask()},getAppointmentField(){const n=(t,a)=>new RegExp(t,"i").test("".concat(a));let s="",d="",e=-1,p=this.appointment.date,o=null;const i={},D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{id:"set_appointment",helpText:"Appointments booking",type:_.TT_DATE_PICKER,init:async()=>{try{const a=await this.appointment.getNextAppointment();p=a.appointment_date,o=a.drugs_run_out_date}catch(a){if(console.error(a),!await r("Next appointment/drug-runout date is not available, do you want to proceed anyway?"))return this.gotoPatientDashboard(),!0}const t=await m.appointmentLimit();return d=await m.clinicHolidays(),s=this.patient.getAge()>=18?await m.adultClinicDays():await m.peadsClinicDays(),e=t?parseInt(t):0,!0},onValue:async t=>{var u;const a=l.toStandardHisDisplayFormat(t),c=y(o).diff(t,"days");return!(o&&c>7&&!await r("\n              The selected appointment date ".concat(a," is ").concat(c," days earlier than the drug run-out date \n              ").concat(l.toStandardHisDisplayFormat(o),". \n              The client will have excess medication. \n              Do you want to proceed?\n            "))||((u=i[t])!=null||(i[t]=(await f.getDailiyAppointments(t)).length),p!==t&&(e>=1&&i[t]>=e&&await r("".concat(i[t]," clients were booked on ").concat(a),{header:"APPOINTMENT LIMIT (".concat(e,") REACHED"),cancelBtnLabel:"Proceed",confirmBtnLabel:"New date"})||n(t,d)&&!await r("".concat(a," is a clinic holiday, do you want to set an appointment?"))||!n(D[y(t).day()],s)&&!await r("".concat(a," is not a clinic day. Do you want to proceed with this date?")))))},validation:t=>b.required(t),defaultValue:()=>p,computedValue:t=>[this.appointment.buildValueDate("Appointment date",t),this.appointment.buildValueDate("Estimated date",p)],config:{hiddenFooterBtns:["Clear"],minDate:()=>this.appointment.date,maxDate:()=>o,supValue:t=>"".concat(i[t]),infoItems:t=>{var a;return((a=h.getActiveApp())==null?void 0:a.applicationName)==="CxCa"?[{label:"User set appointment date",value:l.toStandardHisDisplayFormat(t)},{label:"Appointments",value:i[t]},{label:"Appointment limit (per/day)",value:e}]:[{label:"Medication Run out Date",value:o?l.toStandardHisDisplayFormat(o):"Not available"},{label:"User set appointment date",value:l.toStandardHisDisplayFormat(t)},{label:"Appointments",value:i[t]},{label:"Appointment limit (per/day)",value:e}]}}}}}});function H(n,s,d,e,p,o){const i=T("his-standard-form");return $(),g(i,{fields:n.fields,onFinishAction:n.onFinish,skipSummary:!0,cancelDestinationPath:n.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const E=v(x,[["render",H]]);export{E as default};
