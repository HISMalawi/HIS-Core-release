System.register(["./index-legacy-B5_bWIZW.js","./HisStandardForm-legacy-Bk_2V3lo.js","./EncounterMixin.vue_vue_type_script_lang-legacy-3qg1ag9R.js","./encounter_guidelines-legacy-SSGo1c3B.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var n,i,s,a,r,o,c,l,u,d,h,p;return{setters:[e=>{n=e.bg,i=e.d,s=e.t,a=e.U,r=e.F,o=e.V,c=e._,l=e.r,u=e.o,d=e.c},e=>{h=e.H},e=>{p=e._},null,null],execute:function(){class t extends n{constructor(e,t){super(e,184,t)}}const f=i({mixins:[p],components:{HisStandardForm:h},data:()=>({reception:{}}),watch:{patient:{async handler(){this.reception=new t(this.patientID,this.providerID),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(e){if(!(await this.reception.createEncounter()))return s("Unable to create encounter");const t=e.reason_for_visit,n=await this.reception.buildValueCoded("Reason for visit",t.value);await this.reception.saveObs(n),a("Observations and encounter created!"),this.nextTask()},getFields(){return[{id:"reason_for_visit",helpText:"Reason for visit",type:r.TT_SELECT,validation:e=>o.required(e),options:()=>this.mapOptions(["Initial screening","Postponed treatment","One year subsequent check-up after treatment","Subsequent screening","Problem visit after treatment","Referral"])}]}}});e("default",c(f,[["render",function(e,t,n,i,s,a){const r=l("his-standard-form");return u(),d(r,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
