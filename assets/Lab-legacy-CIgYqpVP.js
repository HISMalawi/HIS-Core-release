System.register(["./index-legacy-u96QPI-y.js","./HisStandardForm-legacy-D_jBcchs.js","./useEncounter-legacy-BPAqCs9c.js","./util-legacy-CjANJSja.js","./commons-legacy-BjTRKIdx.js","./lab_service-legacy-B-P3hP_G.js","./isEmpty-legacy-B7wE2BKH.js","./encounter_guidelines-legacy-DRit2tAn.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,n,i,o,l,r,s,u,d,_,c,T,m,p,h,v,L,R,y,b,E,g,U,M,D,O;return{setters:[e=>{a=e.d,n=e.K,i=e.bg,o=e.dj,l=e.E,r=e.F,s=e.S,u=e.t,d=e.V,_=e.G,c=e.b3,T=e.dn,m=e.cD,p=e.o,h=e.c,v=e.w,L=e.b,R=e.cu,y=e.I,b=e.dl},e=>{E=e.H},e=>{g=e.u},e=>{U=e.g},e=>{M=e.m,D=e.r},e=>{O=e.L},null,null,null],execute:function(){e("default",a({__name:"Lab",setup(e){const t=n([]),a=new i(-1,o.LAB_ORDER),S=l(),{goToNextTask:f,patientDashboardUrl:N}=g(((e,n,i,o)=>{a.patientID=n,a.providerID=e,t.value=[(()=>{let e=[];return{id:"sample_type",helpText:"TB Test Specimens Types",type:r.TT_SELECT,requireNext:!1,init:async()=>{try{e=await s.getJson(`/programs/${s.getProgramID()}/lab_tests/panels?test_type=TB Tests`)}catch(t){return u("Unable to load samples!"),!1}return!0},computedValue:e=>({concept_id:U("SAMPLE"),value_coded:U(`${e.value}`),obs_datetime:a.date}),validation:e=>d.required(e),options:()=>M(e)}})(),(()=>{const e={};return{id:"examination",helpText:"Examination",type:r.TT_SELECT,beforeNext:async t=>{if(!e[t.other])try{const[n,i]=(await _.get(t.other)).split("_");e[t.other]=c(`${a.date} ${c().format("HH:mm:ss")}`).add(parseInt(n),i).format("YYYY-MM-DD HH:mm:ss")}catch(n){console.warn(`${n}`)}return!0},defaultValue:()=>S?.query?.test,computedValue:t=>[{concept_id:U("TEST_REQUESTED"),value_coded:U(`${t.value}`),obs_datetime:a.date},...e[t.other]?[{concept_id:U("Estimated turnaround time for result"),value_datetime:e[t.other],obs_datetime:a.date}]:[]],validation:e=>d.required(e),options:()=>[{value:"MICROSCOPY",label:"Microscopy",other:T.MICROSCOPY_RESULT_TURN_AROUND},{value:"XPERT_MTB_RIF",label:"Xpert MTB/RIF",other:T.XPERT_MTB_RIF_RESULT_TURN_AROUND},{value:"XPERT_MTB_RIF_ULTRA",label:"Xpert MTB/RIF Ultra",other:T.XPERT_MTB_RIF_ULTRA_RESULT_TURN_AROUND},{value:"CULTURE_AND_DST",label:"Culture and DST",other:T.CULTURE_AND_DST_RESULT_TURN_AROUND},{value:"LPA",label:"LPA",other:T.LPA_RESULT_TURN_AROUND},{value:"LAM",label:"LAM",other:T.LAM_RESULT_TURN_AROUND}]}})(),{id:"target_lab",helpText:"Select Lab:",type:r.TT_SELECT,computedValue:e=>({concept_id:U("LAB"),value_text:`${e.value}`,obs_datetime:a.date}),validation:e=>d.required(e),defaultValue:()=>s.getLocationName(),options:async(e,t="")=>{try{return await m(t)}catch(a){return M([`${s.getLocationName()}`])}},config:{showKeyboard:!0,isFilterDataViaApi:!0}},(()=>{let e=!1;return{id:"time_line",helpText:"Follow Up Lab Order Month for Month",type:r.TT_SELECT,init:async()=>{const t=await O.getRecentOrders(n);if(t){const n=c(t.encounter_datetime).format("YYYY-MM-DD"),i=c(a.date).diff(n,"days",!0);e=i>=28}return!0},defaultValue:()=>{const e=c(a.date).diff(o.outcomeStartDate||a.date,"months");if(!(o.isBdeMode||e<=0))return`Month ${e}`},condition:()=>e,validation:e=>d.required(e),computedValue:e=>{if("Other"!=e.value)return[{concept_id:U("FOLLOW_UP"),value_text:e.value,obs_datetime:a.date}]},options:()=>[{value:"Month 2",label:"Month 2"},{value:"Month 3",label:"Month 3"},{value:"Month 4",label:"Month 4"},{value:"Month 6",label:"Month 6"},{value:"Other",label:"Other"}]}})(),{id:"otherTimeLine",helpText:"Other Follow Up Lab Order Month for Month:",type:r.TT_NUMBER,computedValue:e=>({concept_id:U("FOLLOW_UP"),value_text:`Month ${e.value}`,obs_datetime:a.date}),validation:e=>d.required(e),condition:e=>"Other"===e.time_line.value}]}));function A(e){return S?.query?.reason?`${S?.query?.reason}`:e.time_line?.value?"FOLLOW_UP":"DIAGNOSIS"}async function I(e,t){var n;await a.createEncounter(),await a.saveObservationList([...(n=e,[{concept_id:U("TEST_TYPE"),value_coded:U("TB"),obs_datetime:a.date},{concept_id:U("REASON_FOR_TEST"),value_coded:U(A(n)),obs_datetime:a.date}]),...await D(t)]),await async function(e,t){const n={tests:[{test_type:"TB",sample_status:"N/A",target_lab:e.target_lab.value,sample_type:e.sample_type.value,recommended_examination:e.examination.value,sample_date:a.date,sending_facility:s.getLocationName(),time_line:"Other"===e.time_line?.value?`Month ${e.otherTimeLine?.value}`:e.time_line?.value||"N/A",treatment_history:"N/A",reason:e.time_line?.value?"Follow up":"Diagnosis"}],encounter_id:t,requesting_clinician:s.getUserName()};await s.postJson(`programs/${s.getProgramID()}/lab_tests/orders`,n),await b.printLabOrder(a.patientID,n.tests[0])}(e,a.encounterID),f()}return(e,a)=>(p(),h(R(y),null,{default:v((()=>[L(E,{cancelDestinationPath:R(N),onFinishAction:I,fields:t.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
