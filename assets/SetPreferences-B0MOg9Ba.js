import{d as C,r as P,u as I,aq as L,o as S,an as s,ao as c,a as v,b as A,w as E,e as N,i as g,q as x,al as R,k as V,v as k,aR as D}from"./index-CJleCCtM.js";import{a as u,A as l}from"./anc_global_props-B8x_1ZWZ.js";import{H}from"./HisStandardForm-BPNPJCrM.js";const w=C({__name:"SetPreferences",setup(M){const o=P(""),d=I(),y=L(),m=[...T(),...h(),..._()];S(()=>o.value=d.name);function r(e){return console.log("prop",e,o.value),e===o.value}async function f(e,t){try{for(const n in t)await R.set(n,t[n]),V("Property has been updated",2e3);y.back()}catch(n){console.error(n),k("An error occurred while saving the preferences")}}function _(){const e=u.CLINIC_HOLIDAYS;return[{id:e,helpText:"Set clinic holiday(s)",type:s.TT_CLINIC_HOLIDAY_PICKER,condition:()=>r(e),computedValue:t=>t.value,defaultValue:()=>l.clinicHolidays(),validation:t=>c.required(t)}]}function T(){const e=u.APPOINTMENT_LIMIT;return[{id:e,helpText:"Enter Appointment Limit",type:s.TT_NUMBER,computedValue:t=>t.value,condition:()=>r(e),defaultValue:()=>l.appointmentLimit(),validation:t=>c.required(t)}]}function h(){const e=u.CLINIC_DAYS,t=a=>a.map(p=>p.value).join(),n=a=>["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"].map(i=>({label:i,value:i,isChecked:!D.isEmpty(a)&&a.search(i)>=0}));return[{id:e,helpText:"Set Clinic day(s)",type:s.TT_MULTIPLE_SELECT,condition:()=>r(e),computedValue:a=>t(a),validation:a=>c.required(a),options:async()=>n(await l.clinicDays())}]}return(e,t)=>(v(),A(g(x),null,{default:E(()=>[N(H,{fields:m,onFinishAction:f,skipSummary:!0})]),_:1}))}});export{w as default};
