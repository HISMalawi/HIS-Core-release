import{d,H as a,n as r,F as p,t as u,_ as l,r as c,o as h,c as m}from"./index-BRM9VIxF.js";import{D}from"./dispensation_service-Nu7ni4WD.js";import{_ as f}from"./EncounterMixin.vue_vue_type_script_lang-DrAeeaXe.js";import"./drug_order_service-C-kYuFHB.js";import"./encounter_guidelines-Codu4SxN.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-IKQjpnfg.js";const _=d({mixins:[f],data:()=>({dispensation:{}}),watch:{patient:{async handler(e){this.dispensation=new D(e.getID(),this.providerID),await this.dispensation.loadCurrentDrugOrder(),await this.dispensation.loadDrugHistory(),this.fields=this.getFields()},deep:!0}},methods:{saveDispensations(e){const t=this.buildDispensations(e);return this.dispensation.saveDispensations(t)},buildDispensations(e){return this.dispensation.buildDispensations(e.other.order_id,e.value)},buildMedicationHistory(){return this.dispensation.getDrugHistory().sort((e,t)=>{const s=new Date(e.order.start_date);return new Date(t.order.start_date)-s}).map(e=>({medication:e.drug.name,date:a.toStandardHisDisplayFormat(e.order.start_date),amount:e.quantity}))},buildOrderOptions(){return this.dispensation.getCurrentOrder().map(e=>({label:e.drug.name,value:e.quantity||0,other:{drug_id:e.drug.drug_id,order_id:e.order.order_id,amount_needed:this.calculateCompletePack(e)}}))},getPackSizesRows(e,t){return this.dispensation.getDrugPackSizes(e).map(i=>{const n=t>0?t/i:"-";return[i,n,0,0]})},calculateCompletePack(e){const t=parseFloat(e.amount_needed)-(e.quantity||0),s=this.dispensation.calcCompletePack(e,t);return s<0?0:s},isDoneDispensing(e){return e.map(t=>t.value!=0).every(Boolean)},async isValidDispensation(e){let t=!0;const s=parseInt(e.value.toString()),i=e.other.amount_needed,n=s/i*100;return n>110&&(t=await r("Are you sure you want to dispense over 110% of the prescribed pill count?")),n<100&&(t=await r("Are you sure you want to dispense less than 100% of the prescribe amount?")),t},getFields(){return[{id:"dispenses",helpText:"Dispensation",type:p.TT_DRUG_DISPENSER,onValueUpdate:async(e,t)=>e.value!=-1&&this.isDoneDispensing(t)?this.nextTask():(e.other.amount_needed=0,await this.dispensation.loadCurrentDrugOrder(),this.buildOrderOptions()),onValue:async(e,t)=>e.value===-1?!!await this.dispensation.voidOrder(e.other.order_id):!t&&!await this.isValidDispensation(e)?!1:await this.saveDispensations(e)?!0:(u("Unable to save dispensation"),!1),config:{medicationHistory:this.buildMedicationHistory(),toolbarInfo:[{label:"Name",value:this.patient.getFullName()},{label:"Gender",value:this.patient.getGender()},{label:"Date Of Birth",value:a.toStandardHisDisplayFormat(this.patient.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>this.buildOrderOptions()}]}}});function g(e,t,s,i,n,y){const o=c("his-standard-form");return h(),m(o,{skipSummary:!0,cancelDestinationPath:e.cancelDestination,fields:e.fields},null,8,["cancelDestinationPath","fields"])}const H=l(_,[["render",g]]);export{H as default};
