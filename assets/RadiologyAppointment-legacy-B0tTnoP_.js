System.register(["./index-legacy-sLIX6Wy9.js","./HisStandardForm-legacy-CCaIL6NL.js","./EncounterMixin.vue_vue_type_script_lang-legacy-CBtMX9lx.js","./appointment_service-legacy-BXq11FHy.js","./encounter_guidelines-legacy-DAWGM7-g.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(t,e){"use strict";var n,i,a,s,o,p,r,l,d,c,m;return{setters:[t=>{n=t.d,i=t.bw,a=t.a9,s=t.aa,o=t.a6,p=t.ab,r=t.u,l=t.v},t=>{d=t.H},t=>{c=t._},t=>{m=t.A},null,null],execute:function(){const e=n({mixins:[c],components:{HisStandardForm:d},data:()=>({appointmentDate:"",maxAppointmentDate:"",appointment:{}}),watch:{ready:{async handler(t){t&&(this.appointment=new m(this.patientID,this.providerID),this.init())},immediate:!0}},methods:{async onFinish(t,e){await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(e,"obs")),this.gotoPatientDashboard()},init(){this.appointmentDate=m.getSessionDate(),this.maxAppointmentDate=i(this.appointmentDate).add(100,"year").format("YYYY-MM-DD"),this.fields=this.getFields()},getFields(){return[{id:"set_appointment",helpText:"Appointments booking",type:a.TT_APPOINTMENTS_ENTRY,validation:t=>s.required(t),computedValue:t=>({tag:"obs",obs:[this.appointment.buildValueDate("Appointment date",t.value)]}),config:{patientAge:this.patient.getAge(),hideRunoutDate:!0,hiddenFooterBtns:["Clear"]},options:()=>[{label:"",value:"",other:{runOutDate:this.maxAppointmentDate,appointmentDate:this.appointmentDate}}]}]}}});t("default",o(e,[["render",function(t,e,n,i,a,s){const o=p("his-standard-form");return r(),l(o,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
