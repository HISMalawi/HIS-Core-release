System.register(["./index-legacy-Ck8hVlzC.js","./HisStandardForm-legacy-OroqgFde.js","./EncounterMixin.vue_vue_type_script_lang-legacy-CMucVhxt.js","./PersonFieldHelper-legacy-CUctGHgl.js","./encounter_guidelines-legacy-DVc17SEf.js","./GuidelineEngine-legacy-KsvQuFdF.js","./LocationFieldOptions-legacy-UgaUiM8M.js","./storage-legacy-CIkBlJKf.js"],(function(e,t){"use strict";var i,n,a,s,l,o,c,r,p,y,d,u,h;return{setters:[e=>{i=e.d,n=e.bb,a=e.t,s=e.U,l=e.F,o=e.V,c=e._,r=e.r,p=e.o,y=e.c},e=>{d=e.H},e=>{u=e._},e=>{h=e.P},null,null,null,null],execute:function(){const t=i({mixins:[u],components:{HisStandardForm:d},data:()=>({patientType:{}}),watch:{ready:{async handler(e){e&&(this.patientType=new n(this.patientID,this.providerID),await this.patientType.loadPatientType(),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e){if(!(await this.patientType.createEncounter()))return a("Unable to create encounter");this.patientType.setLocationName(e?.location?.label),this.patientType.setPatientType(e?.patient_type?.value),await this.patientType.save(),s("Observations and encounter created!"),this.nextTask()},facilityLocationField(){const e=h.getFacilityLocationField();return e.condition=e=>["Emergency supply","External consultation"].includes(e.patient_type.value),e},getFields(){return[{id:"patient_type",helpText:`Current type: ${this.patientType.getType()}`,type:l.TT_SELECT,validation:e=>o.required(e)||o.notTheSame(e.value,this.patientType.getType()),options:()=>n.getPatientTypes()},this.facilityLocationField()]}}});e("default",c(t,[["render",function(e,t,i,n,a,s){const l=r("his-standard-form");return p(),y(l,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
