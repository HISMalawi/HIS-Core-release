var b=Object.defineProperty;var w=(s,t,e)=>t in s?b(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var u=(s,t,e)=>w(s,typeof t!="symbol"?t+"":t,e);import{O as R}from"./opd_report_service-56DRmHjV.js";import{d as S,aq as C,as as n,bC as D,ao as c,aa as v,af as _,a as I,E as $,b as y}from"./index-CMZASHAR.js";class h extends R{constructor(){super();u(this,"regenerate");this.regenerate=!1}setRegenerate(e){this.regenerate=e}requestHMIS15(){return this.getReport("generate_hmis_15_report",{request:"true"})}requestHMIS17(){return this.getReport("generate_hmis_17_report",{request:"true"})}renderResults(e){const r=[];let o=1;for(const[i,d]of Object.entries(e)){const m=[],g=d,a={id:0,name:"",total:0,totalPatientIds:""};a.name=i;let p=0;a.id=o,o+=1;for(const[x,f]of Object.entries(g)){const l=f;l!=null&&(p+=l.length,a.total=p,l.length&&(m.push(...l),a.totalPatientIds=m))}r.push(a)}return r}getCSVString(e){let r="Diseases/Events/Conditions, #,\n";for(const o of e){const i="".concat(o.name,",").concat(o.total,",\n");r+=i}return{CSVString:r}}}const V=S({components:{ReportTable:C},data:function(){return{conditions:[],tableCssTheme:"opd-report-theme",total:" Total ",rows:[],columns:[[n.thTxt(""),n.thTxt("Diseases/Events/Conditions"),n.thTxt("UNVERIFIED"),n.thTxt("VERIFIED")]]}},props:["params","periodDates","quarter","onDrillDown","reportName"],methods:{renderResults(){const t=new h().renderResults(this.params);t.length&&(this.conditions=t,this.rows=this.buildRows(t))},onDownload(s=""){const t=new h;let{CSVString:e}=t.getCSVString(this.conditions);e+="\n          Date Created: ".concat(D().format("DD/MMM/YYYY HH:MM:ss"),"\n          His-Core Version: ").concat(c.getCoreVersion(),"\n          API Version: ").concat(c.getApiVersion(),"\n          Report Period: ").concat(this.periodDates,"\n          Site: ").concat(c.getLocationName(),"\n          Site UUID: ").concat(c.getSiteUUID());const r=new Blob([e],{type:"text/csv;charset=utf-8;"});if(navigator.msSaveBlob)navigator.msSaveBlob(r,"exportFilename");else{const o=document.createElement("a");o.href=window.URL.createObjectURL(r),o.setAttribute("download","".concat(s,".csv")),document.body.appendChild(o),o.click(),document.body.removeChild(o)}},buildRows(s){const t=[];return s.forEach(e=>{t.push([n.td(e.id,{style:{textAlign:"left"}}),n.td(e.name,{style:{textAlign:"left"}}),this.buildRow(this.total+"("+e.name+")",e.total,e.totalPatientIds),n.td("")])}),t},buildRow(s,t,e){return t>0?n.tdLink(t,async()=>this.onDrillDown(s,e)):n.td(0)}},watch:{params:{immediate:!0,handler(){this.renderResults()}}}}),E={class:"my-table",style:{margin:"auto",width:"95%","margin-top":"3%","margin-bottom":"3%"}};function T(s,t,e,r,o,i){const d=_("report-table");return I(),$("div",E,[y(d,{columns:s.columns,rows:s.rows,config:{tableCssTheme:s.tableCssTheme}},null,8,["columns","rows","config"])])}const U=v(V,[["render",T]]);export{U as H,h as a};
