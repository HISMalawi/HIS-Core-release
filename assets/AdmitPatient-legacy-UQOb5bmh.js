System.register(["./HisStandardForm-legacy-DbOiuJqi.js","./index-legacy-DgZ-kNry.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./useEncounter-legacy-DGpznVbh.js","./TouchScreenForm-legacy-DgN0xr5C.js","./ToolbarMediumCard-legacy-BnrK577U.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-Dz1OZJfn.js","./isEmpty-legacy-C5BV1v68.js","./_Set-legacy-BS31gyZk.js","./_setToArray-legacy-2bTt1uIx.js","./encounter_guidelines-legacy-09xzgRbO.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var n,a,l,i,s,r,o,c,u,d,y,g,f,m,p,j,w;return{setters:[e=>{n=e.H},e=>{a=e.b5,l=e.d,i=e.K,s=e.V,r=e.U,o=e.t,c=e.n,u=e.q,d=e.o,y=e.c,g=e.w,f=e.b,m=e.cl,p=e.I},e=>{j=e.F},e=>{w=e.u},null,null,null,null,null,null,null,null,null],execute:function(){class t extends a{constructor(e,t){super(e,42,t)}}e("default",l({__name:"AdmitPatient",setup(e){const a=i([]);let l;const{goToNextTask:b,patientDashboardUrl:S}=w(((e,n)=>{l=new t(n,e),a.value.push({id:"internal_sections",helpText:"Select Ward/internal section",type:j.TT_SELECT,validation:e=>s.required(e),computedValue:e=>l.buildValueText("Admit to ward",e.label),options:()=>r.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,t,n)=>{if("string"!=typeof n.filter||n.filter.length<3)return o("Please enter a valid section name");if(n.filtered.some((e=>e.label.toLowerCase()===n.filter.toLowerCase())))return o("Section already existing");if(await c("Do you want to add internal section?")){const e=await r.createInternalSection(n.filter.toUpperCase());e?(n.filter=e.name,n.listData=[{label:e.name,value:e.id},...n.listData]):u(`Unable to add ${n.filter}`)}}}]}})}));async function T(e,t){const n=await Promise.all([t.internal_sections]);await l.createEncounter(),await l.saveObservationList(n),b()}return(e,t)=>(d(),y(m(p),null,{default:g((()=>[f(n,{cancelDestinationPath:m(S),fields:a.value,onFinishAction:T,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
