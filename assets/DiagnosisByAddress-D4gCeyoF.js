import{O as d}from"./opd_report_service-CCLaY2r4.js";import{R as c}from"./BaseTableReport-Bq9Sw8Di.js";import{d as m,a5 as u,ao as s,aq as n,aJ as h,a6 as f,ab as a,u as g,v as _,w,x as D}from"./index-BMAYi21T.js";import{_ as v}from"./ReportMixin.vue_vue_type_script_lang-CllhnKBZ.js";import{D as C}from"./DrillPatientIds-CDtgPf-H.js";import"./Export-DiZfIoLN.js";import"./index-kLs9SbG0.js";import"./HisStandardForm-C-rxOndE.js";import"./BasicReportTemplate-MtAknTr7.js";import"./Pagination-DWMBk9bi.js";import"./TableView-BzjzjVBH.js";const b=m({components:{ReportTemplate:c,IonPage:u},mixins:[v],data:()=>({title:"OPD diagnosis by address report",rows:[],reportService:{},columns:[[s.thTxt("Address"),s.thTxt("Diagnosis"),s.thTxt("Count")]]}),created(){this.fields=this.getDateDurationFields()},methods:{async init(t,e){this.reportService=new d,this.reportService.setStartDate(e.start_date),this.reportService.setEndDate(e.end_date),this.period=this.reportService.getDateIntervalPeriod(),this.rows=this.buildRows(await this.reportService.getDiagnosisByAddress())},async drill(t,e){!t||!t.length||(await n.create({component:C,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:e,patientIdentifiers:t,subtitle:this.period,onFinish:()=>n.getTop().then(o=>o&&n.dismiss())}})).present()},totalDiagnosis(t){return Object.values(t).reduce((e,o)=>e+o,0)},buildRows(t){const e=[];if(h.isEmpty(t))return e;for(const o in t)for(const r in t[o]){const i=t[o][r];e.push([s.td(r),s.td(o),s.tdLink(i.length,()=>this.drill(i,r))])}return e}}});function S(t,e,o,r,i,R){const p=a("report-template"),l=a("ion-page");return g(),_(l,null,{default:w(()=>[D(p,{title:t.title,rows:t.rows,fields:t.fields,columns:t.columns,period:t.period,reportPrefix:"Clinic",onReportConfiguration:t.init},null,8,["title","rows","fields","columns","period","onReportConfiguration"])]),_:1})}const j=f(b,[["render",S]]);export{j as default};
