import{d as h,ag as C,r as l,as as s,o as H,bs as b,af as x,a as v,c as g,w as o,b as a,u as i,X as I,Y as N,K as u,_ as P,aq as T,cu as k,I as A,H as D,aa as L}from"./index-DxMuvVt8.js";import{A as c}from"./anc_global_props-BfWIHtoJ.js";const R=["innerHTML"],B={class:"report-content"},M=h({__name:"AllPreferences",setup(V){const p=C(),r={style:{wordWrap:"break-word",maxWidth:"130px"}},_=[{name:"finish",color:"success",slot:"end",visible:!0,size:"large",onClick:()=>p.push("/")}],m=l("Systems settings"),d=l([]),f=l([[s.thTxt("Property"),s.thTxt("Value",r)]]);async function y(){const t=await c.clinicHolidays();return t&&t.split(",").map(e=>D.toStandardHisDisplayFormat(e)).join(", ")}async function w(){const t=await c.clinicDays(),e=await y(),n=await c.appointmentLimit();return[[s.td("Appointment limit"),s.td(n||"Not set")],[s.td("Clinic days"),s.td(t||"Not set")],[s.td("Clinic holidays"),s.td(e||"Not set",r)]]}return H(async()=>{const t=await b.create({});t.present(),d.value=await w(),t.dismiss()}),(t,e)=>{const n=x("ion-title");return v(),g(i(A),null,{default:o(()=>[a(i(I),null,{default:o(()=>[a(i(N),null,{default:o(()=>[a(n,null,{default:o(()=>[u("span",{innerHTML:m.value},null,8,R)]),_:1})]),_:1})]),_:1}),a(i(P),null,{default:o(()=>[u("div",B,[a(T,{rows:d.value,columns:f.value},null,8,["rows","columns"])])]),_:1}),a(k,{btns:_,color:"dark"})]),_:1})}}}),S=L(M,[["__scopeId","data-v-c97510c2"]]);export{S as default};
