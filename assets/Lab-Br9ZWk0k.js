import{d as N,r as A,bI as x,bN as F,am as P,a9 as c,aj as l,O as w,dR as n,aa as _,a7 as I,bu as m,dV as p,d9 as C,dP as B,u as $,v as V,w as Y,x as q,y as f,a5 as H,bM as k}from"./index-NAoeW21C.js";import{H as W}from"./HisStandardForm-CXhLIcKl.js";import{u as G}from"./useEncounter-CqRF7dg9.js";import{m as O,r as X}from"./commons-wGx5iTzv.js";import"./isEmpty-DgCfUlPp.js";import"./encounter_guidelines-BcchET4O.js";import"./GuidelineEngine-D6V1_Znr.js";const ae=N({__name:"Lab",setup(j){const v=A([]),a=new x(-1,F.LAB_ORDER),i=P();async function y(o,r){var s,T,h,b;const d={tests:[{test_type:"TB",sample_status:"N/A",target_lab:o.target_lab.value,sample_type:o.sample_type.value,recommended_examination:o.examination.value,sample_date:a.date,sending_facility:l.getLocationName(),time_line:((s=o.time_line)==null?void 0:s.value)==="Other"?"Month ".concat((T=o.otherTimeLine)==null?void 0:T.value):((h=o.time_line)==null?void 0:h.value)||"N/A",treatment_history:"N/A",reason:(b=o.time_line)!=null&&b.value?"Follow up":"Diagnosis"}],encounter_id:r,requesting_clinician:l.getUserName()};await l.postJson("programs/".concat(l.getProgramID(),"/lab_tests/orders"),d),await k.printLabOrder(a.patientID,d.tests[0])}const{goToNextTask:E,patientDashboardUrl:R}=G((o,r,d,s)=>{a.patientID=r,a.providerID=o;const T=()=>{let t=[];return{id:"sample_type",helpText:"TB Test Specimens Types",type:c.TT_SELECT,requireNext:!1,init:async()=>{try{t=await l.getJson("/programs/".concat(l.getProgramID(),"/lab_tests/panels"),{test_type:"TB Tests"})}catch(e){return w("Unable to load samples!"),!1}return!0},computedValue:e=>({concept_id:n("SAMPLE"),value_coded:n("".concat(e.value)),obs_datetime:a.date}),validation:e=>_.required(e),options:()=>O(t)}},h=()=>{const t={};return{id:"examination",helpText:"Examination",type:c.TT_SELECT,beforeNext:async e=>{if(!t[e.other])try{const[u,L]=(await I.get(e.other)).split("_");t[e.other]=m("".concat(a.date," ").concat(m().format("HH:mm:ss"))).add(parseInt(u),L).format("YYYY-MM-DD HH:mm:ss")}catch(u){console.warn("".concat(u))}return!0},defaultValue:()=>{var e;return(e=i==null?void 0:i.query)==null?void 0:e.test},computedValue:e=>[{concept_id:n("TEST_REQUESTED"),value_coded:n("".concat(e.value)),obs_datetime:a.date},...t[e.other]?[{concept_id:n("Estimated turnaround time for result"),value_datetime:t[e.other],obs_datetime:a.date}]:[]],validation:e=>_.required(e),options:()=>[{value:"MICROSCOPY",label:"Microscopy",other:p.MICROSCOPY_RESULT_TURN_AROUND},{value:"XPERT_MTB_RIF",label:"Xpert MTB/RIF",other:p.XPERT_MTB_RIF_RESULT_TURN_AROUND},{value:"CULTURE_AND_DST",label:"Culture and DST",other:p.CULTURE_AND_DST_RESULT_TURN_AROUND},{value:"LPA",label:"LPA",other:p.LPA_RESULT_TURN_AROUND},{value:"LAM",label:"LAM",other:p.LAM_RESULT_TURN_AROUND}]}},b=()=>({id:"target_lab",helpText:"Select Lab:",type:c.TT_SELECT,computedValue:t=>({concept_id:n("LAB"),value_text:"".concat(t.value),obs_datetime:a.date}),validation:t=>_.required(t),defaultValue:()=>l.getLocationName(),options:async(t,e="")=>{try{return await C(e)}catch(u){return O(["".concat(l.getLocationName())])}},config:{showKeyboard:!0,isFilterDataViaApi:!0}}),U=()=>{let t=!1;return{id:"time_line",helpText:"Follow Up Lab Order Month for Month",type:c.TT_SELECT,init:async()=>{const e=await B.getRecentOrders(r);if(e){const u=m(e.encounter_datetime).format("YYYY-MM-DD");t=m(a.date).diff(u,"days",!0)>=28}return!0},defaultValue:()=>{const e=m(a.date).diff(s.outcomeStartDate||a.date,"months");if(!(s.isBdeMode||e<=0))return"Month ".concat(e)},condition:()=>t,validation:e=>_.required(e),computedValue:e=>{if(e.value!="Other")return[{concept_id:n("FOLLOW_UP"),value_text:e.value,obs_datetime:a.date}]},options:()=>[{value:"Month 2",label:"Month 2"},{value:"Month 3",label:"Month 3"},{value:"Month 4",label:"Month 4"},{value:"Month 6",label:"Month 6"},{value:"Other",label:"Other"}]}},g=()=>({id:"otherTimeLine",helpText:"Other Follow Up Lab Order Month for Month:",type:c.TT_NUMBER,computedValue:t=>({concept_id:n("FOLLOW_UP"),value_text:"Month ".concat(t.value),obs_datetime:a.date}),validation:t=>_.required(t),condition:t=>t.time_line.value==="Other"});v.value=[T(),h(),b(),U(),g()]});function S(o){var r,d,s;return(r=i==null?void 0:i.query)!=null&&r.reason?"".concat((d=i==null?void 0:i.query)==null?void 0:d.reason):(s=o.time_line)!=null&&s.value?"FOLLOW_UP":"DIAGNOSIS"}function M(o){return[{concept_id:n("TEST_TYPE"),value_coded:n("TB"),obs_datetime:a.date},{concept_id:n("REASON_FOR_TEST"),value_coded:n(S(o)),obs_datetime:a.date}]}async function D(o,r){await a.createEncounter(),await a.saveObservationList([...M(o),...await X(r)]),await y(o,a.encounterID),E()}return(o,r)=>($(),V(f(H),null,{default:Y(()=>[q(W,{cancelDestinationPath:f(R),onFinishAction:D,fields:v.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{ae as default};
