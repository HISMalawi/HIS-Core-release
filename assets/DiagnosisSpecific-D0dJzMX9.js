import{d as w,K as s,I as C,c2 as $,N as y,c9 as i,O as n,V as d,_ as P,r as c,o as S,c as E,w as F,b as T}from"./index-ChqjXh1q.js";import{v as A}from"./TableView-Dbc9dIVk.js";import{M as I}from"./PopupKeyboard-h_Nt-BNV.js";import{F as u}from"./dynamic-import-helper-Bsjrd6Ro.js";import{P as R}from"./patient_diagnosis_service-DPnEdM0F.js";import{A as V}from"./aetc_report_service-D2F_FjwV.js";import{D as k}from"./DrillPatientIds-D4-hDdyG.js";import"./Export-C9Hhxwb2.js";import"./SIngleTouchField-BdybEVDH.js";import"./TouchScreenForm-Bp625zJI.js";import"./ToolbarMediumCard-NV07rtjo.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-DBgU2Ffk.js";import"./HisKeypad-WzzlrmYQ.js";import"./BaseKeyboard-pj9TNcmG.js";import"./KbLayouts-VRA-vjeH.js";import"./KbHandler-BuQ4TFU6.js";import"./TableView-D5d-HKAd.js";import"./fuse-YdZE3OCN.js";import"./HisKeyboard-BFJHNqBd.js";import"./HisKbConfigurations-GhFQZvlg.js";const m=s([]),r=s(""),l=s(""),g=s(""),M=s(!1),b=s(""),v=s(""),N=w({components:{IonPage:C,IonLoading:$,v2Datatable:A},setup(){const t=async()=>{const e=new V;e.startDate=r.value,e.endDate=l.value,e.multipleDiagnosis=v.value;try{const a=await e.getClinicReport("diagnosis_specific_report");m.value=a}catch(a){console.log(a)}},f=e=>e.map(a=>({label:a.name,value:a.name})),_=async(e,a)=>{a.length<=0||(await n.create({component:k,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:e,subtitle:g,patientIdentifiers:a,onFinish:()=>n.getTop().then(o=>o&&n.dismiss())}})).present()},D=["Address","Total"],h=[[{label:"Address",ref:"data.address",value:e=>e.address},{label:"Total",ref:"data.patient_ids.length",secondaryLabel:"Clients diagnosed with",value:e=>e.patient_ids.length,tdClick:({column:e,data:a})=>_("".concat(e.secondaryLabel," ").concat(a.address," "),a.patient_ids)}]],p=()=>I([{id:"multiple_diagnosis",helpText:"Select diagnosis",type:u.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:e=>d.required(e),options:async(e,a="",o=1,L=10)=>f(await R.getDiagnosis(a,o,L)),computedValue:e=>e.map(a=>a.value),config:{isFilterDataViaApi:!0,showKeyboard:!0}},{id:"start_date",helpText:"Start Date",type:u.TT_FULL_DATE,validation:e=>d.required(e),computedValue:e=>e.value},{id:"end_date",helpText:"End Date",type:u.TT_FULL_DATE,validation:e=>d.required(e),computedValue:e=>e.value}],(e,a)=>{r.value=a.start_date,l.value=a.end_date,v.value="[".concat(a.multiple_diagnosis.map(o=>'"'.concat(o,'"')).join(", "),"]"),console.log("Here we are",v.value),g.value="Period (".concat(i(r.value)," to ").concat(i(l.value),")"),n.dismiss(),b.value="".concat(i(r.value)," to ").concat(i(l.value)),t()});return y(()=>!m.value.length&&p()),{columns:h,isLoading:M,reportData:m,period:g,csvQuarter:b,csvheaders:D,generate:t,configure:p}}});function Q(t,f,_,D,h,p){const e=c("ion-loading"),a=c("v2Datatable"),o=c("ion-page");return S(),E(o,null,{default:F(()=>[T(e,{"is-open":t.isLoading,message:"Please wait..."},null,8,["is-open"]),T(a,{title:"Diagnosis Specific Report",subtitle:t.period,columns:t.columns,columnData:t.reportData,rowsPerPage:25,onConfigure:t.configure,csvQuarter:t.csvQuarter,headers:t.csvheaders,onRefresh:()=>t.generate()},null,8,["subtitle","columns","columnData","onConfigure","csvQuarter","headers","onRefresh"])]),_:1})}const ne=P(N,[["render",Q]]);export{ne as default};
