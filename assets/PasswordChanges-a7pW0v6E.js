import{d as D,r as s,o as v,D as b,a as h,b as w,w as C,e as p,f as l,v as P,x,m as _,z as i,B as y,q as V,y as k}from"./index-DrAzzURJ.js";import{v as f}from"./TableView-BsrlHHo8.js";import{D as M}from"./data_verification_service-CCjVcuDX.js";import"./Export-CbpvcCGj.js";import"./index-CKDW3HWh.js";const H=D({__name:"PasswordChanges",setup(Y){const c=s([]),d=s(""),n=s(!1),r=new M,g=[[{label:"#",ref:"index"},{label:"User",ref:"provider"},{label:"Count",ref:"count"},{label:"View",ref:"drilldown",toValue:()=>"View",tdClick:async e=>{e.refData.length&&(await i.create({component:f,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:e.data.provider,columns:[[{label:"#",ref:"index"},{label:"Date changed",ref:"date",toValue:a=>y(a).format("DD/MMM/YYYY HH:mm:ss")}]],rowsPerPage:100,columnData:e.refData.reduce((a,t,o)=>[...a,{...t,index:o+1}],[]),onFinish:()=>i.getTop().then(a=>a&&i.dismiss())}})).present()}}]],u=async()=>{if(!(r.startDate&&r.endDate))return V("Start date and end date required!");n.value=!0;try{const e=await r.getPasswordChanges();c.value=Object.keys(e).reduce((a,t,o)=>[...a,{index:o+1,provider:t,count:e[t].length,drilldown:e[t]}],[])}catch(e){console.error(e),k("Unable to generate report!")}n.value=!1},m=()=>b({onFinish:(e,a,t)=>{d.value=t,r.startDate=e,r.endDate=a,u()}});return v(()=>m()),(e,a)=>(w(),h(l(_),null,{default:C(()=>[p(l(P),{"is-open":n.value,message:"Please wait.."},null,8,["is-open"]),p(f,{"icon-url":l(x)("reports.png"),title:"Password changes","report-prefix":"Clinic",subtitle:d.value,columns:g,columnData:c.value,rowsPerPage:100,onConfigure:m,onRefresh:u},null,8,["icon-url","subtitle","columnData"])]),_:1}))}});export{H as default};
