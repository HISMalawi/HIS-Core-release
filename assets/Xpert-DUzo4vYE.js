import{d as g,r as N,bT as L,bY as B,au as x,ai as p,aj as r,e0 as i,e2 as U,a as V,c as k,w as q,b as G,u as M,bp as X,e7 as Y,bX as I,aY as $,f as j,d_ as W,b0 as D}from"./index-DUHy09-D.js";import{H}from"./HisStandardForm-D4x6GRNw.js";import{u as z}from"./useEncounter-fu9GEntY.js";import{r as J}from"./commons-BaXeoV8t.js";import"./isEmpty-DIE1IIn6.js";import"./encounter_guidelines-BSirIoFm.js";import"./GuidelineEngine-D6V1_Znr.js";const oe=g({__name:"Xpert",setup(K){const f=N([]),a=new L(-1,B.LAB_RESULTS),h=N(),b=x(),{goToNextTask:d,facts:y,patientDashboardUrl:C}=z((n,s,E)=>{a.patientID=s,a.providerID=n,h.value=E;const l=()=>({id:"xpertSampleOneResult",helpText:"Sample One Result:",type:p.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({concept_id:i("SAMPLE_ONE_GENEXPERT_RESULT"),value_coded:i("".concat(e.value)),obs_datetime:a.date}),options:()=>[{value:"MTB_NOT_DETECTED",label:"MTB not detected"},{value:"MTB_DETECTED",label:"MTB detected"},{value:"MTB_NO_RESULT",label:"No result"},{value:"MTB_ERROR",label:"Error"},{value:"MTB_INVALID",label:"Invalid"}]}),T=()=>({id:"sampleOneRifResistancePattern",helpText:"Sample One RIF Resistance:",type:p.TT_SELECT,validation:e=>r.required(e),condition:e=>e.xpertSampleOneResult.value==="MTB_DETECTED",computedValue:e=>({concept_id:i("SAMPLE_ONE_RIF_RESISTANCE_PATTERN"),value_coded:i("".concat(e.value)),obs_datetime:a.date}),options:()=>[{value:"RIF_RESISTANT_NOT_DETECTED",label:"RIF resistant not detected"},{value:"RIF_RESISTANT_DETECTED",label:"RIF resistant detected"},{value:"RIF_RESISTANT_INDETERMINATE",label:"RIF resistant indeterminate"}]}),_=()=>({id:"sampleOneResultDate",helpText:"Sample One Result Date:",type:p.TT_FULL_DATE,validation:e=>r.validateSeries([()=>r.required(e),()=>r.dateRangeOf(e,"".concat(b.query.date),a.date)]),computedValue:e=>({concept_id:i("SAMPLE_ONE_GENEXPERT_RESULT_DATE"),value_datetime:e.value,obs_datetime:a.date})}),m=()=>({id:"xpertSampleTwoResult",helpText:"Sample Two Result:",type:p.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({concept_id:i("SAMPLE_TWO_GENEXPERT_RESULT"),value_coded:i("".concat(e.value)),obs_datetime:a.date}),options:()=>[{value:"MTB_NOT_DETECTED",label:"MTB not detected"},{value:"MTB_DETECTED",label:"MTB detected"},{value:"MTB_NO_RESULT",label:"No result"},{value:"MTB_ERROR",label:"Error"},{value:"MTB_INVALID",label:"Invalid"}],condition:e=>{var c;return/invalid|error|no_result/i.test(e.xpertSampleOneResult.value)||/RIF_RESISTANT_INDETERMINATE|RIF_RESISTANT_DETECTED/i.test((c=e.sampleOneRifResistancePattern)==null?void 0:c.value)}}),v=()=>({id:"sampleTwoRifResistancePattern",helpText:"Sample Two RIF Resistance:",type:p.TT_SELECT,validation:e=>r.required(e),condition:e=>e.xpertSampleTwoResult.value==="MTB_DETECTED",computedValue:(e,c)=>[{concept_id:i("SAMPLE_TWO_RIF_RESISTANCE_PATTERN"),value_coded:i("".concat(e.value)),obs_datetime:a.date},...(()=>{var R;return((R=c.sampleOneRifResistancePattern)==null?void 0:R.value)==="RIF_RESISTANT_DETECTED"&&e.value==="RIF_RESISTANT_DETECTED"?[{concept_id:i("TB_DRUG_RESISTANT"),value_coded:U("Rifampicin (300mg)"),obs_datetime:a.date},{concept_id:i("Resistance classification"),value_coded:i("Mono drug resistant"),obs_datetime:a.date}]:[]})()],options:()=>[{value:"RIF_RESISTANT_NOT_DETECTED",label:"RIF resistant not detected"},{value:"RIF_RESISTANT_DETECTED",label:"RIF resistant detected"},{value:"RIF_RESISTANT_INDETERMINATE",label:"RIF resistant indeterminate"}]}),S=()=>({id:"sampleTwoResultDate",helpText:"Sample Two Result Date:",type:p.TT_FULL_DATE,condition:e=>e.xpertSampleTwoResult.value,validation:e=>r.validateSeries([()=>r.required(e),()=>r.dateRangeOf(e,"".concat(b.query.date),a.date)]),computedValue:e=>({concept_id:i("SAMPLE_TWO_GENEXPERT_RESULT_DATE"),value_datetime:e.value,obs_datetime:a.date})});f.value=[l(),T(),_(),m(),v(),S()]});function F(n){var l,T;const s=((l=n.xpertSampleOneResult)==null?void 0:l.value)==="MTB_DETECTED"||((T=n.xpertSampleTwoResult)==null?void 0:T.value)==="MTB_DETECTED";return[{concept_id:i("PROCEDURE_TYPE"),value_coded:i("XPERTRIF"),obs_datetime:a.date},{concept_id:i("BACTERIOLOGICALLY_DIAGNOSED"),value_coded:i("YES_ANSWER"),obs_datetime:a.date},{concept_id:i("TB_STATUS"),value_coded:i(s?"POSITIVE":"NEGATIVE"),obs_datetime:a.date},...s?[{concept_id:i("TB_TYPE"),value_coded:i("PULMONARY_TB"),obs_datetime:a.date},{concept_id:i("TUBERCULOSIS_CLASS"),value_coded:i("All Other"),obs_datetime:a.date}]:[]]}async function w(){return(await W.getRecentOrders(a.patientID)).observations.reduce((n,s)=>i("REASON_FOR_TEST")===s.concept_id?s.value_text||s.value_coded:n,"")}async function P(n,s){var m,v,S,e,c,R;await a.createEncounter(),await a.saveObservationList([...F(n),...await J(s)]);const E=await w(),l=await X.getProgramInformation(a.patientID),T={testReason:E,isConfirmatoryTest:["Confirmatory Rifampicin Resitance test","Rifampicin Resistance confirmation test",Y("Confirmatory Rifampicin Resitance test")].includes(E),age:l.age,eptb:l.eptb,hiv:l.hiv,onTreatment:I.isOnTreatment(y.outcome),onMdr:/multi drug resistance treatment/i.test(y.outcome),isTbPositive:[(m=n.xpertSampleOneResult)==null?void 0:m.value,(v=n.xpertSampleTwoResult)==null?void 0:v.value].some(t=>t==="MTB_DETECTED"),sampleResultsAreInvalid:[(S=n.xpertSampleOneResult)==null?void 0:S.value,(e=n.xpertSampleTwoResult)==null?void 0:e.value].every(t=>t==="MTB_INVALID"),samplesAreRifResistant:[(c=n.sampleOneRifResistancePattern)==null?void 0:c.value,(R=n.sampleTwoRifResistancePattern)==null?void 0:R.value].every(t=>t==="RIF_RESISTANT_DETECTED")},_={"prompt when results are invalid":{title:"Sample one and sample two results are invalid",message:"Do you want to Order another GeneXpert test?",yes:()=>D.push("/tb/lab/".concat(a.patientID,"?test=XPERT_MTB_RIF")),no:d,mandatoryCondition:{sampleResultsAreInvalid:t=>t}},"Continue if already on mdr":{action:d,mandatoryCondition:{onMdr:t=>t}},"ask for confirmatory test if resistance is detected":{title:"Rifampcin Resistance Detected!",message:"Do you want to order confirmatory test?",yes:()=>D.push("/tb/lab/".concat(a.patientID,"?reason=Confirmatory Rifampicin Resitance test")),no:async()=>{await I.enrollMDR(a.patientID),d()},mandatoryCondition:{samplesAreRifResistant:t=>t,isConfirmatoryTest:t=>!t}},"enroll in mdr if confirmatory test detects drug resistance":{action:async()=>{await I.enrollMDR(a.patientID),d()},mandatoryCondition:{samplesAreRifResistant:t=>t,isConfirmatoryTest:t=>t}},"Offer Culture and pDST test if MTB is detected without RIF and if patient falls into risk category":{title:"High risk patient",message:"MTB Detected without RIF and patient is a high risk category. Do you want to request Culture and pDST test?",yes:()=>D.push("/tb/lab/".concat(a.patientID,"?test=CULTURE_AND_DST")),no:d,mandatoryCondition:{isTbPositive:t=>t,samplesAreRifResistant:t=>!t},eitherConditionMatch:{eptb:t=>t,hiv:t=>t,age:t=>t<14}},"offer to try a different examination if client is negative":{title:"Negative patient",message:"Do you want to try a different examination?",yes:d,no:()=>D.push(C.value),mandatoryCondition:{isTbPositive:t=>!t,onTreatment:t=>!t,age:t=>t>14}}};for(const t of Object.keys(_)){const o=_[t];let A=!0,O=!1;if(o.mandatoryCondition&&(O=Object.keys(o.mandatoryCondition).every(u=>o.mandatoryCondition[u](T[u]))),o.eitherConditionMatch&&(A=Object.keys(o.eitherConditionMatch||{}).some(u=>o.eitherConditionMatch[u](T[u]))),A&&O){if(typeof o.yes=="function"&&typeof o.no=="function")return await $(o.title,"",o.message,[{name:"Yes",slot:"start",color:"success"},{name:"No",slot:"start",color:"primary"}])==="Yes"?o.yes():o.no();if(typeof o.action=="function")return o.action()}}d()}return(n,s)=>(V(),k(M(j),null,{default:q(()=>[G(H,{cancelDestinationPath:M(C),onFinishAction:P,fields:f.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{oe as default};
