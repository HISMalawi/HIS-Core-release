import{d as l,r as u,bS as d,bX as m,ad as _,e0 as o,a as f,c as T,w as E,b as v,u as s,I as N}from"./index-DpVM51Mk.js";import{H as S}from"./HisStandardForm-CyU-At7_.js";import{u as P}from"./useEncounter-YD5nq4ul.js";import{r as b}from"./commons-bG19NqiT.js";import"./isEmpty-CZyYYPjm.js";import"./encounter_guidelines-Cnr48ESD.js";import"./GuidelineEngine-D6V1_Znr.js";const C=l({__name:"Pregnancy",setup(A){const n=u([]),e=new d(-1,m.UPDATE_PREGNANCY_STATUS),{goToNextTask:r,patientDashboardUrl:i}=P((t,a)=>{e.patientID=a,e.providerID=t,n.value=[{id:"personIsPregnant",helpText:"Is Person pregnant?:",type:_.TT_SELECT,computedValue:p=>({concept_id:o("PATIENT_IS_PREGNANT"),value_coded:o("".concat(p.value)),obs_datetime:e.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]}]});async function c(t,a){await e.createEncounter(),await e.saveObservationList(await b(a)),r()}return(t,a)=>(f(),T(s(N),null,{default:E(()=>[v(S,{cancelDestinationPath:s(i),onFinishAction:c,fields:n.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{C as default};
