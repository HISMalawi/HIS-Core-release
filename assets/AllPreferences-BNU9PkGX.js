import{d as h,al as C,r as l,av as a,o as H,bu as b,ak as v,a as x,c as k,w as o,b as s,u as i,a0 as N,a1 as P,W as u,a3 as T,at as g,cu as A,f as I,H as D,af as L}from"./index-4ZhJu3VE.js";import{A as c}from"./anc_global_props-OMAySN0f.js";const R=["innerHTML"],W={class:"report-content"},B=h({__name:"AllPreferences",setup(M){const p=C(),r={style:{wordWrap:"break-word",maxWidth:"130px"}},m=[{name:"finish",color:"success",slot:"end",visible:!0,size:"large",onClick:()=>p.push("/")}],_=l("Systems settings"),d=l([]),f=l([[a.thTxt("Property"),a.thTxt("Value",r)]]);async function y(){const t=await c.clinicHolidays();return t&&t.split(",").map(e=>D.toStandardHisDisplayFormat(e)).join(", ")}async function w(){const t=await c.clinicDays(),e=await y(),n=await c.appointmentLimit();return[[a.td("Appointment limit"),a.td(n||"Not set")],[a.td("Clinic days"),a.td(t||"Not set")],[a.td("Clinic holidays"),a.td(e||"Not set",r)]]}return H(async()=>{const t=await b.create({});t.present(),d.value=await w(),t.dismiss()}),(t,e)=>{const n=v("ion-title");return x(),k(i(I),null,{default:o(()=>[s(i(N),null,{default:o(()=>[s(i(P),null,{default:o(()=>[s(n,null,{default:o(()=>[u("span",{innerHTML:_.value},null,8,R)]),_:1})]),_:1})]),_:1}),s(i(T),null,{default:o(()=>[u("div",W,[s(g,{rows:d.value,columns:f.value},null,8,["rows","columns"])])]),_:1}),s(A,{btns:m,color:"dark"})]),_:1})}}}),S=L(B,[["__scopeId","data-v-c97510c2"]]);export{S as default};
