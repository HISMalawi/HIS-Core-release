System.register(["./lab_report_service-legacy-Crm_VVIZ.js","./ReportMixin.vue_vue_type_script_lang-legacy-DyFREd_W.js","./TableReportTemplate-legacy-C5gh_fEX.js","./index-legacy-Clyg4LY-.js","./BasicReportTemplate-legacy-BPaYdT7D.js","./Export-legacy-DC9e93Qn.js","./Pagination-legacy-CMbXf9ns.js","./HisStandardForm-legacy-7z_KwZ1B.js","./ReportErrors-legacy-BADA4sRa.js"],(function(t,e){"use strict";var s,r,a,o,i,l,n,d,p,h,u,c;return{setters:[t=>{s=t.L},t=>{r=t._},t=>{a=t.R},t=>{o=t.d,i=t.aq,l=t.ab,n=t.dn,d=t.bq,p=t.a8,h=t.ad,u=t.u,c=t.v},null,null,null,null,null],execute:function(){const e=o({mixins:[r],components:{ReportTemplate:a},data:()=>({title:"Tests requested",rows:[],cohort:[],reportType:"",reportReady:!1,columns:[],patientLevelColumns:[[i.thTxt("ARV#"),i.thTxt("Gender"),i.thTxt("Birthdate"),i.thTxt("Ordered Date"),i.thTxt("Test"),i.thTxt("Reason")]],disaggregatedColumns:[i.thTxt("Age group"),i.thTxt("Gender")]}),created(){this.report=new s,this.fields=this.getFormFields()},methods:{async onPeriod({type:t,tests:e}){this.reportReady=!0,this.rows=[],this.period=this.report.getDateIntervalPeriod(),this.reportType=t.value,"disaggregated"===this.reportType?this.setDisaggregatedRows(e):"patient_level"===this.reportType&&this.setPatientLevelRows(e)},getFormFields(){return[...this.getDateDurationFields(),{id:"tests",helpText:"Test(s) Requested",type:l.TT_MULTIPLE_SELECT,options:async(t,e,s)=>{this.report.setStartDate(s.start_date),this.report.setEndDate(s.end_date);const r=await this.report.getSamplesDrawnReport(),a=this.buildAvailableTests(r);return this.buildAvailableTestOptions(a)}},{id:"type",helpText:"Select report type",type:l.TT_SELECT,options:()=>[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}]}]},buildAvailableTests(t){const e={};return t.forEach((t=>{t.tests.forEach((s=>{s in e||(e[s]=[]),e[s].push(t)}))})),e},buildAvailableTestOptions(t){const e=[];for(const s in t){const r=t[s];e.push({label:s,value:r.length,other:r})}return e},setDisaggregatedRows(t){const e=[],s=[];this.columns=[this.disaggregatedColumns.concat(t.map((t=>i.thTxt(t.label))))];for(const r in n){const a=n[r],o=[i.td(a),i.td("M")],l=[i.td(a),i.td("F")];t.forEach((({other:t})=>{const e=e=>t.filter((t=>t.gender===e&&t.age_group===a)).map((t=>t.patient_id));o.push(this.drill(e("M"),`Males of ${a}`)),l.push(this.drill(e("F"),`Females of ${a}`))})),e.push(o),s.push(l),this.rows=[...s,...e]}},setPatientLevelRows(t){this.columns=this.patientLevelColumns,t.forEach((({other:t})=>{this.sortByArvNumber(t).forEach((async t=>{this.rows.push([i.td(t.arv_number),i.td(t.gender),i.tdDate(t.birthdate),i.tdDate(t.order_date),i.td(t.tests.join(",")),i.td(await d.getConceptName(t.reason_for_test))])}))}))}}});t("default",p(e,[["render",function(t,e,s,r,a,o){const i=h("report-template");return u(),c(i,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,canExportCsv:!0,canExportPDf:!0,reportReady:t.reportReady,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","reportReady","onReportConfiguration"])}]]))}}}));
