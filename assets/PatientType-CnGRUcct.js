import{d as p,bA as a,O as c,K as r,by as l,a9 as d,aa as s,a6 as y,v as h,ab as u,u as T}from"./index-BmYpiIZN.js";import{H as m}from"./HisStandardForm-BV2ZSIyY.js";import{_}from"./EncounterMixin.vue_vue_type_script_lang-DI6UEYt1.js";import"./encounter_guidelines-DwvuL4-6.js";import"./GuidelineEngine-D6V1_Znr.js";const F=p({mixins:[_],components:{HisStandardForm:m},data:()=>({patientType:{}}),watch:{ready:{async handler(e){e&&(this.patientType=new a(this.patientID,this.providerID),await this.patientType.loadPatientType(),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e){var i,n;if(!await this.patientType.createEncounter())return c("Unable to create encounter");this.patientType.setLocationName((i=e==null?void 0:e.location)==null?void 0:i.label),this.patientType.setPatientType((n=e==null?void 0:e.patient_type)==null?void 0:n.value),await this.patientType.save(),r("Observations and encounter created!"),this.nextTask()},facilityLocationField(){const e=l.getFacilityLocationField();return e.condition=t=>["Emergency supply","External consultation"].includes(t.patient_type.value),e},getFields(){return[{id:"patient_type",helpText:"Current type: ".concat(this.patientType.getType()),type:d.TT_SELECT,validation:e=>s.required(e)||s.notTheSame(e.value,this.patientType.getType()),options:()=>a.getPatientTypes()},this.facilityLocationField()]}}});function f(e,t,i,n,v,g){const o=u("his-standard-form");return T(),h(o,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const E=y(F,[["render",f]]);export{E as default};
