import{L as c}from"./lab_report_service-YBf4Pjb2.js";import{_ as f}from"./ReportMixin.vue_vue_type_script_lang-KTz0lrel.js";import{R as g}from"./TableReportTemplate-CgWmLoQk.js";import{d as T,L as r,cz as d,_ as R,r as _,o as v,c as y}from"./index-CZt4BSQf.js";import{F as h}from"./dynamic-import-helper-Bsjrd6Ro.js";import"./MultiFieldDateHelper-BeQr4Gt4.js";import"./KbLayouts-VRA-vjeH.js";import"./HisKbConfigurations-GhFQZvlg.js";import"./BasicReportTemplate-B2bgDnCL.js";import"./Export-BOa-_uep.js";import"./SIngleTouchField-CGdD-Bed.js";import"./Pagination-CNLqe0_D.js";import"./HisStandardForm-B93s5uaV.js";import"./TouchScreenForm-JVgeEWDh.js";import"./ToolbarMediumCard-CyRn44E2.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-DiinNO5i.js";import"./ReportErrors-DXzOSZA6.js";const b=T({mixins:[f],components:{ReportTemplate:g},data:()=>({title:"Tests requested",rows:[],cohort:[],reportType:"",reportReady:!1,columns:[],patientLevelColumns:[[r.thTxt("ARV#"),r.thTxt("Gender"),r.thTxt("Birthdate"),r.thTxt("Ordered Date"),r.thTxt("Test"),r.thTxt("Reason")]],disaggregatedColumns:[r.thTxt("Age group"),r.thTxt("Gender")]}),created(){this.report=new c,this.fields=this.getFormFields()},methods:{async onPeriod({type:t,tests:o}){this.reportReady=!0,this.rows=[],this.period=this.report.getDateIntervalPeriod(),this.reportType=t.value,this.reportType==="disaggregated"?this.setDisaggregatedRows(o):this.reportType==="patient_level"&&this.setPatientLevelRows(o)},getFormFields(){return[...this.getDateDurationFields(),{id:"tests",helpText:"Test(s) Requested",type:h.TT_MULTIPLE_SELECT,options:async(t,o,e)=>{this.report.setStartDate(e.start_date),this.report.setEndDate(e.end_date);const s=await this.report.getSamplesDrawnReport(),i=this.buildAvailableTests(s);return this.buildAvailableTestOptions(i)}},{id:"type",helpText:"Select report type",type:h.TT_SELECT,options:()=>[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}]}]},buildAvailableTests(t){const o={};return t.forEach(e=>{e.tests.forEach(s=>{s in o||(o[s]=[]),o[s].push(e)})}),o},buildAvailableTestOptions(t){const o=[];for(const e in t){const s=t[e];o.push({label:e,value:s.length,other:s})}return o},setDisaggregatedRows(t){const o=[],e=[];this.columns=[this.disaggregatedColumns.concat(t.map(s=>r.thTxt(s.label)))];for(const s in d){const i=d[s],p=[r.td(i),r.td("M")],a=[r.td(i),r.td("F")];t.forEach(({other:m})=>{const l=u=>m.filter(n=>n.gender===u&&n.age_group===i).map(n=>n.patient_id);p.push(this.drill(l("M"),"Males of ".concat(i))),a.push(this.drill(l("F"),"Females of ".concat(i)))}),o.push(p),e.push(a),this.rows=[...e,...o]}},setPatientLevelRows(t){this.columns=this.patientLevelColumns,t.forEach(({other:o})=>{this.sortByArvNumber(o).forEach(e=>{this.rows.push([r.td(e.arv_number),r.td(e.gender),r.tdDate(e.birthdate),r.tdDate(e.order_date),r.td(e.tests.join(",")),r.td(e.reason_for_test)])})})}}});function w(t,o,e,s,i,p){const a=_("report-template");return v(),y(a,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,canExportCsv:!0,canExportPDf:!0,reportReady:t.reportReady,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","reportReady","onReportConfiguration"])}const U=R(b,[["render",w]]);export{U as default};
