System.register(["./EncounterMixin.vue_vue_type_script_lang-legacy-qUwf12Yn.js","./index-legacy-CA6M7ipO.js","./anc_current_pregnancy-legacy-W9yvtvOX.js","./encounter_guidelines-legacy-Bcz_Mw7r.js","./GuidelineEngine-legacy-KsvQuFdF.js","./HisStandardForm-legacy-a9YJRGaH.js"],(function(e,t){"use strict";var i,a,s,n,l,o,r,d,u,c,h,p,v,m,y;return{setters:[e=>{i=e._},e=>{a=e.d,s=e.I,n=e.b$,l=e.ad,o=e.aj,r=e.ae,d=e.bY,u=e.aa,c=e.af,h=e.a,p=e.c,v=e.w,m=e.b},e=>{y=e.A},null,null,null],execute:function(){const t=a({components:{IonPage:s},mixins:[i],data:()=>({service:{},gestationWeeks:0,delieveryDate:"",lnmp:""}),watch:{ready:{async handler(e){e&&(this.service=new y(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){try{await this.service.enrollPatient()}catch(a){if(!(a instanceof n))throw a;console.warn(`${a}`)}const i=await this.resolveObs(t);await this.service.createEncounter(),await this.service.saveObservationList(i),this.nextTask()},buildLnmpObs(e=!1){return/Unknown/i.test(this.lnmp)?null:[e?this.service.buildValueDateEstimated("Last menstrual period",this.lnmp):this.service.buildValueDate("Last menstrual period",this.lnmp),this.service.buildValueNumber("Week of First Visit",this.gestationWeeks)]},getFields(){return[{id:"lnmp",helpText:"Last Normal Menstrual Period",type:l.TT_FULL_DATE,config:{allowUnknown:!0,addTodayBtn:!1},defaultValue:()=>this.service.date,computedValue:()=>this.buildLnmpObs(),beforeNext:async e=>(this.lnmp=e.value,this.gestationWeeks=this.service.calculateWeekOfFirstVisit(this.lnmp),!(this.gestationWeeks<=0||this.gestationWeeks>42)||o("Gestation weeks out of range of 0-42. Are you sure you want to continue?")),validation:e=>this.validateSeries([()=>r.required(e),()=>e.value&&new Date(e.value)>new Date(this.service.date)?["Last menstrual period cannot be in the future"]:null])},{id:"estimate_lmp",helpText:"Gestation (months)",type:l.TT_NUMBER,condition:e=>"Unknown"===e.lnmp.value,computedValue:()=>this.buildLnmpObs(!0),validation:e=>this.validateSeries([()=>r.required(e),()=>r.rangeOf(e,1,10)]),beforeNext:e=>(this.lnmp=this.service.calculateGestationDateFromPeriod(e.value),this.gestationWeeks=this.service.calculateWeekOfFirstVisit(this.lnmp),!0)},{id:"expected_delivary_date",helpText:"Expected Date Of Delivery",type:l.TT_FULL_DATE,config:{addTodayBtn:()=>this.gestationWeeks>=30},dynamicHelpText:()=>`Expected Date Of Delivery (Gestation Weeks: ${this.gestationWeeks})`,defaultValue:()=>this.service.estimateDelieveryDate(this.lnmp),computedValue:e=>this.service.buildValueDate("Estimated date of delivery",e.value),validation:e=>r.required(e)},{id:"planned_delivery_place",helpText:"Planned delivery place",type:l.TT_SELECT,computedValue:e=>this.service.buildValueText("Planned Delivery Place",e.label),validation:e=>r.required(e),options:(e,t="")=>d(t),config:{footerBtns:[{name:"Here",slot:"end",onClickComponentEvents:{setValue:e=>e.btnOutput},onClick:()=>y.getLocationName()}],showKeyboard:!0,isFilterDataViaApi:!0}},{id:"bed_net_available_for_use",helpText:"Mosquito net in good condition available for own use",type:l.TT_SELECT,condition:()=>!1,computedValue:e=>this.service.buildValueCoded("Do you use bed nets",e.value),validation:e=>r.required(e),options:()=>this.yesNoOptions()},{id:"bed_net_given",helpText:"Bed net given today",type:l.TT_SELECT,computedValue:e=>this.service.buildValueCoded("Mosquito net started",e.value),validation:e=>r.required(e),options:()=>this.yesNoOptions()},{id:"previous_td_given",helpText:"Previous TD given before this pregnancy",type:l.TT_NUMBER,computedValue:e=>this.service.buildValueNumber("TD Booster",e.value),validation:e=>r.required(e)}]}}});e("default",u(t,[["render",function(e,t,i,a,s,n){const l=c("his-standard-form"),o=c("ion-page");return h(),p(o,null,{default:v((()=>[m(l,{fields:e.fields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])])),_:1})}]]))}}}));
