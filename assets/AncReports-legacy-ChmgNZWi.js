System.register(["./index-legacy-C29Eb2Qm.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./BasicReportTemplate-legacy-Dme8z_3V.js","./MultiFieldDateHelper-legacy-DNe3hLpD.js"],(function(e,t){"use strict";var l,a,n,i,r,o,s,d,u,c,p,m,h;return{setters:[e=>{l=e.c8,a=e.M,n=e.J,i=e.H,r=e.O,o=e.L,s=e.P,d=e.ab,u=e.V,c=e.S},e=>{p=e.F},e=>{m=e.D},e=>{h=e.g}],execute:function(){e("A",(function(e="Report"){const t=l({title:e,rows:[],columns:[],fields:[],period:"",drill:[],service:{},other:{}}),b=a((()=>t.rows)),y=a((()=>t.period)),g=a((()=>t.fields)),v=a((()=>t.columns)),f=a((()=>t.title)),w=n();async function D(e,l){(await r.create({component:m,cssClass:"large-modal",componentProps:{title:e||"Drilldown",columns:[[o.thTxt("National ID"),o.thTxt("First name"),o.thTxt("Last name"),o.thTxt("Birthdate"),o.thTxt("Action")]],rows:l,rowParser:async e=>{const l=[];for(const n of e)if(t.drill[n])l.push(t.drill[n]);else try{const e=new s(await s.findByID(n));t.drill[n]=[o.td(e.getNationalID()),o.td(e.getGivenName()),o.td(e.getFamilyName()),o.tdDate(`${e.getBirthdate()}`),o.tdBtn("Show",(()=>{w.push({path:`/patient/dashboard/${n}`}),r.dismiss({})}))],l.push(t.drill[n])}catch(a){console.error(a)}return l},showFilters:!0,footerColor:"light",showReportStamp:!1,paginated:!0,rowsPerPage:20,onFinish:()=>r.dismiss()}})).present()}function T(e={}){return[...h({id:"start_date",helpText:"Start",required:!0,minDate:()=>e?.minDate||null,maxDate:()=>e?.maxDate||null,estimation:{allowUnknown:!1},computeValue:e=>e}),...h({id:"end_date",helpText:"End",required:!0,minDate:(e,t)=>t.start_date,maxDate:()=>e?.maxDate||null,estimation:{allowUnknown:!1},computeValue:e=>e})]}return t.fields=T(),{fd:function(e){return i.toStandardHisDisplayFormat(e)},drill:function(e,t){return t.length?o.tdLink(t.length,(()=>D(e,t))):o.td(0)},presentDrillDown:D,getMonthlyReportFields:function(){return[{id:"year",helpText:"Select Year",type:p.TT_NUMBER,computedValue:e=>e.value,validation:e=>{const t=d.isPlainObject(e)?e.value:-1;return u.validateSeries([()=>u.required(e),()=>isNaN(parseInt(`${t}`))?["Invalid year"]:null,()=>u.rangeOf(e,2e3,i.getYear(c.getSessionDate()))])}},{id:"month",helpText:"Select Month",type:p.TT_SELECT,validation:e=>u.required(e),computedValue:e=>e.value,options:()=>[{label:"January",value:"01"},{label:"February",value:"02"},{label:"March",value:"03"},{label:"April",value:"04"},{label:"May",value:"05"},{label:"June",value:"06"},{label:"July",value:"07"},{label:"August",value:"08"},{label:"September",value:"09"},{label:"October",value:"10"},{label:"November",value:"11"},{label:"December",value:"12"}]}]},showPrintWindow:function(e){const t=open("","","width:1024px, height:768px"),l=document.getElementById(e.containerID);l&&t&&(t.document.write(`\n                <html>\n                <head>\n                    <title>Print Cohort</title>\n                    <link rel="stylesheet" media="print"  href="${e.cssFile}"/>\n                </head>\n                <body>\n                    ${l.innerHTML}\n                </body>\n                </html>\n            `),setTimeout((()=>{t.print(),t.close()}),3500))},buildTimeIntervalFields:T,gotoPatientDashboard:function(e){w.push(`/patient/dashboard/${e}`)},reportData:t,rows:b,period:y,fields:g,columns:v,title:f}}))}}}));
