import{d as l,K as m,b5 as u,cV as d,o as _,c as f,w as T,b as E,cl as n,I as v}from"./index-BCTN_bnC.js";import{F as N}from"./dynamic-import-helper-BkBZiFw5.js";import{H as P}from"./HisStandardForm-CaDwl-hA.js";import{u as S}from"./useEncounter-CDUT-p5Y.js";import{g as r}from"./util-CyjuS_4X.js";import{r as A}from"./commons-BDvZ1JFN.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";import"./isEmpty-OXtHK5dz.js";import"./_Set-VKtKUQAI.js";import"./_setToArray-BLmuRUHx.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";const B=l({__name:"Pregnancy",setup(I){const o=m([]),e=new u(-1,d.UPDATE_PREGNANCY_STATUS),{goToNextTask:s,patientDashboardUrl:i}=S((a,t)=>{e.patientID=t,e.providerID=a,o.value=[{id:"personIsPregnant",helpText:"Is Person pregnant?:",type:N.TT_SELECT,computedValue:c=>({concept_id:r("PATIENT_IS_PREGNANT"),value_coded:r("".concat(c.value)),obs_datetime:e.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]}]});async function p(a,t){await e.createEncounter(),await e.saveObservationList(await A(t)),s()}return(a,t)=>(_(),f(n(v),null,{default:T(()=>[E(P,{cancelDestinationPath:n(i),onFinishAction:p,fields:o.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{B as default};
