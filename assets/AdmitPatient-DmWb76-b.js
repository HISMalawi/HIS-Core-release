import{H as f}from"./HisStandardForm-B3aw5EdY.js";import{b4 as S,d as w,K as _,V as b,U as r,t as s,n as v,q as g,o as h,c as y,w as x,b as C,cl as c,I as T}from"./index-BFG-WECc.js";import{F as D}from"./dynamic-import-helper-Bsjrd6Ro.js";import{u as P}from"./useEncounter-B_hhLmF4.js";import"./TouchScreenForm-DiI3Xfhg.js";import"./ToolbarMediumCard-C3iotOe-.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-0kHLdkku.js";import"./isEmpty-DraZ2jfS.js";import"./encounter_guidelines-BKDCL1GI.js";import"./GuidelineEngine-D6V1_Znr.js";class A extends S{constructor(i,a){super(i,42,a)}}const N=w({__name:"AdmitPatient",setup(l){const i=_([]);let a;const{goToNextTask:u,patientDashboardUrl:m}=P((e,o)=>{a=new A(o,e),i.value.push(p())});async function d(e,o){const t=await Promise.all([o.internal_sections]);await a.createEncounter(),await a.saveObservationList(t),u()}function p(){return{id:"internal_sections",helpText:"Select Ward/internal section",type:D.TT_SELECT,validation:e=>b.required(e),computedValue:e=>a.buildValueText("Admit to ward",e.label),options:()=>r.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,o,t)=>{if(typeof t.filter!="string"||t.filter.length<3)return s("Please enter a valid section name");if(t.filtered.some(n=>n.label.toLowerCase()===t.filter.toLowerCase()))return s("Section already existing");if(await v("Do you want to add internal section?")){const n=await r.createInternalSection(t.filter.toUpperCase());n?(t.filter=n.name,t.listData=[{label:n.name,value:n.id},...t.listData]):g("Unable to add ".concat(t.filter))}}}]}}}return(e,o)=>(h(),y(c(T),null,{default:x(()=>[C(f,{cancelDestinationPath:c(m),fields:i.value,onFinishAction:d,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{N as default};
