import{F as o}from"./dynamic-import-helper-Bsjrd6Ro.js";import{H as a}from"./HisStandardForm-CNo-jxdn.js";import{b5 as r,d as c,t as p,T as d,V as m,_ as l,r as u,o as f,c as h}from"./index-BF3WrZAg.js";import{_}from"./EncounterMixin.vue_vue_type_script_lang-BGtpmu1n.js";import"./TouchScreenForm-DEXYdl71.js";import"./ToolbarMediumCard-CJsYT4iG.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-J1DvtW6Z.js";import"./encounter_guidelines-DS0UQybO.js";import"./GuidelineEngine-D6V1_Znr.js";class v extends r{constructor(n,t){super(n,184,t)}}const b=c({mixins:[_],components:{HisStandardForm:a},data:()=>({reception:{}}),watch:{patient:{async handler(){this.reception=new v(this.patientID,this.providerID),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(e){if(!await this.reception.createEncounter())return p("Unable to create encounter");const t=e.reason_for_visit,i=await this.reception.buildValueCoded("Reason for visit",t.value);await this.reception.saveObs(i),d("Observations and encounter created!"),this.nextTask()},getFields(){return[{id:"reason_for_visit",helpText:"Reason for visit",type:o.TT_SELECT,validation:e=>m.required(e),options:()=>this.mapOptions(["Initial screening","Postponed treatment","One year subsequent check-up after treatment","Subsequent screening","Problem visit after treatment","Referral"])}]}}});function F(e,n,t,i,S,T){const s=u("his-standard-form");return f(),h(s,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const E=l(b,[["render",F]]);export{E as default};
