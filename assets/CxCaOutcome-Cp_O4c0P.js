import{bI as h,d as _,M as l,bg as t,J as v,ab as g,ac as b,a8 as w,ad as C,u as D,v as S}from"./index-BXYGQb-P.js";import{H as P}from"./HisStandardForm-BOy0NDXg.js";import{_ as F}from"./EncounterMixin.vue_vue_type_script_lang-CKR1fUiN.js";import"./encounter_guidelines-BPEdCHLc.js";import"./GuidelineEngine-D6V1_Znr.js";class I extends h{constructor(n,o){super(n,184,o)}}const O=_({mixins:[F],components:{HisStandardForm:P},data:()=>({outcome:{}}),watch:{patient:{async handler(){this.outcome=new I(this.patientID,this.providerID),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(e){if(!await this.outcome.createEncounter())return l("Unable to create encounter");const o=t.getProgramID(),i=await t.getProgramWorkflows(t.getProgramID()),s=e.select_referral_outcome.value,a={};i.forEach(m=>{m.states.forEach(c=>{const p=c.program_workflow_state_id,f=c.concept.concept_names[0].name;a[f]=p})}),console.log(s),console.log(a);const r={location_id:t.getLocationName(),state:a[s],date:t.getSessionDate()};if(!await t.createState(this.patientID,o,r))return l("Unable to update state");const u=e.select_referral_outcome.value,d=[await this.outcome.buildValueCoded("Outcome",u)];await this.outcome.saveObservationList(d),v("Observations and encounter created!"),this.nextTask()},getFields(){return[{id:"select_referral_outcome",helpText:"Referral outcome",type:g.TT_SELECT,validation:e=>b.required(e),options:()=>[{label:"Continue follow-up",value:"Continue follow-up"},{label:"No Dysplasia/Cancer",value:"No Dysplasia/Cancer"},{label:"Palliative Care",value:"Palliative Care"},{label:"Patient died",value:"Patient died"}]}]}}});function k(e,n,o,i,s,a){const r=C("his-standard-form");return D(),S(r,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const A=w(O,[["render",k]]);export{A as default};
