import{d as S,K as A,b5 as f,cV as I,V as c,cY as R,o as g,c as h,w as b,b as F,cl as E,ag as x,b9 as w,cW as _,I as P}from"./index-BCTN_bnC.js";import{F as u}from"./dynamic-import-helper-BkBZiFw5.js";import{H as W}from"./HisStandardForm-CaDwl-hA.js";import{u as Y}from"./useEncounter-CDUT-p5Y.js";import{g as r}from"./util-CyjuS_4X.js";import{r as y}from"./commons-BDvZ1JFN.js";import{g as B}from"./LocationFieldOptions-CfAZbPnk.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";import"./isEmpty-OXtHK5dz.js";import"./_Set-VKtKUQAI.js";import"./_setToArray-BLmuRUHx.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";const Q=S({__name:"Reception",setup(C){const d=A([]),t=new f(-1,I.TB_RECEPTION),{goToNextTask:T,patientDashboardUrl:m}=Y((i,o,a)=>{t.patientID=o,t.providerID=i;const n=()=>({id:"treatForIpt",helpText:"Enroll in TPT program?",type:u.TT_SELECT,requireNext:!1,options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}],validation:e=>c.required(e),condition:()=>a.getAge()>=0&&a.getAge()<R}),l=()=>({id:"catchmentArea",helpText:"Patient living within catchment area?",type:u.TT_SELECT,requireNext:!1,Validation:e=>c.required(e),computedValue:e=>({concept_id:r("LIVES_NEAR"),value_coded:r("".concat(e.value)),obs_datetime:t.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]}),s=()=>({id:"livesNearTB",helpText:"Patient living near a TB registration centre?",type:u.TT_SELECT,requireNext:!1,computedValue:e=>({concept_id:r("TRANSFERRED_OUT_EXTERN"),value_coded:r("".concat(e.value)),obs_datetime:t.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}],validation:e=>c.required(e),condition:e=>e.catchmentArea.value==="NO_ANSWER"}),p=()=>({id:"locationId",type:u.TT_SELECT,helpText:"Select TB Registration Centre:",computedValue:e=>({concept_id:r("FACILITY_NAME"),value_text:e.label,obs_datetime:t.date}),options:(e,N="")=>B(N),config:{showKeyboard:!0,isFilterDataViaApi:!0},validation:e=>c.required(e),condition:e=>e.livesNearTB.value==="YES_ANSWER",requireNext:!1});d.value=[n(),l(),s(),p()]});async function v(i,o){var n,l,s;if(((n=i.treatForIpt)==null?void 0:n.value)==="NO_ANSWER")return x.push(m.value);await t.createEncounter(),await t.saveObservationList(await y(o));const a=new w(t.patientID);a.setStateDate(t.date);try{await a.enrollProgram()}catch(p){console.warn("".concat(p))}((l=i.treatForIpt)==null?void 0:l.value)==="YES_ANSWER"&&a.setStateId(_.TPT),((s=i.livesNearTB)==null?void 0:s.value)==="YES_ANSWER"&&a.setStateId(_.TRANSFER_OUT),a.stateId!=-1&&await a.updateState(),T()}return(i,o)=>(g(),h(E(P),null,{default:b(()=>[F(W,{cancelDestinationPath:E(m),onFinishAction:v,fields:d.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{Q as default};
