System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./HisStandardForm-legacy-a-GAw9o3.js","./index-legacy-Dab_9-0G.js","./EncounterMixin.vue_vue_type_script_lang-legacy-Bqq9w4Ft.js","./appointment_service-legacy-MQ1Th4jj.js","./TouchScreenForm-legacy-BrA5VXvB.js","./ToolbarMediumCard-legacy-tyMOM4tZ.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-kf7cSfpw.js","./encounter_guidelines-legacy-ktYKRZJj.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(t,e){"use strict";var a,n,i,o,s,l,p,r,c,d,u,m,y,h,g,w,A,b;return{setters:[t=>{a=t.F},t=>{n=t.H},t=>{i=t.d,o=t.aJ,s=t.ba,l=t.aY,p=t.n,r=t.cn,c=t.ab,d=t.a$,u=t.V,m=t.H,y=t._,h=t.r,g=t.o,w=t.c},t=>{A=t._},t=>{b=t.A},null,null,null,null,null,null],execute:function(){const e=i({mixins:[A],components:{HisStandardForm:n},data:()=>({appointment:{}}),watch:{ready:{handler(t){console.log("The Current App calling this encounter  ",o.getActiveApp()?.applicationName),t&&(this.appointment=new b(this.patientID,this.providerID),this.fields=[this.getAppointmentField()])},immediate:!0}},methods:{async onFinish(t,e){await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(e));const a=new s(this.patientID);["CxCa","ANC"].includes(`${o.getActiveApp()?.applicationName}`)||await a.printVisitSummaryLbl(),this.nextTask()},getAppointmentField(){const t=t=>m.toStandardHisDisplayFormat(t),e=(t,e)=>new RegExp(t,"i").test(`${e}`);let n="",i="",s=-1,y=this.appointment.date,h=null;const g={},w=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{id:"set_appointment",helpText:"Appointments booking",type:a.TT_DATE_PICKER,init:async()=>{try{const t=await this.appointment.getNextAppointment();y=t.appointment_date,h=t.drugs_run_out_date}catch(e){if(console.warn(e),await l(400),!(await p("Next appointment/drug-runout date is not available, do you want to proceed anyway?")))return this.gotoPatientDashboard(),!0}const t=await r.appointmentLimit();return s=t?parseInt(t):0,!0},onValue:async a=>{if(console.log(this.appointment),void 0===g[a]){const t=await b.getDailiyAppointments(a);g[a]=Array.isArray(t)?t.length:0}return!(s>=1&&g[a]>=s&&await p(`${g[a]} clients were booked on ${t(a)}`,{header:`APPOINTMENT LIMIT (${s}) REACHED`,cancelBtnLabel:"Proceed",confirmBtnLabel:"New date"})||(c.isEmpty(i)&&(i=await r.clinicHolidays()),e(a,i)&&!(await p(`${t(a)} is a clinic holiday, do you want to set an appointment?`))||(c.isEmpty(n)&&(n=this.patient.getAge()>=18?await r.adultClinicDays():await r.peadsClinicDays()),!e(w[d(a).day()],n)&&!(await p(`${t(a)} is not a clinic day. Do you want to proceed with this date?`)))))},validation:t=>u.required(t),defaultValue:()=>y,computedValue:t=>[this.appointment.buildValueDate("Appointment date",t),this.appointment.buildValueDate("Estimated date",y)],config:{hiddenFooterBtns:["Clear"],minDate:()=>this.appointment.date,maxDate:()=>h,supValue:t=>`${g[t]}`,infoItems:e=>"CxCa"===o.getActiveApp()?.applicationName?[{label:"User set appointment date",value:t(e)},{label:"Appointments",value:g[e]},{label:"Appointment limit (per/day)",value:s}]:[{label:"Medication Run out Date",value:h?t(h):"Not available"},{label:"User set appointment date",value:t(e)},{label:"Appointments",value:g[e]},{label:"Appointment limit (per/day)",value:s}]}}}}});t("default",y(e,[["render",function(t,e,a,n,i,o){const s=h("his-standard-form");return g(),w(s,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
