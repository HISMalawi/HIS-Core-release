import{d as S,bW as v,b1 as $,a4 as L,a3 as F,H as n,dh as c,aj as m,bC as O,aa as R,af as o,a as D,c as y,w as e,K as i,b as s,b7 as B,a2 as l,E as M,M as w}from"./index-CMZASHAR.js";import{_ as T}from"./v-calendar.es-B6ooKi4e.js";import{A as _}from"./appointment_service-DrIymmV1.js";import{_ as I}from"./FieldMixin.vue_vue_type_script_lang-Bg-mZnL5.js";const P=S({components:{ViewPort:v,Calendar:T,IonGrid:$,IonCol:L,IonRow:F},mixins:[I],watch:{startDate:{async handler(t){const a=t||n.toStandardHisDisplayFormat(this.sessionDate);this.$emit("onValue",{label:"",value:a})},immediate:!0}},data:()=>({rows:[],startDate:null,runOutDate:null,appointments:[],clinicHolidays:[],clinicDays:[],patientAge:0,appointmentLimit:0,sessionDate:null,masks:{weekdays:"WWW"}}),mounted(){this.$emit("onFieldActivated",this)},activated(){this.$emit("onFieldActivated",this)},async created(){this.patientAge=this.config.patientAge||0,await this.getAppointmentLimit(),await this.getClinicHolidays(),await this.getClinicDays();const t=await this.options(this.fdata);this.sessionDate=_.getSessionDate();const a=t[0].other.appointmentDate;this.appointments=await this.getAppointments(a),this.setDate(a),this.runOutDate=t[0].other.runOutDate?new Date(t[0].other.runOutDate):null},methods:{getAppointments(t){return _.getDailiyAppointments(n.toStandardHisFormat(t))},async getAppointmentLimit(){const t=await c.appointmentLimit();t&&(this.appointmentLimit=t)},async getClinicHolidays(){const t=await c.clinicHolidays();t&&(this.clinicHolidays=t.split(","))},async getClinicDays(){let t="";this.patientAge>=18?t=await c.adultClinicDays():t=await c.peadsClinicDays(),t&&(this.clinicDays=t.split(","))},async isDateAvalaible(t){const a=await this.getAppointments(t);if(a.length!==0&&a.length>=this.appointmentLimit&&await m("Appointment limit reached for the selected date ".concat(n.toStandardHisDisplayFormat(t)),{header:"APPOINTMENT LIMIT REACHED",cancelBtnLabel:"Proceed with Selected Date",confirmBtnLabel:"Select Another Date"})||this.clinicHolidays.includes(n.toStandardHisFormat(t))&&!await m("Selected date is a clinic holiday, do you want to set an appointment?"))return!1;const h=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][O(t).day()];return!this.clinicDays.includes(h)&&!await m("The selected date ".concat(n.toStandardHisDisplayFormat(t)," is not a clinic day. Do you want to proceed with this date?"))?!1:(this.appointments=a,!0)},async setDate(t){this.startDate=new Date(t);const a=this.$refs.calendar;await a.move(this.startDate),await a.focusDate(this.startDate)},async dayClicked(t){!t.isDisabled&&await this.isDateAvalaible(t.id)&&this.setDate(t.id)}},computed:{showMedicationRunoutDate(){var t,a;return typeof((t=this.config)==null?void 0:t.hideRunoutDate)=="boolean"?!((a=this.config)!=null&&a.hideRunoutDate):!0},aDate(){return n.toStandardHisDisplayFormat(this.startDate)},rDate(){return n.toStandardHisDisplayFormat(this.runOutDate)},cDate(){return n.toStandardHisFormat(this.startDate)},attributes(){return[{highlight:!0,dates:this.aDate}]}}}),E={class:"view-port-content"},N=["onClick"],V={key:0,class:"appointments"};function W(t,a,g,h,u,z){const b=o("Calendar"),f=o("ion-col"),d=o("ion-label"),p=o("ion-item"),A=o("ion-list"),C=o("ion-row"),H=o("ion-grid"),k=o("view-port");return D(),y(k,null,{default:e(()=>[i("div",E,[s(H,null,{default:e(()=>[s(C,null,{default:e(()=>[s(f,{size:"8"},{default:e(()=>[s(b,{color:"blue",ref:"calendar","is-expanded":"",class:"custom-calendar","min-date":t.sessionDate,"max-date":t.runOutDate,attributes:t.attributes,masks:t.masks,"disable-page-swipe":""},{"day-content":e(({day:r})=>[i("div",{onClick:j=>t.dayClicked(r),class:B({selected:r.id===t.cDate,isDisabled:r.isDisabled})},[i("span",null,l(r.day),1),r.id===t.cDate?(D(),M("sup",V,l(t.appointments.length),1)):w("",!0)],10,N)]),_:1},8,["min-date","max-date","attributes","masks"])]),_:1}),s(f,{size:"4",class:"his-card"},{default:e(()=>[s(A,null,{default:e(()=>[t.showMedicationRunoutDate&&t.rDate?(D(),y(p,{key:0,class:"his-sm-text"},{default:e(()=>[s(d,{class:"ion-text-wrap"},{default:e(()=>[a[0]||(a[0]=i("b",null,"Medication Run out Date",-1)),a[1]||(a[1]=i("p",null,null,-1)),i("span",null,l(t.rDate),1)]),_:1})]),_:1})):w("",!0),s(p,{class:"his-sm-text"},{default:e(()=>[s(d,{class:"ion-text-wrap"},{default:e(()=>[a[2]||(a[2]=i("b",null,"User set appointment date",-1)),a[3]||(a[3]=i("p",null,null,-1)),i("span",null,l(t.aDate),1)]),_:1})]),_:1}),s(p,{class:"his-sm-text"},{default:e(()=>[s(d,{class:"ion-text-wrap"},{default:e(()=>[a[4]||(a[4]=i("b",null,"Appointment(s)",-1)),a[5]||(a[5]=i("p",null,null,-1)),i("span",null,l(t.appointments.length),1)]),_:1})]),_:1}),s(p,{class:"his-sm-text"},{default:e(()=>[s(d,{class:"ion-text-wrap"},{default:e(()=>[a[6]||(a[6]=i("b",null,"Appointment limit (per/day)",-1)),a[7]||(a[7]=i("p",null,null,-1)),i("span",null,l(t.appointmentLimit),1)]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})])]),_:1})}const q=R(P,[["render",W]]);export{q as default};
