System.register(["./HisStandardForm-legacy-a9YJRGaH.js","./EncounterMixin.vue_vue_type_script_lang-legacy-qUwf12Yn.js","./index-legacy-CA6M7ipO.js","./encounter_guidelines-legacy-Bcz_Mw7r.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var i,n,s,a,r,c,l,o,d,u,v;return{setters:[e=>{i=e.H},e=>{n=e._},e=>{s=e.bQ,a=e.d,r=e.W,c=e.ad,l=e.ae,o=e.aa,d=e.af,u=e.a,v=e.c},null,null],execute:function(){class t extends s{constructor(e,t){super(e,5,t)}}const h=a({components:{HisStandardForm:i},mixins:[n],data:()=>({patientServicesService:{}}),watch:{ready:{async handler(e){e&&(this.patientServicesService=new t(this.patient.getID(),this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){if(!(await this.patientServicesService.createEncounter()))return r("Unable to create registration encounter");const i=await this.resolveObs({...t});if(!(await this.patientServicesService.saveObservationList(i)))return r("Unable to save observations");this.nextTask()},getFields(){return[{id:"referral",helpText:"Select service",type:c.TT_SELECT,validation:e=>l.required(e),computedValue:e=>({obs:this.patientServicesService.buildValueText("Services ordered",e.value)}),options:()=>this.mapOptions(["Casualty","Dental","Eye","Family Planing","Medical","OB/Gyn","Orthopedics","Pediatrics","Skin","STI Clinic","Surgical","Other"])}]}}});e("default",o(h,[["render",function(e,t,i,n,s,a){const r=d("his-standard-form");return u(),v(r,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}]]))}}}));
