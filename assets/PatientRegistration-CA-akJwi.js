import{d as D,aU as v,s as T,T as l,aS as g,$ as m,p as f,b8 as y,P as h,b9 as F,q as b,ah as p,F as o,aj as I,aW as P,ba as A,ai as C,V as c,bb as N,H as _,bc as E,t as S,aV as k,aZ as V,_ as w,r as $,o as R,c as M}from"./index-BFVcutZq.js";import{H as x}from"./HisStandardForm-DO3sZVdL.js";import{P as s}from"./PersonFieldHelper-ByV868UO.js";import"./LocationFieldOptions-C8xpWQA4.js";import"./storage-DBvOSj8j.js";const O=D({components:{HisStandardForm:x},data:()=>({formLabel:"Find / Register",app:v.getActiveApp(),ddeInstance:{},ddeDocID:"",ddeIsReassign:!1,skipSummary:!1,currentAddressAttributes:["current_region","current_district","current_village","current_traditional_authority"],homeAddressAttributes:["home_region","home_district","home_traditional_authority","home_village"],hasIncompleteData:!1,patient:{},editPersonData:{},editPerson:-1,personAttribute:"",activeField:"",fieldComponent:"",fields:[],isMilitarySite:!1,presets:{},registrationSummary:{},form:{},ddeEnabled:!1}),watch:{$route:{async handler({query:e}){this.ddeInstance=new T,e.edit_person?(this.ddeIsReassign=e.dde_reassign,this.ddeDocID=e.doc_id,this.ddeInstance.setPatientID(e.edit_person),e.person_attribute&&(this.personAttribute=e.person_attribute),await this.initEditMode(e.edit_person)):this.presets=e,this.fields=this.getFields()},immediate:!0,deep:!0}},methods:{getFields(){let e=[];return e.push(this.personIndexField()),this.hasScannedNationalID()?e=e.concat(this.hiddenFieldsForScannedNationalID()):(e.push(this.givenNameField()),e.push(this.familyNameField()),e.push(this.genderField())),e.push(this.searchResultField()),e.push(this.hasNpidField()),e.push(this.scanNpid()),this.hasScannedNationalID()||(e=e.concat(this.dobFields())),e.push(this.homeRegionField()),e.push(this.homeDistrictField()),e.push(this.homeTAField()),e.push(this.homeVillageField()),e.push(this.currentRegionField()),e.push(this.currentDistrictField()),e.push(this.currentTAField()),e.push(this.currentVillage()),e=e.concat(this.landmarkFields()),e.push(this.cellPhoneField()),e.push(this.patientTypeField()),e.push(this.facilityLocationField()),e.push(this.occupationField()),e.push(this.relationshipField()),e.push(this.possibleDuplicatesField()),e},isEditMode(){return this.editPerson>=1},hasScannedNationalID(){return this.presets.nationalIDStatus==="true"},async initEditMode(e){this.editPerson=e,this.patient=await l.get("ACTIVE_PATIENT",{patientID:parseInt("".concat(this.editPerson))});const{ancestryDistrict:t,ancestryTA:i,ancestryVillage:n,currentDistrict:a,currentVillage:r,currentTA:d}=this.patient.getAddresses();this.editPersonData={given_name:this.patient.getGivenName(),family_name:this.patient.getFamilyName(),gender:this.patient.getGender(),birthdate:this.patient.getBirthdate(),home_district:t,home_traditional_authority:i,home_village:n,current_district:a,current_village:r,current_traditional_authority:d,cell_phone_number:this.patient.getPhoneNumber(),landmark:this.patient.getClosestLandmark(),occupation:this.patient.getOccupation()},this.presets=this.editPersonData,this.skipSummary=!0,this.personAttribute&&(this.activeField=this.personAttribute,this.fieldComponent=this.activeField)},async onFinish(e,t){if(!g.value){this.createOffline(e,t);return}this.isEditMode()?this.update(t):this.create(e,t),m.value=!1},createOffline(e,t){const{savePersonOffline:i}=k(),n=s.resolvePerson(t),a=this.resolvePersonAttributes(t),r=i("Client registration",n,a,e==null?void 0:e.npid);f(r,this.$router)},async create(e,t){const i=s.resolvePerson(t),n=this.resolvePersonAttributes(t),a=new y,r=new h(await a.registerPatient(i,n)),d=a.getPersonID();if(l.set("ACTIVE_PATIENT",r),this.presets.nationalIDStatus=="true"&&(this.patient=r,await this.patient.updateMWNationalId(this.presets.malawiNationalID)),!(this.app.onRegisterPatient&&await this.app.onRegisterPatient(d,i,n,this.$router,this.$route,t))){if(i.relationship==="Yes")return this.$router.push("/guardian/registration/".concat(d));await f(d,this.$router)}},async update(e){const t=s.resolvePerson(e),i=new y;i.setPersonID(this.editPerson),await i.updatePerson(t);for(const n in t)n in this.editPersonData&&(this.editPersonData[n]=t[n]);if(l.invalidate("ACTIVE_PATIENT"),!this.personAttribute)return this.fieldComponent="edit_user";this.$router.back()},editConditionCheck(e=[]){return!(this.isEditMode()&&!e.includes(this.activeField))},async confirmPatient(){if(this.ddeEnabled&&(!this.patient.getDocID()||this.patient.getDocID()&&this.patient.getNationalID().match(/unknown/i)))try{await this.patient.assignNpid(),await this.patient.printNationalID(),await F(300)}catch(e){b("Failed to assign new NPID: ".concat(e))}this.$router.push("/patients/confirm?person_id=".concat(this.patient.getID()))},resolvePersonAttributes(e){return Object.values(e).filter(t=>p.isPlainObject(t)&&"personAttributes"in t).map(({personAttributes:t})=>t)},async resolveOnRegistrationCallbacks(e,t){for(const i of Object.values(t)){const n=i;if(typeof n.onRegisterPatient=="function")try{await n.onRegisterPatient(e)}catch(a){console.error("".concat(a)),b("".concat(a))}}},mapToOption(e){return e.map(t=>({label:t,value:t}))},hiddenFieldsForScannedNationalID(){const e=t=>({label:t,value:t});return[{id:"given_name",helpText:"First name",type:o.TT_HIDDEN,defaultValue:()=>e(this.presets.given_name),computedValue:()=>({person:this.presets.given_name})},{id:"family_name",helpText:"Last name",type:o.TT_HIDDEN,defaultValue:()=>e(this.presets.family_name),computedValue:()=>({person:this.presets.family_name})},{id:"gender",helpText:"Gender",type:o.TT_HIDDEN,defaultValue:()=>({label:this.presets.gender,value:this.presets.gender.toLowerCase()==="male"?"M":this.presets.gender.toLowerCase()==="female"?"F":"N/A"}),computedValue:()=>({person:this.presets.gender})},{id:"scanned_birthdate",helpText:"Birth date",type:o.TT_HIDDEN,defaultValue:()=>e(this.presets.birthdate),computedValue:()=>({person:{birthdate:this.presets.birthdate,birthdate_estimated:!1}})},{id:"scanned_national_id",helpText:"Scanned National ID",type:o.TT_HIDDEN,defaultValue:()=>e(this.presets.malawiNationalID),computedValue:()=>({onRegisterPatient:async t=>{const i=await h.findByID(t);this.patient=new h(i),this.patient.updateMWNationalId(this.presets.malawiNationalID)}})}]},givenNameField(){const e=s.getGivenNameField();return e.condition=()=>this.editConditionCheck(["given_name"]),e.defaultValue=()=>this.presets.given_name,e},familyNameField(){const e=s.getFamilyNameField();return e.condition=()=>this.editConditionCheck(["family_name"]),e.defaultValue=()=>this.presets.family_name,e},genderField(){const e=this.app.applicationName==="ANC",t=this.app.applicationName==="CxCa",i=s.getGenderField();return i.requireNext=this.isEditMode(),i.defaultValue=()=>this.presets.gender,i.condition=()=>!this.isEditMode()&&(e||t)?!1:this.editConditionCheck(["gender"]),(e||t)&&!this.isEditMode()&&(i.defaultOutput=()=>({label:"Female",value:"F"}),i.defaultComputedOutput=()=>({person:"F"})),i.beforeNext=async n=>{const a=n.value,r=this.presets.gender;return this.isEditMode()&&a!=r?await I("Warning","Changing gender from ".concat(r," to ").concat(a),"This change will cause data inconsistency and will affect alot of Reports.",[{name:"Cancel",slot:"start"},{name:"Change gender",slot:"end",color:"danger"}])==="Change gender":!0},i},dobFields(){const e=s.getDobConfig();if(e.defaultValue=()=>this.presets.birthdate,e.condition=()=>this.editConditionCheck(["year_birth_date","month_birth_date","day_birth_date"]),this.app.applicationName==="ANC"){const t=h.getSessionDate(),i=12;e.maxDate=()=>P(t).subtract(i,"years").format(A)}return C(e)},hasNpidField(){return{id:"has_npid",helpText:"National Patient Identifier (NPID) Barcode",type:o.TT_YES_NO,isRequired:()=>!0,condition:()=>!this.isEditMode()&&m.value||!g.value,options:()=>[{label:"Has client brought NPID barcode?",value:"",values:[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]}]}},scanNpid(){return{id:"npid",helpText:"Scan National Patient Identifier (NPID)",type:o.TT_BARCODE,requireNext:!1,condition:e=>/yes/i.test("".concat(e.has_npid)),config:{hiddenFooterBtns:["Clear"]},isRequired:()=>!0}},homeRegionField(){return{...s.getHomeRegionField(),condition:()=>this.editConditionCheck(this.homeAddressAttributes)}},homeDistrictField(){return{...s.getHomeDistrictField(),condition:()=>this.editConditionCheck(this.homeAddressAttributes)}},homeTAField(){return{...s.getHomeTaField(),condition:e=>this.editConditionCheck(this.homeAddressAttributes)&&!e.home_region.label.match(/foreign|use home/i)}},homeVillageField(){return{...s.getHomeVillageField(),condition:e=>this.editConditionCheck(this.homeAddressAttributes)&&!e.home_region.label.match(/foreign|use home/i)}},currentRegionField(){const e=s.getCurrentRegionField();return e.summaryMapValue=(t,i,n)=>{var a,r,d,u;return/use home/i.test("".concat(t.value))?[{label:"Current region",value:(a=n.person)==null?void 0:a.current_region},{label:"Current District/Country",value:(r=n.person)==null?void 0:r.current_district},{label:"Current Traditional Authority",value:(d=n.person)==null?void 0:d.current_traditional_authority},{label:"Current village",value:(u=n.person)==null?void 0:u.current_village}]:{label:"Current Region",value:t.label}},this.isEditMode()&&(e.computedValue=t=>{if(/use home/i.test("".concat(t.value)))return{person:{current_district:this.editPersonData.home_district,current_traditional_authority:this.editPersonData.home_traditional_authority,current_village:this.editPersonData.home_village}}}),e.condition=()=>this.editConditionCheck(this.currentAddressAttributes),e},currentDistrictField(){const e=s.getCurrentDistrictField();return e.condition=t=>!/use home/i.test(t.current_region.label)&&this.editConditionCheck(this.currentAddressAttributes),e},currentTAField(){const e=s.getCurrentTAfield();return e.condition=t=>this.editConditionCheck(this.currentAddressAttributes)&&!t.current_region.label.match(/foreign|use home/i),e},currentVillage(){const e=s.getCurrentVillageField();return e.condition=t=>this.editConditionCheck(this.currentAddressAttributes)&&!t.current_region.label.match(/foreign|use home/i),e},cellPhoneField(){const e=s.getCellNumberField();return e.condition=()=>this.editConditionCheck(["cell_phone_number"]),e.defaultValue=()=>this.presets.cell_phone_number,e},facilityLocationField(){const e=s.getFacilityLocationField();return e.condition=t=>["Emergency supply","External consultation"].includes(t.patient_type.value),e},landmarkFields(){const e=s.getLandmarkFields();return e[0].condition=()=>this.editConditionCheck(["default_landmarks"]),e},patientTypeField(){return{id:"patient_type",helpText:"Type of patient",type:o.TT_SELECT,computedValue:e=>({person:e.value}),condition:()=>this.editConditionCheck(["patient_type"])&&this.app.applicationName==="ART",validation:e=>c.required(e),options:()=>N.getPatientTypes()}},occupationField(){const e=this.app.applicationName==="AETC";return{id:"occupation",helpText:"Occupation",type:o.TT_SELECT,init:async()=>(this.isMilitarySite=await l.get("IS_MILITARY_SITE"),!0),computedValue:t=>({person:t.value}),condition:()=>this.editConditionCheck(["occupation"])&&this.isMilitarySite||e,validation:t=>c.required(t),options:()=>{const t=["Military","Civilian"];if(e){const i=["Business","Craftsman","Domestic Worker","Driver","Farmer","Healthcare Worker","House Wife","Mechanic","Messenger","Office Worker","Police","Preschool Child","Prisoner","Sales Person","Security Guard","Soldier","Student","Teacher","Other","unknown"];return this.mapToOption([...t,...i])}else return this.mapToOption(t)}}},regimentField(){return{id:"person_regiment_id",helpText:"Regiment ID",type:o.TT_TEXT,computedValue:({value:e})=>({personAttributes:{person_attribute_type_id:35,value:e}}),condition:e=>this.editConditionCheck(["person_regiment_id","occupation"])&&e.occupation&&e.occupation.value.match(/Military/i),validation:e=>c.required(e)}},rankField(){return{id:"rank",helpText:"Rank",type:o.TT_SELECT,validation:e=>c.required(e),computedValue:({value:e})=>({personAttributes:{person_attribute_type_id:36,value:e}}),condition:e=>this.editConditionCheck(["rank","occupation"])&&e.occupation&&e.occupation.value.match(/Military/i),options:()=>this.mapToOption(["First Lieutenant","Captain","Major","Lieutenant Colonel","Colonel","Brigadier General","Lieutenant General","General","Private","Corporal","Lance Corporal","Seargent","Staff Seargent","Warrant Officer class 1","Warrant Officer class 2"])}},dateJoinedMilitaryFields(){return C({id:"person_date_joined_military",helpText:"Joined Military",required:!0,condition:e=>this.editConditionCheck(["year_person_date_joined_military","month_person_date_joined_military","day_person_date_joined_military","occupation"])&&e.occupation&&e.occupation.value.match(/Military/i),minDate:()=>_.estimateDateFromAge(100),maxDate:()=>V.getSessionDate(),estimation:{allowUnknown:!1},computeValue:e=>({date:e,personAttributes:{person_attribute_type_id:37,value:e}})})},relationshipField(){const e=this.app.applicationName==="ITS",t=this.app.applicationName==="CxCa",i=this.app.applicationName==="OPD",n=this.app.applicationName==="Registration";return{id:"relationship",helpText:"Register guardian?",type:o.TT_SELECT,computedValue:a=>({person:a.value}),condition:()=>this.editConditionCheck(["relationship"])&&!t&&!i&&!n&&!e,validation:a=>c.required(a),options:()=>this.mapToOption(["Yes","No"])}},searchResultField(){return{id:"results",helpText:"Search results",type:o.TT_PERSON_RESULT_VIEW,init:async()=>(this.isEditMode()||(this.ddeEnabled=await l.get("IS_DDE_ENABLED")),!0),dynamicHelpText:e=>'Search results for "'.concat(e.given_name.value," ").concat(e.family_name.value," | ").concat(e.gender.label,'"'),appearInSummary:()=>!1,condition:()=>!this.isEditMode()&&!m.value,options:async e=>{const t={given_name:e.given_name.value,family_name:e.family_name.value,gender:e.gender.value};return this.ddeEnabled?(await this.ddeInstance.searchDemographics(t)).map(a=>{const r=s.getPersonAttributeOptions(a);return r.other.options.push({label:"Patient Type",value:a.patient_type}),r.other.options.push({label:"Doc ID",value:a.doc_id}),r}):(await h.search(t)).map(n=>s.getPersonAttributeOptions(n))},config:{hiddenFooterBtns:["Clear","Next","Back"],footerBtns:[{name:"Edit Search",slot:"end",onClick:()=>{this.fieldComponent="given_name"},state:{disabled:{default:()=>this.hasScannedNationalID()}}},{name:"New Client",slot:"end",onClick:()=>{this.fieldComponent="_NEXT_FIELD_"},state:{visible:{default:()=>this.app.applicationName!="ITS"}}},{name:"Continue",color:"success",slot:"end",state:{disabled:{default:()=>!0,onValue(e,t){return p.isEmpty(t.results)}}},onClick:e=>e.results.other.patientID?this.$router.push("/patients/confirm?person_id=".concat(e.results.value)):this.$router.push("/patients/confirm?patient_barcode=".concat(e.results.value))}]}}},possibleDuplicatesField(){let e={},t={};return{id:"possible_duplicates",helpText:"Possible Duplicate(s)",type:o.TT_PERSON_MATCH_VIEW,condition:async(i,n)=>this.ddeEnabled&&this.editPerson<=0?(e=s.resolvePerson(n),t=await this.ddeInstance.checkPotentialDuplicates(e),t.length>=1):!1,options:async()=>{const i=n=>_.toStandardHisDisplayFormat(n);return t.map(({score:n,person:a})=>({label:"".concat(a.given_name," ").concat(a.family_name),value:a.patient_id,other:{score:"".concat(n*100,"%"),newPerson:e,foundPerson:a,docID:a.id,comparisons:[["Name","".concat(e.given_name," ").concat(e.family_name),"".concat(a.given_name," ").concat(a.family_name)],["Gender",e.gender,a.gender],["Birthdate",i(e.birthdate),i(a.birthdate)],["Home District",e.home_district,a.home_district],["Home TA",e.home_traditional_authority,a.home_traditional_authority]]}}))},config:{hiddenFooterBtns:["Clear","Next"],footerBtns:[{name:"Not Duplicate",slot:"start",state:{visible:{default:()=>!1,onValue:(i,n)=>!p.isEmpty(n.possible_duplicates)}},onClick:()=>{this.fieldComponent="_NEXT_FIELD_"}},{name:"Select",slot:"end",color:"success",state:{visible:{default:()=>!1,onValue:(i,n)=>!p.isEmpty(n.possible_duplicates)}},onClick:i=>{this.ddeInstance.importPatient(i.possible_duplicates.other.docID).then(n=>{this.$router.push("/patients/confirm?person_id=".concat(n.patient_id))}).catch(()=>{this.$router.push("/patients/confirm?person_id=".concat(i.possible_duplicates.value))})}}]}}},personIndexField(){return{id:"edit_user",helpText:"Edit Demographics",type:o.TT_TABLE_VIEWER,init:async()=>(this.isEditMode()&&(this.formLabel="View / Edit",this.ddeEnabled=await l.get("IS_DDE_ENABLED"),this.isMilitarySite=await l.get("IS_MILITARY_SITE")),!0),condition:()=>this.isEditMode(),options:async()=>{const e=a=>({name:"Edit",type:"button",action:()=>{this.activeField=a,this.fieldComponent=this.activeField}}),t=["Attributes","Values","Edit"],i=[["Given Name",this.editPersonData.given_name,e("given_name")],["Family Name",this.editPersonData.family_name,e("family_name")],["Gender",this.editPersonData.gender,e("gender")],["Birthdate",_.toStandardHisDisplayFormat(this.editPersonData.birthdate),e("year_birth_date")],["Cell Phone Number",this.editPersonData.cell_phone_number,e("cell_phone_number")],["Home District",this.editPersonData.home_district,e("home_region")],["Home TA",this.editPersonData.home_traditional_authority,e("home_region")],["Home Village",this.editPersonData.home_village,e("home_region")],["Current district",this.editPersonData.current_district,e("current_region")],["Current Village",this.editPersonData.current_village,e("current_region")],["Current T/A",this.editPersonData.current_traditional_authority,e("current_region")],["Landmark",this.editPersonData.landmark,e("default_landmarks")]];this.isMilitarySite&&i.push(["Occupation",this.editPersonData.occupation,e("occupation")]);const n={indexes:[],class:"his-empty-set-color"};return i.forEach((a,r)=>{E(a[1])&&n.indexes.push(r)}),this.hasIncompleteData=n.indexes.length>=1,[{label:"",value:"",other:{rows:i,columns:t,rowColors:[n]}}]},config:{footerBtns:[{name:"Reassign",slot:"end",color:"success",state:{visible:{default:()=>!1,onload:()=>this.ddeEnabled&&this.ddeIsReassign&&!this.hasIncompleteData}},onClick:async()=>{try{await this.ddeInstance.reassignNpid(this.ddeDocID,this.editPerson),await this.ddeInstance.printNpid(),this.$router.push("/patients/confirm?person_id=".concat(this.editPerson))}catch(e){S("".concat(e))}}},{name:"Confirm",slot:"end",color:"warning",state:{visible:{onload:()=>!this.ddeIsReassign&&!this.hasIncompleteData}},onClick:async()=>this.confirmPatient()}],hiddenFooterBtns:["Clear","Next"]}}}}});function L(e,t,i,n,a,r){const d=$("his-standard-form");return R(),M(d,{formLabel:e.formLabel,onOnIndex:t[0]||(t[0]=u=>e.fieldComponent=""),skipSummary:e.skipSummary,activeField:e.fieldComponent,fields:e.fields,onFinishAction:e.onFinish},null,8,["formLabel","skipSummary","activeField","fields","onFinishAction"])}const Y=w(O,[["render",L]]);export{Y as default};
