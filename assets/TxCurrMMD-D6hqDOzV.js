import{_ as c}from"./ReportMixin.vue_vue_type_script_lang-DYy2lpd9.js";import{T as m}from"./tx_report_service-CpvsloX5.js";import{R as f}from"./TableReportTemplate-BDV868op.js";import{d as u,L as e,cW as h,_ as w,r as d,o as R,c as _,w as M,b as v}from"./index-BFVcutZq.js";import{M as A}from"./moh_cohort_service-Bb1jMJ7Q.js";import"./HisStandardForm-DO3sZVdL.js";import"./ReportErrors-B0y1wUIE.js";const C=u({mixins:[c],components:{ReportTemplate:f},data:()=>({title:"TX Curr MMD Report",cohort:{},rows:[],totals:new Set,errors:[],showStatus:!1,columns:[[e.thTxt("Age group"),e.thTxt("Gender"),e.thNum("# of clients on <3 months of ARVs"),e.thNum("# of clients on 3 - 5 months of ARVs"),e.thNum("# of clients on >= 6 months of ARVs")]],headerInfoList:[],mohCohort:{},canValidate:!1}),watch:{async canValidate(t){t&&await this.validateReport()}},created(){this.fields=this.getDateDurationFields()},methods:{async onPeriod(t,o){this.canValidate=!1,this.totals.clear(),this.errors=[],this.showStatus=!1,this.rows=[],this.report=new m,this.mohCohort=new A,this.mohCohort.setOccupation(o.occupation),this.mohCohort.setStartDate(o.start_date),this.mohCohort.setEndDate(o.end_date),this.report.setOccupation(o.occupation),this.report.setStartDate(o.start_date),this.report.setEndDate(o.end_date),this.period=this.report.getDateIntervalPeriod(),this.report.initArvRefillPeriod(!0),await this.setRows(),this.canValidate=!0,this.showStatus=!0,this.setHeaderInfoList()},getValues(t,o){const r=[],a=[],l=[];for(const s in t){const i=t[s].prescribed_days;this.totals.add(s),i<90&&r.push(s),i>=90&&i<=150&&a.push(s),i>150&&l.push(s)}return[this.drill(r,"# of clients on < 3 months of ARVs (".concat(o,")")),this.drill(a,"# of clients on 3 - 5 months of ARVs (".concat(o,")")),this.drill(l,"# of clients on  >= 6 months of ARVs (".concat(o,")"))]},async setRows(){let t=0,o=0;const r=[],a=[];for(const l in h){const s=h[l];if(s==="<1 year")t=0,o=0;else if(s==="90 plus years")t=90,o=1e4;else{const[i,p]=s.split("-");t=parseInt(i),o=parseInt(p)}const n=await this.report.getTxCurrMMDReport(t,o);this.report.initArvRefillPeriod(!1),n?(a.push([e.td(s),e.td("Female"),...this.getValues(n.Female,"".concat(s," Female"))]),r.push([e.td(s),e.td("Male"),...this.getValues(n.Male,"".concat(s," Male"))])):(a.push([e.td(s),e.td("Female"),e.td(0),e.td(0),e.td(0)]),r.push([e.td(s),e.td("Male"),e.td(0),e.td(0),e.td(0)])),this.rows=[...a,...r]}},setHeaderInfoList(){this.headerInfoList=[{label:"Total clients",value:this.totals.size,other:{onclick:()=>this.runTableDrill(Array.from(this.totals),"Total Clients")}}]},validateReport(){const t={total_alive_and_on_art:{param:this.totals.size,check:(r,a)=>a>r,error:(r,a)=>"\n                        MoH cohort Alive and on ART clients <b>(".concat(r,")</b> is not\n                        matching with total TX MMD clients <b>(").concat(a,")</b>.\n                    ")}};this.mohCohort.validateIndicators(t,r=>this.errors=r)===-1&&(this.errors=["Report not validated. Run the MoH cohort report for similar reporting period and then run this report"])}}});function V(t,o,r,a,l,s){const n=d("report-template"),i=d("ion-page");return R(),_(i,null,{default:M(()=>[v(n,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,reportPrefix:"PEPFAR",config:{showIndex:!0},validationErrors:t.errors,showValidationStatus:t.showStatus,headerInfoList:t.headerInfoList,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","validationErrors","showValidationStatus","headerInfoList","onReportConfiguration"])]),_:1})}const P=w(C,[["render",V]]);export{P as default};
