import{_ as m}from"./ReportMixin.vue_vue_type_script_lang-5B57RLMa.js";import{T as c}from"./tx_report_service-BEoNLADR.js";import{R as f}from"./TableReportTemplate-BXc2_KE-.js";import{d as u,L as e,cx as h,_ as w,r as d,o as R,c as _,w as M,b as v}from"./index-ChqjXh1q.js";import{M as A}from"./moh_cohort_service-xLibs2Zh.js";import"./MultiFieldDateHelper-BeB1wkpH.js";import"./dynamic-import-helper-Bsjrd6Ro.js";import"./KbLayouts-VRA-vjeH.js";import"./HisKbConfigurations-GhFQZvlg.js";import"./BasicReportTemplate-Cd6YwWw4.js";import"./Export-C9Hhxwb2.js";import"./SIngleTouchField-BdybEVDH.js";import"./Pagination-CrJFF6Hd.js";import"./HisStandardForm-BfZPxRjA.js";import"./TouchScreenForm-Bp625zJI.js";import"./ToolbarMediumCard-NV07rtjo.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-DBgU2Ffk.js";import"./ReportErrors-CzIGccNx.js";const C=u({mixins:[m],components:{ReportTemplate:f},data:()=>({title:"TX Curr MMD Report",cohort:{},rows:[],totals:new Set,errors:[],showStatus:!1,columns:[[e.thTxt("Age group"),e.thTxt("Gender"),e.thNum("# of clients on <3 months of ARVs"),e.thNum("# of clients on 3 - 5 months of ARVs"),e.thNum("# of clients on >= 6 months of ARVs")]],headerInfoList:[],mohCohort:{},canValidate:!1}),watch:{async canValidate(t){t&&await this.validateReport()}},created(){this.fields=this.getDateDurationFields()},methods:{async onPeriod(t,o){this.canValidate=!1,this.totals.clear(),this.errors=[],this.showStatus=!1,this.rows=[],this.report=new c,this.mohCohort=new A,this.mohCohort.setOccupation(o.occupation),this.mohCohort.setStartDate(o.start_date),this.mohCohort.setEndDate(o.end_date),this.report.setOccupation(o.occupation),this.report.setStartDate(o.start_date),this.report.setEndDate(o.end_date),this.period=this.report.getDateIntervalPeriod(),this.report.initArvRefillPeriod(!0),await this.setRows(),this.canValidate=!0,this.showStatus=!0,this.setHeaderInfoList()},getValues(t,o){const r=[],i=[],l=[];for(const s in t){const a=t[s].prescribed_days;this.totals.add(s),a<90&&r.push(s),a>=90&&a<=150&&i.push(s),a>150&&l.push(s)}return[this.drill(r,"# of clients on < 3 months of ARVs (".concat(o,")")),this.drill(i,"# of clients on 3 - 5 months of ARVs (".concat(o,")")),this.drill(l,"# of clients on  >= 6 months of ARVs (".concat(o,")"))]},async setRows(){let t=0,o=0;const r=[],i=[];for(const l in h){const s=h[l];if(s==="<1 year")t=0,o=0;else if(s==="90 plus years")t=90,o=1e4;else{const[a,p]=s.split("-");t=parseInt(a),o=parseInt(p)}const n=await this.report.getTxCurrMMDReport(t,o);this.report.initArvRefillPeriod(!1),n?(i.push([e.td(s),e.td("Female"),...this.getValues(n.Female,"".concat(s," Female"))]),r.push([e.td(s),e.td("Male"),...this.getValues(n.Male,"".concat(s," Male"))])):(i.push([e.td(s),e.td("Female"),e.td(0),e.td(0),e.td(0)]),r.push([e.td(s),e.td("Male"),e.td(0),e.td(0),e.td(0)])),this.rows=[...i,...r]}},setHeaderInfoList(){this.headerInfoList=[{label:"Total clients",value:this.totals.size,other:{onclick:()=>this.runTableDrill(Array.from(this.totals),"Total Clients")}}]},validateReport(){const t={total_alive_and_on_art:{param:this.totals.size,check:(r,i)=>i>r,error:(r,i)=>"\n                        MoH cohort Alive and on ART clients <b>(".concat(r,")</b> is not\n                        matching with total TX MMD clients <b>(").concat(i,")</b>.\n                    ")}};this.mohCohort.validateIndicators(t,r=>this.errors=r)===-1&&(this.errors=["Report not validated. Run the MoH cohort report for similar reporting period and then run this report"])}}});function V(t,o,r,i,l,s){const n=d("report-template"),a=d("ion-page");return R(),_(a,null,{default:M(()=>[v(n,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,reportPrefix:"PEPFAR",config:{showIndex:!0},validationErrors:t.errors,showValidationStatus:t.showStatus,headerInfoList:t.headerInfoList,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","validationErrors","showValidationStatus","headerInfoList","onReportConfiguration"])]),_:1})}const B=w(C,[["render",V]]);export{B as default};
