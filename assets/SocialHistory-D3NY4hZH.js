import{H as f}from"./HisStandardForm-CxcKR3FF.js";import{b2 as S,d as T,K as _,V as i,o as g,c as h,cj as y,t as s}from"./index-BPESSmpp.js";import{F as r}from"./dynamic-import-helper-Bsjrd6Ro.js";import{b as E,m as n,r as x}from"./commons-BwoeB29A.js";import{u as O}from"./useEncounter-DANY8FzT.js";import"./TouchScreenForm-BjDI66hA.js";import"./ToolbarMediumCard-DnRdVW_r.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-DixuDTZA.js";import"./isEmpty-DALfY1Go.js";import"./encounter_guidelines-ilvUE8mV.js";import"./GuidelineEngine-D6V1_Znr.js";class V extends S{constructor(a,o){super(a,84,o)}}const B=T({__name:"SocialHistory",setup(l){let a;const o=_([]),{goToNextTask:c,patientDashboardUrl:u}=O((e,t)=>{a=new V(t,e),o.value=[d(),m(),b()]});async function p(e,t){if(!await a.createEncounter())return s("Unable to create social history encounter");const v=await x({...t});if(!await a.saveObservationList(v))return s("Unable to save observations");c()}function d(){return{id:"social_acitivites",helpText:"Social Activities",type:r.TT_MULTIPLE_YES_NO,validation:e=>i.validateSeries([()=>i.required(e),()=>i.anyEmpty(e)]),computedValue:e=>({obs:e.map(t=>a.buildValueCoded(t.label,t.value))}),summaryMapValue:e=>({label:e.label,value:e.value}),options:(e,t)=>E(["Patient smokes","Patient drinks alcohol"],t)}}function m(){return{id:"marital_status",helpText:"Marital Status",type:r.TT_SELECT,validation:e=>i.required(e),computedValue:e=>({obs:a.buildValueText("Marital status",e.label)}),options:()=>n(["Single","Engaged","Married","Separated","Widowed","Other"])}}function b(){return{id:"religion",helpText:"Religion",type:r.TT_SELECT,validation:e=>i.required(e),computedValue:e=>({obs:a.buildValueText("Religion",e.label)}),options:()=>n(["Catholic","CCAP","SDA","Angelican","Muslim","Pentecostalism","Jehovah witness","Other"])}}return(e,t)=>(g(),h(f,{cancelDestinationPath:y(u),fields:o.value,onFinishAction:p},null,8,["cancelDestinationPath","fields"]))}});export{B as default};
