import{d as l,r as u,bW as d,bY as m,e3 as o,ao as _,a as f,w as T,e as E,f as s,m as v,b as N}from"./index-DrAzzURJ.js";import{H as P}from"./HisStandardForm-BuN2ARUl.js";import{u as S}from"./useEncounter-DkJDyHxN.js";import{r as b}from"./commons-C0KTHr4m.js";import"./isEmpty-DpsHgz2w.js";import"./encounter_guidelines-wbooCIhg.js";import"./GuidelineEngine-D6V1_Znr.js";const C=l({__name:"Pregnancy",setup(A){const n=u([]),e=new d(-1,m.UPDATE_PREGNANCY_STATUS),{goToNextTask:r,patientDashboardUrl:i}=S((t,a)=>{e.patientID=a,e.providerID=t,n.value=[{id:"personIsPregnant",helpText:"Is Person pregnant?:",type:_.TT_SELECT,computedValue:p=>({concept_id:o("PATIENT_IS_PREGNANT"),value_coded:o("".concat(p.value)),obs_datetime:e.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]}]});async function c(t,a){await e.createEncounter(),await e.saveObservationList(await b(a)),r()}return(t,a)=>(N(),f(s(v),null,{default:T(()=>[E(P,{cancelDestinationPath:s(i),onFinishAction:c,fields:n.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{C as default};
