import{d as g,a5 as b,r,ap as D,t as _,as as v,cP as C,cc as V,cO as d,O as h,a6 as w,v as L,w as B,ab as f,u as N,x as O}from"./index-V3uTS3yc.js";import{v as P}from"./TableView-BhELjG98.js";import{V as R}from"./viral_load_report-BEmPclsG.js";import{w as S,a as $,c as E}from"./v2utils-BlU5HC0B.js";import"./Export-B8Bbah0c.js";import"./index-B5Adarov.js";const F=g({components:{IonPage:b,v2Datatable:P},setup(){const e=r([]),l=r(""),i=r(!1),t=new R,s=r(!1),c=D(()=>[[s.value?{label:"Filing#",ref:"identifier"}:$("identifier"),{label:"First name",ref:"given_name",exportable:!1},{label:"Last name",ref:"family_name",exportable:!1},{label:"Gender",ref:"gender",toValue:a=>V(a)},{label:"DOB",ref:"birthdate",toValue:a=>d(a)},{label:"Date of VL Order",ref:"order_date",toValue:a=>d(a)},E()]]),o=()=>S(async()=>{if(!(t.startDate&&t.endDate))return h("Start date and end date required!");e.value=[],e.value=await t.getVlCollection()}),n=()=>C({onFinish:(a,p,m,u)=>{u&&t.setOccupation(u),l.value="".concat(m),t.startDate=a,t.endDate=p,o()}});return _(()=>{v.get("IS_ART_FILING_NUMBER_ENABLED").then(a=>s.value=a),!e.value.length&&n()}),{reportData:e,isLoading:i,configure:n,generate:o,columns:c,period:l}}});function G(e,l,i,t,s,c){const o=f("v2Datatable"),n=f("ion-page");return N(),L(n,null,{default:B(()=>[O(o,{title:"VL Collection","default-sort-order":"asc","default-sorted-column":"identifier",subtitle:e.period,columns:e.columns,columnData:e.reportData,rowsPerPage:50,onConfigure:e.configure,onRefresh:()=>e.generate(),"report-prefix":"Clinic"},null,8,["subtitle","columns","columnData","onConfigure","onRefresh"])]),_:1})}const q=w(F,[["render",G]]);export{q as default};
