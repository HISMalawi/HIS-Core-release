import{F as d}from"./dynamic-import-helper-BkBZiFw5.js";import{d as p,H as a,n as r,t as u,_ as l,r as c,o as m,c as h}from"./index-BCTN_bnC.js";import{D}from"./dispensation_service-Be8xPJbB.js";import{_ as f}from"./EncounterMixin.vue_vue_type_script_lang-Bfd5amPg.js";import"./drug_order_service-DUHTU9In.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-CaDwl-hA.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";const _=p({mixins:[f],data:()=>({dispensation:{}}),watch:{patient:{async handler(t){this.dispensation=new D(t.getID(),this.providerID),await this.dispensation.loadCurrentDrugOrder(),await this.dispensation.loadDrugHistory(),this.fields=this.getFields()},deep:!0}},methods:{saveDispensations(t){const e=this.buildDispensations(t);return this.dispensation.saveDispensations(e)},buildDispensations(t){return this.dispensation.buildDispensations(t.other.order_id,t.value)},buildMedicationHistory(){return this.dispensation.getDrugHistory().sort((t,e)=>{const s=new Date(t.order.start_date);return new Date(e.order.start_date)-s}).map(t=>({medication:t.drug.name,date:a.toStandardHisDisplayFormat(t.order.start_date),amount:t.quantity}))},buildOrderOptions(){return this.dispensation.getCurrentOrder().map(t=>({label:t.drug.name,value:t.quantity||0,other:{drug_id:t.drug.drug_id,order_id:t.order.order_id,amount_needed:this.calculateCompletePack(t)}}))},getPackSizesRows(t,e){return this.dispensation.getDrugPackSizes(t).map(i=>{const n=e>0?e/i:"-";return[i,n,0,0]})},calculateCompletePack(t){const e=parseFloat(t.amount_needed)-(t.quantity||0),s=this.dispensation.calcCompletePack(t,e);return s<0?0:s},isDoneDispensing(t){return t.map(e=>e.value!=0).every(Boolean)},async isValidDispensation(t){let e=!0;const s=parseInt(t.value.toString()),i=t.other.amount_needed,n=s/i*100;return n>110&&(e=await r("Are you sure you want to dispense over 110% of the prescribed pill count?")),n<100&&(e=await r("Are you sure you want to dispense less than 100% of the prescribe amount?")),e},getFields(){return[{id:"dispenses",helpText:"Dispensation",type:d.TT_DRUG_DISPENSER,onValueUpdate:async(t,e)=>t.value!=-1&&this.isDoneDispensing(e)?this.gotoPatientDashboard():(t.other.amount_needed=0,await this.dispensation.loadCurrentDrugOrder(),this.buildOrderOptions()),onValue:async(t,e)=>t.value===-1?!!await this.dispensation.voidOrder(t.other.order_id):!e&&!await this.isValidDispensation(t)?!1:await this.saveDispensations(t)?!0:(u("Unable to save dispensation"),!1),config:{medicationHistory:this.buildMedicationHistory(),toolbarInfo:[{label:"Name",value:this.patient.getFullName()},{label:"Gender",value:this.patient.getGender()},{label:"Date Of Birth",value:a.toStandardHisDisplayFormat(this.patient.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>this.buildOrderOptions()}]}}});function g(t,e,s,i,n,y){const o=c("his-standard-form");return m(),h(o,{skipSummary:!0,cancelDestinationPath:t.cancelDestination,fields:t.fields},null,8,["cancelDestinationPath","fields"])}const I=l(_,[["render",g]]);export{I as default};
