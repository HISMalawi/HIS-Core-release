import{d as A,I as y,cg as C,K as v,N as S,ac as N,O as D,n as M,t as B,ae as $,q as O,_ as x,r as w,o as E,c as I,w as j,b as P}from"./index-B3m_Pvhj.js";import{D as k}from"./ReportDateSelectionPrompt-CHv8yc2X.js";import{T as G}from"./tb_report_service-B-Nd3mTk.js";import{v as X}from"./TableView-Dm1DpBZ-.js";import{A as q}from"./ArtDrilldown-CZodUndT.js";import"./Export-BHNaVpTC.js";const L=A({components:{IonPage:y,IonLoading:C,v2Datatable:X},setup(){const e=v([]),g=v(""),m=v(!1),l=new G,a=(u,c)=>({ref:c,label:u,toValue:o=>o.length,tdClick:async o=>{o.refData.length&&(await D.create({component:q,backdropDismiss:!1,cssClass:"large-modal",componentProps:{subtitle:g,patientIdentifiers:o.refData,title:"".concat(o.data.ageGroup," ").concat(o.data.gender," ").concat(o.column.label),onFinish:()=>D.getTop().then(n=>n&&D.dismiss())}})).present()}}),F=[[{label:"#",ref:"index"},{label:"Age group",ref:"ageGroup"},{label:"Gender",ref:"gender"},a("TX_CURR","tx_curr"),a("Symptom Screen (alone)","symptom_screen_alone"),a("CXR screen","cxr_screen"),a("mWRD screen","mwrd_screen"),a("New on ART/Screen Positive","sceen_pos_new"),a("New on ART/Screen Negative","sceen_neg_new"),a("Already on ART/Screen Positive","sceen_pos_prev"),a("Already on ART/Screen Negative","sceen_neg_prev"),a("TB RX_New on ART","started_tb_new"),a("TB RX_Prev on ART","started_tb_prev")]],_=async()=>p(await M("Do you want to rebuild report?")),p=async(u=!1)=>{if(!(l.startDate&&l.endDate))return B("Start date and end date required!");m.value=!0,e.value=[];try{const c=await l.getTxTbReport(u,"pepfar"),o={F:"Female",M:"Male"},n=Object.keys(c).reduce((t,s)=>{if(s==="Unknown")return t;const i=c[s];return Object.keys(i).forEach(r=>{t[r].rows.push({ageGroup:s,gender:o[r],...i[r]}),t[r].aggregate=Object.keys(i[r]).reduce((b,f)=>Array.isArray(i[r][f])?{...b,[f]:[...b[f]||[],...i[r][f]]}:b,t[r].aggregate)}),t},{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}});e.value=[...n.F.rows,...n.M.rows,{ageGroup:"All",gender:"Male",...n.M.aggregate}];const T=Object.values(n.F.aggregate).reduce((t,s)=>t.concat(s),[]),R=await l.getMaternalStatus($.uniq(T)),h=R.FBf.concat(R.FP);["FP","FNP","FBf"].forEach(t=>{e.value.push(Object.keys(n.F.aggregate).reduce((s,i)=>({...s,[i]:n.F.aggregate[i].filter(r=>t==="FNP"?!h.includes(r):R[t].includes(r))}),{ageGroup:"All",gender:t}))}),e.value=e.value.map((t,s)=>({index:s+1,...t}))}catch(c){console.error(c),O("Unable to generate report!")}m.value=!1},d=()=>k({onFinish:(u,c,o,n)=>{g.value="Period: ".concat(o),l.startDate=u,l.endDate=c,n&&l.setOccupation(n),p()}});return S(()=>d()),{Img:N,reportData:e,isLoading:m,onRefreshReport:_,configure:d,generate:p,columns:F,period:g}}});function U(e,g,m,l,a,F){const _=w("ion-loading"),p=w("v2Datatable"),d=w("ion-page");return E(),I(d,null,{default:j(()=>[P(_,{"is-open":e.isLoading,message:"Please wait..."},null,8,["is-open"]),P(p,{title:"Tx TB Report","icon-url":e.Img("login-logos/PEPFAR.png"),subtitle:e.period,columns:e.columns,columnData:e.reportData,rowsPerPage:100,onConfigure:e.configure,onRefresh:e.onRefreshReport,"report-prefix":"Pepfar"},null,8,["icon-url","subtitle","columns","columnData","onConfigure","onRefresh"])]),_:1})}const Q=x(L,[["render",U]]);export{Q as default};
