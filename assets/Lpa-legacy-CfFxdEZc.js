System.register(["./index-legacy-CA6M7ipO.js","./HisStandardForm-legacy-a9YJRGaH.js","./useEncounter-legacy-CgHUO1ZL.js","./commons-legacy-BqS3TQTP.js","./isEmpty-legacy-cRrH0Hs5.js","./encounter_guidelines-legacy-Bcz_Mw7r.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,i,n,s,o,l,c,d,r,u,p,m,_,T,b,g,v,E,h,R,y,f,I;return{setters:[e=>{a=e.d,i=e.r,n=e.bQ,s=e.bV,o=e.ar,l=e.ad,c=e.d$,d=e.e1,r=e.ao,u=e.ae,p=e.a,m=e.c,_=e.w,T=e.b,b=e.u,g=e.bU,v=e.e2,E=e.aW,h=e.I,R=e.a_},e=>{y=e.H},e=>{f=e.u},e=>{I=e.r},null,null,null],execute:function(){e("default",a({__name:"Lpa",setup(e){const t=i([]),a=new n(-1,s.LAB_RESULTS),D=i(),S=o(),{goToNextTask:L,patientDashboardUrl:C,facts:N}=f(((e,i,n)=>{a.patientID=i,a.providerID=e,D.value=n,t.value=[{id:"sampleResult",helpText:"Sample Result:",type:l.TT_SELECT,computedValue:e=>[{concept_id:c("Lab test result"),value_coded:c(`${e.value}`),obs_datetime:a.date},{concept_id:c("TB_STATUS"),value_coded:c(e.other),obs_datetime:a.date},{concept_id:c("BACTERIOLOGICALLY_DIAGNOSED"),value_coded:c("YES_ANSWER"),obs_datetime:a.date},{concept_id:c("PROCEDURE_TYPE"),value_coded:c("LPA"),obs_datetime:a.date},..."POSITIVE"===e.other?[{concept_id:c("TB_TYPE"),value_coded:c("PULMONARY_TB"),obs_datetime:a.date}]:[]],options:()=>[{value:"MTB_NOT_DETECTED",label:"MTB not detected",other:"NEGATIVE"},{value:"MTB_DETECTED",label:"MTB detected",other:"POSITIVE"},{value:"MTB_INVALID",label:"Invalid",other:"NEGATIVE"}]},{id:"treatmentType",helpText:"Select treatment drugs:",type:l.TT_SELECT,condition:e=>"MTB_DETECTED"===e.sampleResult.value,options:()=>[{value:"FIRST_LINE",label:"Firstline Drugs"},{value:"SECOND_LINE",label:"DR TB Drugs"}]},{id:"sampleResistance",helpText:"MTB Resistance:",type:l.TT_MULTIPLE_SELECT,condition:e=>"FIRST_LINE"===e.treatmentType.value,onValueUpdate:(e,t)=>e.map((e=>{if(t.isChecked){if(/no resistance/i.test(`${t.label}`)&&e.label!=t.label)return e.isChecked=!1,e;/no resistance/i.test(`${t.label}`)||/no resistance/i.test(`${e.label}`)&&(e.isChecked=!1)}return e})),computedValue:e=>{const t=[];return 1===e.length?t.push({concept_id:c("Resistance classification"),value_coded:c("Mono drug resistant"),obs_datetime:a.date}):e.length>1&&t.push({concept_id:c("Resistance classification"),value_coded:c("Multi drug resistant"),obs_datetime:a.date}),e.some((e=>/rif/i.test(e.label)))&&t.push({concept_id:c("Rifampicin resistance confirmed"),value_coded:c("YES_ANSWER"),obs_datetime:a.date}),[...t,...e.filter((e=>!/no resistance/i.test(`${e.value}`))).map((e=>({concept_id:c("TB_DRUG_RESISTANT"),value_coded:d(`${e.value}`),obs_datetime:a.date})))]},options:()=>[{value:"Rifampicin (300mg)",label:"Rifampicin Resistant"},{value:"Isoniazid (300mg)",label:"Isoniazid Resistant"},{value:"No Resistance",label:"No Resistance"}]},(()=>{const e=[];return{id:"sampleSecondlineDrugs",helpText:"MTB Resistance:",type:l.TT_MULTIPLE_SELECT,init:async()=>{try{const t=[];(await r.getJson(`programs/${a.programID}/tb_regimen_group`,{patient:i,regimen_group:"second-line-concepts"})).forEach((a=>{t.includes(a.concept_id)||/none|other non-coded/i.test(a.name)||(t.push(a.concept_id),e.push({label:a.name,value:a.concept_id}))}))}catch(t){return!1}return!0},onValueUpdate:(e,t)=>e.map((e=>{if(t.isChecked){if(/no resistance/i.test(`${t.label}`)&&e.label!=t.label)return e.isChecked=!1,e;/no resistance/i.test(`${t.label}`)||/no resistance/i.test(`${e.label}`)&&(e.isChecked=!1)}return e})),computedValue:e=>{const t=[];return 1===e.length?t.push({concept_id:c("Resistance classification"),value_coded:c("Mono drug resistant"),obs_datetime:a.date}):e.length>1&&t.push({concept_id:c("Resistance classification"),value_coded:c("Multi drug resistant"),obs_datetime:a.date}),[...t,...e.filter((e=>!/no resistance/i.test(`${e.value}`))).map((e=>({concept_id:c("TB_DRUG_RESISTANT"),value_coded:e.value,obs_datetime:a.date})))]},options:()=>[...e,{value:"No Resistance",label:"No Resistance"}],condition:e=>"SECOND_LINE"===e.treatmentType.value}})(),{id:"sampleResultDate",helpText:"Sample Result Date:",type:l.TT_FULL_DATE,validation:e=>u.validateSeries([()=>u.required(e),()=>u.dateRangeOf(e,`${S.query.date}`,a.date)]),computedValue:e=>({concept_id:c("RESULT_DATE"),value_datetime:e.value,obs_datetime:a.date})}]}));async function A(e,t){await a.createEncounter(),await a.saveObservationList(await I(t));const i={sampleIsInvalid:"MTB_INVALID"===e.sampleResult?.value,tbPositive:"POSITIVE"===e.sampleResult?.value,onTreatment:g.isOnTreatment(N.outcome),tptEligible:!g.isOnTreatment(N.outcome)&&D.value.getAge()>=0&&D.value.getAge()<v,inhResistance:(e.sampleResistance||[]).some((e=>"Isoniazid Resistant"===e.label)),rrResistance:(e.sampleResistance||[]).some((e=>"Rifampicin Resistant"===e.label))},n={"suggest to order another LPA test if sample is invalid":{title:"Results are invalid",message:"Do you want to order another LPA test?",yes:()=>R.push(`/tb/lab/${a.patientID}?test=LPA`),no:()=>R.push(`/tb/examination/${a.patientID}`),mandatoryCondition:{sampleIsInvalid:e=>e}},"try a different examination when negative result":{title:"Negative patient",message:"Do you want to try a different examination?",yes:()=>R.push(`/tb/lab/${a.patientID}`),no:()=>R.push(C.value),mandatoryCondition:{tbPositive:e=>!e,onTreatment:e=>!e,tptEligble:e=>!e}},"go to other encounters if no drug resistance was found":{action:()=>L(),mandatoryCondition:{inhResistance:e=>!e,rrResistance:e=>!e}},"enroll in MDR program if drug resistance is found":{title:"Start drug resistance program",message:"Drug resistance has been detected, do you want to enroll patient is Drug Resistance program?",yes:async()=>{await g.enrollMDR(a.patientID),L()},no:()=>L(),eitherConditionMatch:{inhResistance:e=>e,rrResistance:e=>e}}};for(const a of Object.keys(n)){const e=n[a];let t=!0,s=!0;if(e.mandatoryCondition&&(s=Object.keys(e.mandatoryCondition).every((t=>e.mandatoryCondition[t](i[t])))),e.eitherConditionMatch&&(t=Object.keys(e.eitherConditionMatch||{}).some((t=>e.eitherConditionMatch[t](i[t])))),t&&s){if("function"==typeof e.yes&&"function"==typeof e.no)return"Yes"===await E(e.title,"",e.message,[{name:"Yes",slot:"start",color:"success"},{name:"No",slot:"start",color:"primary"}])?e.yes():e.no();if("function"==typeof e.action)return e.action()}}L()}return(e,a)=>(p(),m(b(h),null,{default:_((()=>[T(y,{cancelDestinationPath:b(C),onFinishAction:A,fields:t.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
