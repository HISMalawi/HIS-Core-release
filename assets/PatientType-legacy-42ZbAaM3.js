System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./HisStandardForm-legacy-BpfFI5_j.js","./index-legacy-C29Eb2Qm.js","./EncounterMixin.vue_vue_type_script_lang-legacy-rPdlUSmp.js","./PersonFieldHelper-legacy-D_z32oOo.js","./TouchScreenForm-legacy-BmEuIwWy.js","./ToolbarMediumCard-legacy-CF38wqjC.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-CDi_rmkw.js","./encounter_guidelines-legacy-BDiBaLGJ.js","./GuidelineEngine-legacy-KsvQuFdF.js","./LocationFieldOptions-legacy-CSWOIX88.js","./MultiFieldDateHelper-legacy-DNe3hLpD.js","./KbLayouts-legacy-BKvPSxzZ.js","./HisKbConfigurations-legacy-vrLd9Pgz.js"],(function(e,t){"use strict";var i,n,a,l,s,o,r,d,p,u,c,y;return{setters:[e=>{i=e.F},e=>{n=e.H},e=>{a=e.d,l=e.aZ,s=e.T,o=e.V,r=e._,d=e.r,p=e.o,u=e.c},e=>{c=e._},e=>{y=e.P},null,null,null,null,null,null,null,null,null,null],execute:function(){const t=a({mixins:[c],components:{HisStandardForm:n},data:()=>({patientType:{}}),watch:{ready:{async handler(e){e&&(this.patientType=new l(this.patientID,this.providerID),await this.patientType.loadPatientType(),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){await this.patientType.createEncounter(),await this.patientType.saveObservationList(await this.resolveObs(t)),s("Observations and encounter created!"),this.nextTask()},patientTypeField(){return{id:"patient_type",helpText:`Current type: ${this.patientType.getType()}`,type:i.TT_SELECT,validation:e=>o.required(e)||o.notTheSame(e.value,this.patientType.getType()),options:()=>l.getPatientTypes(),computedValue:e=>this.patientType.buildPatientType(e.value)}},facilityLocationField(){return{...y.getFacilityLocationField(),computedValue:e=>this.patientType.buildLocationClinic(e.value),condition:e=>["Emergency supply","External consultation"].includes(e.patient_type.value)}},entryPointField(){return{id:"entry",helpText:"Entry point",type:i.TT_SELECT,computedValue:e=>this.patientType.buildEntryPoint(e.value),condition:e=>/external/i.test(e.patient_type.value),validation:e=>o.required(e),options:()=>this.mapStrToOptions(["ART","ANC","IPD","OPD"])}},hasViralLoadField(){return{id:"has_vl",helpText:"Viral load result available?",type:i.TT_SELECT,condition:e=>/external/i.test(e.patient_type.value),validation:e=>o.required(e),options:()=>this.yesNoOptions()}},viralLoadField(){return{id:"vl",helpText:"Viral load",type:i.TT_NUMBER,computedValue:e=>this.patientType.buildVl(e.value),condition:e=>"Yes"===e.has_vl.value,validation:e=>o.required(e)}},getFields(){return[this.patientTypeField(),this.facilityLocationField(),this.entryPointField(),this.hasViralLoadField(),this.viralLoadField()]}}});e("default",r(t,[["render",function(e,t,i,n,a,l){const s=d("his-standard-form");return p(),u(s,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
