import{d as y,bo as c,t as A,ad as w,bF as D,aj as m,dh as d,aN as u,bC as b,ae as _,H as g,aa as v,c as C,af as T,a as N}from"./index-CMZASHAR.js";import{H as $}from"./HisStandardForm-BCjM4-bc.js";import{_ as x}from"./EncounterMixin.vue_vue_type_script_lang-v2aYCq6R.js";import{A as h}from"./appointment_service-DrIymmV1.js";import"./encounter_guidelines-CJXpBOk4.js";import"./GuidelineEngine-D6V1_Znr.js";const F=y({mixins:[x],components:{HisStandardForm:$},data:()=>({appointment:{}}),watch:{ready:{handler(a){var i;console.log("The Current App calling this encounter  ",(i=c.getActiveApp())==null?void 0:i.applicationName),a&&(this.appointment=new h(this.patientID,this.providerID),this.fields=[this.getAppointmentField()])},immediate:!0}},methods:{async onFinish(a,i){var n;await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(i)),["CxCa","ANC"].includes("".concat((n=c.getActiveApp())==null?void 0:n.applicationName))||await A(this.patientID),this.nextTask()},getAppointmentField(){const a=t=>g.toStandardHisDisplayFormat(t),i=(t,e)=>new RegExp(t,"i").test("".concat(e));let r="",n="",o=-1,l=this.appointment.date,p=null;const s={},f=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{id:"set_appointment",helpText:"Appointments booking",type:w.TT_DATE_PICKER,init:async()=>{try{const e=await this.appointment.getNextAppointment();l=e.appointment_date,p=e.drugs_run_out_date}catch(e){if(console.warn(e),await D(400),!await m("Next appointment/drug-runout date is not available, do you want to proceed anyway?"))return this.gotoPatientDashboard(),!0}const t=await d.appointmentLimit();return o=t?parseInt(t):0,!0},onValue:async t=>{if(console.log(this.appointment),s[t]===void 0){const e=await h.getDailiyAppointments(t);s[t]=Array.isArray(e)?e.length:0}return!(o>=1&&s[t]>=o&&await m("".concat(s[t]," clients were booked on ").concat(a(t)),{header:"APPOINTMENT LIMIT (".concat(o,") REACHED"),cancelBtnLabel:"Proceed",confirmBtnLabel:"New date"})||(u.isEmpty(n)&&(n=await d.clinicHolidays()),i(t,n)&&!await m("".concat(a(t)," is a clinic holiday, do you want to set an appointment?")))||(u.isEmpty(r)&&(r=this.patient.getAge()>=18?await d.adultClinicDays():await d.peadsClinicDays()),!i(f[b(t).day()],r)&&!await m("".concat(a(t)," is not a clinic day. Do you want to proceed with this date?"))))},validation:t=>_.required(t),defaultValue:()=>l,computedValue:t=>[this.appointment.buildValueDate("Appointment date",t),this.appointment.buildValueDate("Estimated date",l)],config:{hiddenFooterBtns:["Clear"],minDate:()=>this.appointment.date,maxDate:()=>p,supValue:t=>"".concat(s[t]),infoItems:t=>{var e;return((e=c.getActiveApp())==null?void 0:e.applicationName)==="CxCa"?[{label:"User set appointment date",value:a(t)},{label:"Appointments",value:s[t]},{label:"Appointment limit (per/day)",value:o}]:[{label:"Medication Run out Date",value:p?a(p):"Not available"},{label:"User set appointment date",value:a(t)},{label:"Appointments",value:s[t]},{label:"Appointment limit (per/day)",value:o}]}}}}}});function P(a,i,r,n,o,l){const p=T("his-standard-form");return N(),C(p,{fields:a.fields,onFinishAction:a.onFinish,skipSummary:!0,cancelDestinationPath:a.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const k=v(F,[["render",P]]);export{k as default};
