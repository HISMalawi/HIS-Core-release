import{d as b,a5 as w,r as d,aJ as v,aN as _,bv as D,d8 as p,co as P,bE as A,a6 as y,ab as m,u as C,v as k,w as T,x as $,aU as E,aq as o,aA as i,ah as F}from"./index-CyYd6aWW.js";import{v as h}from"./TableView-KUf7rG9H.js";const I=25,V=b({props:{title:{type:String,default:"Drilldown"},patientIdentifiers:{type:Object},onFinish:{type:Function},viewRef:{type:String,default:"person_id"}},components:{IonPage:w,v2Datatable:h},setup(e){const a=d(!0),t=d("-"),n=d([]),r=[[S("identifier","ARV Number"),{label:"Gender",ref:"gender"},{label:"Birthdate",ref:"birthdate"},{label:"Art start date",ref:"art_start_date"},x(e.viewRef)]];function f(){a.value=!1,typeof e.onFinish=="function"&&e.onFinish()}return v(()=>e.patientIdentifiers,async s=>{if(n.value=[],t.value="Total: 0",!(s&&s.length))return;const c=_.chunk(s,1e3);for(const g of c){try{if(!a.value)break;const u=(await D.getPersons(g)).map(l=>({...l,birthdate:p(l.birthdate),art_start_date:p(l.art_start_date),gender:P(l.gender)}));n.value=[...n.value,...u]}catch(u){console.error(u)}t.value="Total: ".concat(n.value.length," of ").concat((s||[]).length),await A(100)}},{immediate:!0}),{columns:r,subtitle:t,reportData:n,canLoadData:a,ITEMS_PER_PAGE:I,runFinishAction:f}}});function R(e,a,t,n,r,f){const s=m("v2Datatable"),c=m("ion-page");return C(),k(c,null,{default:T(()=>[$(s,{title:e.title,subtitle:e.subtitle,columnData:e.reportData,columns:e.columns,"default-sort-order":"asc","default-sorted-column":"identifier","on-finish":e.runFinishAction,rowsPerPage:e.ITEMS_PER_PAGE},null,8,["title","subtitle","columnData","columns","on-finish","rowsPerPage"])]),_:1})}const G=y(V,[["render",R]]);function N(e){return e.map((a,t)=>({...a,index:t+1}))}function S(e="arv_number",a="ARV#"){return{ref:e,label:a,sortValue:t=>{var r;const n="".concat(t).match(new RegExp("\\w{2,5}-arv-(?<arvDigit>\\d*)","i"));return parseInt(((r=n==null?void 0:n.groups)==null?void 0:r.arvDigit)||"-1")}}}function x(e="patient_id",a="/patient/dashboard/"){return{ref:e,label:"Actions",exportable:!1,toValue:()=>"View",tdClick:({refData:t})=>E.push("".concat(a).concat(t))}}async function U(e){var a;((a=e.columnData)!=null?a:[]).length&&(await o.create({component:h,backdropDismiss:!1,cssClass:"large-modal",componentProps:{onFinish:()=>o.getTop().then(t=>t&&o.dismiss()),...e}})).present()}async function j(e){e.patientIdentifiers.length&&(await o.create({component:G,backdropDismiss:!1,cssClass:"large-modal",componentProps:{onFinish:()=>o.getTop().then(a=>a&&o.dismiss()),...e}})).present()}async function q(e,a=!0){a&&(await i.create({message:"Please wait...",backdropDismiss:!1})).present();try{const t=await e();return i.getTop().then(n=>n?i.dismiss():null),t}catch(t){console.error(t),F("Unable to generate report")}i.getTop().then(t=>t?i.dismiss():null)}export{G as A,S as a,U as b,x as c,N as d,j as s,q as w};
