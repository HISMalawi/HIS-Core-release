System.register(["./HisStandardForm-legacy-BpfFI5_j.js","./EncounterMixin.vue_vue_type_script_lang-legacy-rPdlUSmp.js","./index-legacy-C29Eb2Qm.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./LocationFieldOptions-legacy-CSWOIX88.js","./TouchScreenForm-legacy-BmEuIwWy.js","./ToolbarMediumCard-legacy-CF38wqjC.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-CDi_rmkw.js","./encounter_guidelines-legacy-BDiBaLGJ.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,i){"use strict";var t,a,n,r,s,o,l,c,d,u,m,f,p,h,v,y;return{setters:[e=>{t=e.H},e=>{a=e._},e=>{n=e.b5,r=e.d,s=e.V,o=e.U,l=e.t,c=e.n,d=e.q,u=e._,m=e.r,f=e.o,p=e.c},e=>{h=e.F},e=>{v=e.g,y=e.f},null,null,null,null,null,null],execute:function(){class i extends n{constructor(e,i){super(e,114,i)}}class S extends n{constructor(e,i){super(e,42,i)}}const g=r({components:{HisStandardForm:t},mixins:[a],data:()=>({referralService:{},admissionService:{}}),watch:{ready:{async handler(e){e&&(this.referralService=new i(this.patientID,this.providerID),this.admissionService=new S(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,i){if("Admission"===e.opd_outcome.value){await this.admissionService.createEncounter();const e=await this.resolveObs({...i},"admission");await this.admissionService.saveObservationList(e)}else{await this.referralService.createEncounter();const e=await this.resolveObs({...i},"referral");await this.referralService.saveObservationList(e)}this.nextTask()},getFields(){return[{id:"opd_outcome",helpText:"Select outcome",type:h.TT_SELECT,validation:e=>s.required(e),options:()=>[{label:"Admit",value:"Admission"},{label:"Internal referral",value:"Internal referral"},{label:"Refer to another hospital/clinic",value:"External referral"}]},{id:"facility_name",helpText:"Select Facility name",type:h.TT_SELECT,validation:e=>s.required(e),computedValue:({value:e})=>({tag:"referral",obs:this.referralService.buildValueText("Referred",e)}),condition:e=>"External referral"===e.opd_outcome.value,options:(e,i="")=>v(i),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"specialist_clinic",helpText:"Select clinic",type:h.TT_SELECT,validation:e=>s.required(e),computedValue:({other:e})=>this.referralService.buildValueCodedFromConceptId("Specialist clinic",e.concept_id),condition:e=>"Internal referral"===e.opd_outcome.value,options:()=>y(),config:{showKeyboard:!0}},{id:"wards",helpText:"Select ward",type:h.TT_SELECT,condition:e=>"Admission"===e.opd_outcome.value,validation:e=>s.required(e),computedValue:e=>({tag:"admission",obs:this.admissionService.buildValueText("Admit to ward",e.label)}),options:()=>o.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,i,t)=>{if("string"!=typeof t.filter||t.filter.length<3)return l("Please enter a valid section name");if(t.filtered.some((e=>e.label.toLowerCase()===t.filter.toLowerCase())))return l("Section already existing");if(await c("Do you want to add internal section?")){const e=await o.createInternalSection(t.filter.toUpperCase());e?(t.filter=e.name,t.listData=[{label:e.name,value:e.id},...t.listData]):d(`Unable to add ${t.filter}`)}}}]}}]}}});e("default",u(g,[["render",function(e,i,t,a,n,r){const s=m("his-standard-form");return f(),p(s,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}]]))}}}));
