var f=Object.defineProperty;var p=(s,i,t)=>i in s?f(s,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[i]=t;var a=(s,i,t)=>p(s,typeof i!="symbol"?i+"":i,t);import{a_ as r,T as v,H as l,a$ as d,ae as m}from"./index-DsVZSn5I.js";class I extends r{constructor(t){super();a(this,"patientID");a(this,"patientAge",-1);a(this,"artDuration",0);a(this,"currentOutcome","");a(this,"isTransferIn",!1);a(this,"whoStage","");a(this,"hasHighVl",!1);this.patientID=t}generatePatientCategory(){const t={"New Positive":()=>this.isNewHivPositive(),"Return after lost to follow up":()=>this.isReturnToCare(),"Children < 5 years":()=>this.isLessThanFive(),"High viral load":()=>this.hasHighVl,"WHO stage":()=>this.isWhoStageThreeOrFour()};for(const e in t)if(t[e]())return e;return""}isLessThanFive(){return this.patientAge<5}isNewHivPositive(){return!this.isTransferIn&&this.artDuration<=3&&!this.isReturnToCare()}isReturnToCare(){return/defaulted|stopped/i.test(this.currentOutcome)}isWhoStageThreeOrFour(){return/who stage III|who stage iv/i.test(this.whoStage)}getTreatmentStatus(){return r.getJson("programs/1/patients/".concat(this.patientID))}async isPositiveForCryptococcalMeningitis(){return await r.getFirstValueCoded(this.patientID,"Cryptococcal Meningitis status")==="Positive"}async getHighVlStatus(){const t=await v.get("PATIENT_LAB_ORDERS",{patientID:this.patientID}),e=await r.getFirstObs(this.patientID,"HIV viral load")||{},u=e!=null&&e.obs_datetime?l.toStandardHisFormat(e.obs_datetime):"",h=t.reduce((n,g)=>(g.tests.forEach(o=>{n[o.name]||(o.result||[]).forEach(c=>{(!u||new Date(l.toStandardHisFormat(c.date))>=new Date(u))&&(n[o.name]=c)})}),n),{});return this.artDuration>12&&h["HIV viral load"]&&d.isHighViralLoadResult(h["HIV viral load"])?!0:m.isEmpty(e)||e.value_text==="LDL"?!1:d.detectHighVl(e.value_numeric,e.value_modifier)}async loadTreatmentDetails(){const t=await this.getTreatmentStatus();this.artDuration=isNaN(t.art_duration)?0:t.art_duration,this.hasHighVl=await this.getHighVlStatus(),this.currentOutcome=t.current_outcome,this.isTransferIn=/yes/i.test("".concat(t.is_transfer_in))}}export{I as A};
