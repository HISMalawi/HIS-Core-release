var D=Object.defineProperty;var f=(r,e,t)=>e in r?D(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var p=(r,e,t)=>f(r,typeof e!="symbol"?e+"":e,t);import{cc as n,aL as C}from"./index-Cpa1Vu_O.js";class S extends n{constructor(){super();p(this,"regenerate");this.regenerate=!1}cohortUrl(){return"programs/".concat(this.programID,"/reports/cohort")}setRegenerate(t){this.regenerate=t}getCohortDrillDown(t){return n.getJson("cohort_report_drill_down",{id:t,date:this.date,program_id:this.programID})}requestCohort(t){return n.ajxGet(this.cohortUrl(),t)}qaurterRequestParams(){const t={name:this.quarter,regenerate:this.regenerate};return this.occupation&&(t.occupation=this.occupation),t}datePeriodRequestParams(){const t={name:"Cohort-".concat(this.startDate,"-").concat(this.endDate),start_date:this.startDate,end_date:this.endDate,regenerate:this.regenerate};return this.occupation&&(t.occupation=this.occupation),t}getCachedCohortValues(){const t=sessionStorage.getItem("mohCache");if(t){const a=JSON.parse(t);if(a.start_date===this.startDate&&a.end_date===this.endDate||a.quarter===this.quarter)return a.data}}cacheCohort(t){sessionStorage.setItem("mohCache",JSON.stringify({start_date:this.startDate,end_date:this.endDate,quarter:this.quarter,data:t}))}validateIndicators(t,a){const c=this.getCachedCohortValues();if(c){const g=Object.keys(t).reduce((i,h)=>{const d=h.replaceAll(" ","").split("+").reduce((l,m)=>{const o=C.find(c,{name:m});return l+parseInt((o==null?void 0:o.contents)||"0")},0),s=t[h],u=s.param;return s.check(d,u)&&i.push(s.error(d,u)),i},[]);return a(g)}return-1}}export{S as M};
