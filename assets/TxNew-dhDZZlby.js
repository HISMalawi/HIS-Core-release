import{d as P,I,cg as F,K as f,N as M,ac as N,O as p,t as q,ae as x,ch as E,q as B,ci as O,cj as S,ck as H,cl as L,_ as U,r as C,o as j,c as X,w as V,b as y}from"./index-BzVWU-6u.js";import{D as W}from"./ReportDateSelectionPrompt-BUka0vzS.js";import{T as G}from"./tx_report_service-BSoiWAj-.js";import{v as K}from"./TableView-CIAE159z.js";import{A}from"./ArtDrilldown-AYOsHY7t.js";import{R as Q}from"./ReportErrors-BruK4Lg2.js";import{M as z}from"./moh_cohort_service-CUeU33IY.js";import"./fuse-YdZE3OCN.js";import"./Export-PjGFz1RJ.js";import"./HisKeyboard-mYPg-10z.js";const J=P({components:{IonPage:I,IonLoading:F,v2Datatable:K},setup(){const o=f([]),m=f(""),_=f(!1),l=new G,c=f([]),h=new z,g=f(!0),u=(e,i)=>({ref:i,label:e,toValue:n=>n.length,tdClick:async n=>{n.refData.length&&(await p.create({component:A,backdropDismiss:!1,cssClass:"large-modal",componentProps:{subtitle:m,patientIdentifiers:n.refData,title:"".concat(n.data.age_group," ").concat(n.data.gender," ").concat(n.column.label),onFinish:()=>p.getTop().then(t=>t&&p.dismiss())}})).present()}}),v=[[{label:"#",ref:"index"},{label:"Age group",ref:"age_group"},{label:"Gender",ref:"gender"},u("Tx new CD4 <200","cd4_less_than_200"),u("Tx new CD4 >=200","cd4_greater_than_equal_to_200"),u("Tx new CD4 Unknown","cd4_unknown_or_not_done"),u("Transfer-ins","transfer_in")]],w=function(e){const i=c.value.findIndex(n=>n.id===e.id);i!==-1?c.value[i]=e:c.value.push(e)},D=async function(e){const i="validationErrors";(await p.create({id:i,component:Q,backdropDismiss:!1,cssClass:"large-modal",componentProps:{errors:e}})).present(),w({id:i,text:"<b>".concat(e.length,"</b> validation errors detected"),icon:L,color:"danger",action:()=>D(e)})};function k(e){const i={initiated_on_art_first_time:{param:e.total,check:(t,a)=>t!=a,error:(t,a)=>"\n                        MOH cohort initiated on ART first time <b>(".concat(t,")</b> is not matching Tx New <b>(").concat(a,")</b>\n                    ")},initial_pregnant_females_all_ages:{param:e.pregnant,check:(t,a)=>t!=a,error:(t,a)=>"\n                        MOH cohort initial pregnant females all ages \n                        <b>(".concat(t,")</b> is not matching with TX new Pregnant women <b>").concat(a,"</b>\n                    ")},males_initiated_on_art_first_time:{param:e.male,check:(t,a)=>t!=a,error:(t,a)=>"\n                        MoH Cohort males initiated on ART first time <b>(".concat(t,")</b>\n                        is not matching with TX new All male <b>(").concat(a,")</b>\n                    ")},"quarterly_re_initiated_on_art + transfer_in":{param:e.transfer_in,check:(t,a)=>t!=a,error:(t,a)=>"\n                        Quarterly Transfer In + Reinitiated Clients <b>".concat(t,"</b>  does not match Transfer In <b>").concat(a,"</b> clients in TXNEW report\n                    ")}};h.validateIndicators(i,t=>{t.length?D(t):w({id:"reportOk",text:"<b>Report is consistent</b>",icon:H,color:"success"})})===-1&&D(["Report not validated. Run the MoH cohort report for similar reporting period and then run this report"])}const $=async()=>{if(!(l.startDate&&l.endDate))return q("Start date and end date required!");_.value=!0,o.value=[];try{let e=null;g.value?e=await l.getTxNewReport(!1):e=await l.getTxNewReport(!0);const n=e.filter(r=>!["All"].includes(r.age_group)).reduce((r,s)=>(r[s.gender]=Object.keys(s).reduce((d,b)=>Array.isArray(s[b])?{...d,[b]:[...d[b]||[],...s[b]]}:d,r[s.gender]||{}),r),{Male:{},Female:{}});o.value=e;const t=e.reduce((r,s)=>{if(s.gender==="FP"){const d=Object.values(s).filter(Array.isArray).flat();return r.concat(d)}return r},[]),a=["cd4_less_than_200","cd4_greater_than_equal_to_200","cd4_unknown_or_not_done"],T=x.uniq(["Female","Male"].reduce((r,s)=>[...r,...a.map(d=>n[s][d]).flat(1)],[]));w({id:"stats",text:"Tx new <b>".concat(T.length,"</b>"),icon:E,color:"primary",action:async()=>{(await p.create({component:A,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:"All TxNew",subtitle:m.value,patientIdentifiers:T,onFinish:()=>p.getTop().then(r=>r&&p.dismiss())}})).present()}}),k({total:T.length,pregnant:x.uniq(a.map(r=>n.Female[r].filter(s=>t.includes(s))).flat(1)).length,male:x.uniq(a.map(r=>n.Male[r]).flat(1)).length,transfer_in:[...n.Male.transfer_in,...n.Female.transfer_in].length}),o.value=o.value.map((r,s)=>({index:s+1,...r}))}catch(e){console.error("".concat(e)),B("Unable to generate report!"),c.value=[{text:"Unable to generate report!",color:"danger",icon:O,action:function(){c.value=[{text:"Exception occured: <b>".concat(e,"</b>"),color:"danger",icon:S}]}}]}_.value=!1,g.value=!1},R=()=>W({onFinish:(e,i,n,t)=>{m.value=n,l.startDate=e,l.endDate=i,t&&l.setOccupation(t),h.setStartDate(l.startDate),h.setEndDate(l.endDate),$()}});return M(()=>R()),{Img:N,headerBadge:c,reportData:o,isLoading:_,configure:R,generate:$,columns:v,isFirstLoad:g,period:m}}});function Y(o,m,_,l,c,h){const g=C("ion-loading"),u=C("v2Datatable"),v=C("ion-page");return j(),X(v,null,{default:V(()=>[y(g,{"is-open":o.isLoading,message:"Please wait..."},null,8,["is-open"]),y(u,{"icon-url":o.Img("login-logos/PEPFAR.png"),title:"Pepfar Tx New","report-prefix":"Pepfar",subtitle:o.period,columns:o.columns,columnData:o.reportData,rowsPerPage:100,headerBadge:o.headerBadge,onConfigure:o.configure,onRefresh:o.generate},null,8,["icon-url","subtitle","columns","columnData","headerBadge","onConfigure","onRefresh"])]),_:1})}const ce=U(J,[["render",Y]]);export{ce as default};
