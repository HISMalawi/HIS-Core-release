System.register(["./index-legacy-pSEoxn3J.js","./Pagination-legacy-BMin-dh_.js"],(function(t,e){"use strict";var a,i,n,s,l,r,o,u,d,c,p,h,m,b,g,y,v,f,I,V,P,w,T,_,C,A,D,N,S,R,F,B,x,O;return{setters:[t=>{a=t.d,i=t.dC,n=t.am,s=t.h,l=t.e,r=t.w,o=t.ar,u=t.a9,d=t.aa,c=t.b,p=t.a,h=t.a6,m=t.g,b=t.t,g=t.z,y=t.j,v=t.aA,f=t.cz,I=t.I,V=t.ay,P=t.m,w=t.bb,T=t.be,_=t.bo,C=t.cw,A=t.aD,D=t.bR,N=t.a_,S=t.H,R=t.av,F=t.K,B=t.y,x=t.aw},t=>{O=t.P}],execute:function(){var e=document.createElement("style");e.textContent="ion-item[data-v-3e4c09f5]{padding:1px!important}\n/*$vite$:1*/",document.head.appendChild(e);const H=a({name:"InformationHeader",components:{MultiColumnView:i},props:{icon:{required:!1},items:{type:Object,required:!0},numberOfColumns:{type:Number,default:2}},emits:["update","updateARVNumber","addGuardian"],setup:(t,{emit:e})=>({onClick:t=>"demographics"===t.other.category?e("update",t.other.attribute):"arv_number"===t.other.category?e("updateARVNumber"):e("addGuardian")})}),$={style:{padding:".1rem"}},k={style:{width:"100%",display:"flex",justifyContent:"space-between",fontSize:"12px",margin:0,padding:0}},E=["onClick"],G=["innerHTML"],M=n(H,[["render",function(t,e,a,i,n,g){const y=o("ion-item"),v=o("ion-list"),f=o("multi-column-view");return c(),s("div",$,[l(f,{items:t.items,numberOfColumns:t.numberOfColumns},{default:r((({entries:e})=>[l(v,null,{default:r((()=>[(c(!0),s(u,null,d(e,(e=>(c(),s("span",{key:e.label},["boolean"!=typeof e.visible||e.visible?(c(),p(y,{key:0,style:{padding:"0 !important",margin:"0 !important"}},{default:r((()=>[m("div",k,[m("span",null,b(e.label)+": ",1),e.other&&e.other.editable?(c(),s("span",{key:0,onClick:a=>t.onClick(e)},[m("a",null,[m("b",null,b(e.value),1)])],8,E)):(c(),s("b",{key:1,innerHTML:e.value||"N/A"},null,8,G))])])),_:2},1024)):h("",!0)])))),128))])),_:2},1024)])),_:1},8,["items","numberOfColumns"])])}],["__scopeId","data-v-3e4c09f5"]]),j=a({components:{InformationHeader:M},props:{title:{type:String,required:!0},visitData:{type:Object,required:!0}},methods:{async closeModal(){await g.dismiss({})}}}),L=n(j,[["render",function(t,e,a,i,n,d){const p=o("ion-title"),h=o("ion-toolbar"),m=o("ion-header"),g=o("information-header"),v=o("ion-content"),f=o("ion-button"),I=o("ion-footer");return c(),s(u,null,[l(m,null,{default:r((()=>[l(h,null,{default:r((()=>[l(p,null,{default:r((()=>[y(b(t.title),1)])),_:1})])),_:1})])),_:1}),l(v,null,{default:r((()=>[l(g,{items:t.visitData},null,8,["items"])])),_:1}),l(I,null,{default:r((()=>[l(h,null,{default:r((()=>[l(f,{onClick:t.closeModal,slot:"end"},{default:r((()=>[y(" Close ")])),_:1},8,["onClick"])])),_:1})])),_:1})],64)}]]),U=a({components:{Preloader:w,Pagination:O,IonPage:P,ReportTable:V,IonContent:I,HisFooter:f,InformationHeader:M},data:()=>({patientId:0,patient:{},patientCardInfo:[],btns:[],itemsPerPage:10,currentPage:0,totalPages:0,pages:[],visitDates:[],tbStats:[],visitDatesInitialised:!1,columns:[[v.thTxt("VISIT DATE"),v.thTxt("WEIGHT (Kg)"),v.thTxt("REG"),v.thTxt("VIRAL LOAD"),v.thTxt("TB STATUS"),v.thTxt("OUTCOME"),v.thTxt("PILLS DISPENSED"),v.thTxt("ACTIONS")]],rows:[]}),created(){this.setPatientCards(),this.patientId=parseInt(`${this.$route.params.patient_id}`),R.getPatientVisits(this.patientId,!0).then((t=>{this.visitDatesInitialised=!0,this.visitDates=t,this.rows=t.map((t=>[v.tdBtn(S.toStandardHisDisplayFormat(t),(()=>F(this.patientId,t))),v.td("..."),v.td("..."),v.td("..."),v.td("..."),v.td("..."),v.td("..."),v.td("...")]))})).catch((t=>{this.visitDatesInitialised=!0,B(`${t}`),console.error(t)})),this.btns.push({name:"Finish",color:"success",size:"large",slot:"end",visible:!0,onClick:()=>{x("Are you sure you want to exit?").then((t=>{if(t)return this.$router.push(`/patient/dashboard/${this.patientId}`)}))}})},async mounted(){if(this.patientId)for(const t of this.patientCardInfo)"function"==typeof t.init&&await t.init(),"function"==typeof t.condition?t.visible=t.condition():t.visible=!0,"function"==typeof t.asyncValue?t.asyncValue(t).then((e=>t.value=e||"")):"function"==typeof t.staticValue&&(t.value=t.staticValue())},methods:{setPatientCards(){this.patientCardInfo=[{label:"ARV Number",value:"...",staticValue:()=>this.patient.getArvNumber(),init:async()=>{this.patient=await A.get("ACTIVE_PATIENT",{patientID:this.patientId})},other:{editable:!0,category:"arv_number"}},{label:"National Patient ID",value:"...",staticValue:()=>this.patient.getNationalID()},{label:"Given Name",value:"...",staticValue:()=>this.patient.getGivenName(),other:{editable:!0,attribute:"given_name",category:"demographics"}},{label:"Family Name",value:"...",staticValue:()=>this.patient.getFamilyName(),other:{editable:!0,attribute:"family_name",category:"demographics"}},{label:"Age",value:"...",staticValue:()=>this.patient.getAge(),other:{editable:!0,attribute:"year_birth_date",category:"demographics"}},{label:"Sex",value:"...",staticValue:()=>this.patient.getGender(),other:{editable:!0,attribute:"gender",category:"demographics"}},{label:"Location",value:"...",staticValue:()=>this.patient.getCurrentVillage(),other:{editable:!0,attribute:"home_region",category:"demographics"}},{label:"Landmark",value:"...",staticValue:()=>this.patient.getAttribute(19)},{label:"Guardian",value:"...",asyncValue:async t=>{const e=await D.getGuardianDetails(this.patientId);return N.isEmpty(e)?(t.other.editable=!0,"add"):e.map((t=>` ${t.name} (${t.relationshipType})`)).join(" ")},other:{editable:!1,attribute:"",category:"guardian"}},{label:"Init W(KG)",value:"...",asyncValue:()=>this.patient.getInitialWeight()},{label:"Init H(CM)",value:"...",asyncValue:()=>this.patient.getInitialHeight()},{label:"Init BMI",value:"...",asyncValue:()=>this.patient.getInitialBMI()},{label:"init Preg",value:"...",condition:()=>this.patient.isFemale(),asyncValue:()=>this.patient.getInitialObs("Is patient pregnant","value_coded")},{label:"init Breastfeeding",value:"...",condition:()=>this.patient.isFemale(),asyncValue:()=>this.patient.getInitialObs("Is patient breast feeding","value_coded")},{label:"cur Preg",value:"...",condition:()=>this.patient.isFemale(),asyncValue:async()=>await this.patient.isPregnant()?"Yes":"No"},{label:"cur Breastfeeding",value:"...",condition:()=>this.patient.isFemale(),asyncValue:async()=>await this.patient.isBreastfeeding()?"Yes":"No"},{label:"TI",value:"...",asyncValue:()=>_.getFirstValueCoded(this.patientId,"Ever received ART")},{label:"Agrees to follow up",value:"...",asyncValue:()=>_.getFirstValueCoded(this.patientId,"Agrees to followup")},{label:"Reason for starting ART",value:"...",asyncValue:()=>_.getFirstValueCoded(this.patientId,"Reason for ART eligibility")},{label:"HIV test date",value:"...",asyncValue:async()=>{const t=await _.getFirstValueDatetime(this.patientId,"Confirmatory HIV test date");return t?S.toStandardHisDisplayFormat(t):""}},{label:"HIV test place",value:"...",asyncValue:()=>_.getFirstValueText(this.patientId,"Confirmatory HIV test location")},{label:"Date of starting first line ART",value:"...",asyncValue:async()=>{const t=await _.getFirstValueDatetime(this.patientId,"Date ART started");return t?S.toStandardHisDisplayFormat(t):""}},{label:"Pulmonary TB within the last 2 years",value:"...",init:async()=>{this.tbStats=await _.getAllValueCoded(this.patientId,"Who stages criteria present")||[]},staticValue:()=>this.hasTbStat("Tuberculosis (PTB or EPTB) within the last 2 years")},{label:"Extra pulmonary TB (EPTB)",value:"...",staticValue:()=>this.hasTbStat("Extrapulmonary tuberculosis (EPTB)")},{label:"Pulmonary TB (current)",value:"...",staticValue:()=>this.hasTbStat("Pulmonary tuberculosis (current)")},{label:"Kaposis sarcoma",value:"...",staticValue:()=>this.hasTbStat("Kaposis sarcoma")}]},buildDetails(t){const e=t=>t.map((([t,e])=>`${t} (${e})`)).join("/");return[{label:"Outcome",value:t.outcome},{label:"Outcome Date",value:t.outcome_date},{label:"Side effects",value:t.side_effects},{label:"Viral load",value:t.viral_load},{label:"Pills Brought",value:e(t.pills_brought)},{label:"Pills dispensed",value:e(t.pills_dispensed)},{label:"Visit by",value:t.visit_by},{label:"Regimen",value:t.regimen},{label:"Adherence",value:e(t.adherence)},{label:"TB Status",value:t.tb_status},{label:"Height (cm)",value:t.height},{label:"Weight (Kg)",value:t.weight},{label:"BMI",value:t.bmi},{label:"Is pregnant",value:t.isPregnant,visible:this.patient.isFemale()},{label:"Is breastfeeding",value:t.isBreastfeeding,visible:this.patient.isFemale()}]},async onNewRow(t){const e=[...t];if(e[1]&&"..."!=e[1].td)return e;const a=e[0].td,i=await T.getCurrentProgramInformation(this.patientId,a),n=await T.getMastercardDrugInformation(this.patientId,a),s=(n?.pills_given||[]).map((t=>`${t.short_name||t.name} <b>(${t.quantity||"?"})</b>`)).join("<br/>");let l="N/A",r="N/A";if(this.patient.isFemale()){const t=await _.getFirstObs(this.patientId,"Is patient pregnant",a);t&&C(t.obs_datetime)===a&&(l=t.value_coded);const e=await _.getFirstObs(this.patientId,"Is patient breast feeding",a);e&&C(e.obs_datetime)===a&&(r=e.value_coded)}return e[1]=v.td(i.weight),e[2]=v.td(i.regimen),e[3]=v.td(i.viral_load),e[4]=v.td(i.tb_status),e[5]=v.td(i.outcome.match(/Unk/i)?"Unknown":i.outcome),e[6]=v.td(s),e[7]=v.tdBtn("More",(async()=>{(await g.create({component:L,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:a,visitData:this.buildDetails({...i,isPregnant:l,isBreastfeeding:r})}})).present()})),e},hasTbStat(t){return this.tbStats.includes(t)?"Yes":"No"},updateDemographics(t){this.$router.push({path:"/patient/registration",query:{edit_person:this.patientId,person_attribute:t}})},addGuardian(){this.$router.push({path:`/guardian/registration/${this.patientId}`,query:{source:this.$route.name?.toString()}})},updateARVNumber(){this.$router.push({name:"Edit ARV Number"})}}});t("default",n(U,[["render",function(t,e,a,i,n,s){const u=o("information-header"),d=o("report-table"),m=o("preloader"),b=o("pagination"),g=o("ion-content"),y=o("his-footer"),v=o("ion-page");return c(),p(v,{style:{background:"#fff"}},{default:r((()=>[l(u,{items:t.patientCardInfo,numberOfColumns:4,onAddGuardian:t.addGuardian,onUpdate:t.updateDemographics,onUpdateARVNumber:t.updateARVNumber},null,8,["items","onAddGuardian","onUpdate","onUpdateARVNumber"]),l(g,null,{default:r((()=>[l(d,{paginated:!0,rows:t.rows,columns:t.columns,rowsPerPage:t.itemsPerPage,newPage:t.currentPage,asyncRowParser:t.onNewRow,onOnPagination:e[0]||(e[0]=e=>t.totalPages=e.length)},null,8,["rows","columns","rowsPerPage","newPage","asyncRowParser"]),t.visitDatesInitialised?h("",!0):(c(),p(m,{key:0,itemCount:5})),l(b,{perPage:t.itemsPerPage,maxVisibleButtons:20,totalPages:t.totalPages,onOnChangePage:e[1]||(e[1]=e=>t.currentPage=e)},null,8,["perPage","totalPages"])])),_:1}),l(y,{btns:t.btns},null,8,["btns"])])),_:1})}]]))}}}));
