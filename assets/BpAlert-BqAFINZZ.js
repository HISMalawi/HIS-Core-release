import{_ as b}from"./EncounterMixin.vue_vue_type_script_lang-B_3PM0d_.js";import{d as v,a4 as _,U as C,a5 as D,a3 as R,R as T,aq as F,aJ as I,bp as N,bq as $,bk as h,d8 as u,a6 as O,v as S,w as n,ab as i,u as l,x as r,G as o,B as m,aC as g,c2 as B,Z as d,z as e,H as f}from"./index-V3uTS3yc.js";import{B as V}from"./htn_service-CIvLsb-m.js";import{R as A}from"./RiskFactorModal-g3-TMS_R.js";import"./encounter_guidelines-CAaXFCiG.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-tDUNqryU.js";const x=v({mixins:[b],components:{IonFooter:_,IonContent:C,IonPage:D,IonButton:R,IonToolbar:T},data:()=>({sysBp:0,dsBP:0,riskFactors:[],patientOnBpDrugs:!1,isPregnant:!1,systolicThreshold:145,diastolicTheshold:94}),methods:{async showRiskFactors(){const t=await F.create({component:A,backdropDismiss:!1,cssClass:"large-modal",componentProps:{factors:this.riskFactors}});t.present();const{data:s}=await t.onDidDismiss();I.isEmpty(s)||this.nextTask()},async getRiskFactors(){const s=N.getConceptsByCategory("risk factors").map(async a=>{const p=await $.getFirstValueCoded(this.patientID,a.name);return{concept:a.name,value:p}});return Promise.all(s)},recaptureBp(){this.$router.push("/art/encounters/vitals/".concat(this.patientID,"?vital_options=BP"))}},watch:{ready:{async handler(t){if(!t)return;await(await h.create({message:"Verifying Blood Pressure...",backdropDismiss:!1})).present();const a=new V(this.patientID,this.providerID);this.riskFactors=await this.getRiskFactors(),this.systolicThreshold=await u.systolicThreshold()||145,this.diastolicTheshold=await u.diastolicThreshold()||94,this.dsBP=await a.getDiastolicBp()||0,this.sysBp=await a.getSystolicBp()||0,this.patientOnBpDrugs=await a.onBpDrugs()||!1,this.isPregnant=this.patient.isChildBearing()&&await this.patient.isPregnant()||!1,h.dismiss()},immediate:!0}},computed:{patientName(){return this.ready?this.patient.getFullName():"Patient"},hasPressureReading(){return this.sysBp>0&&this.dsBP>0},highBP(){return(this.sysBp>=this.systolicThreshold&&this.dsBP>=this.diastolicTheshold||this.dsBP>=this.diastolicTheshold)&&!this.isPregnant}}}),z={key:0,class:"vertically-align ion-text-center"},E={style:{"font-weight":"bold"}},q={class:"name"},G={class:"bp"},H={key:1,class:"vertically-align ion-text-center"};function L(t,s,a,p,M,j){const P=i("ion-content"),c=i("ion-button"),y=i("ion-toolbar"),w=i("ion-footer"),k=i("ion-page");return l(),S(k,null,{default:n(()=>[r(P,null,{default:n(()=>[s[6]||(s[6]=o("h1",{class:"ion-text-center"}," High BP Alert ",-1)),t.hasPressureReading?(l(),m("div",z,[g(o("h2",E," (Patient already on BP drugs) ",512),[[B,t.patientOnBpDrugs]]),o("h2",null,[o("span",q,d(t.patientName),1),s[1]||(s[1]=e(" has ")),g(o("span",null," a high ",512),[[B,t.highBP]]),s[2]||(s[2]=e(" blood pressure of ")),o("span",G,d(t.sysBp)+" / "+d(t.dsBP),1),s[3]||(s[3]=o("br",null,null,-1)),s[4]||(s[4]=o("span",null,[e(" Retesting BP is "),o("span",{style:{"font-weight":"bold",color:"#000000","text-decoration":"underline"}},"optional"),e(". "),o("br"),e(" Do you want to test BP? ")],-1))])])):f("",!0),t.hasPressureReading?f("",!0):(l(),m("div",H,s[5]||(s[5]=[e(" No BP Reading found "),o("br",null,null,-1),o("h1",null," Do you want to test BP? ",-1)])))]),_:1}),r(w,null,{default:n(()=>[r(y,{color:"dark"},{default:n(()=>[r(c,{onClick:s[0]||(s[0]=()=>t.hasPressureReading?t.showRiskFactors():t.nextTask()),size:"large",color:"danger",slot:"start"},{default:n(()=>s[7]||(s[7]=[e(" No ")])),_:1}),r(c,{onClick:t.recaptureBp,size:"large",color:"success",slot:"end"},{default:n(()=>s[8]||(s[8]=[e(" Yes ")])),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1})}const X=O(x,[["render",L],["__scopeId","data-v-8630601f"]]);export{X as default};
