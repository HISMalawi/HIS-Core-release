import{O as p}from"./opd_report_service-BokDq_Tz.js";import{R as d}from"./BaseTableReport-BvSQC2lB.js";import{d as l,I as c,L as r,ae as m,_ as u,r as i,o as f,c as h,w as _,b as g}from"./index-DWvBkLVO.js";import{_ as w}from"./ReportMixin.vue_vue_type_script_lang-CCIQru9E.js";import"./Export-DpE20evB.js";import"./HisStandardForm-CiMWbvzt.js";import"./BasicReportTemplate-CyX9tMHh.js";import"./Pagination-_sselcrV.js";const v=l({components:{ReportTemplate:d,IonPage:c},mixins:[w],data:()=>({title:"OPD diagnosis by address report",rows:[],reportService:{},columns:[[r.thTxt("Address"),r.thTxt("Diagnosis"),r.thTxt("Count")]]}),created(){this.fields=this.getDateDurationFields()},methods:{async init(e,t){this.reportService=new p,this.reportService.setStartDate(t.start_date),this.reportService.setEndDate(t.end_date),this.period=this.reportService.getDateIntervalPeriod(),this.rows=this.buildRows(await this.reportService.getDiagnosisByAddress())},totalDiagnosis(e){return Object.values(e).reduce((t,o)=>t+o,0)},buildRows(e){const t=[];if(m.isEmpty(e))return t;for(const o in e)for(const s in e[o])t.push([r.td(s),r.td(o),r.td(e[o][s])]);return t}}});function D(e,t,o,s,S,C){const n=i("report-template"),a=i("ion-page");return f(),h(a,null,{default:_(()=>[g(n,{title:e.title,rows:e.rows,fields:e.fields,columns:e.columns,period:e.period,reportPrefix:"Clinic",onReportConfiguration:e.init},null,8,["title","rows","fields","columns","period","onReportConfiguration"])]),_:1})}const T=u(v,[["render",D]]);export{T as default};
