import{d as f,r as u,o as g,a as _,b,w as v,e as D,i as c,ct as R,cs as d,D as C,q as w,y as V,l as h}from"./index-CJleCCtM.js";import{v as x}from"./TableView-CMbHc5dx.js";import{a as q}from"./regimen_report_service-CEeVTCUO.js";import{b as y,w as A}from"./v2utils-Czfb_0FR.js";import"./Export-CXTwynHo.js";import"./index-DC9jnrfb.js";const k=f({__name:"regimen",setup(B){const m=V("reports.png"),r=u([]),o=u(""),a=new q,p=[[y(),{label:"Gender",ref:"gender",toValue:e=>R(e)},{label:"DOB",ref:"birthdate",toValue:e=>d(e)},{label:"Curr.Reg",ref:"current_regimen",defaultValue:"N/A"},{label:"ARVs",ref:"medication",toValue:e=>e.map(t=>"".concat(t.medication," (").concat(t.quantity,")")).join(", ")},{label:"Curr.reg dispensed",ref:"last_dispensation_date",toValue:e=>d(e)}]],s=()=>A(async()=>{if(!(a.startDate&&a.endDate))return h("Start date and end date required!");r.value=[];const e=await a.getRegimenReport();r.value=Object.values(e).map(t=>({...t,last_dispensation_date:t.medication.reduce((l,n)=>n.start_date,"")}))}),i=()=>C({onFinish:(e,t,l,n)=>{n&&a.setOccupation(n),o.value="".concat(l),a.startDate=e,a.endDate=t,s()}});return g(()=>!r.value.length&&i()),(e,t)=>(_(),b(c(w),null,{default:v(()=>[D(x,{"default-sort-order":"asc","default-sorted-column":"arv_number","icon-url":c(m),title:"Clinic Regimen Report","report-prefix":"Clinic",subtitle:o.value,columns:p,columnData:r.value,rowsPerPage:50,onConfigure:i,onRefresh:s},null,8,["icon-url","subtitle","columnData"])]),_:1}))}});export{k as default};
