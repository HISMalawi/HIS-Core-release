System.register(["./index-legacy-2OuOZQ1w.js","./TableView-legacy-qKxmf6r2.js","./data_verification_service-legacy-BVVhylwq.js","./Export-legacy-D1zUexdI.js","./index-legacy-D_LoyUSC.js"],(function(e,t){"use strict";var n,r,a,l,u,s,o,i,c,d,f,g,v,b,D,m;return{setters:[e=>{n=e.d,r=e.r,a=e.o,l=e.D,u=e.a,s=e.b,o=e.w,i=e.e,c=e.f,d=e.v,f=e.x,g=e.m,v=e.q,b=e.y},e=>{D=e.v},e=>{m=e.D},null,null],execute:function(){e("default",n({__name:"EncounterAtOddHours",setup(e){const t=r([]),n=r(""),p=r(!1),y=new m,x=[[{label:"#",ref:"index"},{label:"User",ref:"username"},{label:"Date",ref:"date"},{label:"Time",ref:"time"},{label:"Encounter ID",ref:"encounter_id"}]],j=async()=>{if(!y.startDate||!y.endDate)return v("Start date and end date required!");p.value=!0;try{const e=await y.getEncountersDoneInOddHours();t.value=Object.keys(e).reduce(((t,n,r)=>[...t,{index:r+1,...e[n]}]),[])}catch(e){console.error(e),b("Unable to generate report!")}p.value=!1},w=()=>l({onFinish:(e,t,r)=>{n.value=r,y.startDate=e,y.endDate=t,j()}});return a((()=>w())),(e,r)=>(s(),u(c(g),null,{default:o((()=>[i(c(d),{"is-open":p.value,message:"Please wait.."},null,8,["is-open"]),i(D,{"icon-url":c(f)("reports.png"),title:"Encounters at Odd Hours","report-prefix":"Clinic",subtitle:n.value,columns:x,columnData:t.value,rowsPerPage:100,onConfigure:w,onRefresh:j},null,8,["icon-url","subtitle","columnData"])])),_:1}))}}))}}}));
