System.register(["./opd_report_service-legacy-yqGpEi26.js","./BaseTableReport-legacy-b_HVReff.js","./index-legacy-CNrLGT3P.js","./ReportMixin.vue_vue_type_script_lang-legacy-CGeB03oo.js","./HisStandardForm-legacy-OekRIZB_.js"],(function(e,t){"use strict";var r,i,s,o,n,a,d,l,c,u,p,g,h;return{setters:[e=>{r=e.O},e=>{i=e.R},e=>{s=e.d,o=e.I,n=e.L,a=e.ah,d=e._,l=e.r,c=e.o,u=e.c,p=e.w,g=e.b},e=>{h=e._},null],execute:function(){const t=s({components:{ReportTemplate:i,IonPage:o},mixins:[h],data:()=>({title:"OPD diagnosis by address report",rows:[],reportService:{},columns:[[n.thTxt("Address"),n.thTxt("Diagnosis"),n.thTxt("Count")]]}),created(){this.fields=this.getDateDurationFields()},methods:{async init(e,t){this.reportService=new r,this.reportService.setStartDate(t.start_date),this.reportService.setEndDate(t.end_date),this.period=this.reportService.getDateIntervalPeriod(),this.rows=this.buildRows(await this.reportService.getDiagnosisByAddress())},totalDiagnosis:e=>Object.values(e).reduce(((e,t)=>e+t),0),buildRows(e){const t=[];if(a.isEmpty(e))return t;for(const r in e)for(const i in e[r])t.push([n.td(i),n.td(r),n.td(e[r][i])]);return t}}});e("default",d(t,[["render",function(e,t,r,i,s,o){const n=l("report-template"),a=l("ion-page");return c(),u(a,null,{default:p((()=>[g(n,{title:e.title,rows:e.rows,fields:e.fields,columns:e.columns,period:e.period,reportPrefix:"Clinic",onReportConfiguration:e.init},null,8,["title","rows","fields","columns","period","onReportConfiguration"])])),_:1})}]]))}}}));
