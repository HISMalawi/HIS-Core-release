System.register(["./HisStandardForm-legacy-DuQZVMK2.js","./patient_diagnosis_service-legacy-D4zZd_Mr.js","./index-legacy-CBR8jcof.js","./useEncounter-legacy-D7eGqzpY.js","./useLabResultsManager-legacy-CW9dW6ji.js","./commons-legacy-DBXaa6Mi.js","./isEmpty-legacy-DjzNyO6Q.js","./encounter_guidelines-legacy-oRiNvG-r.js","./GuidelineEngine-legacy-KsvQuFdF.js","./lab_order_service-legacy-CowMj7kY.js"],(function(a,e){"use strict";var t,i,s,n,o,l,c,r,u,d,y,g,p,m,b,v;return{setters:[a=>{t=a.H},a=>{i=a.P},a=>{s=a.bT,n=a.d,o=a.r,l=a.a9,c=a.aa,r=a.aU,u=a.u,d=a.v,y=a.y,g=a.aj,p=a.ad},a=>{m=a.u},a=>{b=a.u},a=>{v=a.r},null,null,null,null],execute:function(){class e extends s{constructor(a,e){super(a,105,e)}}a("default",n({__name:"Diagnosis",setup(a){let s,n;const T=o("No"),_=o([]),w=o(Math.random()),{patientDashboardUrl:E,goToNextTask:h}=m((async(a,t)=>{s=new e(t,a),n=new i(t,a);const{getLabFields:o}=b(t,a,w);_.value=[...o(!0),{id:"primary_diagnosis",helpText:"Select primary diagnosis",type:l.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:a=>c.required(a),options:async(a,e="",t=1,s=10)=>L(await i.getDiagnosis(e,t,s)),beforeNext:async a=>await j(a),computedValue:a=>({tag:"diagnosis",obs:a.map((({other:a})=>n.buildValueCodedFromConceptId("Primary diagnosis",a)))}),summaryMapValue:({value:a})=>({value:a,label:"Primary diagnosis"}),config:{isFilterDataViaApi:!0,showKeyboard:!0}},{id:"secondary_diagnosis",helpText:"Select secondary diagnosis",type:l.TT_INFINITE_SCROLL_MULTIPLE_SELECT,options:async(a,e="",t=1,s=10)=>L(await i.getDiagnosis(e,t,s)),beforeNext:async a=>await j(a),computedValue:a=>!r.isEmpty(a)&&{tag:"diagnosis",obs:a.map((({other:a})=>n.buildValueCodedFromConceptId("Secondary diagnosis",a)))},summaryMapValue:({value:a})=>({value:a,label:"Secondary diagnosis"}),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"clinical_notes",helpText:"Clinical notes",type:l.TT_TEXT,computedValue:a=>a&&{tag:"notes",obs:s.buildValueText("Clinical notes construct",a.value)}}]}));async function f(a,e){await n.createEncounter();const t=await v({...e,obs_datetime:g.getSessionDate()},"diagnosis");await n.saveObservationList(t);const i=await v({...e},"notes");r.isEmpty(i)||(await s.createEncounter(),await s.saveObservationList(i)),h()}function L(a){return r.isEmpty(a)?[]:a.map((a=>({label:a.name,value:a.name,other:a.concept_id,isChecked:!1}))).sort(((a,e)=>a.label<e.label?-1:a.label>e.label?1:0))}async function j(a){return!a.find((a=>"Malaria"===a.label))||"Positive"===T.value||await p(`Patient has ${T.value} malaria test result. Do you want to continue?`)}return(a,e)=>(u(),d(t,{key:w.value,cancelDestinationPath:y(E),fields:_.value,onFinishAction:f},null,8,["cancelDestinationPath","fields"]))}}))}}}));
