import{d as T,K as g,bg as b,dj as v,F as I,G as D,dn as E,V as h,ct as l,o as N,c as P,w as A,b as w,cu as p,I as y}from"./index-C-Wf7IuL.js";import{H as k}from"./HisStandardForm-zCup__or.js";import{u as C}from"./useEncounter-Cdg-ySH1.js";import{g as u}from"./util-CyjuS_4X.js";import{r as F}from"./commons-B-xNtGcO.js";import{A as d}from"./appointment_service-spDpFpNs.js";import"./isEmpty-CAuO0MZq.js";import"./encounter_guidelines-p4GeYGc_.js";import"./GuidelineEngine-D6V1_Znr.js";const K=T({__name:"Appointment",setup(M){const r=g([]),t=new b(-1,v.APPOINTMENT),{goToNextTask:c,patientDashboardUrl:m}=C((n,o)=>{t.patientID=o,t.providerID=n;const f=()=>{let e={},s=-1,i={};return{id:"appointment",helpText:"Appointment booking",type:I.TT_DATE_PICKER,init:async()=>(s=await D.get(E.CLINIC_APPOINTMENT_LIMIT),e=await d.getJson("programs/".concat(t.programID,"/patients/").concat(o,"/next_appointment_date"),{date:t.date}),!0),defaultValue:()=>e==null?void 0:e.appointment_date,validation:a=>h.required(a),computedValue:a=>[{concept_id:u("APPOINTMENT_DATE"),value_datetime:a,obs_datetime:t.date},{concept_id:u("ESTIMATED_DATE"),value_datetime:e==null?void 0:e.appointment_date,obs_datetime:t.date}],config:{minDate:()=>t.date,maxDate:()=>e==null?void 0:e.drugs_run_out_date,supValue:a=>"".concat((i[a]||[]).length),infoItems:async a=>(i[a]||(i[a]=await d.getJson("programs/".concat(t.programID,"/booked_appointments"),{date:a,paginate:!1})),[{label:"Medication Run out Date",value:l((e==null?void 0:e.drugs_run_out_date)||"Not available")},{label:"User set appointment date",value:l(a)},{label:"Appointments",value:(i[a]||[]).length},{label:"Appointment limit (per/day)",value:s||"N/A"}]),hiddenFooterBtns:["Clear"]}}};r.value=[f()]});async function _(n,o){await t.createEncounter(),await t.saveObservationList(await F(o)),c()}return(n,o)=>(N(),P(p(y),null,{default:A(()=>[w(k,{cancelDestinationPath:p(m),onFinishAction:_,fields:r.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{K as default};
