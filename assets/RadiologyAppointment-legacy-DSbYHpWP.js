System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./HisStandardForm-legacy-CKuIfChD.js","./index-legacy-JGk_dRVc.js","./EncounterMixin.vue_vue_type_script_lang-legacy-DrW6yd3p.js","./appointment_service-legacy-CIideb7M.js","./TouchScreenForm-legacy-mmY57gUM.js","./ToolbarMediumCard-legacy-DQQTyubW.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-YMYfwvUb.js","./encounter_guidelines-legacy-fM1Kg0cb.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(t,e){"use strict";var n,i,a,s,o,l,r,p,c,d,m;return{setters:[t=>{n=t.F},t=>{i=t.H},t=>{a=t.d,s=t.a$,o=t.V,l=t._,r=t.r,p=t.o,c=t.c},t=>{d=t._},t=>{m=t.A},null,null,null,null,null,null],execute:function(){const e=a({mixins:[d],components:{HisStandardForm:i},data:()=>({appointmentDate:"",maxAppointmentDate:"",appointment:{}}),watch:{ready:{async handler(t){t&&(this.appointment=new m(this.patientID,this.providerID),this.init())},immediate:!0}},methods:{async onFinish(t,e){await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(e,"obs")),this.gotoPatientDashboard()},init(){this.appointmentDate=m.getSessionDate(),this.maxAppointmentDate=s(this.appointmentDate).add(100,"year").format("YYYY-MM-DD"),this.fields=this.getFields()},getFields(){return[{id:"set_appointment",helpText:"Appointments booking",type:n.TT_APPOINTMENTS_ENTRY,validation:t=>o.required(t),computedValue:t=>({tag:"obs",obs:[this.appointment.buildValueDate("Appointment date",t.value)]}),config:{patientAge:this.patient.getAge(),hideRunoutDate:!0,hiddenFooterBtns:["Clear"]},options:()=>[{label:"",value:"",other:{runOutDate:this.maxAppointmentDate,appointmentDate:this.appointmentDate}}]}]}}});t("default",l(e,[["render",function(t,e,n,i,a,s){const o=r("his-standard-form");return p(),c(o,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
