import{d as v,r as n,ep as g,ap as m,co as _,d8 as i,t as b,u as D,v as h,w,x as c,y as d,cv as C,a5 as R,O as x,ah as O,c_ as P}from"./index-CyYd6aWW.js";import{v as S}from"./TableView-KUf7rG9H.js";const A=v({__name:"ClinicOutcomes",setup(y){const t=n([]),o=n(""),r=n(!1),a=new g,f=m(()=>[[{label:"Age Group",ref:"age_group"},{label:"Gender",ref:"gender"},{label:"Alive",ref:"alive"},{label:"Died",ref:"gender",value:e=>_(e.gender)},{label:"Referred Within",ref:"birthdate",value:e=>i(e.birthdate)},{label:"Transferred Out",ref:"order_date",value:e=>i(e.order_date)}]]),s=async()=>{if(!(a.startDate&&a.endDate))return x("Start date and end date required!");r.value=!0,t.value=[];try{t.value=await a.getOutcomesReport()}catch(e){O("Unable to generate report!")}r.value=!1},l=()=>P({onFinish:(e,u,p)=>{o.value="Period (".concat(p,")"),a.startDate=e,a.endDate=u,s()}});return b(()=>l()),(e,u)=>(D(),h(d(R),null,{default:w(()=>[c(d(C),{"is-open":r.value,message:"Please wait..."},null,8,["is-open"]),c(S,{title:"Clinic Outcomes Report",subtitle:o.value,columns:f.value,columnData:t.value,rowsPerPage:15,onConfigure:l,onRefresh:()=>s(),"report-prefix":"Clinic"},null,8,["subtitle","columns","columnData","onRefresh"])]),_:1}))}});export{A as default};
