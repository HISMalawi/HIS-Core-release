System.register(["./opd_report_service-legacy-eR6CwhnM.js","./BaseTableReport-legacy-wL0BkQYi.js","./index-legacy-B-IGLekl.js","./ReportMixin.vue_vue_type_script_lang-legacy-B2AVJ_qe.js","./DrillPatientIds-legacy-CvfsJEAk.js","./HisStandardForm-legacy-zrsmj5en.js","./TableView-legacy-DfP0o5vc.js"],(function(e,t){"use strict";var i,s,r,o,n,a,l,d,c,p,u,g,h,m,f;return{setters:[e=>{i=e.O},e=>{s=e.R},e=>{r=e.d,o=e.a5,n=e.ao,a=e.aq,l=e.aN,d=e.a6,c=e.ab,p=e.u,u=e.v,g=e.w,h=e.x},e=>{m=e._},e=>{f=e.D},null,null],execute:function(){const t=r({components:{ReportTemplate:s,IonPage:o},mixins:[m],data:()=>({title:"OPD diagnosis by address report",rows:[],reportService:{},columns:[[n.thTxt("Address"),n.thTxt("Diagnosis"),n.thTxt("Count")]]}),created(){this.fields=this.getDateDurationFields()},methods:{async init(e,t){this.reportService=new i,this.reportService.setStartDate(t.start_date),this.reportService.setEndDate(t.end_date),this.period=this.reportService.getDateIntervalPeriod(),this.rows=this.buildRows(await this.reportService.getDiagnosisByAddress())},async drill(e,t){e&&e.length&&(await a.create({component:f,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:t,patientIdentifiers:e,subtitle:this.period,onFinish:()=>a.getTop().then((e=>e&&a.dismiss()))}})).present()},totalDiagnosis:e=>Object.values(e).reduce(((e,t)=>e+t),0),buildRows(e){const t=[];if(l.isEmpty(e))return t;for(const i in e)for(const s in e[i]){const r=e[i][s];t.push([n.td(s),n.td(i),n.tdLink(r.length,(()=>this.drill(r,s)))])}return t}}});e("default",d(t,[["render",function(e,t,i,s,r,o){const n=c("report-template"),a=c("ion-page");return p(),u(a,null,{default:g((()=>[h(n,{title:e.title,rows:e.rows,fields:e.fields,columns:e.columns,period:e.period,reportPrefix:"Clinic",onReportConfiguration:e.init},null,8,["title","rows","fields","columns","period","onReportConfiguration"])])),_:1})}]]))}}}));
