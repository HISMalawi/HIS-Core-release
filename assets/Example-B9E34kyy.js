import{d as T,be as f,F as l,bf as b,bg as m,ah as p,_,r as g,o as x,c as y}from"./index-C6EjxQ0a.js";const N=[{label:"Jan",value:1},{label:"Feb",value:2},{label:"Mar",value:3},{label:"Apr",value:4},{label:"May",value:5},{label:"Jun",value:6},{label:"Jul",value:7},{label:"Aug",value:8},{label:"Sep",value:9},{label:"Oct",value:10},{label:"Nov",value:11},{label:"Dec",value:12}],E=T({components:{HisStandardForm:f},data:()=>({selfIndex:null,activeField:"",fields:[]}),created(){this.fields=this.getFields()},methods:{onFinish(e){console.log(e)},testResultsFields(){return{id:"test_results",helpText:"Test results",type:l.TT_MULTIPLE_YES_NO,onValueUpdate:e=>{const a=[...e],t="HIV Test 1 (Determin)",i="HIV Test 2( Unigold)",o="HIV Test 3 (Bioline)",r="HIV Test 1 Repeat";let u=!1,c=!1;a.forEach(s=>{switch(s.label){case t:u=s.value==="Positive";break;case i:c=s.value==="Positive";break}});const n=(s,d)=>{a.forEach(v=>{v.label===s&&(v.disabled=d,d&&(v.value=""))})},h=s=>e.some(d=>d.label===s&&d.value!="");if(u)n(i,!1);else return n(i,!0),n(o,!0),n(r,!0),a;return u&&c?(n(o,!1),n(r,!0),a):(u&&!c&&h(i)&&(n(r,!1),n(o,!0)),a)},options:()=>[{label:"HIV Test 1 (Determin)",value:"",other:{values:[{label:"Positive",value:"Positive"},{label:"Negative",value:"Negative"}]}},{label:"HIV Test 2( Unigold)",value:"",disabled:!0,other:{values:[{label:"Positive",value:"Positive"},{label:"Negative",value:"Negative"}]}},{label:"HIV Test 1 Repeat",value:"",disabled:!0,other:{values:[{label:"Positive",value:"Positive"},{label:"Negative",value:"Negative"}]}},{label:"HIV Test 3 (Bioline)",value:"",disabled:!0,other:{values:[{label:"Positive",value:"Positive"},{label:"Negative",value:"Negative"}]}},{label:"Syphilis result",value:"",other:{values:[{label:"Positive",value:"Positive"},{label:"Negative",value:"Negative"}]}},{label:"Hepatitis result",value:"",other:{values:[{label:"Positive",value:"Positive"},{label:"Negative",value:"Negative"}]}}]}},getFields(){return[{id:"test_kit",helpText:"Kit information",type:l.TT_INPUT_ARRAY,isRequired:()=>!0,condition:e=>!0,config:{columns:[{label:"Kit Name"},{label:"Kit Lot No."},{label:"Kit Expiry Date"}]},options:()=>[{label:"Item A",value:"",other:{fields:[{label:"Kit Name",value:"",other:{usefontBold:!0}},{label:"Kit Lot No.",value:"1"},{label:"Kit Expiry Date",value:"12/May/1994"}]}},{label:"Item A",value:"",other:{fields:[{label:"Kit Name",value:"",other:{usefontBold:!0}},{label:"Kit Lot No.",value:"1"},{label:"Kit Expiry Date",value:"12/May/1994"}]}},{label:"Item A",value:"",other:{fields:[{label:"Kit Name",value:"",other:{usefontBold:!0}},{label:"Kit Lot No.",value:"1"},{label:"Kit Expiry Date",value:"12/May/1994"}]}},{label:"Item A",value:"",other:{fields:[{label:"Kit Name",value:"",other:{usefontBold:!0}},{label:"Kit Lot No.",value:"1"},{label:"Kit Expiry Date",value:"12/May/1994"}]}}]},this.testResultsFields(),{id:"hidden_field",helpText:"Hidden Field",type:l.TT_INPUT_ARRAY,config:{columns:[{label:"End-User"},{label:"Gender"},{label:"Age"},{label:"Approach"}]},isRequired:()=>!0,options:e=>e.hidden_field?e.hidden_field:Array.from({length:4},(a,t)=>({label:"item",value:"N/A",other:{fields:[{label:"User "+(t+1),value:"",other:{onclick:(i,o)=>{b(["Self","Sexual partner","Other"],r=>i.value=r,{title:"Approach",size:"small-modal"})}}},{label:"Gender",value:"",other:{onclick:i=>{b(["Female","Male"],o=>i.value=o,{title:"Approach",size:"small-modal"})}}},{label:"Age",value:"",other:{onclick:i=>{m(o=>i.value=o)}}},{label:"Approach",value:"",other:{onclick:i=>{b(["Directly-assisted","Un-assisted"],o=>i.value=o,{title:"Approach",size:"small-modal"})}}}]}}))},{id:"dispense",helpText:"Dispensation",type:l.TT_DISPENSATION_INPUT,config:{toolbarInfo:[{label:"Name",value:"Test patient"},{label:"Gender",value:"Female"},{label:"Date Of Birth",value:"12/May/1994"}]},options:()=>[{label:"TDF300/3TC300/DTG50",value:0,other:{amounted_needed:30}},{label:"Cotrimoxazole (960mg)",value:0,other:{amounted_needed:30}},{label:"Rifapentine (150mg)",value:0,other:{amounted_needed:30}},{label:"INH or H (Isoniazid 100mg tablet)",value:0,other:{amounted_needed:30}}]},{id:"hello_world",helpText:"BeforeNext",type:l.TT_TEXT,isRequired:()=>!0,beforeNext:()=>confirm("Do you want to continue")},{id:"onvalue_hooks_multiple_select",helpText:"Dynamically toggling values",type:l.TT_MULTIPLE_SELECT,config:{showKeyboard:!1},onValueUpdate:(e,a)=>{if(a.isChecked&&a.label==="None")return e.map(t=>(t.label!="None"&&(t.isChecked=!1),t));if(a.label!="None"&&a.isChecked){const t=p.findIndex(e,{label:"None"});e[t].isChecked=!1}if(a.isChecked&&a.label==="Disable"){const t=p.findIndex(e,{label:"Disable"});e[t].disabled=!0}if(a.isChecked&&a.label==="Enable"){const t=p.findIndex(e,{label:"Disable"});e[t].disabled=!1}return e},validation(e){return e?null:["Value is required"]},options:()=>[{label:"Foo",value:"Foo",description:{color:"danger",text:"Optional description"}},{label:"This is prechecked by default",value:"pre_checked"},{label:"Bar",value:"Bar",description:{color:"warning",text:"This has discription of different color"}},{label:"Enable",value:"enabled",description:{color:"secondary",text:"I only appear when checked",show:"onChecked"}},{label:"Disable",value:"disable"},{label:"None",value:"None"}]},{id:"name_field",helpText:"What is your name",type:l.TT_TEXT,validation(e){return e?null:["Value is required"]}},{id:"custom_btn",helpText:"Show custom button",type:l.TT_TEXT,config:{footerBtns:[{name:"Void",color:"danger",size:"large",visible:!1,slot:"",visibleOnStateChange:e=>e.index===1,onClick:()=>{alert("Record has been voided!")}},{name:"Custom Something",color:"primary",size:"large",visible:!1,slot:"end",visibleOnStateChange:e=>e.index===1,onClick:()=>{alert("YaY! Custom Button Clicked")}}]}},{id:"patient_chart",helpText:"Patient Chart",type:l.TT_WEIGHT_CHART,options:()=>[{label:"Patient weight",value:54,other:{labels:["10 Jan","11 June","8 Aug"],values:[65,38,89,57]}}]},{id:"hide_default_btns",helpText:"Default buttons have been hidden",type:l.TT_TEXT,config:{hiddenFooterBtns:["Clear","Cancel"]}},{id:"skip_next_field",helpText:"Skip Next Field with custom button",type:l.TT_TEXT,config:{footerBtns:[{name:"Skip Dates",color:"light",size:"large",visible:!1,slot:"end",visibleOnStateChange:e=>e.index===3,onClick:()=>{this.activeField="multiple_select"}}]}},{id:"year",helpText:"Year of birth",type:l.TT_NUMBER},{id:"month",helpText:"Month of birth",type:l.TT_SELECT,requireNext:!1,options:()=>N,config:{showKeyboard:!1}},{id:"day",helpText:"Day of birth",type:l.TT_MONTHLY_DAYS},{id:"multiple_select",helpText:"Select Multiple values",type:l.TT_MULTIPLE_SELECT,config:{showKeyboard:!1},validation(e){return e?null:["Value is required"]},options:()=>[{label:"Foo",value:"Foo",description:{color:"danger",text:"Optional description"}},{label:"This is prechecked by default",value:"pre_checked",isChecked:!0},{label:"Bar",value:"Bar",description:{color:"warning",text:"This has discription of different color"}},{label:"Baz",value:"Baz",description:{color:"secondary",text:"I only appear when checked",show:"onChecked"}},{label:"Bar",value:"Bar"}]},{id:"conditional_data",helpText:"Conditionally display next question",type:l.TT_SELECT,requireNext:!1,validation(e){return e?null:["Value is required"]},options:()=>[{label:"Show Games",value:"Show Games"},{label:"Show Music",value:"Show Music"}]},{id:"music_presentation",helpText:"Showing Music",type:l.TT_SELECT,validation(e){return e?null:["Value is required"]},condition(e){return e.conditional_data.value==="Show Music"},options:()=>[{label:"No Music",value:"No Music"}]},{id:"games_presentation",helpText:"Showing Games",type:l.TT_SELECT,validation(e){return e?null:["Value is required"]},condition(e){return e.conditional_data.value==="Show Games"},options:()=>[{label:"No Games",value:"No Games"}]},{id:"does_not_require_next",helpText:"Click on value to proceed",type:l.TT_SELECT,requireNext:!1,validation(e){return e?null:["Value is required"]},options:()=>[{label:"Duke",value:"Duke"},{label:"Dork",value:"Dork"}]},{id:"option_params",helpText:"Console.log Prop sent via options",type:l.TT_SELECT,options:e=>(console.log(e),[])},{id:"validated",helpText:"Value is Required before next",type:l.TT_SELECT,validation(e){return e?null:["Value is required"]},options:()=>[{label:"Fur",value:"Fur"},{label:"Fume",value:"Fame"}]}]}}});function C(e,a,t,i,o,r){const u=g("his-standard-form");return x(),y(u,{fields:e.fields,activeField:e.activeField,onOnFinish:e.onFinish},null,8,["fields","activeField","onOnFinish"])}const I=_(E,[["render",C]]);export{I as default};
