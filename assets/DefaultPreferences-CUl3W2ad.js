import{d as _,I as T,ab as h,R as f,b_ as n,ad as o,dh as s,ae as r,di as g,aN as P,aa as m,c as C,w as y,af as c,a as E,b as L}from"./index-CMZASHAR.js";import{H as N}from"./HisStandardForm-BCjM4-bc.js";const I=_({components:{HisStandardForm:N,IonPage:T},data:()=>({preference:"",fields:[]}),created(){this.preference=this.$route.name,this.fields=[...this.getTargetLab(),...this.getBPThresholdPreferences(),...this.getFilingNumberLimitPreferences(),...this.getAppointmentLimitPreferences(),...this.getHtnAgePreferences(),...this.getNotificationPeriod(),...this.getClinicDaysPreferences(),...this.getClinicHolidaysPreferences(),...this.getCxCaScreeningPreference(),...this.getLabOrderPrintCopies()]},methods:{isProp(e){return!this.preference||e===this.preference},async onFinish(e,i){for(const t in i)await h.set(t,i[t]),f("Property has been updated",2e3);this.$router.back()},getLabOrderPrintCopies(){return[{id:n.LAB_ORDER_PRINT_COPIES,helpText:"Specify number of copies to print after an order",type:o.TT_NUMBER,defaultValue:()=>s.labOrderPrintCopies(),computedValue:e=>e.value,condition:()=>this.isProp(n.LAB_ORDER_PRINT_COPIES),validation:e=>r.validateSeries([()=>r.required(e),()=>r.rangeOf(e,1,3)])}]},getTargetLab(){return[{id:n.TARGET_LAB,helpText:"Please select target lab",type:o.TT_SELECT,computedValue:e=>e.value,defaultValue:()=>s.targetLab(),validation:e=>r.required(e),condition:()=>this.isProp("target_lab"),options:(e,i="")=>g(i),config:{showKeyboard:!0,isFilterDataViaApi:!0}}]},getCxCaScreeningPreference(){const e="cervical_cancer",i=n.CERVICAL_CANCER_SCREENING;return[{id:i,helpText:"Activate CxCa screening",type:o.TT_YES_NO,condition:()=>this.isProp(e),computedValue:t=>t,defaultValue:()=>s.cervicalCancerScreeningEnabled(),validation:t=>r.required(t),options:()=>[{label:"Activate screening?",values:[{label:"Yes",value:"true"},{label:"No",value:"false"}]}]},{id:"starting_screening_age",proxyID:n.CERVICAL_CANCER_AGE_BOUNDS,helpText:"Starting screening age",type:o.TT_NUMBER,condition:t=>this.isProp(e)&&t[i]==="true",defaultValue:async()=>{const{start:t}=await s.cervicalCancerScreeningAgeBounds();if(t)return t},validation:t=>r.required(t)},{id:"maximum_screening_age",proxyID:n.CERVICAL_CANCER_AGE_BOUNDS,helpText:"Maximum screening age",type:o.TT_NUMBER,condition:t=>this.isProp(e)&&t[i]==="true",computedValue:(t,a)=>"".concat(a.starting_screening_age.value,":").concat(t.value),defaultValue:async()=>{const{end:t}=await s.cervicalCancerScreeningAgeBounds();if(t)return t},validation:t=>r.required(t)}]},getClinicHolidaysPreferences(){const e=n.CLINIC_HOLIDAYS;return[{id:e,helpText:"Set clinic holiday(s)",type:o.TT_CLINIC_HOLIDAY_PICKER,condition:()=>this.isProp(e),computedValue:i=>i.value,defaultValue:()=>s.clinicHolidays(),validation:i=>r.required(i)}]},getBPThresholdPreferences(){const e="bp_thresholds";return[{id:n.HTN_SYSTOLIC_THRESHOLD,helpText:"Set systolic blood pressure",type:o.TT_NUMBER,condition:()=>this.isProp(e),computedValue:i=>i.value,defaultValue:()=>s.systolicThreshold(),validation:i=>r.required(i)},{id:n.HTN_DIASTOLIC_THRESHOLD,helpText:"Set diastolic blood pressure",type:o.TT_NUMBER,condition:()=>this.isProp(e),computedValue:i=>i.value,defaultValue:()=>s.diastolicThreshold(),validation:i=>r.required(i)}]},getFilingNumberLimitPreferences(){const e=n.FILING_NUMBER_LIMIT;return[{id:e,helpText:"Enter Filing Number Limit",condition:()=>this.isProp(e),computedValue:i=>i.value,defaultValue:()=>s.filingNumberLimit(),type:o.TT_NUMBER,validation:i=>r.required(i)}]},getAppointmentLimitPreferences(){const e=n.APPOINTMENT_LIMIT;return[{id:e,helpText:"Enter Appointment Limit",type:o.TT_NUMBER,computedValue:i=>i.value,condition:()=>this.isProp(e),defaultValue:()=>s.appointmentLimit(),validation:i=>r.required(i)}]},getHtnAgePreferences(){const e=n.HTN_SCREENING_AGE_THRESHOLD;return[{id:e,type:o.TT_NUMBER,helpText:"Enter HTN age Threshold",condition:()=>this.isProp(e),computedValue:i=>i.value,defaultValue:()=>s.htnAgeThreshold(),validation:i=>r.required(i)}]},getNotificationPeriod(){const e=n.NOTIFICATION_PERIOD;return[{id:e,type:o.TT_NUMBER,helpText:"Enter Number of Days",condition:()=>this.isProp(e),computedValue:i=>i.value,defaultValue:()=>s.notificationPeriod(),validation:i=>r.required(i)}]},getClinicDaysPreferences(){const e="clinic_days",i=a=>a.map(d=>d.value).join(),t=a=>["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"].map(l=>({label:l,value:l,isChecked:!P.isEmpty(a)&&a.search(l)>=0}));return[{id:n.ADULT_CLINIC_DAYS,helpText:"Clinic days (adults: 18 yrs and over)",type:o.TT_MULTIPLE_SELECT,condition:()=>this.isProp(e),computedValue:a=>i(a),validation:a=>r.required(a),options:async()=>t(await s.adultClinicDays())},{id:n.PEADS_CLINIC_DAYS,helpText:"Clinic days (children: Under 18 yrs)",type:o.TT_MULTIPLE_SELECT,condition:()=>this.isProp(e),computedValue:a=>i(a),validation:a=>r.required(a),options:async()=>t(await s.peadsClinicDays())}]}}});function A(e,i,t,a,d,l){const p=c("his-standard-form"),u=c("ion-page");return E(),C(u,null,{default:y(()=>[L(p,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0},null,8,["fields","onFinishAction"])]),_:1})}const R=m(I,[["render",A]]);export{R as default};
