import{d as te,r as y,bQ as c,ad as g,a_ as w,e9 as v,ci as H,aN as z,aj as N,ae as _,a as ie,c as ae,w as ne,b as oe,u as G,W as se,aW as Q,I as re}from"./index-CMZASHAR.js";import{H as le}from"./HisStandardForm-BCjM4-bc.js";import{u as ue}from"./useEncounter-CsCeua2V.js";import"./isEmpty-DjKeGqZh.js";import"./encounter_guidelines-CJXpBOk4.js";import"./GuidelineEngine-D6V1_Znr.js";var s=(p=>(p.CONFIRM="confirm",p.SELECTION="select",p.INFO="info",p.WARN="warn",p))(s||{});const _e=te({__name:"DrRegimen",setup(p){const C=y([]),o=new c(-1,-1),n=y({}),d=y(""),h=y({});async function f(r){await c.getJson("mdr/regimen/create",{patient_id:o.patientID,program_id:o.programID,regimen:r,date:o.date}),location.reload()}async function T(){h.value=await c.getJson("mdr/regimen/types",{patient_id:o.patientID,program_id:o.programID,date:o.date})}async function K(r){for(const l in r){const i=r[l],m=Object.keys(i.conditions).every(u=>u in n.value?i.conditions[u](n.value[u]):!1);if(m){switch(i.type||""){case s.CONFIRM:i.action&&await i.action(await N(i.subtitle||i.title||"No message",{header:i.title||"Alert"}));break;case s.INFO:await Q("Information",i.title||"",i.subtitle||i.title||"No information",[{name:"Ok",slot:"start",color:"primary"}]),i.action&&await i.action();break;case s.SELECTION:if(i.options){const u=await Q("Action needed!",i.title||"",i.subtitle||i.title||"No information",Object.keys(i.options||{}).map(x=>({name:x,slot:"start",color:"primary"})));i.action&&await i.action(i.options[u])}break;case s.WARN:(i.title||i.subtitle)&&(se(i.title||i.subtitle||""),i.action&&await i.action());break;default:i.action&&await i.action()}if(m===i.break)break}}}const{goToNextTask:I,patientDashboardUrl:X}=ue((r,l)=>{o.patientID=l,o.providerID=r;const i=()=>({id:"regimenData",helpText:"DR regimen:",type:g.TT_SUMMARY,init:async()=>{n.value=await c.getJson("mdr/regimen/status",{patient_id:o.patientID,program_id:o.programID,date:o.date});const t=n.value,a={"Eligible for mdr?":{action:()=>w.push("/patient/dashboard/".concat(l)),title:"Exiting",subtitle:"Patient is not eligible for DR treatment!",type:s.INFO,break:!0,conditions:{mdr_status:e=>!e}},"On MDR but current regimen has issues and no alternative is available?":{action:()=>d.value="regimentTypes",title:"Alert",subtitle:"Issues with active regimen: ".concat(t.issues),type:s.INFO,break:!0,conditions:{regimen_title:e=>!/individual/i.test(e),fail_state_phase:e=>!e,issues:e=>e.length>0}},"On MDR and current regimen has issues and an alternative is available?":{title:"".concat(t.regimen_title," Alert!"),subtitle:"".concat(t.issues,". Try ").concat(v(t.fail_state_phase),"?"),type:s.CONFIRM,action:async e=>e&&await f(t.fail_state_phase),break:!0,conditions:{regimen_title:e=>!/individual/i.test(e),fail_state_phase:e=>!!e,issues:e=>e.length}},"Custom regimen has issues, formulate another one?":{action:()=>d.value="custom_regimen_duration",type:s.CONFIRM,title:"".concat(t.issues,". Do you want to create another custom regimen?"),break:!0,conditions:{regimen_title:e=>/individual/i.test(e),issues:e=>e.length}},"Conversion has been successful in this phase, proceed to next phase?":{action:async e=>e&&await f(t.next_phase),title:"".concat(t.regimen_title," Complete"),subtitle:"Do you want to proceed to ".concat(v(t.next_phase),"?"),type:s.CONFIRM,break:!0,conditions:{end_of_phase:e=>e,conversion_status:e=>e,next_phase:e=>e}},"Treatment complete, update outcome?":{action:()=>w.push("/patient/programs/".concat(o.programID)),title:"Treatment complete!",subtitle:"Do you want to update the patient's outcome?",type:s.CONFIRM,break:!0,conditions:{end_of_phase:e=>e,conversion_status:e=>e,next_phase:e=>!e}},"Conversion was not successful on this regimen, either proceed to the next phase or try an alternative":{action:f,title:"Phase complete! previous consecutive results were Positive and Negative respectively. Choose which regimen to proceed with",subtitle:"Do you want to proceed to ".concat(v(t.next_phase)," or go for ").concat(v(t.fail_state_phase),"?"),type:s.SELECTION,options:{Continue:t.next_phase,"Next phase":t.fail_state_phase},break:!0,conditions:{next_phase:e=>!!e,fail_state_phase:e=>!!e,issues:e=>e.length<=0,end_of_phase:e=>e,conversion_status:e=>!e}},"Conversion was not successful, either update outcome or switch regimens":{action:e=>typeof e=="function"?e():e,title:"Treatment complete! Previous consecutive results were Positive and Negative respectively",subtitle:"Do you want to update treatment outcome or switch regimen?",type:s.SELECTION,options:{Outcome:()=>w.push("/patient/programs/".concat(o.programID)),"New regimen":()=>d.value="regimentTypes"},break:!0,conditions:{issues:e=>e.length<=0,end_of_phase:e=>e,conversion_status:e=>!e}},"Update individualised drugs if non are found":{action:()=>d.value="custom_regimen_duration",break:!0,conditions:{regimen_title:e=>/individual/i.test(e),regimen_drugs:e=>e.length<=0}},"Warn if overdue for examination":{title:"Patient is overdue for a Lab test",subtitle:"Do you want to order a test now?",type:s.CONFIRM,conditions:{overdue_examination:e=>e},action:e=>e&&w.push("/tb/lab/".concat(l))}};return await K(a),!0},condition:()=>Object.keys(n.value).length>1,dynamicHelpText:()=>"".concat(n.value.regimen_title),config:{hiddenFooterBtns:["Clear"],overrideDefaultFooterBtns:{nextBtn:{name:"Finish",onClick:()=>I()}},footerBtns:[{name:"Switch",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>{await T(),d.value="regimentTypes"}}]},options:()=>{var e,E,k,O,$,F,R,M,S,P,A,j,B,L,U,V,W,Y,q;const t=(D,b="#007bff")=>"<span style='padding:3px;color: white; background:".concat(b,"'> ").concat(D," </span>"),a=D=>{const b=[];return D.forEach(J=>b.push("<li>".concat(J!=""?J:"NONE","</li>"))),"<ul>".concat(b.join(""),"</ul>")};return[{label:"Composition",value:(e=n.value)!=null&&e.regimen_composition?t((E=n.value)==null?void 0:E.regimen_composition):t("N/A")},{label:"Required duration",value:"".concat((k=n.value)==null?void 0:k.duration_in_months," Month(s)")},{label:"Current duration",value:"".concat((O=n.value)==null?void 0:O.months_on_regimen," Month(s)")},{label:"Date enrolled",value:"".concat(H(($=n.value)==null?void 0:$.enrolled_on))},{label:"Next phase",value:(F=n.value)!=null&&F.next_phase?t(v((R=n.value)==null?void 0:R.next_phase)):t("N/A")},{label:"Sputum conversion",value:(M=n.value)!=null&&M.conversion_status?t("DONE","#5cb85c"):t("NOT DONE","#d9534f")},{label:"Conversion status date",value:(S=n.value)!=null&&S.conversion_date?H((P=n.value)==null?void 0:P.conversion_date):t("N/A","#d9534f")},{label:"Examination Overdue",value:(A=n.value)!=null&&A.overdue_examination?t("Yes","#d9534f"):t("No","#5cb85c")},{label:"Issues",value:!((j=n.value)!=null&&j.issues)||z.isEmpty((B=n.value)==null?void 0:B.issues)?t("NONE","#5cb85c"):a((L=n.value)==null?void 0:L.issues)},{label:"Classification",value:(U=n.value)==null?void 0:U.resistance_classification},{label:"Failure risk",value:(V=n.value)!=null&&V.not_risk?t("Yes","#d9534f"):t("No","#5cb85c")},{label:"Pregnant",value:(W=n.value)!=null&&W.pregnant?t("Yes","#d9534f"):t("No","#5cb85c")},{label:"Extrapulmonarly TB",value:(Y=n.value)!=null&&Y.eptb?t("Yes","#d9534f"):t("No","#5cb85c")},{label:"End of phase",value:(q=n.value)!=null&&q.end_of_phase?t("Yes","#5cb85c"):t("No","#d9534f")}]}}),m=()=>({id:"regimentTypes",helpText:"Select regimen type:",type:g.TT_SELECT,init:async()=>(z.isEmpty(h.value)&&await T(),!0),beforeNext:async t=>{if(/individual/i.test(n.value.regimen_title)&&t.value==="individualised_regimen"){if(!await N("Do you want to replace custom regimen composition of ".concat(n.value.regimen_composition,"?")))return!1}else if(n.value.next_phase===t.value&&!n.value.end_of_phase){if(!await N("".concat(n.value.regimen_title," is not complete, do you want to proceed to ").concat(t.label)))return!1}else if(!await N("Are you sure you want to prescribe ".concat(t.label," (").concat(t.other.regimen_composition||"N/A",")")))return!1;return!0},computedValue:t=>t.value,options:()=>Object.keys(h.value).map(t=>{const a=h.value[t],e={label:a.title,value:t,other:{...a,sort:0},description:{color:"light",text:"".concat(a.regimen_composition||"Unknown regimen composition")}};return a.title===n.value.regimen_title?{...e,other:{...a,sort:-1},disabled:!/individual/i.test(a.title),description:{text:"<b style='color:green;'>Currently on this regimen</b>"}}:a.primary?{...e,other:{...a,sort:1},description:{text:"".concat(a.regimen_composition," <br/> <i style='font-weight:bold;color: green;'>Patient meets criteria for this regimen</i>")}}:a.issues.length?{...e,disabled:!0,other:{...a,sort:-1},description:{text:"<i style='font-weight: bold;'>".concat(a.issues.join(", "),"</i>")}}:e}).sort((t,a)=>a.other.sort>t.other.sort?1:-1),validation:t=>_.required(t)});function u(){return{id:"custom_regimen_duration",helpText:"Custom Duration in months",type:g.TT_SELECT,proxyID:"regimen_period",computedValue:t=>t.value,validation:t=>_.required(t),condition:t=>t.regimentTypes.value==="individualised_regimen",options:()=>[{label:"2 Months",value:2},{label:"4 Months",value:4},{label:"6 Months",value:6},{label:"8 Months",value:8},{label:"12 Months",value:12},{label:"20 Months",value:20},{label:"Custom Duration",value:"other"}]}}function x(){return{id:"other_duration",helpText:"Custom Duration in months",type:g.TT_NUMBER,proxyID:"regimen_period",computedValue:t=>t.value,validation:t=>_.required(t),condition:t=>t.custom_regimen_duration.value==="other"}}function ee(){const t=[];return{id:"custom_regimen_formulation",helpText:"Custom DR Regimen",type:g.TT_DR_REGIMEN_INPUT,init:async()=>{const a=await c.getJson("mdr/regimen/custom/options",{program_id:c.getProgramID(),date:c.getSessionDate(),patient_id:l});return a&&Object.keys(a).forEach(e=>t.push({label:a[e].title,value:a[e].description,other:a[e]})),!0},options:()=>t,computedValue:a=>({drugs:a.map(e=>e.value),code:a[0].other}),condition:a=>a.regimen_period.value,validation:a=>_.validateSeries([()=>_.required(a),()=>a[0].other.split("-").length<4?["Create a regimen of atleast 4 or more drugs"]:null])}}C.value=[i(),m(),u(),x(),ee()]});async function Z(r,l){var i,m,u;if((i=r==null?void 0:r.custom_regimen_formulation)!=null&&i.length)return await c.postJson("mdr/regimen/create",{patient_id:o.patientID,program_id:o.programID,date:o.date,duration:l.regimen_period,drugs:l.custom_regimen_formulation.drugs,code:l.custom_regimen_formulation.code}),location.reload();if((m=r.regimentTypes)!=null&&m.value)return f((u=r.regimentTypes)==null?void 0:u.value);I()}return(r,l)=>(ie(),ae(G(re),null,{default:ne(()=>[oe(le,{cancelDestinationPath:G(X),onOnIndex:l[0]||(l[0]=i=>d.value=""),activeField:d.value,onFinishAction:Z,fields:C.value,skipSummary:!0},null,8,["cancelDestinationPath","activeField","fields"])]),_:1}))}});export{_e as default};
