import{L as u}from"./lab_report_service-CeJKnzHb.js";import{_ as g}from"./ReportMixin.vue_vue_type_script_lang-CCIQru9E.js";import{R as f}from"./TableReportTemplate-C7xW5lHJ.js";import{d as T,L as e,F as d,cQ as h,_ as v,r as b,o as _,c as R}from"./index-DWvBkLVO.js";import"./BasicReportTemplate-CyX9tMHh.js";import"./Export-DpE20evB.js";import"./Pagination-_sselcrV.js";import"./HisStandardForm-CiMWbvzt.js";import"./ReportErrors-GjOpVn8v.js";const w=T({mixins:[g],components:{ReportTemplate:f},data:()=>({title:"Lab test result(s)",rows:[],cohort:[],reportType:"",reportReady:!1,columns:[],patientLevelColumns:[[e.thTxt("ARV#"),e.thTxt("Gender"),e.thTxt("Birthdate"),e.thTxt("Ordered"),e.thTxt("Specimen"),e.thTxt("Test"),e.thTxt("Result"),e.thTxt("Released")]],disaggregatedColumns:[e.thTxt("Age group"),e.thTxt("Gender")]}),created(){this.report=new u,this.fields=this.getFormFields()},methods:{async onPeriod({type:s,tests:r},t){this.reportReady=!0,this.rows=[],this.period=this.report.getDateIntervalPeriod(),this.report.setOccupation(t.occupation),this.reportType=s.value,this.reportType==="disaggregated"?this.setDisaggregatedRows(r):this.reportType==="patient_level"&&this.setPatientLevelRows(r)},getFormFields(){return[...this.getDateDurationFields(),{id:"tests",helpText:"Available test(s) results",type:d.TT_MULTIPLE_SELECT,options:async(s,r,t)=>{this.report.setStartDate(t.start_date),this.report.setEndDate(t.end_date);const o=await this.report.getLabResultsReport(),i=this.buildAvailableTests(o);return this.buildAvailableTestOptions(i)}},{id:"type",helpText:"Select report type",type:d.TT_SELECT,options:()=>[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}]}]},buildAvailableTests(s){const r={};return s.forEach(t=>{t.measures.forEach(o=>{o.name in r||(r[o.name]=[]),r[o.name].push({id:t.patient_id,arv:t.arv_number,gender:t.gender,ageGroup:t.age_group,birthdate:this.toDate(t.birthdate),ordered:this.toDate(t.order_date),specimen:t.test,test:o.name,result:"".concat(o.modifier," ").concat(o.value),released:this.toDate(t.result_date)})})}),r},buildAvailableTestOptions(s){const r=[];for(const t in s){const o=s[t];r.push({label:t,value:o.length,other:o})}return r},setDisaggregatedRows(s){const r=[],t=[];this.columns=[this.disaggregatedColumns.concat(s.map(o=>e.thTxt(o.label)))];for(const o in h){const i=h[o],l=[e.td(i),e.td("Male")],a=[e.td(i),e.td("Female")];s.forEach(({other:c})=>{const p=m=>c.filter(n=>n.gender===m&&n.ageGroup===i).map(n=>n.id);l.push(this.drill(p("M"))),a.push(this.drill(p("F")))}),r.push(l),t.push(a),this.rows=[...t,...r]}},setPatientLevelRows(s){this.columns=this.patientLevelColumns,s.forEach(({other:r})=>{this.sortByArvNumber(r,"arv").forEach(t=>{this.rows.push([this.tdARV(t.arv),e.td(this.formatGender(t.gender)),e.tdDate(t.birthdate),e.tdDate(t.ordered),e.td(t.specimen),e.td(t.test),e.td(t.result),e.tdDate(t.released)])})})}}});function y(s,r,t,o,i,l){const a=b("report-template");return _(),R(a,{title:s.title,period:s.period,rows:s.rows,fields:s.fields,columns:s.columns,onReportConfiguration:s.onPeriod,"report-prefix":"Clinic"},null,8,["title","period","rows","fields","columns","onReportConfiguration"])}const S=v(w,[["render",y]]);export{S as default};
