System.register(["./EncounterMixin.vue_vue_type_script_lang-legacy-D4Hv-Owe.js","./index-legacy-D1EyWbyq.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./encounter_guidelines-legacy-aDW7sCjC.js","./GuidelineEngine-legacy-KsvQuFdF.js","./HisStandardForm-legacy-Yzj84zTJ.js","./TouchScreenForm-legacy-Cz0UXr2y.js","./ToolbarMediumCard-legacy-DG4P2wyL.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-Dt6qML7b.js"],(function(e,t){"use strict";var i,n,s,a,o,l,r,c,u,h,d;return{setters:[e=>{i=e._},e=>{n=e.d,s=e.I,a=e.cL,o=e._,l=e.r,r=e.o,c=e.c,u=e.w,h=e.b},e=>{d=e.F},null,null,null,null,null,null,null],execute:function(){const t=n({components:{IonPage:s},mixins:[i],data:()=>({service:{}}),watch:{ready:{handler(e){e&&(this.service=new a(this.patientID,this.providerID),this.fields=this.getFields())}}},methods:{async onFinish(e,t){const i=await this.resolveObs(t);await this.service.createEncounter(),await this.service.saveObservationList(i),await this.service.printSocialHistory(),this.nextTask()},getFields(){return[{id:"history",helpText:"Social history",type:d.TT_MULTI_SELECT_GRID,validation:e=>e.map((e=>""===e.value)).some(Boolean)?["Please complete selection!!"]:null,computedValue:e=>e.filter((e=>""!=e.value)).map((e=>this.service.buildValueCoded(e.other.concept,e.value))),options:()=>[{label:"Currently Smoking",value:"",other:{concept:"patient smokes",options:this.yesNoOptions()}},{label:"Currently taking alcohol",value:"",other:{concept:"Currently taking alcohol",options:this.yesNoOptions()}},{label:"Marital status",value:"",other:{concept:"Marital status",options:[this.toOption("Never Married"),this.toOption("Married"),this.toOption("Seperated"),this.toOption("Divorced")]}}]}]}}});e("default",o(t,[["render",function(e,t,i,n,s,a){const o=l("his-standard-form"),d=l("ion-page");return r(),c(d,null,{default:u((()=>[h(o,{fields:e.fields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])])),_:1})}]]))}}}));
