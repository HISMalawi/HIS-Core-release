import{d as a,L as t,V as s,cp as n,_ as p,r as l,o as m,c as d}from"./index-CZt4BSQf.js";import{_ as h}from"./ReportMixin.vue_vue_type_script_lang-KTz0lrel.js";import{R as u}from"./TableReportTemplate-CgWmLoQk.js";import{F as c}from"./dynamic-import-helper-Bsjrd6Ro.js";import"./MultiFieldDateHelper-BeQr4Gt4.js";import"./KbLayouts-VRA-vjeH.js";import"./HisKbConfigurations-GhFQZvlg.js";import"./BasicReportTemplate-B2bgDnCL.js";import"./Export-BOa-_uep.js";import"./SIngleTouchField-CGdD-Bed.js";import"./Pagination-CNLqe0_D.js";import"./HisStandardForm-B93s5uaV.js";import"./TouchScreenForm-JVgeEWDh.js";import"./ToolbarMediumCard-CyRn44E2.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-DiinNO5i.js";import"./ReportErrors-DXzOSZA6.js";const f=a({mixins:[h],components:{ReportTemplate:u},data:()=>({title:"",totalClients:[],rows:[],columns:[],outcome:""}),created(){const o=[[t.thTxt("ARV#"),t.thTxt("First name",{csvExportable:!1,pdfExportable:!0}),t.thTxt("Last name",{csvExportable:!1,pdfExportable:!0}),t.thTxt("Birthdate"),t.thTxt("Gender"),t.thTxt("Outcome date"),t.thTxt("Actions")]],r=e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),t.tdDate(e.birthdate),t.td(this.formatGender(e.gender)),t.tdDate(e.outcome_date),t.tdBtn("View",()=>this.$router.push({path:"/patient/dashboard/".concat(e.patient_id)}))];this.fields=[...this.getDateDurationFields(),{id:"outcome",helpText:"Select outcome",type:c.TT_SELECT,validation:e=>s.required(e),options:()=>[{label:"Transfer Out",value:"Transfer Out",other:{columns:[[t.thTxt("ARV#"),t.thTxt("First name",{csvExportable:!1,pdfExportable:!0}),t.thTxt("Last name",{csvExportable:!1,pdfExportable:!0}),t.thTxt("Birthdate"),t.thTxt("Gender"),t.thTxt("Outcome date"),t.thTxt("TO Location"),t.thTxt("Actions")]],rowBuilder:e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),t.tdDate(e.birthdate),t.td(this.formatGender(e.gender)),t.tdDate(e.outcome_date),t.td(e.transferred_out_to),t.tdBtn("View",()=>this.$router.push({path:"/patient/dashboard/".concat(e.patient_id)}))]}},{label:"Died",value:"Died",other:{columns:o,rowBuilder:r}},{label:"Stopped",value:"Stopped",other:{columns:o,rowBuilder:r}}]}]},methods:{async onPeriod({outcome:o},r){this.rows=[],this.columns=o.other.columns,this.report=new n,this.report.setOccupation(r.occupation),this.report.setStartDate(r.start_date),this.report.setEndDate(r.end_date),this.outcome=o.value.toString(),this.title="".concat(this.outcome," Report"),this.period=this.report.getDateIntervalPeriod(),this.setRows(await this.report.getOtherOutcome(this.outcome),o.other.rowBuilder)},setRows(o,r){o&&this.sortByArvNumber(o,"identifier").forEach(e=>this.rows.push(r(e)))}}});function T(o,r,e,x,_,b){const i=l("report-template");return m(),d(i,{title:o.title,period:o.period,rows:o.rows,fields:o.fields,columns:o.columns,encryptPDF:!0,onReportConfiguration:o.onPeriod,"report-prefix":"Clinic"},null,8,["title","period","rows","fields","columns","onReportConfiguration"])}const G=p(f,[["render",T]]);export{G as default};
