import{d as p,bg as m,F as s,V as i,bo as T,ag as o,bp as l,ae as c,H as _,bk as b,a$ as v,T as g,_ as y,r as C,o as S,c as D}from"./index-DsVZSn5I.js";import{H as E}from"./HisStandardForm-CBASeHGe.js";import{_ as F}from"./EncounterMixin.vue_vue_type_script_lang-C0K9gJxk.js";import{c as f}from"./lab-BpTRGhMz.js";import"./encounter_guidelines-CYP5Ifi5.js";import"./GuidelineEngine-D6V1_Znr.js";import"./lab_order_service-Uc0zcQAs.js";const B=p({mixins:[F],components:{HisStandardForm:E},data:()=>({service:{},tbTests:["Urine Lam","GeneXpert","Culture & Sensitivity","TB Microscopic Exam","FASH"],hasTBresultsWithin6Months:!1,hasCragResultsWithin6Months:!1,minTestDate:""}),watch:{ready:{async handler(e){e&&(this.service=new m(this.patientID,201,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){await this.service.createEncounter();const a=await Promise.all(this.resolveData(t,"obs"));await this.service.saveObservationList(a);const r=this.resolveData(t,"orders");r.length&&await f(this.patientID,this.providerID,r),this.nextTask()},resultsAvailableToday(){return{id:"results_available_today",helpText:"Will results be available today?",type:s.TT_SELECT,computedValue:e=>({obs:this.service.buildValueCoded("Results available today",e.value)}),options:()=>this.yesNoOptions(),validation:e=>i.required(e),condition:(e,t)=>this.resolveData(t,"orders").length>0}},orderTbTest(){return{id:"tb_order",helpText:"Order TB test(s)",type:s.TT_HIS_LAB_ORDER_INPUT,validation:e=>i.required(e),computedValue:e=>({orders:e.map(t=>t.other)}),condition:e=>{var t;return((t=e.tb_result)==null?void 0:t.value)==="Inconclusive"||e.available_results.some(a=>/TB/i.test(a.label)&&a.value==="No")},options:()=>this.mapStrToOptions(this.tbTests)}},orderSerumCrag(){return{id:"order_serum_crag_test",helpText:"CrAg test is required",type:s.TT_HIS_LAB_ORDER_INPUT,computedValue:e=>({orders:e.map(t=>t.other)}),validation:e=>i.required(e),condition:e=>e.available_results.some(t=>/CM/i.test(t.label)&&t.value==="No"),options:()=>this.mapStrToOptions(["Serum Crag"])}},csfResultsAvailable(){return{id:"csf_crag_result_available",helpText:"CSF CrAg Result available?",type:s.TT_SELECT,validation:e=>i.required(e),condition:e=>e.serum_crag_result.value==="Positive",options:()=>this.yesNoOptions()}},csfCragTestLocation(){return{id:"csf_crag_test_location",helpText:"CSF CrAg test location",type:s.TT_SELECT,validation:e=>i.required(e),condition:e=>e.csf_crag_result_available.value==="Yes",options:(e,t="")=>T(t),computedValue:e=>({obs:this.service.buildValueText("CSF CrAg test location",e.label)}),config:{showKeyboard:!0,isFilterDataViaApi:!0}}},csfCragTestDate(){return o({id:"csf_test_date",helpText:"CSF CrAg test date",required:!0,minDate:()=>this.minTestDate,maxDate:()=>this.service.date,condition:e=>e.csf_crag_result_available.value==="Yes",computeValue:(e,t)=>({date:e,obs:this.buildDateObs("CSF CrAg test date",e,t,this.service)}),estimation:{allowUnknown:!0,estimationFieldType:l.MONTH_ESTIMATE_FIELD}})},csfResult(){return{id:"csf_result",helpText:"CSF CrAg result",type:s.TT_SELECT,computedValue:e=>({obs:[this.service.buildValueCoded("CSF CrAg test result",e.value),this.service.buildValueCoded("Cryptococcal Meningitis status",e.value)]}),validation:e=>i.required(e),condition:e=>e.csf_crag_result_available.value==="Yes",options:()=>this.mapStrToOptions(["Positive","Negative"])}},orderCsfCrag(){return{id:"order_csf_crag",helpText:"CrAg test is required",type:s.TT_HIS_LAB_ORDER_INPUT,computedValue:e=>({orders:e.map(t=>t.other)}),condition:e=>e.csf_crag_result_available.value==="No",validation:e=>i.required(e),options:()=>this.mapStrToOptions(["CSF CrAg"])}},availableResultsField(){return{id:"available_results",helpText:"Results available from the last six months?",type:s.TT_MULTIPLE_YES_NO,validation:e=>i.anyEmpty(e),options:e=>{var t,a;return[{label:"Tuberculosis (TB)",value:((t=(e.available_results||[])[0])==null?void 0:t.value)||"",other:{values:this.yesNoOptions(),concept:"TB results from last six months available"}},{label:"Cryptococcal Meningitis(CM)",value:((a=(e.available_results||[])[1])==null?void 0:a.value)||"",other:{values:this.yesNoOptions(),concept:"Cryptococcal Meningitis (CM) results from the last six months available"}}]},computedValue:e=>({obs:e.map(({other:t,value:a})=>this.service.buildValueCoded(t.concept,a))}),onValueUpdate:e=>(this.hasTBresultsWithin6Months=c.some(e,{value:"Yes",label:"Tuberculosis (TB)"}),this.hasCragResultsWithin6Months=c.some(e,{value:"Yes",label:"Cryptococcal Meningitis(CM)"}),e),beforeNext:()=>{if(this.hasTBresultsWithin6Months||this.hasCragResultsWithin6Months){const e=this.patient.getBirthdate(),t=_.subtract(this.service.date,"years",6);this.minTestDate=t.isBefore(e)?e:t.format("YYYY-MM-DD")}return!0}}},labInvestigationsField(){let e=[];const t=async()=>v.formatLabs(await g.get("GET_LAB_ORDERS_WITH_GIVEN_RESULT_STATUS",{patientID:this.patientID}));return{id:"patient_lab_orders",helpText:"Previous Lab orders",type:s.TT_LAB_ORDERS,init:async()=>(e=await t(),!0),unload:async()=>e=await t(),options:()=>[{label:"Lab orders",value:"order trail",other:{values:e}}],config:{printOrder:a=>new b(this.patientID).printLabOrderLbl(a),hiddenFooterBtns:["Clear"]}}},tbTestLocationField(){return{id:"tb_location",helpText:"TB test location",type:s.TT_SELECT,validation:e=>i.required(e),condition:()=>this.hasTBresultsWithin6Months,options:(e,t="")=>T(t),computedValue:e=>({obs:this.service.buildValueText("TB test location",e.label)}),config:{showKeyboard:!0,isFilterDataViaApi:!0}}},cragTestLocationField(){return{id:"serum_crag_location",helpText:"Serum crAg test location",type:s.TT_SELECT,condition:()=>this.hasCragResultsWithin6Months,validation:e=>i.required(e),options:(e,t="")=>T(t),computedValue:e=>({obs:this.service.buildValueText("Serum crAg test location",e.label)}),config:{showKeyboard:!0,isFilterDataViaApi:!0}}},tbTestDateField(){return o({id:"tb_test_date",helpText:"TB Test",required:!0,condition:()=>this.hasTBresultsWithin6Months,minDate:()=>this.minTestDate,maxDate:()=>this.service.date,computeValue:(e,t)=>({date:e,obs:this.buildDateObs("Tuberculosis test date received",e,t,this.service)}),estimation:{allowUnknown:!0,estimationFieldType:l.MONTH_ESTIMATE_FIELD}})},tbTestResultDateField(){return o({id:"tb_test_result_date",helpText:"TB Test Result",required:!0,condition:()=>this.hasTBresultsWithin6Months,minDate:(e,t)=>t.tb_test_date.date,maxDate:()=>this.service.date,computeValue:(e,t)=>({obs:this.buildDateObs("Tuberculosis test result date",e,t,this.service)}),estimation:{allowUnknown:!0,estimationFieldType:l.MONTH_ESTIMATE_FIELD}})},surumCragTestDate(){return o({id:"serum_crag_test_date",helpText:"Serum CrAg Test",required:!0,minDate:()=>this.minTestDate,maxDate:()=>this.service.date,condition:()=>this.hasCragResultsWithin6Months,computeValue:(e,t)=>({obs:this.buildDateObs("Serum crAg test date",e,t,this.service)}),estimation:{allowUnknown:!0,estimationFieldType:l.MONTH_ESTIMATE_FIELD}})},serumCragResult(){return{id:"serum_crag_result",helpText:"Serum CrAg result",type:s.TT_SELECT,condition:()=>this.hasCragResultsWithin6Months,validation:e=>i.required(e),computedValue:e=>({obs:this.service.buildValueCoded("Serum crAg result",e.value)}),options:()=>this.mapStrToOptions(["Positive","Negative"])}},tbTestTypeField(){return{id:"tb_test_type",helpText:"TB Test Type",type:s.TT_SELECT,condition:()=>this.hasTBresultsWithin6Months,validation:e=>i.required(e),options:()=>this.mapStrToOptions([...this.tbTests,"Chest X-Ray","Other"]),computedValue:e=>({obs:this.service.buildValueCoded("Simple tuberculosis test type",e.value)})}},tbTestResultField(){return{id:"tb_result",helpText:"TB test result",type:s.TT_SELECT,condition:()=>this.hasTBresultsWithin6Months,validation:e=>i.required(e),computedValue:e=>({obs:this.service.buildValueCoded("TB status",e.value)}),options:()=>this.mapStrToOptions(["Positive","Negative","Inconclusive"])}},getTbClassification(){return{id:"tb_classification",helpText:"TB Classification",type:s.TT_SELECT,condition:e=>{var t;return this.hasTBresultsWithin6Months&&/positive/i.test((t=e.tb_result)==null?void 0:t.value)},validation:e=>i.required(e),options:()=>this.mapStrToOptions(["Category I TB case","Category II TB case","Category III TB case","Category IV TB case"]),computedValue:e=>({obs:this.service.buildValueCoded("TB classification",e.value)})}},getTbTreatmentStatus(){return{id:"on_tb_treatment",helpText:"On TB Treatment?",type:s.TT_SELECT,condition:e=>{var t;return this.hasTBresultsWithin6Months&&/positive/i.test((t=e.tb_result)==null?void 0:t.value)},validation:e=>i.required(e),computedValue:e=>({obs:this.service.buildValueCoded("TB treatment",e.value)}),options:()=>this.yesNoOptions()}},getTbTreatmentStartDate(){return o({id:"tb_treatment_start_date",helpText:"TB Treatment Start",condition:e=>{var t;return this.hasTBresultsWithin6Months&&/Yes/i.test((t=e.on_tb_treatment)==null?void 0:t.value)},minDate:()=>this.minTestDate,maxDate:()=>this.service.date,computeValue:(e,t)=>({obs:this.buildDateObs("TB treatment start date",e,t,this.service)}),estimation:{allowUnknown:!0,estimationFieldType:l.MONTH_ESTIMATE_FIELD}})},getTbTreatmentPeriod(){return{id:"tb_treatment_period",helpText:"TB Treatment period (In months)",type:s.TT_NUMBER,validation:e=>i.validateSeries([()=>i.required(e),()=>i.isNumber(e),()=>i.rangeOf(e,3,9)]),condition:e=>{var t;return this.hasTBresultsWithin6Months&&/Yes/i.test((t=e.on_tb_treatment)==null?void 0:t.value)},computedValue:e=>({obs:this.service.buildValueNumber("TB treatment period",e.value)})}},ksSymptomsField(){return{id:"ks_symptoms",helpText:"Kaposi Sarcoma (KS) associated symptoms",type:s.TT_MULTIPLE_YES_NO,validation:e=>i.required(e),computedValue:e=>({obs:e.map(t=>this.service.buildValueCoded(t.label,t.value))}),options:e=>e.ks_symptoms?e.ks_symptoms:[this.toYesNoOption("Enlarged Lymph Nodes on Neck"),this.toYesNoOption("Enlarged Lymph Nodes on Armpits"),this.toYesNoOption("Enlarged Lymph Nodes on Groin"),this.toYesNoOption("Patches or Nodes on Neck"),this.toYesNoOption("Patches or Nodes on Armpits"),this.toYesNoOption("Patches or Nodes on Groin")]}},orderBiopsyForKs(){return{id:"ks_lab",helpText:"Order Biopsy (Optional)",type:s.TT_HIS_LAB_ORDER_INPUT,computedValue:e=>{if(e)return{orders:e.map(t=>t.other)}},options:()=>this.mapStrToOptions(["Biopsy"])}},ksDiagnosisField(){return{id:"ks_diagnosis",helpText:"KS diagnosis",type:s.TT_SELECT,computedValue:e=>({obs:this.service.buildValueCoded("KS clinical exam findings",e.value)}),validation:e=>i.required(e),options:()=>this.mapStrToOptions(["Positive","Negative"])}},ksStagingField(){return{id:"ks_staging",helpText:"Ks staging",type:s.TT_MULTIPLE_SELECT,validation:e=>i.required(e),computedValue:e=>({obs:e.map(t=>this.service.buildValueCoded("".concat(t.value),"Yes"))}),condition:e=>e.ks_diagnosis.value==="Positive",options:()=>this.mapStrToOptions(["KS stage T0","KS stage T1"]),config:{buildOptionsOnce:!0}}},summary(){return{id:"summary",helpText:"AHD Summary",type:s.TT_SUMMARY,options:e=>{var a,r,u,d,n;const t=[];return t.push({label:"TB",value:(a=e.tb_result)!=null&&a.value?"".concat((r=e.tb_test_type)==null?void 0:r.value," ").concat((u=e.tb_result)==null?void 0:u.value):"N/A"}),t.push({label:"CM",value:(d=e.crag_result)!=null&&d.value?"Serum CrAg ".concat((n=e.crag_result)==null?void 0:n.value):"N/A"}),t.push({label:"KS",value:e.ks_symptoms.every(h=>h.value==="No")?"No symptoms":"".concat(e.ks_symptoms.filter(h=>h.value==="Yes").length," symptom(s) recorded")}),t}}},getFields(){return[this.labInvestigationsField(),this.availableResultsField(),this.tbTestLocationField(),...this.tbTestDateField(),this.tbTestTypeField(),...this.tbTestResultDateField(),this.tbTestResultField(),this.getTbClassification(),this.getTbTreatmentStatus(),...this.getTbTreatmentStartDate(),this.getTbTreatmentPeriod(),this.orderTbTest(),this.cragTestLocationField(),...this.surumCragTestDate(),this.serumCragResult(),this.orderSerumCrag(),this.csfResultsAvailable(),this.csfCragTestLocation(),...this.csfCragTestDate(),this.csfResult(),this.orderCsfCrag(),this.ksSymptomsField(),this.orderBiopsyForKs(),this.ksDiagnosisField(),this.ksStagingField(),this.resultsAvailableToday(),this.summary()]}}});function O(e,t,a,r,u,d){const n=C("his-standard-form");return S(),D(n,{skipSummary:!0,fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const R=y(B,[["render",O]]);export{R as default};
