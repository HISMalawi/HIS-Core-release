var D=Object.defineProperty;var w=(n,t,i)=>t in n?D(n,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[t]=i;var u=(n,t,i)=>w(n,typeof t!="symbol"?t+"":t,i);import{bS as f,d as F,r as d,at as _,bA as H,ad as o,ae as r,aV as T,b$ as q,b_ as I,a as O,c as R,u as L,W as g,R as k,bx as U}from"./index-shtYcklF.js";import{H as B}from"./HisStandardForm-DTyi5DOm.js";import{u as Y}from"./useEncounter-BTL34v8A.js";import{y as v,r as M}from"./commons-DE_dtEtH.js";import"./isEmpty-D1pQFfiN.js";import"./encounter_guidelines-DKYC6QUl.js";import"./GuidelineEngine-D6V1_Znr.js";class W extends f{constructor(i,l){super(i,181,l);u(this,"hivStatus");u(this,"artStatus");u(this,"arvNumber");u(this,"arvStartDate");this.hivStatus="",this.artStatus="",this.arvNumber="",this.arvStartDate=""}getHivStatus(){return this.hivStatus}getArtStatus(){return this.artStatus}getArvNumber(){return this.arvNumber}getArvStartDate(){return this.arvStartDate}isHivPositive(){return!!this.hivStatus.match(/positive/i)}async loadArtStatus(){const i=await f.getJson("programs/12/patients/".concat(this.patientID,"/art_hiv_status"));i&&(this.hivStatus=i.hiv_status||this.hivStatus,this.artStatus=i.art_status||"",this.arvNumber=i.arv_number||"",this.arvStartDate=i.arv_start_date||"")}}const ee=F({__name:"CxCaTest",setup(n){let t;const i=d([]),l=d(""),m=d(""),b=d([]),C=d([]);let h;const x=_(()=>!(/positive/i.test(m.value)||C.value.some(a=>/hiv/i.test(a.program.name)))),S=_(()=>!/Chemotherapy|Hysterectomy|Palliative Care/.test(l.value)),{patientDashboardUrl:V,goToNextTask:P}=Y(async(a,e,s)=>{h=s,t=new W(e,a),l.value=await t.getFirstValueCoded("Treatment"),m.value=await t.getFirstValueCoded("HIV status");const p=new H(e);C.value=await p.getPrograms(),await y(),b.value=N()});async function E(a,e){if(!await t.createEncounter())return g("Unable to create encounter");const p=await M(e);if(!await t.saveObservationList([...p,...i.value]))return g("Unable to save patient observations");k("Observations and encounter created!"),P()}async function y(){const a=await t.getFirstValueCoded("Offer CxCa");a&&a==="Yes"||t.buildValueCoded("Ever had CxCa","No").then(e=>i.value.push(e))}function c(a){const e=a.ever_had_cxca.value==="Yes",s=a.results_available.value==="Yes";return e&&s}function A(){return U.getConceptsByCategory("reason_for_no_cxca").map(a=>({label:a.name,value:a.name,other:{c:a}}))}function N(){const a=String(h.getBirthdate());return[{id:"reason_for_visit",helpText:"Reason for visit",type:o.TT_SELECT,validation:e=>r.required(e),options:()=>[{label:"Initial screening",value:"Initial screening"},{label:"Postponed treatmment",value:"Postponed treatment"},{label:"One year subsequent check-up after treatment",value:"One year subsequent check-up after treatment"},{label:"Subsequent screening",value:"Subsequent screening"},{label:"Problem visit after treatment",value:"Problem visit after treatment"},{label:"Referral",value:"Referral"}],computedValue:e=>({obs:t.buildValueCoded("Reason for visit",e.value)})},{id:"hiv_status",helpText:"HIV status",type:o.TT_SELECT,condition:()=>x.value,validation:e=>r.required(e),options:()=>[{label:"Positive on ART",value:"Positive on ART"},{label:"Positive Not on ART",value:"Positive Not on ART"},{label:"Negative",value:"Negative"},{label:"Never tested",value:"Never tested"},{label:"Prefers Not to disclose",value:"Undisclosed"}],computedValue:e=>({obs:t.buildValueCoded("HIV status",e.value)})},...T({id:"hiv_test_date",helpText:"HIV test result date",required:!0,condition:e=>/Negative|Positive/i.test(e.hiv_status.value),minDate:()=>a,maxDate:()=>t.getDate(),estimation:{allowUnknown:!0,estimationFieldType:q.MONTH_ESTIMATE_FIELD},computeValue:(e,s)=>({date:e,tag:"cxca screening",isEstimate:s,obs:t.buildValueDate("HIV test date",e,s)})}),{id:"ever_had_cxca",helpText:"Ever had CxCa screening",type:o.TT_SELECT,condition:e=>e.reason_for_visit.value!=="Initial screening"&&!l.value,options:()=>v(),validation:e=>r.required(e),computedValue:e=>({obs:t.buildValueCoded("Ever had CxCa",e.value)})},{id:"results_available",helpText:"Results available?",type:o.TT_SELECT,validation:e=>r.required(e),condition:e=>e.reason_for_visit.value!=="Initial screening"&&e.ever_had_cxca.value!=="No",options:()=>v(),computedValue:e=>({obs:t.buildValueCoded("CxCa test results",e.value)})},{id:"location",helpText:"CxCa screening location",type:o.TT_SELECT,validation:e=>r.required(e),options:(e,s="")=>I(s),config:{showKeyboard:!0,isFilterDataViaApi:!0},condition:e=>c(e),computedValue:e=>({obs:t.buildValueText("Previous CxCa location",e.value)})},...T({id:"cxca_date",helpText:"Previous CxCa test",required:!0,minDate:()=>a,maxDate:()=>t.getDate(),estimation:{allowUnknown:!1},condition:e=>c(e),computeValue:(e,s)=>({date:e,tag:"cxca screening",isEstimate:s,obs:t.buildValueDate("cxca test date",e)})}),{id:"previous_screening_method",helpText:"Previous screening method",type:o.TT_SELECT,validation:e=>r.required(e),condition:e=>c(e),options:()=>[{label:"VIA",value:"VIA"},{label:"PAP Smear",value:"PAP Smear"},{label:"HPV DNA",value:"HPV DNA"},{label:"Speculum Exam",value:"Speculum Exam"}],computedValue:e=>({obs:t.buildValueCoded("Previous CxCa screening method",e.value)})},{id:"offer_CxCa",helpText:"Offer CxCa screening today",type:o.TT_SELECT,condition:()=>S.value,validation:e=>r.required(e),options:()=>v(),computedValue:e=>({obs:t.buildValueCoded("Offer CxCa",e.value)})},{id:"screening_method",helpText:"Screening method being offered",type:o.TT_SELECT,validation:e=>r.required(e),condition:e=>e.offer_CxCa.value==="Yes",options:()=>[{label:"VIA",value:"VIA"},{label:"PAP Smear",value:"PAP Smear"},{label:"HPV DNA",value:"HPV DNA"},{label:"Speculum Exam",value:"Speculum Exam"}],computedValue:e=>({obs:t.buildValueCoded("CxCa screening method",e.value)})},{id:"offer_family_planning",helpText:"Offer Family Planning ?",type:o.TT_SELECT,condition:e=>e.offer_CxCa.value!=="No",validation:e=>r.required(e),options:()=>v(),computedValue:e=>({obs:t.buildValueCoded("Family planning",e.label)})},{id:"reason_for_no_cxca",helpText:"Reason for NOT offering CxCa screening",type:o.TT_SELECT,validation:e=>r.required(e),condition:e=>e.offer_CxCa.value==="No",options:()=>A(),computedValue:e=>({obs:t.buildValueCoded("Reason for NOT offering CxCa",e.value)})}]}return(a,e)=>(O(),R(B,{fields:b.value,onFinishAction:E,skipSummary:!1,cancelDestinationPath:L(V)},null,8,["fields","cancelDestinationPath"]))}});export{ee as default};
