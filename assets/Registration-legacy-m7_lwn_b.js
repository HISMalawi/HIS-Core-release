System.register(["./HisStandardForm-legacy-CCaIL6NL.js","./index-legacy-sLIX6Wy9.js","./useEncounter-legacy-1AxyVJ5j.js","./commons-legacy-Dtcjo20n.js","./isEmpty-legacy-C9nV41DR.js","./encounter_guidelines-legacy-DAWGM7-g.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,a){"use strict";var t,i,n,l,o,r,s,u,d,c,v,p,T,y,b,f,g,_,E;return{setters:[e=>{t=e.H},e=>{i=e.bK,n=e.d,l=e.r,o=e.a9,r=e.aa,s=e.bS,u=e.cg,d=e.O,c=e.bR,v=e.u,p=e.v,T=e.y,y=e.as,b=e.af,f=e.dx},e=>{g=e.u},e=>{_=e.b,E=e.r},null,null,null],execute:function(){class a extends i{constructor(e,a){super(e,104,a)}}e("default",n({__name:"Registration",setup(e){let i,n;const m=l([]),{goToNextTask:N,patientDashboardUrl:x}=g(((e,t,l)=>{n=l,i=new a(t,e),m.value=[{id:"visit_type",helpText:"Type of visit",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({obs:i.buildValueCoded("Type of visit",e.value)}),options:()=>[{label:"New",value:"New patient"},{label:"Referral",value:"Referral"},{label:"Re-visiting",value:"Re-visiting"}]},{id:"referring_facility_name",helpText:"Referred from",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:({label:e})=>({obs:i.buildValueText("Referred from",e)}),condition:e=>"Referral"===e.visit_type.value,options:(e,a="")=>s(a),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"national_id_available",helpText:"National ID Available",type:o.TT_SELECT,validation:e=>r.required(e),condition:()=>u(n?.patient?.date_created)!=u(i.date)&&"Unknown"===n.getMWNationalID(),options:()=>_(),appearInSummary:()=>!1},{id:"national_id",helpText:"Enter National ID",type:o.TT_TEXT,validation:e=>r.isMWNationalID(e),condition:e=>"Yes"===e.national_id_available.value,beforeNext:async e=>!e.value||!(await async function(e){return!!e&&(await b.findByOtherID(f,e)).length>0}(e.value.toString()))||(d("National ID already exists"),!1),summaryMapValue:({value:e})=>({value:e,label:"National ID"}),config:{casing:"uppercase",customKeyboard:[c,[["Delete"]]]}},{id:"patient_pregnant",helpText:"Patient pregnant",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:({value:e})=>({obs:i.buildValueCoded("PATIENT PREGNANT",e)}),condition:()=>n.isChildBearing(),options:()=>_()}]}));async function h(e,a){if(await async function(e){const a=e.national_id_available,t=e.national_id;a&&"Yes"===a.value&&(await n.updateMWNationalId(t.value),y.invalidate("ACTIVE_PATIENT"))}(e),!(await i.createEncounter()))return d("Unable to create registration encounter");const t=await E({...a});if(!(await i.saveObservationList(t)))return d("Unable to save observations");N()}return(e,a)=>(v(),p(t,{cancelDestinationPath:T(x),fields:m.value,onFinishAction:h},null,8,["cancelDestinationPath","fields"]))}}))}}}));
