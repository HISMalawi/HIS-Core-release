System.register(["./index-legacy-CA6M7ipO.js"],(function(t,e){"use strict";var r,a;return{setters:[t=>{r=t.cy,a=t.aN}],execute:function(){t("M",class extends r{regenerate;constructor(){super(),this.regenerate=!1}cohortUrl(){return`programs/${this.programID}/reports/cohort`}setRegenerate(t){this.regenerate=t}getCohortDrillDown(t){return r.getJson("cohort_report_drill_down",{id:t,date:this.date,program_id:this.programID})}requestCohort(t){return r.ajxGet(this.cohortUrl(),t)}qaurterRequestParams(){const t={name:this.quarter,regenerate:this.regenerate};return this.occupation&&(t.occupation=this.occupation),t}datePeriodRequestParams(){const t={name:`Cohort-${this.startDate}-${this.endDate}`,start_date:this.startDate,end_date:this.endDate,regenerate:this.regenerate};return this.occupation&&(t.occupation=this.occupation),t}getCachedCohortValues(){const t=sessionStorage.getItem("mohCache");if(t){const e=JSON.parse(t);if(e.start_date===this.startDate&&e.end_date===this.endDate||e.quarter===this.quarter)return e.data}}cacheCohort(t){sessionStorage.setItem("mohCache",JSON.stringify({start_date:this.startDate,end_date:this.endDate,quarter:this.quarter,data:t}))}validateIndicators(t,e){const r=this.getCachedCohortValues();return r?e(Object.keys(t).reduce(((e,s)=>{const o=s.replaceAll(" ","").split("+").reduce(((t,e)=>{const s=a.find(r,{name:e});return t+parseInt(s?.contents||"0")}),0),n=t[s],i=n.param;return n.check(o,i)&&e.push(n.error(o,i)),e}),[])):-1}})}}}));
