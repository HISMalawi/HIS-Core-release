System.register(["./index-legacy-DaDUPm0b.js","./encounter_guidelines-legacy-i6miv9ib.js","./GuidelineEngine-legacy-KsvQuFdF.js","./HisStandardForm-legacy-CturMrfg.js"],(function(t,e){"use strict";var a,s,i,n,r,o,c,p,u,h;return{setters:[t=>{a=t.d,s=t.R,i=t.ab,n=t.q,r=t.aI,o=t.p},t=>{c=t.F,p=t.E},t=>{u=t.m},t=>{h=t.H}],execute:function(){t("_",a({components:{HisStandardForm:h},data:()=>({patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{sessionDate:"",apiDate:"",encounterName:"N/A",providers:[],isBdeMode:!1,birthDate:"",outcome:"",outcomeStartDate:""},ready:!1}),watch:{$route:{handler(t){t.params.patient_id&&this.patientID!=t.params.patient_id&&(this.patientID=parseInt(t.params.patient_id),s.get("ACTIVE_PATIENT",{patientID:this.patientID}).then((t=>{this.patient=t,this.setEncounterFacts().then((()=>{this.checkEncounterGuidelines().then((()=>{this.ready=!0}))}))})))},immediate:!0,deep:!0}},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{runflowState(t,e=null){const a={};if(a[c.SET_PROVIDER]=t=>{const[e]=t.split(" "),a=i.find(this.providers,{username:e});return a&&(this.providerID=a.person_id),c.CONTINUE},a[c.CHANGE_SESSION_DATE]=()=>(this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`),c.EXIT),a[c.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push(`/patient/programs/${this.patientID}`),c.EXIT),a[c.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),c.EXIT),t in a)return a[t](e)},async checkEncounterGuidelines(){const t=u(this.facts,p);for(const e in t){const a=t[e];if(a?.actions?.alert&&this.runflowState(await(a?.actions?.alert(this.facts)))===c.EXIT)return;if(a?.actions?.selection){const t=await(a?.actions?.selection(this.facts));this.runflowState(t.flowState,t.value)}}},async setEncounterFacts(){try{const t=await s.get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.outcome=t.outcome,this.facts.outcomeStartDate=t.startDate}catch(t){console.error(t),n(`${t}`)}this.facts.sessionDate=r.getSessionDate(),this.facts.apiDate=r.getCachedApiDate(),this.facts.isBdeMode=r.isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",r.isBDE()&&(this.providers=await s.get("PROVIDERS"),this.facts.providers=this.providers.sort(((t,e)=>{const a=t.username.toUpperCase(),s=e.username.toUpperCase();return a<s?-1:a>s?1:0})).map((t=>{let e=`${t.username}`;if(!i.isEmpty(t?.person?.names)){const[a]=t.person?.names||[];e+=` (${a.given_name} ${a.family_name})`}return e})))},toOption:(t,e={})=>({label:t,value:t,other:e}),mapStrToOptions:t=>t.map((t=>({label:t,value:t}))),patientDashboardUrl(){return`/patient/dashboard/${this.patientID}`},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},nextTask(){return o(this.patientID,this.$router)},yesNoOptions:()=>[{label:"Yes",value:"Yes"},{label:"No",value:"No"}],toYesNoOption(t,e={}){return{label:t,value:"",other:{...e,values:this.yesNoOptions()}}},mapOptions:t=>t.map((t=>({label:t,value:t}))),yesNoUnknownOptions:()=>[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}],resolveObs(t,e=""){const a=Object.values(t).filter((t=>t&&(t.tag===e||""===e))).reduce(((t,e)=>{const a=e.obs?e.obs:e;return Array.isArray(a)?t=t.concat(a):"function"==typeof a?t.push(a()):t.push(a),t}),[]);return Promise.all(a)},inArray(t,e){try{return t.filter((t=>e(t))).length>0}catch(a){return!1}},validateSeries(t){try{for(const e in t){const a=t[e]();if(a)return a}}catch(e){return[e]}}}}))}}}));
