System.register(["./HisStandardForm-legacy-F3CBTdXZ.js","./EncounterMixin.vue_vue_type_script_lang-legacy-pa_OxWcn.js","./patient_complaints_service-legacy-CJ3j-cuj.js","./LabOrderModal-legacy-D7dnKk7U.js","./index-legacy-DJZIfc2x.js","./patient_radiology_service-legacy-Bv75CRSJ.js","./HisRadiologyPicker-legacy-BDxjDFl-.js","./encounter_guidelines-legacy-B61hy_df.js","./GuidelineEngine-legacy-KsvQuFdF.js","./lab_order_service-legacy-B6VbnK1l.js","./SelectMixin-legacy-06uQEWPs.js","./BaseTextInput-legacy-CQigMqB2.js","./FieldMixin.vue_vue_type_script_lang-legacy-JBRA5Vl3.js"],(function(e,t){"use strict";var i,a,n,s,o,l,r,c,d,h,u,m,p,g,y,b,v,S,C,w,_,T,f,P,O,E,I,x,B,D,R,L,V,k,F;return{setters:[e=>{i=e.H},e=>{a=e._},e=>{n=e.P},e=>{s=e.L},e=>{o=e.d,l=e.a3,r=e.U,c=e.Q,d=e.S,h=e.R,u=e.a4,m=e.dv,p=e.aJ,g=e.aq,y=e.a6,b=e.ab,v=e.u,S=e.B,C=e.x,w=e.w,_=e.z,T=e.E,f=e.a5,P=e.bq,O=e.bI,E=e.O,I=e.bi,x=e.ag,B=e.aM,D=e.bp,R=e.a9,L=e.aa,V=e.v},e=>{k=e.P},e=>{F=e.default},null,null,null,null,null,null],execute:function(){var t=document.createElement("style");t.textContent=".his-table tr{height:50px}\n/*$vite$:1*/",document.head.appendChild(t);const N=o({name:"Modal",components:{IonButton:l,IonContent:r,IonHeader:c,IonTitle:d,IonToolbar:h,IonFooter:u,HisRadiologyPicker:F},mixins:[a],data:()=>({radiologyService:{},isPacsEnabled:!1,emitedSelectedOptions:{}}),watch:{ready:{async handler(e){e&&(this.radiologyService=new k(this.patientID,this.providerID),this.isPacsEnabled=await m.isPACsEnabled())},immediate:!0,deep:!0}},methods:{async onValue(e){this.emitedSelectedOptions=e},async getSelected(){return this.emitedSelectedOptions.map((async e=>({...await this.radiologyService.buildValueCoded("Radiology Orders",e.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]})))},async onSubmit(){if(!p.isEmpty(this.emitedSelectedOptions)){this.closeModal();let t=await this.getSelected();t=await Promise.all(t),await this.radiologyService.createEncounter();const i=await this.radiologyService.obsObj(t),a=await this.radiologyService.saveObservationList(i);if(await this.radiologyService.printOrders(a,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(a,this.patient)}catch(e){console.log(e)}}},async closeModal(){await g.dismiss([])}}}),j=y(N,[["render",function(e,t,i,a,n,s){const o=b("ion-title"),l=b("ion-toolbar"),r=b("ion-header"),c=b("his-radiology-picker"),d=b("ion-content"),h=b("ion-button"),u=b("ion-footer");return v(),S(T,null,[C(r,null,{default:w((()=>[C(l,null,{default:w((()=>[C(o,{class:"his-lg-text"},{default:w((()=>t[2]||(t[2]=[_("Radiology Examination")]))),_:1})])),_:1})])),_:1}),C(d,{style:{overflow:"hidden",background:"grey",height:"70vh"}},{default:w((()=>[C(c,{onOnValue:e.onValue},null,8,["onOnValue"])])),_:1}),C(u,null,{default:w((()=>[C(l,null,{default:w((()=>[C(h,{onClick:t[0]||(t[0]=t=>e.onSubmit()),size:"large",slot:"end",disabled:0===e.emitedSelectedOptions.length},{default:w((()=>t[3]||(t[3]=[_(" Place orders ")]))),_:1},8,["disabled"]),C(h,{onClick:t[1]||(t[1]=t=>e.closeModal()),size:"large",slot:"start",color:"danger"},{default:w((()=>t[4]||(t[4]=[_(" Close ")]))),_:1})])),_:1})])),_:1})],64)}]]),M=o({components:{HisStandardForm:i,IonPage:f},mixins:[a],data:()=>({complaintsService:{},todaysDate:P.getSessionDate(),weightLossPercentageNum:0,lostTenPercentBodyWeight:!1,presentingComplaints:"",isPacsEnabled:!1,radiologyBtnName:"Radiology Order",hasTriageComplaints:!1,generalConsultationEncounter:168}),watch:{ready:{async handler(e){e&&(this.complaintsService=new n(this.patientID,this.providerID),this.isPacsEnabled=await m.isPACsEnabled(),this.hasTriageComplaints=await this.getTriagePresentingComplaints(),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){try{const e=await this.resolveObs(t,"complaints"),i=await this.resolveObs(t,"consulation");await this.complaintsService.createEncounter(),await this.complaintsService.saveObservationList(e);const a=new O(this.patientID,this.generalConsultationEncounter,this.providerID);await a.createEncounter(),await a.saveObservationList(i),this.nextTask()}catch(i){console.error(i),E("An error occurred while saving the complaints")}},async launchOrderSelection(){const e=await g.create({component:s,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async launchRadiologyOrderSelection(){const e=await g.create({component:j,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async getTriagePresentingComplaints(){if(!((await this.complaintsService.fetchLatestTriageEncounter()).length>0))return!1;const e=(await I.getEncounters(this.patientID,this.todaysDate)).filter((function(e){return"TRIAGE PRESENTING COMPLAINTS"==e.type.name&&x.toStandardHisFormat(e.encounter_datetime)==P.getSessionDate()}));return e.length>0&&(this.presentingComplaints=e[0].observations,!0)},buildResults(){let e="",t=this.presentingComplaints.map((t=>{if(null!=t.obs_group_id)return[e,t.value_text];e=t.value_text}));return t=t.filter((e=>null!=e)),this.presentingComplaints=t,[{label:"",value:"",other:{columns:["Group","Presenting complaints"],rows:t}}]},async checkIfWeightLossIsControlled(e){if(this.lostTenPercentBodyWeight&&`${e.label}`.match(/malnutrition/i)&&`${e.value}`.match(/no/i)){const t=await B("Recommendation",`Patient's weight has dropped by ${this.weightLossPercentageNum}% , is this controlled weight loss??`,"Please verify",[{name:"Confirm weight loss",slot:"start",color:"success"},{name:"Confirm controlled",slot:"end",color:"primary"}]);e.value="Confirm weight loss"===t?"Yes":"No"}},getTBSymptoms(e){const t=D.getConceptsByCategory("tb_symptom",!0).map((({name:e})=>e));return this.getOptions([...t],e)},getFields(){return[{id:"on_tb_treatment",helpText:"On TB Treatment?",type:R.TT_SELECT,validation:e=>L.required(e),computedValue:e=>({tag:"consulation",obs:this.complaintsService.buildValueCoded("TB treatment",e.value)}),options:()=>this.yesNoOptions()},{id:"tb_side_effects",helpText:"TB Associated symptoms",type:R.TT_MULTIPLE_YES_NO,init:async()=>{const e=await this.patient.getWeightHistory();return this.weightLossPercentageNum=this.patient.getWeightLossPercentageFromTrail(e),this.lostTenPercentBodyWeight=Number(this.weightLossPercentageNum)>=10,!0},onValue:async e=>(await this.checkIfWeightLossIsControlled(e),!0),validation:e=>this.validateSeries([()=>L.required(e),()=>L.anyEmpty(e)]),condition:e=>e.on_tb_treatment.value.match(/no/i),options:(e,t)=>this.getTBSymptoms(t),computedValue:e=>({tag:"consulation",obs:e.map((async e=>({...await this.complaintsService.buildValueCoded("Routine TB Screening",e.label),child:[await this.complaintsService.buildValueCoded(e.label,e.value)]})))})},{id:"triage_complaints",helpText:"Triaging Complaints",condition:()=>this.hasTriageComplaints,type:R.TT_TABLE_VIEWER,options:()=>this.buildResults(),config:{hiddenFooterBtns:["Clear"]}},{id:"complaints",helpText:"Presenting Complaints",type:R.TT_COMPLAINTS_PICKER,validation:e=>L.required(e),computedValue:e=>({tag:"complaints",obs:e.filter((e=>!/other (specify)/i.test(e.label))).map((async e=>({...await this.complaintsService.buildValueCoded("Presenting complaint",e.other.parent),child:[await this.complaintsService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]})))}),config:{hiddenFooterBtns:[this.showRadiologyOdersBtn()],footerBtns:[{name:"Lab Order",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchOrderSelection(),visibleOnStateChange:e=>1===e.index},{name:this.radiologyBtnName,size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchRadiologyOrderSelection(),visibleOnStateChange:e=>1===e.index}]}},{id:"other_complaints",helpText:"Other Complaints",type:R.TT_TEXT,condition:e=>e.complaints.some((e=>"Other (specify)"===e.label&&e.isChecked)),computedValue:async e=>({tag:"complaints",obs:{...await this.complaintsService.buildValueCoded("Presenting complaint","Other"),child:[await this.complaintsService.buildValueText("Other",e.label)]}})},{id:"all_presenting_complaints",helpText:"Summary",condition:()=>this.presentingComplaints.length>0,type:R.TT_SUMMARY,options:e=>this.buildSummaryResults(e),config:{hiddenFooterBtns:["Clear"]}}]},showRadiologyOdersBtn(){return this.isPacsEnabled?"":this.radiologyBtnName},buildSummaryResults(e){const t=e.complaints.map((e=>({label:"OPD Complaints",value:e.label}))),i=this.presentingComplaints.map((e=>({label:"Triaging Complaints",value:e[1]})));return t.concat(i)}}});e("default",y(M,[["render",function(e,t,i,a,n,s){const o=b("his-standard-form"),l=b("ion-page");return v(),V(l,null,{default:w((()=>[C(o,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit,skipSummary:!0},null,8,["cancelDestinationPath","fields","onFinishAction"])])),_:1})}]]))}}}));
