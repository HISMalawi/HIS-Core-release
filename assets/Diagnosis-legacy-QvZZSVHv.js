System.register(["./HisStandardForm-legacy-DMJkhfrq.js","./index-legacy-X--GYU37.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./useEncounter-legacy-C-vUvR11.js","./commons-legacy-DLAvZBLU.js","./TouchScreenForm-legacy-C_f8Ho2H.js","./ToolbarMediumCard-legacy-CdhT4OJW.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-1het9QhE.js","./isEmpty-legacy-CJg3TOXI.js","./encounter_guidelines-legacy-wNYbMa3T.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,a){"use strict";var t,n,s,i,o,l,c,u,r,g,d,y,m,p,T,w,b,v,_,f;return{setters:[e=>{t=e.H},e=>{n=e.b4,s=e.aS,i=e.d,o=e.K,l=e.aU,c=e.V,u=e.ab,r=e.o,g=e.c,d=e.w,y=e.b,m=e.cl,p=e.I,T=e.S,w=e.n},e=>{b=e.F},e=>{v=e.u},e=>{_=e.a,f=e.r},null,null,null,null,null,null,null],execute:function(){class a extends n{constructor(e,a){super(e,41,a)}static async getDiagnosis(e="",a=1,t=10){const i=s.getConceptID("Qech outpatient diagnosis list");return n.getJson("diagnosis",{id:i,name:e,page:a,page_size:t})}}class h extends n{constructor(e,a){super(e,105,a)}}e("default",i({__name:"Diagnosis",setup(e){let n,s;const i=o("No"),j=o([]),{goToNextTask:D,patientDashboardUrl:E}=v(((e,t)=>{l.getLatestMalariaTestResult(t).then((e=>i.value=e)),n=new h(t,e),s=new a(t,e),j.value=[C("Primary"),C("Secondary"),{id:"clinical_notes",helpText:"Clinical notes",type:b.TT_TEXT,computedValue:e=>u.isEmpty(e)?null:{tag:"notes",obs:n.buildValueText("Clinical notes construct",e.value)}}]}));async function x(e,a){await s.createEncounter();const t=await f({...a,obs_datetime:T.getSessionDate()},"diagnosis");await s.saveObservationList(t);const i=await f({...a},"notes");u.isEmpty(i)||(await n.createEncounter(),await n.saveObservationList(i)),D()}function C(e){return{id:`${e.toLowerCase()}_diagnosis`,helpText:`${e} Diagnosis`,type:b.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:a=>"Primary"===e?c.required(a):null,options:async(e,t="",n=1,s=10)=>{const i=await a.getDiagnosis(t,n,s);return _(i,"name","concept_id")},beforeNext:async e=>await async function(e){return!e.some((({label:e})=>/Malaria/i.test(e)))||"Positive"===i.value||await w(`Patient has ${i.value} malaria test result. Do you want to continue?`)}(e),computedValue:a=>({tag:"diagnosis",obs:a.map((({value:a})=>s.buildValueCoded(`${e} Diagnosis`,a)))}),config:{isFilterDataViaApi:!0,showKeyboard:!0}}}return(e,a)=>(r(),g(m(p),null,{default:d((()=>[y(t,{cancelDestinationPath:m(E),fields:j.value,onFinishAction:x},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
