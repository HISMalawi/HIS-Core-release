import{bI as n,d as a,ab as o,ac as r,a8 as c,ad as d,u as l,v as p}from"./index-C_BWP2R5.js";import{H as h}from"./HisStandardForm-CilKwO8R.js";import{_ as m}from"./EncounterMixin.vue_vue_type_script_lang-CU-MbuMM.js";import"./encounter_guidelines-BDQiAe6-.js";import"./GuidelineEngine-D6V1_Znr.js";class u extends n{constructor(t,s){super(t,105,s)}}const f=a({mixins:[m],components:{HisStandardForm:h},data:()=>({service:{}}),watch:{ready:{async handler(e){e&&(this.service=new u(this.patientID,this.providerID),this.fields=[this.notesField()])},immediate:!0}},methods:{async onFinish(e,t){await this.service.createEncounter(),await this.service.saveObservationList(await this.resolveObs(t)),this.nextTask()},notesField(){return{id:"noted",helpText:"Clinical Notes",type:o.TT_NOTE,validation:e=>r.required(e),computedValue:e=>({obs:this.service.buildValueText("Notes",e.value)})}}}});function v(e,t,s,_,F,T){const i=d("his-standard-form");return l(),p(i,{fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const N=c(f,[["render",v]]);export{N as default};
