System.register(["./HisStandardForm-legacy-CmEkJw1V.js","./patient_diagnosis_service-legacy-DhYMf8ZA.js","./index-legacy-DSKrJPb4.js","./useEncounter-legacy-cWgDAB8I.js","./useLabResultsManager-legacy-BoiLTqA2.js","./commons-legacy-BB-uL7vP.js","./isEmpty-legacy-B4nQFqOP.js","./encounter_guidelines-legacy-Cub79fhD.js","./GuidelineEngine-legacy-KsvQuFdF.js","./lab_order_service-legacy-BWawRFO8.js"],(function(e,a){"use strict";var i,t,s,n,o,l,c,r,u,d,g,y,p,m,b,_;return{setters:[e=>{i=e.H},e=>{t=e.P},e=>{s=e.bT,n=e.d,o=e.r,l=e.ai,c=e.aj,r=e.aP,u=e.a,d=e.c,g=e.u,y=e.S,p=e.ao},e=>{m=e.u},e=>{b=e.u},e=>{_=e.r},null,null,null,null],execute:function(){class a extends s{constructor(e,a){super(e,105,a)}}e("default",n({__name:"Diagnosis",setup(e){let s,n;const T=o("No"),v=o([]),E=o(Math.random()),{patientDashboardUrl:w,goToNextTask:h}=m((async(e,i)=>{s=new a(i,e),n=new t(i,e);const{getLabFields:o}=b(i,e,E);v.value=[...o(!0),{id:"primary_diagnosis",helpText:"Select primary diagnosis",type:l.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:e=>c.required(e),options:async(e,a="",i=1,s=10)=>f(await t.getDiagnosis(a,i,s)),beforeNext:async e=>await S(e),computedValue:e=>({tag:"diagnosis",obs:e.map((({other:e})=>n.buildValueCodedFromConceptId("Primary diagnosis",e)))}),summaryMapValue:({value:e})=>({value:e,label:"Primary diagnosis"}),config:{isFilterDataViaApi:!0,showKeyboard:!0}},{id:"secondary_diagnosis",helpText:"Select secondary diagnosis",type:l.TT_INFINITE_SCROLL_MULTIPLE_SELECT,options:async(e,a="",i=1,s=10)=>f(await t.getDiagnosis(a,i,s)),beforeNext:async e=>await S(e),computedValue:e=>!r.isEmpty(e)&&{tag:"diagnosis",obs:e.map((({other:e})=>n.buildValueCodedFromConceptId("Secondary diagnosis",e)))},summaryMapValue:({value:e})=>({value:e,label:"Secondary diagnosis"}),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"clinical_notes",helpText:"Clinical notes",type:l.TT_TEXT,computedValue:e=>e&&{tag:"notes",obs:s.buildValueText("Clinical notes construct",e.value)}}]}));async function L(e,a){await n.createEncounter();const i=await _({...a,obs_datetime:y.getSessionDate()},"diagnosis");await n.saveObservationList(i);const t=await _({...a},"notes");r.isEmpty(t)||(await s.createEncounter(),await s.saveObservationList(t)),h()}function f(e){return r.isEmpty(e)?[]:e.map((e=>({label:e.name,value:e.name,other:e.concept_id,isChecked:!1}))).sort(((e,a)=>e.label<a.label?-1:e.label>a.label?1:0))}async function S(e){return!e.find((e=>"Malaria"===e.label))||"Positive"===T.value||await p(`Patient has ${T.value} malaria test result. Do you want to continue?`)}return(e,a)=>(u(),d(i,{key:E.value,cancelDestinationPath:g(w),fields:v.value,onFinishAction:L},null,8,["cancelDestinationPath","fields"]))}}))}}}));
