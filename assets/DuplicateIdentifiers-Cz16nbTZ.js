import{R as l}from"./TableReportTemplate-BuIqEVhG.js";import{F as p}from"./dynamic-import-helper-Bsjrd6Ro.js";import{d as c,L as t,s as m,V as u,H as f,O as o,P as h,q as g,_ as y,r as v,o as w,c as D}from"./index-BCfs_J-V.js";import{I as n}from"./identifier_service-DQabTii-.js";import{D as T}from"./DrillTableModal-eZxwLCed.js";import"./Export-Ckt7Z8Mq.js";import"./HisStandardForm-DASCGMaQ.js";import"./TouchScreenForm-BEQyavf9.js";import"./ToolbarMediumCard-DFqt8bLl.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-CUJ1kut7.js";import"./ReportErrors-CN9j2LPZ.js";const I=c({components:{ReportTemplate:l},data:()=>({service:{},dde:{},title:"Duplicate Identifiers",fields:[],rows:[],columns:[[t.thTxt("Identifier"),t.thTxt("Count"),t.thTxt("View"),t.thTxt("Resolve")]]}),async created(){this.fields=this.getFormFields(),this.dde=new m,await this.dde.loadDDEStatus()},methods:{async onPeriod({identifier:e}){const s=parseInt(e.value.toString());this.title=e.label+" Duplicates",this.service=new n,this.service.setIdentifierType(s),this.rows=await this.getRows()},getFormFields(){return[{id:"identifier",helpText:"Select Identifier type",type:p.TT_SELECT,validation:e=>u.required(e),options:async()=>(await n.getIdentifierTypes()).map(e=>({label:e.name,value:e.patient_identifier_type_id}))}]},toDate(e){return f.toStandardHisDisplayFormat(e)},async drillDuplicates(e){(await o.create({component:T,cssClass:"custom-modal",componentProps:{title:"Persons using identifier ".concat(e),columns:["Given name","Family name","Gender","Birth date","Action"],onRows:async()=>(await this.service.getPatientsByIdentifier(e)).map(a=>{try{const i=new h(a);return[i.getGivenName(),i.getFamilyName(),i.getGender(),this.toDate(i.getBirthdate()),{type:"button",name:"View",action:()=>{o.dismiss().then(()=>{this.$router.push("/patient/dashboard/".concat(i.getID()))})}}]}catch(i){return g("Unable to load patient details"),["N/A","N/A","N/A","N/A","N/A"]}})}})).present()},async getRows(){return(await this.service.getDuplicateIndentifiers()).map(e=>[t.td(e.identifier),t.td(e.count),t.tdBtn("Select",()=>this.drillDuplicates(e.identifier)),t.tdBtn("Resolve",()=>{this.$router.push("/npid/duplicates/".concat(e.identifier))},{event:{disabled:this.service.getIdentifierType()!=3}},"danger")])}}});function _(e,s,r,a,i,C){const d=v("report-template");return w(),D(d,{title:e.title,period:e.period,rows:e.rows,fields:e.fields,columns:e.columns,canExportCsv:!1,canExportPDf:!1,onReportConfiguration:e.onPeriod},null,8,["title","period","rows","fields","columns","onReportConfiguration"])}const V=y(I,[["render",_]]);export{V as default};
