System.register(["./index-legacy-B-IGLekl.js","./HisStandardForm-legacy-zrsmj5en.js","./useEncounter-legacy-Bw69ARkZ.js","./commons-legacy-BJFuFpO6.js","./identifier_service-legacy-Du7lacAG.js","./encounter_guidelines-legacy-By_-ThMW.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var i,n,a,r,u,l,s,o,c,d,p,y,m,T,v,b,I,f,g,$,_,N,x,B,D,E,P,w,R;return{setters:[e=>{i=e.d,n=e.bm,a=e.r,r=e.bQ,u=e.bV,l=e.am,s=e.ex,o=e.a9,c=e.bl,d=e.bU,p=e.aP,y=e.d8,m=e.aN,T=e.O,v=e.es,b=e.aa,I=e.u,f=e.v,g=e.w,$=e.x,_=e.y,N=e.ey,x=e.as,B=e.a5},e=>{D=e.H},e=>{E=e.u},e=>{P=e.m,w=e.r},e=>{R=e.I},null,null],execute:function(){e("default",i({__name:"Registration",setup(e){const t=n.getActiveApp(),i=a([]),U=new r(-1,u.TB_REGISTRATION),q=new R,A=a(),M=a(""),h=l();function j(e){const[t,i]=`${e}`.split("/");if(i)return`${M.value}${t}/${i}`;const[n]=`${U.date}`.split("-");return`${M.value}${t}/${n.trim()}`}const O={"Multi drug resistance treatment":{type:s.MDR,label:"Patient DR TB Number",indexID:"DR TB Number",concept:"MDR_NUMBER"},"Tuberculosis Preventive Treatment (TPT)":{type:s.IPT,label:"Patient IPT Number",indexID:"IPT Number",concept:"TB_NUMBER"},"Currently in treatment":{type:s.TB,label:"Patient TB Number",indexID:"TB Number",concept:"TB_NUMBER"},DEFAULT:{type:s.TB,label:"Patient TB Number",indexID:"TB Number",concept:"TB_NUMBER"}},{goToNextTask:C,patientDashboardUrl:S,patientId:F}=E(((e,n,a,r)=>{U.patientID=n,U.providerID=e,i.value=[(()=>{let e={};const t=Object.values(O).find((e=>e.indexID===h.query.type));return{id:"reassign",helpText:`Reassign ${h.query.type}: ${h.query.id}`,proxyID:"patientIdentifier",type:o.TT_NUMBER,init:async()=>{e=await c.getProgramInformation(n),!h.query.id&&d.isOnTreatment(e.current_outcome)&&`${e.tb_number}`.split("/").length>0&&await p("Caution!",`Client is currently using program number ${e.tb_number}`,`Current outcome is ${e.current_outcome} updated on ${y(e.current_outcome_date)}`,[{name:"Ok",color:"primary",slot:"start"}]);const[i,a]=`${h.query.id}`.split("/");return q.setIdentifierType(t?.type),M.value=`${i}/${a}/`,!0},beforeNext:async e=>{const t=j(`${e.value}`),i=await q.getPatientsByIdentifier(t);return!!m.isEmpty(i)||(T(`${t} is already in use!!`),!1)},computedValue:e=>({obs_datetime:U.date,value_text:j(`${e.value}`),concept_id:v(t?.concept)}),condition:()=>h.query.reassign,validation:e=>b.required(e)}})(),{id:"new",helpText:"Identifier:",proxyID:"patientIdentifier",type:o.TT_NUMBER,init:async()=>(O[r.outcome]?A.value=O[r.outcome]:A.value=O.DEFAULT,q.setIdentifierType(A.value?.type),M.value=await(t.programPatientIdentifiers[A.value?.indexID]?.prefix()),!0),beforeNext:async e=>{const t=j(`${e.value}`),i=await q.getPatientsByIdentifier(t);return!!m.isEmpty(i)||(T(`${t} is already in use!!`),!1)},computedValue:e=>({obs_datetime:U.date,value_text:j(`${e.value}`),concept_id:v(A.value?.concept)}),condition:e=>!e.reassign?.value,validation:e=>b.required(e),dynamicHelpText:()=>A.value?.label},{id:"idSummary",helpText:"Identifier",type:o.TT_TEXT_BANNER,options:e=>P([`${A.value?.label}: <br/> <b>${j(e.patientIdentifier.value)}</b>`])}]}));async function V(e,t){await U.createEncounter(),await U.saveObservationList(await w(t)),e.new?await N.create(F.value,q.identifierType,j(e.patientIdentifier.value)):await N.update(parseInt(`${h.query.reassign}`),j(e.patientIdentifier.value)),await d.printTBNumber(U.patientID),x.invalidate("ACTIVE_PATIENT"),C()}return(e,t)=>(I(),f(_(B),null,{default:g((()=>[$(D,{cancelDestinationPath:_(S),onFinishAction:V,fields:i.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
