import{d as m,K as n,N as v,o as D,c as g,w as _,b as u,cg as f,cl as b,cB as o,t as y,q as C,cj as h,I as x}from"./index-DsVZSn5I.js";import{v as q}from"./TableView-eB90pPNM.js";import{S as w}from"./stock_report_service-Bd1GzxDh.js";import{D as R}from"./ReportDateSelectionPrompt-_rdzB85X.js";import"./Export-DXkekofu.js";const L=m({__name:"ClinicDiscrepancyReport",setup(S){const t=n([]),i=n(""),r=n(!1),a=new w,p=[[{label:"Drug Count Date",ref:"verification_date",value:e=>b(e.verification_date)},{label:"Drug Name",ref:"short_name"},{label:"Expected Count",ref:"expected_quantity",value:e=>o(e.expected_quantity)},{label:"Verified Count",ref:"current_quantity",value:e=>o(e.current_quantity)},{label:"Difference",ref:"difference",value:e=>o(e.difference)},{label:"Reason",ref:"variance_reason"}]],s=async()=>{if(!(a.startDate&&a.endDate))return y("Start date and end date required!");r.value=!0,t.value=[];try{t.value=await a.getDiscrepancyReport()}catch(e){C("Unable to generate report!")}r.value=!1},l=()=>R({onFinish:(e,c,d)=>{i.value="Period (".concat(d,")"),a.startDate=e,a.endDate=c,s()}});return v(()=>!t.value.length&&l()),(e,c)=>(D(),g(f(x),null,{default:_(()=>[u(f(h),{"is-open":r.value,message:"Please wait..."},null,8,["is-open"]),u(q,{title:"Clinic Discrepancy Report","report-prefix":"Clinic",subtitle:i.value,columns:p,columnData:t.value,rowsPerPage:20,onConfigure:l,onRefresh:s},null,8,["subtitle","columnData"])]),_:1}))}});export{L as default};
