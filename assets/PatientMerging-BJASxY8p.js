import{d as R,_ as V,o as p,x as k,A as n,u,v as c,ay as b,I as T,bl as q,f as K,l as L,aq as U,ar as j,m as G,j as O,bm as W,ak as J,k as Q,bn as X,ae as g,n as Y,P as C,bk as Z,aV as x,q as ee,an as te,r as o,c as d,w as i,b as a,y as P,B as w,z as D}from"./index-BHR-Bvru.js";const ne=R({props:{patient:{type:Object,required:!0},isActive:{type:Boolean}},computed:{stateClass(){return{"active-card-color":this.isActive,"inactive-card-color":!this.isActive}}}});function ie(e,t,r,v,f,_){return p(),k("div",{class:b(["his-card clickable",e.stateClass])},[n("li",null,[n("ul",null,[u(" NPID : "),n("b",null,c(e.patient.npid),1)]),n("ul",null,[u(" Arv# : "),n("b",null,c(e.patient.arvNum),1)]),n("ul",null,[u(" Name : "),n("b",null,c(e.patient.name),1)]),n("ul",null,[u(" Birth date : "),n("b",null,c(e.patient.birthdate),1)]),n("ul",null,[u(" Gender : "),n("b",null,c(e.patient.gender),1)]),n("ul",null,[u(" Home District : "),n("b",null,c(e.patient.homeDistrict),1)]),n("ul",null,[u(" Home Village : "),n("b",null,c(e.patient.homeVillage),1)]),n("ul",null,[u(" Current District : "),n("b",null,c(e.patient.currentDistrict),1)]),n("ul",null,[u(" Current Village : "),n("b",null,c(e.patient.currentVillage),1)])])],2)}const ae=V(ne,[["render",ie],["__scopeId","data-v-aae064fb"]]),se=R({components:{PatientCard:ae,IonPage:T,IonInput:q,IonButton:K,IonContent:L,IonRow:U,IonCol:j,IonFooter:G,IonHeader:O,ViewPort:W,HisKeyboard:J,IonTitle:Q},data:()=>({inputA:"",inputB:"",isSubmitting:!1,inputFocus:"inputA",inputASearchResults:[],inputBSearchResults:[],activeInputACard:{},keyboard:[X,[["","Hide"],["Space","Delete"],["inputA","inputB"],["Search","Clear"]]]}),computed:{canMerge(){return!g.isEmpty(this.activeInputACard)&&!g.isEmpty(this.inputBSearchResults.filter(e=>e.isChecked))}},methods:{async onMerge(){if(await Y("Are you sure you want to merge selected Persons?")){try{this.isSubmitting=!0;const e=await C.mergePatients({primary:{patient_id:this.activeInputACard.id,doc_id:this.activeInputACard.docID},secondary:this.inputBSearchResults.filter(r=>r.isChecked).map(r=>({patient_id:r.id,doc_id:r.docID}))});await new Z(e.patient_id).printNidLbl(),this.inputBSearchResults=this.inputBSearchResults.filter(r=>!r.isChecked);const t=await x.getNextTaskParams(e.patient_id);this.$router.push(t.name?t:"/patient/dashboard/".concat(e.patient_id))}catch(e){ee("".concat(e))}this.isSubmitting=!1}},onPrimaryPatient(e){this.inputBSearchResults.forEach(t=>{t.id===e.id&&(this.inputBSearchResults[t.index].isChecked=!1)}),this.activeInputACard=e},onSecondaryPatient(e){if(e.isChecked)return this.inputBSearchResults[e.index].isChecked=!1;!g.isEmpty(this.activeInputACard)&&e.id!=this.activeInputACard.id&&(this.inputBSearchResults[e.index].isChecked=!0)},async searchPatient(e){const[t,r]=e.split(" ");return(await C.search({given_name:t,family_name:r})).map((f,_)=>{const s=new C(f);return{index:_,id:s.getID(),name:s.getFullName(),docID:s.getDocID(),birthdate:s.getBirthdate(),arvNum:s.getArvNumber(),npid:s.getNationalID(),gender:s.getGender(),homeDistrict:s.getHomeDistrict(),homeVillage:s.getHomeVillage(),currentDistrict:s.getCurrentDistrict(),currentVillage:s.getCurrentVillage(),isChecked:!1}})},async keypress(e){if(!this.inputFocus)return;let t=te(e,this[this.inputFocus]);t.match(/hide/i)?this.inputFocus="":t.match(/search/i)?(t=t.replace("Search",""),this.inputFocus==="inputA"?(this.inputASearchResults=await this.searchPatient(t),this.activeInputACard={}):this.inputBSearchResults=await this.searchPatient(t),this.inputFocus=""):t.match(/inputA/i)?this.inputFocus="inputA":t.match(/inputB/i)?this.inputFocus="inputB":t.match(/clear/i)?(this[this.inputFocus]="",this.inputFocus==="inputA"?this.inputASearchResults=[]:this.inputBSearchResults=[]):this[this.inputFocus]=t}}}),oe={class:"result-section"},le={class:"result-section"};function ue(e,t,r,v,f,_){const s=o("ion-title"),y=o("ion-toolbar"),F=o("ion-header"),A=o("ion-input"),h=o("ion-col"),S=o("ion-row"),B=o("patient-card"),N=o("view-port"),$=o("his-keyboard"),H=o("ion-content"),I=o("ion-button"),E=o("ion-footer"),M=o("ion-page");return p(),d(M,null,{default:i(()=>[a(F,null,{default:i(()=>[a(y,null,{default:i(()=>[a(s,{class:"his-lg-text"},{default:i(()=>[u("Merge Clients")]),_:1})]),_:1})]),_:1}),a(H,null,{default:i(()=>[a(N,null,{default:i(()=>[a(S,null,{default:i(()=>[a(h,null,{default:i(()=>[a(A,{onClick:t[0]||(t[0]=l=>e.inputFocus="inputA"),placeholder:"Primary patient",class:b(["input_display",{"input-focused":e.inputFocus==="inputA"}]),modelValue:e.inputA,"onUpdate:modelValue":t[1]||(t[1]=l=>e.inputA=l)},null,8,["modelValue","class"])]),_:1}),a(h,null,{default:i(()=>[a(A,{onClick:t[2]||(t[2]=l=>e.inputFocus="inputB"),class:b(["input_display",{"input-focused":e.inputFocus==="inputB"}]),placeholder:"Secondary patient",modelValue:e.inputB,"onUpdate:modelValue":t[3]||(t[3]=l=>e.inputB=l)},null,8,["modelValue","class"])]),_:1})]),_:1}),a(S,null,{default:i(()=>[a(h,null,{default:i(()=>[n("div",oe,[(p(!0),k(w,null,P(e.inputASearchResults,(l,m)=>(p(),d(B,{onClick:z=>e.onPrimaryPatient(l),key:m,patient:l,isActive:e.activeInputACard.index===m},null,8,["onClick","patient","isActive"]))),128))])]),_:1}),a(h,null,{default:i(()=>[n("div",le,[(p(!0),k(w,null,P(e.inputBSearchResults,(l,m)=>(p(),d(B,{onClick:z=>e.onSecondaryPatient(l),key:m,patient:l,isActive:l.isChecked},null,8,["onClick","patient","isActive"]))),128))])]),_:1})]),_:1})]),_:1}),e.inputFocus?(p(),d($,{key:0,kbConfig:e.keyboard,onKeyPress:e.keypress},null,8,["kbConfig","onKeyPress"])):D("",!0)]),_:1}),a(E,null,{default:i(()=>[a(y,{color:"dark"},{default:i(()=>[a(I,{color:"danger",size:"large","router-link":"/"},{default:i(()=>[u(" Cancel ")]),_:1}),e.canMerge?(p(),d(I,{key:0,disabled:e.isSubmitting,color:"success",size:"large",slot:"end",onClick:e.onMerge},{default:i(()=>[u(" Merge ")]),_:1},8,["disabled","onClick"])):D("",!0)]),_:1})]),_:1})]),_:1})}const ce=V(se,[["render",ue],["__scopeId","data-v-d455bfc1"]]);export{ce as default};
