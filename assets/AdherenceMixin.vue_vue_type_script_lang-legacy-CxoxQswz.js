System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./index-legacy-JGk_dRVc.js","./htn_service-legacy-CPECSE04.js","./EncounterMixin.vue_vue_type_script_lang-legacy-DrW6yd3p.js"],(function(e,t){"use strict";var a,r,s,i,n,o,d,c,l,u,h;return{setters:[e=>{a=e.F},e=>{r=e.b5,s=e.ab,i=e.a$,n=e.H,o=e.d,d=e.t,c=e.R,l=e.V},e=>{u=e.B},e=>{h=e._}],execute:function(){class t extends r{lastDrugs;lastReceiptDate;constructor(e,t){super(e,68,t),this.lastDrugs=[],this.lastReceiptDate=""}async loadPreviousDrugs(e=!1){const t=new Date(this.date);t.setDate(t.getDate()-1);const a=e=>n.toStandardHisFormat(e),i=await r.getJson(`patients/${this.patientID}/drugs_received`,{date:a(t)});if(!s.isEmpty(i)){this.lastReceiptDate=i.reduce(((e,t)=>!e||new Date(a(t.order.start_date))>new Date(e)?a(t.order.start_date):e),null);const t=u.htnDrugReferences().map((e=>e.drug_id));if(this.lastDrugs=i.filter((e=>!t.includes(e.drug.drug_id)&&a(e.order.start_date)===this.lastReceiptDate)),e){const e=await this.getPreviousDrugPillCount()||{};this.lastDrugs=this.lastDrugs.map((t=>(e[t.drug.drug_id]&&t.quantity&&(t.quantity+=e[t.drug.drug_id]),t)))}}}getReceiptDate(){return this.lastReceiptDate}getLastDrugs(){return this.lastDrugs}receivedDrugsBefore(){return!s.isEmpty(this.lastDrugs)}buildPillCountObs(e,t){return this.buildValueNumber("Number of tablets brought to clinic",t,null,e)}getPreviousDrugPillCount(){return r.getJson("last_drugs_pill_count",{patient_id:this.patientID,program_id:this.programID,date:this.lastReceiptDate})}async buildAdherenceObs(e,t,a){return{concept_id:await r.getConceptID("Drug adherence",!0),value_numeric:a,value_drug:t,value_modifier:"%",order_id:e,person_id:this.patientID,obs_datetime:r.getSessionDate()}}isAdherenceGood(e){return e>=95&&e<=105}calculateAdherence(e,t,a){return Math.round(100*(e-t)/(e-a))}calculateExpected(e,t,a,r){const s="QW"===r?"week":"day";return e-this.calcTimeElapsed(a,s)*parseFloat(t.toString())}calcTimeElapsed(e,t){return i(n.toStandardHisFormat(this.date)).diff(n.toStandardHisFormat(e),t)+1}calculateUnaccountedOrMissed(e,t){const a=parseFloat(e)-parseFloat(t);return a<0?-1*a+" missed":a+" unacc"}}e("_",o({mixins:[h],data:()=>({adherence:{},drugObs:[],askReasonForPoorAdherence:!1,calculationAgreementObs:[]}),methods:{async saveAdherence(){await this.adherence.createEncounter();const e=await Promise.all([...this.drugObs,...this.calculationAgreementObs]);if(!(await this.adherence.saveObservationList(e)))return d("Unable to save patient observations")},buildAdherenceReport(e){const t=this.adherence.getReceiptDate(),a=this.adherence.calcTimeElapsed(t,"day"),r=` Last visit: ${n.toStandardHisDisplayFormat(t)} \n                (${a} Days Elapsed)`,s=[],i=[r],o=[["Prescription"],["Tabs given"],["Tabs per"],["Tabs remaining"],["Expected"],["Actual (counted)"],["Adherence"],["Doses missed/ Unaccounted for"],["Doses consumed"],["Art Adherence"]];return e.forEach(((e,t)=>{const a=this.formatFrequency(e.frequency),r=this.calcPillsExpected(e),n=this.adherence.calculateAdherence(e.quantity,e.pillsBrought,r),d=this.adherence.isAdherenceGood(n)?"Good adherence":"Explore problem",c=this.adherence.calculateUnaccountedOrMissed(r,e.pillsBrought);i.push(e.drug.name),o[0].push(""),o[1].push(e.quantity),o[2].push(`${e.equivalent_daily_dose} <b>${a}</b>`),o[3].push(""),o[4].push(r<0?0:r),o[5].push(e.pillsBrought),o[6].push(""),o[7].push(c),o[8].push(`${n}%`),o[9].push(d),s.push({index:t+1,row:9,class:d.match(/good/i)?"adherence-txt-good":"adherence-txt-bad"})})),[{label:"Selected Medication",value:"Table",other:{columns:i,rows:o,rowColors:[{indexes:[0,3,6],class:"adherence-col-bg"}],cellColors:s}}]},formatFrequency:e=>`${e}`.match(/qod/i)?"QOD":`${e}`.match(/weekly/i)?"QW":e,calcPillsExpected(e){return this.adherence.calculateExpected(e.quantity,e.equivalent_daily_dose,e.order.start_date,this.formatFrequency(e.frequency))},getAdherenceFields(e=!1){return[{id:"pills_brought",helpText:"Pills remaining (brought to clinic)",type:a.TT_ADHERENCE_INPUT,init:async()=>(this.adherence=new t(this.patientID,this.providerID),await this.adherence.loadPreviousDrugs(await c.get("ASK_HANGING_PILLS")),!0),condition:()=>!e||this.adherence.receivedDrugsBefore(),validation:e=>l.required(e)?["No drugs available"]:e.map((e=>""===e.value)).some(Boolean)?["Some values are missing"]:null,unload:async e=>{this.drugObs=[],e.forEach((async e=>{const{drug:t,order:a}=e.other,r={...e.other,pillsBrought:e.value},s=this.adherence.calculateAdherence(r.quantity,r.pillsBrought,this.calcPillsExpected(r));this.drugObs.push(this.adherence.buildAdherenceObs(a.order_id,t.drug_id,s)),this.drugObs.push(this.adherence.buildPillCountObs(a.order_id,e.value)),this.askReasonForPoorAdherence||(this.askReasonForPoorAdherence=!this.adherence.isAdherenceGood(r))}))},options:e=>s.isEmpty(e.pills_brought)?this.adherence.getLastDrugs().map((e=>({label:e.drug.name,value:"",other:{...e}}))):e.pills_brought},{id:"adherence_report",helpText:"ART adherence",type:a.TT_TABLE_VIEWER,condition:()=>!e||this.adherence.receivedDrugsBefore(),options:e=>this.buildAdherenceReport(e.pills_brought.map((e=>({...e.other,pillsBrought:e.value})))),config:{hiddenFooterBtns:["Clear"]}},{id:"agree_with_calculation",helpText:"Agree with adherence calculation",type:a.TT_SELECT,condition:()=>this.askReasonForPoorAdherence,validation:e=>l.required(e),unload:({value:e})=>{this.calculationAgreementObs=[this.adherence.buildValueCoded("Reason for poor treatment adherence",e)]},options:()=>[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]}]}}}))}}}));
