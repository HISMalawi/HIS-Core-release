import{d as w,U as i,ah as g,aw as _,b$ as T,aN as h,W as m,am as C,H as D,ad as o,ae as s,bw as v,R as f,aa as A,c as b,af as S,a as F}from"./index-CMZASHAR.js";import{H as U}from"./HisStandardForm-BCjM4-bc.js";const E=w({components:{HisStandardForm:U},data:()=>({formKey:0,fields:[],activity:"",presets:{},programs:{},userData:{},fieldComponent:"",isSessionPasswordChange:!1,activeField:"",form:{}}),watch:{$route:{async handler(e){if(!e)return;const{query:t}=e;["edit","add"].includes(t.activity)?this.activity=t.activity:this.activity="add",t.update_password&&(this.userData=this.toUserData(await i.getCurrentUser()),this.isSessionPasswordChange=!0,this.activeField="new_password",this.fieldComponent=this.activeField),this.programs=this.removeObjectsByApplicationNames(i.getAvailableApps(),["CRVS"]),this.fields=this.getFields()},immediate:!0,deep:!0}},methods:{async onFinish(e,t){try{switch(this.activity){case"add":await this.create(t),this.activity="edit";break;case"edit":if(await this.update(t),this.isSessionPasswordChange){const a=new g;a.sessionDate=await i.getApiDate(),await a.resetUserPasswordChangeCheck(),this.$router.push("/")}break}_.invalidate("PROVIDERS"),this.activeField="user_info",this.$nextTick(()=>this.fieldComponent=this.activeField),this.formKey+=1}catch(a){a instanceof T&&!h.isEmpty(a.errors)?m(a.errors):C("".concat(a))}},removeObjectsByApplicationNames(e,t){return e.filter(l=>!t.includes(l.applicationName))},async create(e){const{user:t}=await i.createUser(e);if(t)return this.userData=this.toUserData(t);throw"Unable to create new user, Possibly the user already exists or incorrect info was entered"},async update(e){const t=await i.updateUser(this.userData.id,e);if(t)return this.userData=this.toUserData(t);throw"Unable to update user, possibly server error or incorrect information entered"},getProgramName(e){const t=h.find(this.programs,{programID:e});return t?t.applicationName:""},mapToOption(e){return e.map(t=>({label:t,value:t}))},async getRoles(){return(await i.getAllRoles()).filter(e=>{try{return!this.userData.role.split(",").includes(e.role)}catch(t){return!0}}).map(e=>({label:e.role,value:e.role,other:e}))},toUserData(e){const t=e.person.names[0];return{id:e.user_id,given_name:t.given_name,family_name:t.family_name,username:e.username,role:e.roles.map(a=>a.role),created:D.toStandardHisDisplayFormat(e.date_created),status:e.deactivated_on?"Inactive":"Active",programs:e.programs.map(a=>a.program_id)}},editConditionCheck(e=[]){return this.activity==="edit"?e.includes(this.activeField):!0},toLcase(e){return e.value.toString().toLowerCase()},getFields:function(){return[{id:"select_user",helpText:"Select Username",type:o.TT_SELECT,condition:()=>this.activity==="edit"&&i.isAdmin(),validation:e=>s.required(e),unload:({other:e})=>this.userData=this.toUserData(e),options:async()=>(await i.getAllUsers()).map(t=>({label:t.username,value:t.user_id,other:t})),config:{showKeyboard:!0}},{id:"user_info",helpText:"User information",type:o.TT_TABLE_VIEWER,dynamicHelpText:()=>"User: ".concat(this.userData.username," | Added On: ").concat(this.userData.created),condition:()=>this.activity==="edit"&&i.isAdmin(),options:async(e,t,a)=>{const p=["Attributes","Values","Actions"],d=r=>({name:r==="Active"?"Deactivate":"Activate",type:"button",style:{width:"65%",fontWeight:"bold"},color:r==="Active"?"danger":"success",action:async()=>{try{r==="Active"&&(await i.deactivateUser(this.userData.id),this.userData.status="Inactive",a.rows[3]=["Status","Inactive",d("Inactive")],f("User has been deactivated",400)),r==="Inactive"&&(await i.activateUser(this.userData.id),this.userData.status="Active",a.rows[3]=["Status","Active",d("Active")],f("User has been activated",400))}catch(u){m("".concat(u))}}}),n=(r,u)=>({name:r,type:"button",color:"light",style:{fontWeight:"bold",width:"65%"},action:()=>{this.activeField=u,this.fieldComponent=this.activeField}}),c=[n("Add/Append Role","roles")];this.userData.role.length>1&&c.push(n("Remove Role","remove_roles"));const y=[["<b>Name</b>","".concat(this.userData.given_name," ").concat(this.userData.family_name),n("Edit Name","given_name"),""],["<b>Password</b>","*******",n("Change password","new_password"),""],["<b>Role</b>",this.userData.role.join("<br/>"),...c],["<b>Status</b>",this.userData.status,d(this.userData.status),""],["<b>Programs</b>",this.userData.programs.map(r=>this.getProgramName(r)).join("<br/>"),n("Edit Program","programs"),""]];return[{label:"",value:"",other:{columns:p,rows:y}}]},config:{hiddenFooterBtns:["Clear"],overrideDefaultFooterBtns:{nextBtn:{name:"Finish",onClick:()=>this.$router.back()}}}},{id:"given_name",helpText:"First name",type:o.TT_TEXT,computedValue:e=>e.value,defaultValue:()=>this.userData.given_name,condition:()=>this.editConditionCheck(["given_name"])&&i.isAdmin(),validation:e=>s.isName(e),options:async e=>{if(!e.given_name||e.given_name.value===null)return[];const t=await v.searchGivenName(e.given_name.value);return this.mapToOption(t)}},{id:"family_name",helpText:"Last name",type:o.TT_TEXT,computedValue:e=>e.value,defaultValue:()=>this.userData.family_name,validation:e=>s.isName(e),condition:()=>this.editConditionCheck(["given_name"])&&i.isAdmin(),options:async e=>{if(!e.family_name||e.family_name.value===null)return[];const t=await v.searchFamilyName(e.family_name.value);return this.mapToOption(t)}},{id:"roles",helpText:"Role",type:o.TT_SELECT,computedValue:e=>[e.value],condition:()=>this.editConditionCheck(["roles"])&&i.isAdmin(),validation:e=>s.required(e),options:()=>this.getRoles(),config:{showKeyboard:!0}},{id:"remove_roles",helpText:"Remove Roles",proxyID:"roles",type:o.TT_SELECT,validation:e=>s.required(e),condition:()=>this.editConditionCheck(["remove_roles"])&&i.isAdmin()&&this.activity==="edit",computedValue:e=>this.userData.role.filter(t=>t!=e.label),options:()=>this.mapToOption(this.userData.role),config:{showKeyboard:!0}},{id:"must_append_roles",helpText:"Would you like to append role?",type:o.TT_SELECT,computedValue:e=>e.label==="Yes",condition:()=>this.activity==="edit"&&this.editConditionCheck(["roles"])&&i.isAdmin(),defaultComputedOutput:()=>!1,validation:e=>s.required(e),options:()=>[{label:"Yes",value:"true"},{label:"No",value:"false"}]},{id:"programs",helpText:"Select Apps",type:o.TT_MULTIPLE_SELECT,condition:()=>i.isAdmin()&&this.editConditionCheck(["programs"]),validation:e=>s.required(e),computedValue:e=>e.map(t=>t.value),options:()=>this.programs.map(e=>{let t=!1;return this.activity==="edit"&&(t=this.userData.programs.includes(e.programID)),{label:e.applicationName,value:e.programID,isChecked:t}})},{id:"username",helpText:"Username",type:o.TT_TEXT,condition:()=>this.editConditionCheck(["nothing to see here"])&&i.isAdmin(),computedValue:e=>this.toLcase(e),validation:e=>s.validateSeries([()=>s.required(e),()=>s.hasLengthRangeOf(e,4,15)]),config:{casing:"lowercase"}},{id:"new_password",proxyID:"password",helpText:"New Password",type:o.TT_PASSWORD,computedValue:e=>this.toLcase(e),condition:()=>this.editConditionCheck(["new_password"]),validation:e=>s.validateSeries([()=>s.required(e)]),config:{inputType:"password"}},{id:"verify_password",proxyID:"password",helpText:"Confirm Password",type:o.TT_PASSWORD,computedValue:e=>this.toLcase(e),condition:()=>this.editConditionCheck(["new_password"]),validation:(e,t)=>s.validateSeries([()=>s.required(e),()=>{if(this.toLcase(t.verify_password)!=this.toLcase(t.new_password))return["New password does not match current password"]}]),config:{inputType:"password"}}]}}});function k(e,t,a,l,p,d){const n=S("his-standard-form");return F(),b(n,{key:e.formKey,fields:e.fields,skipSummary:!0,activeField:e.fieldComponent,onOnIndex:t[0]||(t[0]=c=>e.fieldComponent=""),onFinishAction:e.onFinish},null,8,["fields","activeField","onFinishAction"])}const I=A(E,[["render",k]]);export{I as default};
