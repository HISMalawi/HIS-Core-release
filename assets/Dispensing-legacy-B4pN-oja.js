System.register(["./HisStandardForm-legacy-DbOiuJqi.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./index-legacy-DgZ-kNry.js","./drug_order_service-legacy-DdPtRCG5.js","./useEncounter-legacy-DGpznVbh.js","./TouchScreenForm-legacy-DgN0xr5C.js","./ToolbarMediumCard-legacy-BnrK577U.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-Dz1OZJfn.js","./isEmpty-legacy-C5BV1v68.js","./_Set-legacy-BS31gyZk.js","./_setToArray-legacy-2bTt1uIx.js","./encounter_guidelines-legacy-09xzgRbO.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var r,n,a,s,i,o,u,d,l,c,g,y,p,D,m,h;return{setters:[e=>{r=e.H},e=>{n=e.F},e=>{a=e.b5,s=e.d,i=e.K,o=e.H,u=e.o,d=e.c,l=e.w,c=e.b,g=e.cl,y=e.I,p=e.t,D=e.n},e=>{m=e.D},e=>{h=e.u},null,null,null,null,null,null,null,null,null],execute:function(){class t extends a{drugHistory;currentDrugOrder;constructor(e,t){super(e,54,t),this.drugHistory=[],this.currentDrugOrder=[]}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(e,t){return[{drug_order_id:e,date:this.date,quantity:t}]}saveDispensations(e){return a.postJson("/dispensations",{dispensations:e,program_id:a.getProgramID()})}async voidOrder(e){return a.void(`/dispensations/${e}`,{})}async loadDrugHistory(){const e=await m.getDrugOrderHistory(this.patientID);e&&(this.drugHistory=e)}async loadCurrentDrugOrder(){const e=await m.getDrugOrders(this.patientID);e&&(this.currentDrugOrder=await Promise.all(e))}calcCompletePack(e,t){const r=e.barcodes.sort((function(e,t){return e.tabs-t.tabs}));if(0==r.length||0==t)return t;for(let s=0;s<=r.length-1;s++)if(parseInt(r[s].tabs)>=t)return r[s].tabs;const n=parseInt(r[0].tabs);let a=parseInt(r[r.length-1].tabs);for(;a<t;)a+=n;return a}}e("default",s({__name:"Dispensing",setup(e){let a;const s=i([]),{goToPatientDashboard:m,patientDashboardUrl:f}=h((async(e,r,i)=>{a=new t(r,e),await a.loadCurrentDrugOrder(),await a.loadDrugHistory(),s.value.push(function(e){return{id:"dispenses",helpText:"Dispensation",type:n.TT_DRUG_DISPENSER,onValueUpdate:w,onValue:H,config:{medicationHistory:v(),toolbarInfo:[{label:"Name",value:e?.getFullName()},{label:"Gender",value:e?.getGender()},{label:"Date Of Birth",value:o.toStandardHisDisplayFormat(e?.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>b()}}(i))}));function _(e){const t=parseFloat(e.amount_needed)-(e.quantity||0),r=a.calcCompletePack(e,t);return r<0?0:r}function b(){return a.getCurrentOrder().map((e=>({label:e.drug.name,value:e.quantity||0,other:{drug_id:e.drug.drug_id,order_id:e.order.order_id,amount_needed:_(e)}})))}function v(){return a.getDrugHistory().sort(((e,t)=>{const r=new Date(e.order.start_date);return new Date(t.order.start_date)-r})).map((e=>({medication:e.drug.name,date:o.toStandardHisDisplayFormat(e.order.start_date),amount:e.quantity})))}async function w(e,t){return-1!=e.value&&function(e){return e.map((e=>0!=e.value)).every(Boolean)}(t)?m():(e.other.amount_needed=0,await a.loadCurrentDrugOrder(),b())}async function H(e,t){if(-1===e.value)return!!(await a.voidOrder(e.other.order_id));if(!t&&!(await async function(e){let t=!0;const r=parseInt(e.value.toString())/e.other.amount_needed*100;return r>110&&(t=await D("Are you sure you want to dispense over 110% of the prescribed pill count?")),r<100&&(t=await D("Are you sure you want to dispense less than 100% of the prescribe amount?")),t}(e)))return!1;const r=a.buildDispensations(e.other.order_id,e.value);return!!(await a.saveDispensations(r))||(p("Unable to save dispensation"),!1)}return(e,t)=>(u(),d(g(y),null,{default:l((()=>[c(r,{skipSummary:!0,cancelDestinationPath:g(f),fields:s.value},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
