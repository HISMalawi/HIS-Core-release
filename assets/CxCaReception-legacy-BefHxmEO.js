System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./HisStandardForm-legacy-DMJkhfrq.js","./index-legacy-X--GYU37.js","./EncounterMixin.vue_vue_type_script_lang-legacy-BmCg9KlZ.js","./TouchScreenForm-legacy-C_f8Ho2H.js","./ToolbarMediumCard-legacy-CdhT4OJW.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-1het9QhE.js","./encounter_guidelines-legacy-wNYbMa3T.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var n,i,s,r,a,o,c,l,u,d,h,p;return{setters:[e=>{n=e.F},e=>{i=e.H},e=>{s=e.b4,r=e.d,a=e.t,o=e.T,c=e.V,l=e._,u=e.r,d=e.o,h=e.c},e=>{p=e._},null,null,null,null,null,null],execute:function(){class t extends s{constructor(e,t){super(e,184,t)}}const m=r({mixins:[p],components:{HisStandardForm:i},data:()=>({reception:{}}),watch:{patient:{async handler(){this.reception=new t(this.patientID,this.providerID),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(e){if(!(await this.reception.createEncounter()))return a("Unable to create encounter");const t=e.reason_for_visit,n=await this.reception.buildValueCoded("Reason for visit",t.value);await this.reception.saveObs(n),o("Observations and encounter created!"),this.nextTask()},getFields(){return[{id:"reason_for_visit",helpText:"Reason for visit",type:n.TT_SELECT,validation:e=>c.required(e),options:()=>this.mapOptions(["Initial screening","Postponed treatment","One year subsequent check-up after treatment","Subsequent screening","Problem visit after treatment","Referral"])}]}}});e("default",l(m,[["render",function(e,t,n,i,s,r){const a=u("his-standard-form");return d(),h(a,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
