import{d as f,r as u,t as g,u as _,v,w as b,x as D,y as c,ce as R,cg as d,cW as C,a5 as w,aK as V,O as h}from"./index-BoUMTIjB.js";import{v as x}from"./TableView-Bt3Sm_T2.js";import{a as O}from"./regimen_report_service-ANPT7eBf.js";import{a as y,w as A}from"./v2utils-B7MuYY86.js";import"./Export-UGDCL4eA.js";import"./index-Wy4X0smJ.js";const q=f({__name:"regimen",setup(B){const m=V("reports.png"),r=u([]),o=u(""),t=new O,p=[[y(),{label:"Gender",ref:"gender",toValue:e=>R(e)},{label:"DOB",ref:"birthdate",toValue:e=>d(e)},{label:"Curr.Reg",ref:"current_regimen",defaultValue:"N/A"},{label:"ARVs",ref:"medication",toValue:e=>e.map(a=>"".concat(a.medication," (").concat(a.quantity,")")).join(", ")},{label:"Curr.reg dispensed",ref:"last_dispensation_date",toValue:e=>d(e)}]],s=()=>A(async()=>{if(!(t.startDate&&t.endDate))return h("Start date and end date required!");r.value=[];const e=await t.getRegimenReport();r.value=Object.values(e).map(a=>({...a,last_dispensation_date:a.medication.reduce((l,n)=>n.start_date,"")}))}),i=()=>C({onFinish:(e,a,l,n)=>{n&&t.setOccupation(n),o.value="".concat(l),t.startDate=e,t.endDate=a,s()}});return g(()=>!r.value.length&&i()),(e,a)=>(_(),v(c(w),null,{default:b(()=>[D(x,{"default-sort-order":"asc","default-sorted-column":"arv_number","icon-url":c(m),title:"Clinic Regimen Report","report-prefix":"Clinic",subtitle:o.value,columns:p,columnData:r.value,rowsPerPage:50,onConfigure:i,onRefresh:s},null,8,["icon-url","subtitle","columnData"])]),_:1}))}});export{q as default};
