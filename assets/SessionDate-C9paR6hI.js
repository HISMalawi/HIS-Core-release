import{d as h,S as t,aX as u,ai as D,aj as p,H as r,aY as f,ay as m,_ as d,t as c,ap as y,af as S,c as _,ak as B,a as w}from"./index-DUHy09-D.js";import{H as $}from"./HisStandardForm-D4x6GRNw.js";const b=h({components:{HisStandardForm:$},data:()=>({apiDate:"",fields:[]}),async created(){this.apiDate=await t.getApiDate(),this.fields=u({id:"session_date",helpText:"Session Date",required:!0,minDate:()=>"2000-01-01",maxDate:()=>this.apiDate,estimation:{allowUnknown:!1},computeValue:e=>e,config:{footerBtns:[{name:"Reset",slot:"end",color:"success",state:{visible:{default:()=>t.isBDE()}},onClick:async()=>{await this.resetSessionDate()}}],helpText:"The session date is the date of the current session.                 It is used to determine the current date for the patient and                 should be set to the current date. If you are in Back Data Entry Mode (BDE), you can reset the session date to the API date.",helpTitle:"Session Date"}}),this.fields=[...this.fields,{id:"reason_for_bde",helpText:"Please select a reason for changing session date",type:D.TT_SELECT,validation:e=>p.required(e),computedValue:e=>e.value,options:()=>[{label:"Backlog clearance",value:"Backlog clearance"},{label:"System was down",value:"System was down"},{label:"Data error correction",value:"Data error correction"}]}]},async mounted(){await this.showBdeNotice()},methods:{async showBdeNotice(){if(!t.isBDE())return;const e=r.toStandardHisDisplayFormat(t.getCachedApiDate()||""),s=r.toStandardHisDisplayFormat(t.getSessionDate()),a=await f("BDE Notice","The system is currently in Back Data Entry Mode(BDE).                 Do you wish to reset the date to ".concat(e,"?"),"BDE Date: ".concat(s),[{name:"Reset Date",slot:"start",color:"success"},{name:"Keep BDE Date",slot:"end",color:"danger"},{name:"New date",slot:"end"}]);if(a==="Reset Date")return await this.resetSessionDate();a==="Keep BDE Date"&&this.redirect()},async resetSessionDate(){try{await t.resetSessionDate(),m.invalidate("PROVIDERS"),d("Session date has been reset to ".concat(this.formatDate(this.apiDate))),this.redirect()}catch(e){c("".concat(e))}},redirect(){const e=this.$route.query.patient_dashboard_redirection_id;e?this.$router.push("/patient/dashboard/".concat(e)):this.$router.back()},async onSubmit(e,s){var o,n;const a=s.session_date;try{await t.setSessionDate(a,s.reason_for_bde),d("Successfully Back dated to ".concat(this.formatDate(a)));const i=(n=(o=this.$route)==null?void 0:o.query)==null?void 0:n.patient_id;i?y(i,this.$router):this.redirect()}catch(i){c("".concat(i))}},formatDate(e){return r.toStandardHisDisplayFormat(e)}}});function k(e,s,a,o,n,i){const l=B("his-standard-form");return w(),_(l,{skipSummary:!0,fields:e.fields,onOnFinish:e.onSubmit},null,8,["fields","onOnFinish"])}const T=S(b,[["render",k]]);export{T as default};
