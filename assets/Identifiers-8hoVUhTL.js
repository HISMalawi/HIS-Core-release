import{d as y,K as g,aJ as I,cb as h,n as T,c$ as A,R as v,o as P,c as w,w as E,b,cl as p,I as x}from"./index-BCTN_bnC.js";import{F}from"./dynamic-import-helper-BkBZiFw5.js";import{H as N}from"./HisStandardForm-CaDwl-hA.js";import{u as V}from"./useEncounter-CDUT-p5Y.js";import{p as C}from"./VoidReason-BtkcYhr4.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";import"./isEmpty-OXtHK5dz.js";import"./_Set-VKtKUQAI.js";import"./_setToArray-BLmuRUHx.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";const G=y({__name:"Identifiers",setup(D){const a=g([]),o=I.getActiveApp(),{patientDashboardUrl:c,goToNextTask:f}=V((l,r,u)=>{const _=()=>{let n={};const s=[];return{id:"ids",helpText:"Patient Identifiers",type:F.TT_TABLE_VIEWER,onload:i=>n=i,init:async()=>{for(const i in o.programPatientIdentifiers){const e=o.programPatientIdentifiers[i];u.patient.patient_identifiers.forEach(t=>{t.type.patient_identifier_type_id===e.id&&s.push({type:i,idName:t.identifier,created:h(t.date_created),id:t.patient_identifier_id,reassign:async()=>{typeof e.reassignAction=="function"&&await T("Are you sure you want to modify ".concat(i," ").concat(t.identifier))&&e.reassignAction(r,t.patient_identifier_id,t.identifier,i)}})})}return!0},options:()=>{const i=s.map(e=>[e.type,e.idName,e.created,{name:"Void",type:"button",color:"danger",action:()=>C(async t=>{await A.voidIdentifier(e.id,t),v.invalidate("ACTIVE_PATIENT"),n.rows=n.rows.filter(d=>d[d.length-1].id!=e.id)})},{id:e.id,name:"Reassign",type:"button",action:()=>e.reassign()}]);return[{label:"",value:"",other:{columns:["Identifier","Type","Date Created","Void","Reassign"],rows:i}}]}}};a.value=[_()]});function m(){f()}return(l,r)=>(P(),w(p(x),null,{default:E(()=>[b(N,{cancelDestinationPath:p(c),onFinishAction:m,fields:a.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{G as default};
