import{_ as u}from"./EncounterMixin.vue_vue_type_script_lang-Bfd5amPg.js";import{F as i}from"./dynamic-import-helper-BkBZiFw5.js";import{A as o}from"./anc_current_pregnancy-D3pSnSEa.js";import{d as c,I as p,bd as m,n as h,V as t,_ as v,r,o as f,c as _,w as y,b}from"./index-BCTN_bnC.js";import{g as T}from"./LocationFieldOptions-CfAZbPnk.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-CaDwl-hA.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";const g=c({components:{IonPage:p},mixins:[u],data:()=>({service:{},gestationWeeks:0,delieveryDate:"",lnmp:""}),watch:{ready:{async handler(e){e&&(this.service=new o(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,a){try{await this.service.enrollPatient()}catch(s){if(s instanceof m)console.warn("".concat(s));else throw s}const n=await this.resolveObs(a);await this.service.createEncounter(),await this.service.saveObservationList(n),this.nextTask()},buildLnmpObs(e=!1){return/Unknown/i.test(this.lnmp)?null:[e?this.service.buildValueDateEstimated("Last menstrual period",this.lnmp):this.service.buildValueDate("Last menstrual period",this.lnmp),this.service.buildValueNumber("Week of First Visit",this.gestationWeeks)]},getFields(){return[{id:"lnmp",helpText:"Last Normal Menstrual Period",type:i.TT_FULL_DATE,config:{allowUnknown:!0,addTodayBtn:!1},computedValue:()=>this.buildLnmpObs(),beforeNext:async e=>(this.lnmp=e.value,this.gestationWeeks=this.service.calculateWeekOfFirstVisit(this.lnmp),this.gestationWeeks<=0||this.gestationWeeks>42?h("Gestation weeks out of range of 0-42. Are you sure you want to continue?"):!0),validation:e=>this.validateSeries([()=>t.required(e),()=>e.value&&new Date(e.value)>new Date?["Last menstrual period cannot be in the future"]:null])},{id:"estimate_lmp",helpText:"Gestation (months)",type:i.TT_NUMBER,condition:e=>e.lnmp.value==="Unknown",computedValue:()=>this.buildLnmpObs(!0),validation:e=>this.validateSeries([()=>t.required(e),()=>t.rangeOf(e,1,10)]),beforeNext:e=>(this.lnmp=this.service.calculateGestationDateFromPeriod(e.value),this.gestationWeeks=this.service.calculateWeekOfFirstVisit(this.lnmp),!0)},{id:"expected_delivary_date",helpText:"Expected Date Of Delivery",type:i.TT_FULL_DATE,dynamicHelpText:()=>"Expected Date Of Delivery (Gestation Weeks: ".concat(this.gestationWeeks,")"),defaultValue:()=>this.service.estimateDelieveryDate(this.lnmp),computedValue:e=>this.service.buildValueDate("Estimated date of delivery",e.value),validation:e=>t.required(e)},{id:"planned_delivery_place",helpText:"Planned delivery place",type:i.TT_SELECT,computedValue:e=>this.service.buildValueText("Planned Delivery Place",e.label),validation:e=>t.required(e),options:(e,a="")=>T(a),config:{footerBtns:[{name:"Here",slot:"end",onClickComponentEvents:{setValue:e=>e.btnOutput},onClick:()=>o.getLocationName()}],showKeyboard:!0,isFilterDataViaApi:!0}},{id:"bed_net_available_for_use",helpText:"Mosquito net in good condition available for own use",type:i.TT_SELECT,condition:()=>!1,computedValue:e=>this.service.buildValueCoded("Do you use bed nets",e.value),validation:e=>t.required(e),options:()=>this.yesNoOptions()},{id:"bed_net_given",helpText:"Bed net given today",type:i.TT_SELECT,computedValue:e=>this.service.buildValueCoded("Mosquito net started",e.value),validation:e=>t.required(e),options:()=>this.yesNoOptions()},{id:"previous_td_given",helpText:"Previous TD given before this pregnancy",type:i.TT_NUMBER,computedValue:e=>this.service.buildValueNumber("TD Booster",e.value),validation:e=>t.required(e)}]}}});function D(e,a,n,s,V,k){const l=r("his-standard-form"),d=r("ion-page");return f(),_(d,null,{default:y(()=>[b(l,{fields:e.fields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}const B=v(g,[["render",D]]);export{B as default};
