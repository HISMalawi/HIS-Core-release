import{d as A,a5 as y,cl as C,r as g,t as S,aJ as M,as as D,af as N,M as B,aL as $,aj as x,cN as j,a8 as E,ad as w,u as O,v as k,w as I,x as P}from"./index-Cpa1Vu_O.js";import{T as G}from"./tb_report_service-CcGzH4w6.js";import{v as L}from"./TableView-SYr53Aoi.js";import{A as X}from"./v2utils-smiQ2r8w.js";import"./Export-Cf2ZJ_nH.js";import"./index-BlK7Pvm-.js";const U=A({components:{IonPage:y,IonLoading:C,v2Datatable:L},setup(){const e=g([]),d=g(""),f=g(!1),l=new G;g(void 0),g(void 0);const t=(u,c)=>({ref:c,label:u,toValue:o=>o.length,tdClick:async o=>{o.refData.length&&(await D.create({component:X,backdropDismiss:!1,cssClass:"large-modal",componentProps:{subtitle:d,patientIdentifiers:o.refData,title:"".concat(o.data.ageGroup," ").concat(o.data.gender," ").concat(o.column.label),onFinish:()=>D.getTop().then(n=>n&&D.dismiss())}})).present()}}),F=[[{label:"#",ref:"index"},{label:"Age group",ref:"ageGroup"},{label:"Gender",ref:"gender"},t("TX_CURR","tx_curr"),t("Symptom Screen (alone)","symptom_screen_alone"),t("CXR screen","cxr_screen"),t("mWRD screen","mwrd_screen"),t("New on ART/Screen Positive","sceen_pos_new"),t("New on ART/Screen Negative","sceen_neg_new"),t("Already on ART/Screen Positive","sceen_pos_prev"),t("Already on ART/Screen Negative","sceen_neg_prev"),t("TB RX_New on ART","started_tb_new"),t("TB RX_Prev on ART","started_tb_prev")]],v=async()=>p(await N("Do you want to rebuild report?")),p=async(u=!1)=>{if(!(l.startDate&&l.endDate))return B("Start date and end date required!");f.value=!0,e.value=[];try{const c=await l.getTxTbReport(u,"pepfar"),o={F:"Female",M:"Male"},n=Object.keys(c).reduce((a,s)=>{if(s==="Unknown")return a;const i=c[s];return Object.keys(i).forEach(r=>{a[r].rows.push({ageGroup:s,gender:o[r],...i[r]}),a[r].aggregate=Object.keys(i[r]).reduce((b,_)=>Array.isArray(i[r][_])?{...b,[_]:[...b[_]||[],...i[r][_]]}:b,a[r].aggregate)}),a},{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}});e.value=[...n.F.rows,...n.M.rows,{ageGroup:"All",gender:"Male",...n.M.aggregate}];const T=Object.values(n.F.aggregate).reduce((a,s)=>a.concat(s),[]),R=await l.getMaternalStatus($.uniq(T)),h=R.FBf.concat(R.FP);["FP","FNP","FBf"].forEach(a=>{e.value.push(Object.keys(n.F.aggregate).reduce((s,i)=>({...s,[i]:n.F.aggregate[i].filter(r=>a==="FNP"?!h.includes(r):R[a].includes(r))}),{ageGroup:"All",gender:a}))}),e.value=e.value.map((a,s)=>({index:s+1,...a}))}catch(c){console.error(c),x("Unable to generate report!")}f.value=!1},m=()=>j({onFinish:(u,c,o,n)=>{d.value="Period: ".concat(o),l.startDate=u,l.endDate=c,n&&l.setOccupation(n),p()}});return S(()=>m()),{Img:M,reportData:e,isLoading:f,onRefreshReport:v,configure:m,generate:p,columns:F,period:d}}});function q(e,d,f,l,t,F){const v=w("ion-loading"),p=w("v2Datatable"),m=w("ion-page");return O(),k(m,null,{default:I(()=>[P(v,{"is-open":e.isLoading,message:"Please wait..."},null,8,["is-open"]),P(p,{title:"Tx TB Report","icon-url":e.Img("login-logos/PEPFAR.png"),subtitle:e.period,columns:e.columns,columnData:e.reportData,rowsPerPage:100,onConfigure:e.configure,onRefresh:e.onRefreshReport,"report-prefix":"Pepfar"},null,8,["icon-url","subtitle","columns","columnData","onConfigure","onRefresh"])]),_:1})}const Q=E(U,[["render",q]]);export{Q as default};
