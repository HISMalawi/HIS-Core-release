import{d as h,r as C,au as I,al as L,o as S,ai as s,aj as c,a as A,c as v,w as E,b as N,u as g,f as x,ag as V,_ as D,e as H,aP as M}from"./index-4ZhJu3VE.js";import{a as u,A as l}from"./anc_global_props-OMAySN0f.js";import{H as O}from"./HisStandardForm-K1lIrz3_.js";const F=h({__name:"SetPreferences",setup(R){const o=C(""),d=I(),y=L(),f=[...P(),...T(),..._()];S(()=>o.value=d.name);function r(e){return console.log("prop",e,o.value),e===o.value}async function m(e,t){try{for(const n in t)await V.set(n,t[n]),D("Property has been updated",2e3);y.back()}catch(n){console.error(n),H("An error occurred while saving the preferences")}}function _(){const e=u.CLINIC_HOLIDAYS;return[{id:e,helpText:"Set clinic holiday(s)",type:s.TT_CLINIC_HOLIDAY_PICKER,condition:()=>r(e),computedValue:t=>t.value,defaultValue:()=>l.clinicHolidays(),validation:t=>c.required(t)}]}function P(){const e=u.APPOINTMENT_LIMIT;return[{id:e,helpText:"Enter Appointment Limit",type:s.TT_NUMBER,computedValue:t=>t.value,condition:()=>r(e),defaultValue:()=>l.appointmentLimit(),validation:t=>c.required(t)}]}function T(){const e=u.CLINIC_DAYS,t=a=>a.map(p=>p.value).join(),n=a=>["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"].map(i=>({label:i,value:i,isChecked:!M.isEmpty(a)&&a.search(i)>=0}));return[{id:e,helpText:"Set Clinic day(s)",type:s.TT_MULTIPLE_SELECT,condition:()=>r(e),computedValue:a=>t(a),validation:a=>c.required(a),options:async()=>n(await l.clinicDays())}]}return(e,t)=>(A(),v(g(x),null,{default:E(()=>[N(O,{fields:f,onFinishAction:m,skipSummary:!0})]),_:1}))}});export{F as default};
