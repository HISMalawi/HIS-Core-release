System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./HisStandardForm-legacy-CturMrfg.js","./index-legacy-DaDUPm0b.js","./EncounterMixin.vue_vue_type_script_lang-legacy-BDi4Plhg.js","./TouchScreenForm-legacy-kTjvZFWF.js","./ToolbarMediumCard-legacy-TC6u67eT.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-DVkjms5h.js","./encounter_guidelines-legacy-i6miv9ib.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,i){"use strict";var n,s,t,a,r,l,c,o,d,u;return{setters:[e=>{n=e.F},e=>{s=e.H},e=>{t=e.b3,a=e.d,r=e.V,l=e._,c=e.r,o=e.o,d=e.c},e=>{u=e._},null,null,null,null,null,null],execute:function(){class i extends t{constructor(e,i){super(e,105,i)}}const h=a({mixins:[u],components:{HisStandardForm:s},data:()=>({service:{}}),watch:{ready:{async handler(e){e&&(this.service=new i(this.patientID,this.providerID),this.fields=[this.notesField()])},immediate:!0}},methods:{async onFinish(e,i){await this.service.createEncounter(),await this.service.saveObservationList(await this.resolveObs(i)),this.nextTask()},notesField(){return{id:"noted",helpText:"Clinical Notes",type:n.TT_NOTE,validation:e=>r.required(e),computedValue:e=>({obs:this.service.buildValueText("Notes",e.value)})}}}});e("default",l(h,[["render",function(e,i,n,s,t,a){const r=c("his-standard-form");return o(),d(r,{fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
