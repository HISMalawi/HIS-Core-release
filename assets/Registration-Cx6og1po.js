import{bk as v,d as b,bb as T,b8 as y,T as f,U as V,aT as w,F as n,V as r,ah as c,ct as d,ai as h,H as D,aW as g,bt as _,cQ as S,t as C,cR as E,aj as p,_ as N,r as k,o as A,c as x}from"./index-C6EjxQ0a.js";import{_ as I}from"./StagingMixin.vue_vue_type_script_lang-CH_6BTxS.js";import{V as R}from"./vitals_service-CTovdbu1.js";import{P as m}from"./PersonFieldHelper-WAyvRtHn.js";import"./EncounterMixin.vue_vue_type_script_lang-Btc3zcWc.js";import"./encounter_guidelines-C0mDoJuD.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-CHL0RBXf.js";import"./LocationFieldOptions-DprQ5-p8.js";import"./storage-CYNMGoMg.js";class l extends v{constructor(t,i){super(t,9,i)}}const H=b({mixins:[I],data:()=>({registration:{},prescription:{},dispensation:{},regimens:[],customRegimens:[],htsSummaryData:null,vitals:{}}),watch:{ready:{async handler(e){e&&(this.canShowStagingFields=!1,this.registration=new l(this.patientID,this.providerID),this.vitals=new R(this.patientID,this.providerID),this.showStagingWeightChart=!1,this.fields=this.getRegistrationFields())},immediate:!0}},methods:{async onSubmit(e,t){var s;const i={...t};if(e.hts!=null){const a=new T(this.patientID,this.providerID);await a.createEncounter(),await a.savePatientType("New patient")}if(await this.registration.createEncounter(),this.hasStaging(e)&&(await this.submitStaging(t),await this.vitals.createEncounter(),await this.vitals.saveObservationList(await this.resolveObs(i,"vitals"))),await this.registration.saveObservationList(await this.resolveObs(i,"reg")),(s=e==null?void 0:e.cell_phone_number)!=null&&s.value){const a=new y;a.setPersonID(this.patientID),await a.updatePerson(m.resolvePerson(t)),f.invalidate("ACTIVE_PATIENT")}V("Clinic registration complete!"),this.nextTask()},async HTSSummaryData(){return await w.getProgramSummary(this.patientID,18)},buildDateObs(e,t,i){let s={};return t.match(/unknown/i)?s=this.registration.buildValueText(e,"Unknown"):i?s=this.registration.buildValueDateEstimated(e,t):s=this.registration.buildValueDate(e,t),s},hasLinkageCodeField(){return{id:"has_linkage_code",helpText:"HTS Linkage code",type:n.TT_YES_NO,init:async()=>(this.htsSummaryData=await this.HTSSummaryData(),!0),isRequired:()=>!0,condition:()=>this.htsSummaryData===null,options:()=>[{label:"Does client have linkage code?",value:"",values:this.yesNoOptions()}]}},htsSerialNumber(){let e=[];return{id:"hts_serial_number",helpText:"HTS Linkage Number",type:n.TT_LINKAGE_CODE,appearInSummary:()=>this.htsSummaryData===null,validation:t=>r.validateSeries([()=>r.required(t),()=>{var i;return(i=t==null?void 0:t.other)!=null&&i.isValidLinkageCode?null:(e=c.uniq(e.concat("".concat(t.value))),["Invalid Scanform linkage code"])}]),condition:t=>this.htsSummaryData.htc_serial_number==null||t.has_linkage_code==="Yes",finalComputedValue:t=>({obs:[this.registration.buildValueText("HTC Serial number","".concat(t.value)),...e.map(i=>this.registration.buildValueText("Invalid",i))]})}},htsDataHiddenField(){let e=!1,t=[];return{id:"hts",helpText:"HTS Information",type:n.TT_HIDDEN,init:async i=>{var s;try{const a=this.htsSummaryData;if(e=a.hiv_status==="Positive",!e)return!0;const o=(s=a.htc_serial_number)!=null?s:i.hts_serial_number.value;t=[{label:"HIV Status",value:a.hiv_status},{label:"Result date",value:d(a.test_result_date)},{label:"HTS Number",value:o,other:{obs:()=>this.registration.buildValueText("HTC Serial number",o)}},{label:"Confirmatory test type",value:"Rapid test",other:{obs:()=>this.registration.buildValueCoded("Confirmatory hiv test type","HIV rapid test")}},{label:"Confirmatory test date",value:d(a.hiv_status_date),other:{obs:()=>this.registration.buildValueDate("Confirmatory HIV test date",a.hiv_status_date)}},{label:"Confirmatory test location",value:l.getLocationName(),other:{obs:()=>this.registration.buildValueText("Confirmatory HIV test location",l.getLocationName())}},{label:"Received ART/Prophylaxis before?",value:a.ever_received_art,other:{obs:()=>this.registration.buildValueCoded("Ever received ART",a.ever_received_art)}},{label:"Last time taken drugs",value:d(a.last_date_taken_drugs),other:{obs:()=>this.registration.buildValueDate("Date ART last taken",a.last_date_taken_drugs),obsCondition:()=>a.ever_received_art==="Yes"}}]}catch(a){return console.error(a),!1}return!0},defaultValue(){return t},summaryMapValue:i=>i,finalComputedValue:i=>({tag:"reg",obs:i.filter(s=>{var a;return((a=s==null?void 0:s.other)==null?void 0:a.obs)&&(typeof s.other.obsCondition=="function"?s.other.obsCondition():!0)}).map(s=>s.other.obs())}),condition:()=>e}},getRegistrationFields(){return[{id:"followup_agreement",helpText:"Agrees to follow-up",type:n.TT_MULTIPLE_YES_NO,summaryMapValue:({value:e,label:t})=>({value:e,label:"".concat(t," followup")}),validation:e=>this.validateSeries([()=>r.required(e),()=>r.anyEmpty(e)]),computedValue:e=>{const t=[];return e.forEach(({label:i,value:s})=>{t.push(this.registration.buildValueCoded(i,s)),t.push(this.registration.buildValueCoded("Agrees to followup",i))}),{tag:"reg",obs:t}},options:e=>c.isEmpty(e.followup_agreement)?[{label:"Phone",value:"",other:{values:this.yesNoOptions()}},{label:"Home visit",value:"",other:{values:this.yesNoOptions()}}]:e.followup_agreement},this.hasLinkageCodeField(),this.htsSerialNumber(),this.htsDataHiddenField(),{...m.getCellNumberField(),config:{customKeyboard:[[["1","2","3"],["4","5","6"],["7","8","9"],["","0",""]],[["+265","/"],["Delete"]]]},condition:e=>{const t=this.patient.getPhoneNumber();return e.followup_agreement.some(i=>i.label==="Phone"&&i.value==="Yes"&&(!t||/unknown|n\/a/i.test(t)))}},{id:"received_arvs",helpText:"Ever received ARVs for treatment or prophylaxis?",type:n.TT_SELECT,computedValue:({value:e})=>({tag:"reg",obs:this.registration.buildValueCoded("Ever received ART",e)}),condition:e=>e.hts===null,validation:e=>r.required(e),options:()=>this.yesNoOptions()},...h({id:"date_last_taken_arvs",helpText:"Last taken ARVS",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),condition:e=>e.received_arvs.value==="Yes",estimation:{allowUnknown:!0},computeValue:(e,t)=>({date:e,tag:"reg",isEstimate:t,obs:this.buildDateObs("Date ART last taken",e,t)})}),{id:"taken_art_in_last_two_months",helpText:"Taken ARVs in the last two months?",type:n.TT_SELECT,validation:e=>r.required(e),computedValue:({value:e})=>({tag:"reg",obs:[this.registration.buildValueCoded("Has the patient taken ART in the last two months",e)]}),options:()=>this.yesNoUnknownOptions(),condition:e=>e.year_date_last_taken_arvs.value==="Unknown"},{id:"taken_art_in_last_two_weeks",helpText:"Taken ARV's in the last two weeks?",type:n.TT_SELECT,computedValue:({value:e},t)=>{let i="";const s=[];let a=-1;return e==="Yes"?a=14:t.taken_art_in_last_two_months.value==="Yes"&&(a=60),a>0&&(i=D.getDateBeforeByDays(this.registration.getDate(),a),s.push(this.registration.buildValueDateEstimated("Date ART last taken",i))),{date:i,tag:"reg",obs:[...s,this.registration.buildValueCoded("Has the patient taken ART in the last two weeks",e)]}},validation:e=>r.required(e),condition:e=>e.taken_art_in_last_two_months.value==="Yes",options:()=>this.yesNoUnknownOptions()},{id:"ever_registered_at_art_clinic",helpText:"Ever registered at an ART clinic?",type:n.TT_SELECT,computedValue:({value:e})=>({tag:"reg",obs:this.registration.buildValueCoded("Ever registered at ART clinic",e)}),validation:e=>r.required(e),condition:e=>e.received_arvs.value==="Yes",options:()=>this.yesNoOptions()},{id:"location_of_art_initialization",helpText:"Location of ART initiation",type:n.TT_SELECT,computedValue:({label:e})=>({tag:"reg",obs:this.registration.buildValueText("Location of ART initiation",e)}),validation:e=>r.required(e),condition:e=>e.ever_registered_at_art_clinic.value==="Yes",options:(e,t="")=>this.getFacilities(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}},...h({id:"date_started_art",helpText:"Started ART",required:!0,init:async()=>(await this.initStaging(this.patient),!0),beforeNext:e=>{const t=g(e).diff(this.patient.getBirthdate(),"years");return this.staging.setAge(t),this.stagingFacts.age=t,this.stagingFacts.ageInMonths=t*12,!0},condition:e=>e.ever_registered_at_art_clinic.value==="Yes",minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),estimation:{allowUnknown:!0,estimationFieldType:_.MONTH_ESTIMATE_FIELD},computeValue:(e,t)=>(this.staging.setDate(e),this.vitals.setDate(e),{date:e,tag:"reg",isEstimate:t,obs:this.buildDateObs("Date ART started",e,t)})}),{id:"previous_art_number",helpText:"ART number at previous location",type:n.TT_TEXT,condition:e=>e.ever_registered_at_art_clinic.value==="Yes",computedValue:e=>({tag:"reg",obs:this.registration.buildValueText("ART number at previous location",e.value)}),validation:e=>r.required(e)},{id:"has_transfer_letter",helpText:"Has staging information?",type:n.TT_SELECT,validation:e=>r.required(e),computedValue:({value:e})=>({tag:"reg",obs:this.registration.buildValueCoded("Has transfer letter",e)}),options:()=>this.yesNoOptions(),condition:e=>e.ever_registered_at_art_clinic.value==="Yes"},{id:"height",helpText:"Height (CM)",type:n.TT_NUMBER,condition:e=>e.has_transfer_letter.value==="Yes",computedValue:({value:e})=>({tag:"vitals",obs:this.vitals.buildValueNumber("Height",e)}),validation:e=>this.validateSeries([()=>r.required(e),()=>r.isNumber(e),()=>r.rangeOf(e,40,222)])},{id:"weight",helpText:"Weight (Kg)",type:n.TT_TEXT,unload:async(e,t,i)=>{const s=i.weight.value,a=i.height.value,o=await S.getBMI(s,a,this.patient.getGender(),this.patient.getAge());if(this.stagingFacts.bmi=o.index,!this.staging.isPedaid())return;const u=await this.patient.getMedianWeightHeight();try{this.stagingFacts.weightPercentile=parseFloat(s)/parseFloat(u.weight)*100}catch(L){this.stagingFacts.weightPercentile=0}},computedValue:({value:e})=>({tag:"vitals",obs:this.vitals.buildValueNumber("weight",e)}),condition:e=>e.has_transfer_letter.value==="Yes",validation:e=>this.validateSeries([()=>{const t={...e,other:{modifier:"."}};return this.vitals.isNotEmptyandFloat(t)},()=>r.rangeOf(e,1,300)]),config:{customKeyboard:[[["1","2","3",""],["4","5","6",""],["7","8","9","."],["","0","",""]],[["Delete"]]]}},...this.getStagingFields(),{id:"new_cd4_percent_available",helpText:"CD4 percent available",type:n.TT_SELECT,options:()=>this.yesNoOptions(),condition:e=>e.has_transfer_letter.value==="Yes",validation:e=>r.required(e)},{id:"cd4_percent",helpText:"CD4 Percent",type:n.TT_TEXT,condition:e=>e.new_cd4_percent_available.value==="Yes",computedValue:({value:e})=>({tag:"staging",obs:this.registration.buildValueNumber("CD4 percent",parseInt(e.toString().substring(1)),"%")}),onValue:e=>e.value&&!this.staging.cd4CountIsValid(e.value)?(C("Cd4 percentage invalid. Use one modifier or start with either of these symbols: >, < or ="),!1):!0,validation:e=>r.required(e),config:{customKeyboard:[E,[["Delete"]]]}},{id:"type_of_confirmatory_hiv_test",helpText:"Confirmatory HIV test",type:n.TT_SELECT,validation:e=>r.required(e),condition:e=>e.hts===null,onValue:async e=>(e.value==="Not done"&&await p("Reminder","UNKNOWN HIV CONFIRMATORY TEST","Please arrange for a confirmatory test",[{name:"Agreed",color:"success",slot:"start"}]),!0),computedValue:({value:e})=>({tag:"reg",obs:this.registration.buildValueCoded("Confirmatory hiv test type",e)}),options:e=>[{label:"Rapid antibody test",value:"HIV rapid test"},{label:"DNA PCR",value:"HIV DNA polymerase chain reaction"},{label:"Not done",value:"Not done",disabled:e.has_linkage_code==="Yes"}]},{id:"confirmatory_hiv_test_location",helpText:"Location of confirmatory HIV test",type:n.TT_SELECT,defaultValue:e=>(e.ever_registered_at_art_clinic&&e.ever_registered_at_art_clinic.value)==="Yes"?"":l.getLocationName(),computedValue:e=>({tag:"reg",obs:this.registration.buildValueText("Confirmatory HIV test location",e.label)}),validation:e=>r.required(e),condition:e=>e.type_of_confirmatory_hiv_test.value!="Not done",options:(e,t="")=>this.getFacilities(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}},...h({id:"date_of_confirmatory_hiv_test",helpText:"Confirmatory HIV test",beforeNext:async(e,t)=>{if(t.received_arvs.value!="Yes"){const i=g(this.staging.getDate()).diff(e,"days");if(i>=20)return await p("Data inconsistency warning","Confirmatory Date for newly initiated ART patient is ".concat(i," days ago"),"Are you sure this is accurate?",[{name:"No, Re-enter date",slot:"start",color:"success"},{name:"Yes, its accurate",slot:"end",color:"danger"}])==="Yes, its accurate"}return!0},condition:e=>e.confirmatory_hiv_test_location.value,required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),estimation:{allowUnknown:!0,estimationFieldType:_.MONTH_ESTIMATE_FIELD},computeValue:(e,t)=>({date:e,tag:"reg",isEstimate:t,obs:this.buildDateObs("Confirmatory HIV test date",e,t)})}),this.getStagingSummaryField("Staging summary")]}}});function F(e,t,i,s,a,o){const u=k("his-standard-form");return A(),x(u,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}const X=N(H,[["render",F]]);export{X as default};
