var g=Object.defineProperty;var D=(t,s,e)=>s in t?g(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var d=(t,s,e)=>D(t,typeof s!="symbol"?s+"":s,e);import{bg as o,d as m,H as p,n as l,F as f,t as y,_,r as b,o as v,c as O}from"./index-BHR-Bvru.js";import{D as c}from"./drug_order_service-DiZceBDq.js";import{_ as w}from"./EncounterMixin.vue_vue_type_script_lang-CssoiZxD.js";import"./encounter_guidelines-Cze097iw.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-BjRuivl7.js";class H extends o{constructor(e,r){super(e,54,r);d(this,"drugHistory");d(this,"currentDrugOrder");this.drugHistory=[],this.currentDrugOrder=[]}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(e,r){return[{drug_order_id:e,date:this.date,quantity:r}]}saveDispensations(e){return o.postJson("/dispensations",{dispensations:e,program_id:o.getProgramID()})}async voidOrder(e){return o.void("/dispensations/".concat(e),{})}async loadDrugHistory(){const e=await c.getDrugOrderHistory(this.patientID);e&&(this.drugHistory=e)}async loadCurrentDrugOrder(){const e=await c.getDrugOrders(this.patientID);e&&(this.currentDrugOrder=await Promise.all(e))}calcCompletePack(e,r){const i=e.barcodes.sort(function(n,h){return n.tabs-h.tabs});if(i.length==0||r==0)return r;for(let n=0;n<=i.length-1;n++)if(parseInt(i[n].tabs)>=r)return i[n].tabs;const u=parseInt(i[0].tabs);let a=parseInt(i[i.length-1].tabs);for(;a<r;)a+=u;return a}}const P=m({mixins:[w],data:()=>({dispensation:{}}),watch:{patient:{async handler(t){this.dispensation=new H(t.getID(),this.providerID),await this.dispensation.loadCurrentDrugOrder(),await this.dispensation.loadDrugHistory(),this.fields=this.getFields()},deep:!0}},methods:{saveDispensations(t){const s=this.buildDispensations(t);return this.dispensation.saveDispensations(s)},buildDispensations(t){return this.dispensation.buildDispensations(t.other.order_id,t.value)},buildMedicationHistory(){return this.dispensation.getDrugHistory().sort((t,s)=>{const e=new Date(t.order.start_date);return new Date(s.order.start_date)-e}).map(t=>({medication:t.drug.name,date:p.toStandardHisDisplayFormat(t.order.start_date),amount:t.quantity}))},buildOrderOptions(){return this.dispensation.getCurrentOrder().map(t=>({label:t.drug.name,value:t.quantity||0,other:{drug_id:t.drug.drug_id,order_id:t.order.order_id,amount_needed:this.calculateCompletePack(t)}}))},getPackSizesRows(t,s){return this.dispensation.getDrugPackSizes(t).map(r=>{const i=s>0?s/r:"-";return[r,i,0,0]})},calculateCompletePack(t){const s=parseFloat(t.amount_needed)-(t.quantity||0),e=this.dispensation.calcCompletePack(t,s);return e<0?0:e},isDoneDispensing(t){return t.map(s=>s.value!=0).every(Boolean)},async isValidDispensation(t){let s=!0;const e=parseInt(t.value.toString()),r=t.other.amount_needed,i=e/r*100;return i>110&&(s=await l("Are you sure you want to dispense over 110% of the prescribed pill count?")),i<100&&(s=await l("Are you sure you want to dispense less than 100% of the prescribe amount?")),s},getFields(){return[{id:"dispenses",helpText:"Dispensation",type:f.TT_DRUG_DISPENSER,onValueUpdate:async(t,s)=>t.value!=-1&&this.isDoneDispensing(s)?this.gotoPatientDashboard():(t.other.amount_needed=0,await this.dispensation.loadCurrentDrugOrder(),this.buildOrderOptions()),onValue:async(t,s)=>t.value===-1?!!await this.dispensation.voidOrder(t.other.order_id):!s&&!await this.isValidDispensation(t)?!1:await this.saveDispensations(t)?!0:(y("Unable to save dispensation"),!1),config:{medicationHistory:this.buildMedicationHistory(),toolbarInfo:[{label:"Name",value:this.patient.getFullName()},{label:"Gender",value:this.patient.getGender()},{label:"Date Of Birth",value:p.toStandardHisDisplayFormat(this.patient.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>this.buildOrderOptions()}]}}});function k(t,s,e,r,i,u){const a=b("his-standard-form");return v(),O(a,{skipSummary:!0,cancelDestinationPath:t.cancelDestination,fields:t.fields},null,8,["cancelDestinationPath","fields"])}const $=_(P,[["render",k]]);export{$ as default};
