var p=Object.defineProperty;var v=(i,t,e)=>t in i?p(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var o=(i,t,e)=>v(i,typeof t!="symbol"?t+"":t,e);import{ao as r,dh as b,al as g,h as N,d as _,aw as h,W as F,bs as m,aN as u,am as D,au as w,dl as y,H as c,ad as d,ae as I,aj as A,ak as P,aa as x,c as C,af as k,a as T}from"./index-CMZASHAR.js";import{H as $}from"./HisStandardForm-BCjM4-bc.js";class f extends r{constructor(){super();o(this,"patientID");o(this,"activePrefix");o(this,"dormantPrefix");this.patientID=0,this.activePrefix="",this.dormantPrefix=""}getActivePrx(){return this.activePrefix}getDormantPrx(){return this.dormantPrefix}getPatientID(){return this.patientID}setPatientID(e){this.patientID=e}formatNumber(e){const n=e.search(this.activePrefix)>=0?this.activePrefix:e.search(this.dormantPrefix)>=0?this.dormantPrefix:"";return n?e.substring(n.length,e.length):e}async loadFilingPrefix(){const e=await b.filingNumberPrefix();if(e){const[n,a]=e.split(",");this.activePrefix=n,this.dormantPrefix=a}}isActiveFilingNum(e){return!!e.match(new RegExp(this.activePrefix,"i"))}isDormantFilingNum(e){return!!e.match(new RegExp(this.dormantPrefix,"i"))}async assignFilingNumber(){return r.postJson("patients/".concat(this.patientID,"/filing_number"),{})}async getFilingNumber(e){const n="".concat(this.activePrefix).concat(e),a=await r.getJson("search/patients/by_identifier",{type_id:17,identifier:n});return a?a.map(l=>{const s=new g(l);return{identifier:n,patient_id:s.getID(),given_name:s.getGivenName(),family_name:s.getFamilyName(),state:"N/A",appointment_date:""}}):[]}archiveFilingNumber(){return r.getJson("archive_active_filing_number",{patient_id:this.patientID})}archivePatient(e,n){return r.postJson("swap_active_number",{primary_patient_id:this.patientID,secondary_patient_id:e,identifier:n})}getArchivingCandidates(e=0,n=10){return r.getJson("archiving_candidates",{page:e,page_size:n})}getPastFilingNumbers(){return r.getJson("patients/".concat(this.patientID,"/past_filing_numbers"))}printFilingNumber(){return N(this.patientID)}}const E=_({components:{HisStandardForm:$},data:()=>({service:{},patient:{},fieldComponent:"",fields:[],nextWorkflowRouteName:"",filingNumberAssignment:{}}),watch:{$route:{async handler({query:i,params:t}){if(t&&t.patient_id&&(this.service=new f,this.service.setPatientID(t.patient_id),this.patient=await this.getPatient(t.patient_id),await this.service.loadFilingPrefix()),i){if(this.fields=[this.getFilingNumberField(),this.getCandidateSelectionField(),this.getFilingNumberHistoryField()],i.archive==="true"){await this.archiveFilingNumber();return}i.assign==="true"&&await this.onAssignFilingNumber(),i.trail==="true"&&(this.fieldComponent="view_filing_history"),i.next_workflow_task&&(this.nextWorkflowRouteName=i.next_workflow_task)}},immediate:!0,deep:!0}},methods:{toFID(i){return this.service.formatNumber(i)},async onAssignFilingNumber(){const i=await this.newFilingNumber();i?(this.filingNumberAssignment=i,this.fieldComponent="filing_number_management",h.invalidate("ACTIVE_PATIENT")):(this.fieldComponent="select_candidate_to_swap",F("Out of filing numbers, Please select eligible candidate"))},async newFilingNumber(){const i={primary:{label:"Dormant → Active",value:this.patient.name,other:{activeNumber:this.patient.filingID?this.toFID(this.patient.filingID):"N/A",dormantNumber:"N/A"}},archived:{label:"Active → Dormant",value:"N/A",other:{activeNumber:"N/A",dormantNumber:"N/A"}}};if(this.service.isActiveFilingNum(this.patient.filingID))return i;await this.presentLoading();const t=await this.service.assignFilingNumber();if(m.dismiss(),!u.isEmpty(t)){if(i.primary.other={activeNumber:this.toFID(t.new_identifier.identifier),dormantNumber:this.service.isDormantFilingNum(this.patient.filingID)?this.toFID(this.patient.filingID):"N/A"},!u.isEmpty(t.archived_identifier)){const e=await this.getPatient(t.archived_identifier.patient_id);i.archived={label:"Active → Dormant",value:e.name,other:{activeNumber:this.toFID(t.archived_identifier.identifier),dormantNumber:this.toFID(t.new_identifier.identifier)}}}return i}},async swapExistingFilingNumbers(i){const t=await this.service.archivePatient(i.patient_id,i.identifier);if(t)return{primary:{label:"Dormant → Active",value:this.patient.name,other:{activeNumber:this.toFID(t.active_number),dormantNumber:this.toFID(this.patient.filingID)||"N/A"}},archived:{label:"Active → Dormant",value:"".concat(i.given_name," ").concat(i.family_name),other:{patientID:i.patient_id,activeNumber:this.toFID(t.dormant_number),dormantNumber:this.toFID(t.active_number)}}}},async presentLoading(i="Please wait..."){await(await m.create({message:i,backdropDismiss:!1})).present()},async getPatient(i){const t=await g.findByID(i);if(t){const e=new g(t);return{id:e.getID(),filingID:e.getFilingNumber(),name:"".concat(e.getGivenName()," ").concat(e.getFamilyName())}}return{}},async archiveFilingNumber(){await this.presentLoading("Archiving filing number");try{await this.service.archiveFilingNumber(),await this.service.printFilingNumber(),h.invalidate("ACTIVE_PATIENT")}catch(i){D("".concat(i))}await m.dismiss(),this.$router.back()},async filingNumberSearchKeypad(){const i=await w.create({component:y,backdropDismiss:!1,cssClass:"keypad-modal",componentProps:{title:"Find Active number",strictNumbers:!1,onKeyPress:()=>{}}});await i.present();const{data:t}=await i.onDidDismiss();return t},async getArchivingCandidates(i=0){const t=await this.service.getArchivingCandidates(i);return this.formatCandidateOptions(t)},formatCandidateOptions(i){return i.map(t=>({label:"".concat(t.given_name," ").concat(t.family_name," (").concat(t.state,")"),value:t.identifier,other:{data:t,list:[{label:"Filing #",value:this.toFID(t.identifier),style:{color:"green",fontWeight:"bold"}},{label:"Given name",value:t.given_name},{label:"Family name",value:t.family_name},{label:"Outcome",value:t.state.match(/trans/i)?"TO":t.state.match(/stop/i)?"Tx stopped":t.state},{label:"LAD",value:c.toStandardHisDisplayFormat(t.appointment_date)}]}}))},getFilingNumberHistoryField(){return{id:"view_filing_history",type:d.TT_TABLE_VIEWER,helpText:"Filing Number Trail",condition:()=>!1,options:async()=>{const i=["Status","Filing #","Date Created","Date voided"],e=(await this.service.getPastFilingNumbers()).map(n=>{const a=n.voided===0;return[a?"Active":"Voided",this.toFID(n.identifier),c.toStandardHisDisplayFormat(n.date_created),a?"N/A":c.toStandardHisDisplayFormat(n.date_voided)]});return[{label:"Filing Number Trail",value:"Trail",other:{columns:i,rows:e}}]},config:{toolbarInfo:[{label:"Current filing #",value:this.toFID(this.patient.filingID)},{label:"Status",value:this.service.isActiveFilingNum(this.patient.filingID)?"Active":this.service.isDormantFilingNum(this.patient.filingID)?"Dormant":"N/A"}],hiddenFooterBtns:["Clear","Next","Back","Finish"],footerBtns:[{name:"Get filing #",slot:"end",state:{visible:{default:()=>this.service.isDormantFilingNum(this.patient.filingID)}},onClick:async()=>await this.onAssignFilingNumber()}]}}},getCandidateSelectionField(){let i={},t=0,e="",n=[];return{id:"select_candidate_to_swap",type:d.TT_CARD_SELECTOR,helpText:"Filing Number (Archive)",condition:()=>!1,validation:a=>I.required(a),onload:a=>i=a,onValue:async a=>{if(a&&await A("Do you want to archive ".concat(a.value))){const s=await this.swapExistingFilingNumbers(a.other.data);if(s)return this.filingNumberAssignment=s,this.fieldComponent="filing_number_management",!0}return!1},options:()=>this.getArchivingCandidates(),config:{hiddenFooterBtns:["Clear","Back","Finish","Next"],footerBtns:[{name:"Reset",slot:"end",color:"warning",state:{visible:{default:()=>!!e}},onClick:()=>{e="",i.listData=n,n=[]}},{name:"Specify",slot:"end",color:"success",onClick:async()=>{if(e=await this.filingNumberSearchKeypad(),e){const a=await this.service.getFilingNumber(e);n=[...i.listData],i.listData=this.formatCandidateOptions(a)}}},{name:"Previous batch",slot:"end",state:{visible:{default:()=>!e},disabled:{default:()=>t<=0}},onClick:async()=>{t-=1,i.listData=await this.getArchivingCandidates(t)}},{name:"Next batch",slot:"end",state:{visible:{default:()=>!e},disabled:{default:()=>i.listData&&i.listData.length<=1}},onClick:async()=>{t+=1,i.listData=await this.getArchivingCandidates(t)}}]}}},getFilingNumberField(){return{id:"filing_number_management",type:d.TT_FILING_NUMBER_VIEW,helpText:"Filing Number Management",onload:async()=>await this.service.printFilingNumber(),condition:()=>!1,options:()=>[this.filingNumberAssignment.primary,this.filingNumberAssignment.archived],config:{hiddenFooterBtns:["Cancel","Clear","Next"],footerBtns:[{name:"Print #",slot:"start",onClick:async()=>this.service.printFilingNumber()},{name:"Print Dormant#",slot:"start",state:{visible:{default:()=>{var i,t,e;return!!((e=(t=(i=this.filingNumberAssignment)==null?void 0:i.archived)==null?void 0:t.other)!=null&&e.patientID)}}},onClick:async()=>{const i=new f;i.setPatientID(this.filingNumberAssignment.archived.other.patientID),await i.printFilingNumber()}},{name:"Continue",color:"success",slot:"end",onClick:()=>P(this.patient.id,this.$router,this.$route)}]}}}}});function S(i,t,e,n,a,l){const s=k("his-standard-form");return T(),C(s,{skipSummary:!0,activeField:i.fieldComponent,onOnIndex:t[0]||(t[0]=B=>i.fieldComponent=""),fields:i.fields},null,8,["activeField","fields"])}const L=x(E,[["render",S]]);export{L as default};
