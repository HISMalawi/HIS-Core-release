System.register(["./HisStandardForm-legacy-D_jBcchs.js","./EncounterMixin.vue_vue_type_script_lang-legacy-D4LTomr-.js","./index-legacy-u96QPI-y.js","./encounter_guidelines-legacy-DRit2tAn.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var i,n,r,a,s,o,c,l,d,u,h,p;return{setters:[e=>{i=e.H},e=>{n=e._},e=>{r=e.bg,a=e.d,s=e.t,o=e.F,c=e.V,l=e.bo,d=e._,u=e.r,h=e.o,p=e.c},null,null],execute:function(){class t extends r{constructor(e,t){super(e,80,t)}}const f=a({components:{HisStandardForm:i},mixins:[n],data:()=>({receptionService:{}}),watch:{ready:{async handler(e){e&&(this.receptionService=new t(this.patient.getID(),this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){if(!(await this.receptionService.createEncounter()))return s("Unable to create registration encounter");const i=await this.resolveObs({...t});if(!(await this.receptionService.saveObservationList(i)))return s("Unable to save observations");this.$router.push(`/registration/encounters/patient_services/${this.patientID}`)},getFields(){return[{id:"referral",helpText:"Is the Patient a Referral Case From Another Health Facility?",type:o.TT_SELECT,validation:e=>c.required(e),computedValue:e=>({obs:this.receptionService.buildValueCoded("Is patient referred?",e.value)}),options:()=>[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},{id:"referring_facility_name",helpText:"Referred from",type:o.TT_SELECT,validation:e=>c.required(e),computedValue:({label:e})=>({obs:this.receptionService.buildValueText("Referred from",e)}),condition:e=>"Yes"===e.referral.value,options:(e,t="")=>l(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}}]}}});e("default",d(f,[["render",function(e,t,i,n,r,a){const s=u("his-standard-form");return h(),p(s,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}]]))}}}));
