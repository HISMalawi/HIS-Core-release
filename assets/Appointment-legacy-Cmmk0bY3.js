System.register(["./index-legacy-DA9zHw1d.js","./HisStandardForm-legacy-D6wc8RJ-.js","./EncounterMixin.vue_vue_type_script_lang-legacy-BobdfOxP.js","./appointment_service-legacy-DwpuJFNB.js","./encounter_guidelines-legacy-DTjGeHdm.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(t,e){"use strict";var a,i,n,s,o,d,l,r,p,u,c,m,h,y,f,w;return{setters:[t=>{a=t.d,i=t.bo,n=t.t,s=t.ad,o=t.ak,d=t.di,l=t.H,r=t.bC,p=t.ae,u=t.aa,c=t.c,m=t.af,h=t.a},t=>{y=t.H},t=>{f=t._},t=>{w=t.A},null,null],execute:function(){const e=a({mixins:[f],components:{HisStandardForm:y},data:()=>({appointment:{}}),watch:{ready:{handler(t){t&&(this.appointment=new w(this.patientID,this.providerID),this.fields=[this.getAppointmentField()])},immediate:!0}},methods:{async onFinish(t,e){await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(e)),["CxCa","ANC"].includes(`${i.getActiveApp()?.applicationName}`)||await n(this.patientID),this.nextTask()},getAppointmentField(){const t=(t,e)=>new RegExp(t,"i").test(`${e}`);let e="",a="",n=-1,u=this.appointment.date,c=null;const m={},h=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{id:"set_appointment",helpText:"Appointments booking",type:s.TT_DATE_PICKER,init:async()=>{try{const t=await this.appointment.getNextAppointment();u=t.appointment_date,c=t.drugs_run_out_date}catch(i){if(console.error(i),!(await o("Next appointment/drug-runout date is not available, do you want to proceed anyway?")))return this.gotoPatientDashboard(),!0}const t=await d.appointmentLimit();return a=await d.clinicHolidays(),e=this.patient.getAge()>=18?await d.adultClinicDays():await d.peadsClinicDays(),n=t?parseInt(t):0,!0},onValue:async i=>{const s=l.toStandardHisDisplayFormat(i),d=r(c).diff(i,"days");if(c&&d>7&&!(await o(`\n              The selected appointment date ${s} is ${d} days earlier than the drug run-out date \n              ${l.toStandardHisDisplayFormat(c)}. \n              The client will have excess medication. \n              Do you want to proceed?\n            `)))return!1;if(m[i]??=(await w.getDailiyAppointments(i)).length,u!==i){if(n>=1&&m[i]>=n&&await o(`${m[i]} clients were booked on ${s}`,{header:`APPOINTMENT LIMIT (${n}) REACHED`,cancelBtnLabel:"Proceed",confirmBtnLabel:"New date"}))return!1;if(t(i,a)&&!(await o(`${s} is a clinic holiday, do you want to set an appointment?`)))return!1;if(!t(h[r(i).day()],e)&&!(await o(`${s} is not a clinic day. Do you want to proceed with this date?`)))return!1}return!0},validation:t=>p.required(t),defaultValue:()=>u,computedValue:t=>[this.appointment.buildValueDate("Appointment date",t),this.appointment.buildValueDate("Estimated date",u)],config:{hiddenFooterBtns:["Clear"],helpText:"The appointment date is the date the patient is scheduled to return for their next visit.<br><br>           The estimated date is the date the patient is scheduled to return based on their current visit interval.<br>           Ensure that the next appointment date at least 2 days before ARVs are finished to allow for the safety buffer.<br>           If the appointment date is not set, the estimated date will be used.",helpTitle:"Appointment Date",minDate:()=>this.appointment.date,maxDate:()=>c,supValue:t=>`${m[t]}`,infoItems:t=>"CxCa"===i.getActiveApp()?.applicationName?[{label:"User set appointment date",value:l.toStandardHisDisplayFormat(t)},{label:"Appointments",value:m[t]},{label:"Appointment limit (per/day)",value:n}]:[{label:"Medication Run out Date",value:c?l.toStandardHisDisplayFormat(c):"Not available"},{label:"User set appointment date",value:l.toStandardHisDisplayFormat(t)},{label:"Appointments",value:m[t]},{label:"Appointment limit (per/day)",value:n}]}}}}});t("default",u(e,[["render",function(t,e,a,i,n,s){const o=m("his-standard-form");return h(),c(o,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
