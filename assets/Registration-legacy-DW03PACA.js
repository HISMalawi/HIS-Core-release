System.register(["./HisStandardForm-legacy-Dsz-zwoz.js","./index-legacy-DCqMHtVA.js","./useEncounter-legacy-C7p8hYha.js","./commons-legacy-CVWA48Ud.js","./isEmpty-legacy-DF-q0G1I.js","./_Set-legacy-DOJa0M6S.js","./_setToArray-legacy-Blqg112e.js","./encounter_guidelines-legacy-D7AZAsep.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,a){"use strict";var t,i,n,l,o,r,s,u,c,d,p,v,T,y,g,b,f,_;return{setters:[e=>{t=e.H},e=>{i=e.bf,n=e.d,l=e.K,o=e.F,r=e.V,s=e.bn,u=e.t,c=e.bm,d=e.o,p=e.c,v=e.cA,T=e.T,y=e.P,g=e.cT},e=>{b=e.u},e=>{f=e.y,_=e.r},null,null,null,null,null],execute:function(){class a extends i{constructor(e,a){super(e,104,a)}}e("default",n({__name:"Registration",setup(e){let i,n;const E=l([]),{goToNextTask:m,patientDashboardUrl:N}=b(((e,t,l)=>{n=l,i=new a(t,e),E.value=[{id:"visit_type",helpText:"Type of visit",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({obs:i.buildValueCoded("Type of visit",e.value)}),options:()=>[{label:"New",value:"New patient"},{label:"Referral",value:"Referral"},{label:"Re-visiting",value:"Re-visiting"}]},{id:"referring_facility_name",helpText:"Referred from",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:({label:e})=>({obs:i.buildValueText("Referred from",e)}),condition:e=>"Referral"===e.visit_type.value,options:(e,a="")=>s(a),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"national_id_available",helpText:"National ID Available",type:o.TT_SELECT,validation:e=>r.required(e),condition:()=>"Unknown"===n.getMWNationalID(),options:()=>f(),appearInSummary:()=>!1},{id:"national_id",helpText:"Enter National ID",type:o.TT_TEXT,validation:e=>r.isMWNationalID(e),condition:e=>"Yes"===e.national_id_available.value,beforeNext:async e=>!e.value||!(await async function(e){return!!e&&(await y.findByOtherID(g,e)).length>0}(e.value.toString()))||(u("National ID already exists"),!1),summaryMapValue:({value:e})=>({value:e,label:"National ID"}),config:{casing:"uppercase",customKeyboard:[c,[["Delete"]]]}},{id:"patient_pregnant",helpText:"Patient pregnant",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:({value:e})=>({obs:i.buildValueCoded("PATIENT PREGNANT",e)}),condition:()=>n.isChildBearing(),options:()=>f()}]}));async function h(e,a){if(await async function(e){const a=e.national_id_available,t=e.national_id;a&&"Yes"===a.value&&(await n.updateMWNationalId(t.value),T.invalidate("ACTIVE_PATIENT"))}(e),!(await i.createEncounter()))return u("Unable to create registration encounter");const t=await _({...a});if(!(await i.saveObservationList(t)))return u("Unable to save observations");m()}return(e,a)=>(d(),p(t,{cancelDestinationPath:v(N),fields:E.value,onFinishAction:h},null,8,["cancelDestinationPath","fields"]))}}))}}}));
