System.register(["./index-legacy-CHWOUhn2.js","./EncounterMixin.vue_vue_type_script_lang-legacy-CTDDZHqc.js","./RiskFactorModal-legacy-DujGAJhO.js","./htn_service-legacy-PSFwAw1v.js","./vitals_service-legacy-DJ9Hh5ij.js","./encounter_guidelines-legacy-ClzuompO.js","./GuidelineEngine-legacy-KsvQuFdF.js","./HisStandardForm-legacy-L1YqC4Oo.js"],(function(t,e){"use strict";var a,n,s,i,r,o,l,c,u,h,d,p,g,m,f,y,b,w,T,I,D,k,v,H,P,_,F,C,N,R,S,O,B,V,x,E,$,j,A,z,U,G,Y,M,L,K,q;return{setters:[t=>{a=t.d,n=t.R,s=t.k,i=t.i,r=t.j,o=t.l,l=t.ap,c=t.aq,u=t.f,h=t.cK,d=t.cO,p=t.ar,g=t.m,m=t.I,f=t.h,y=t.D,b=t.L,w=t.aU,T=t.H,I=t.S,D=t.a0,k=t.t,v=t.a_,H=t.aP,P=t.aZ,_=t.O,F=t.ae,C=t.ah,N=t.b0,R=t.U,S=t._,O=t.r,B=t.o,V=t.c,x=t.w,E=t.b,$=t.A,j=t.v,A=t.x,z=t.z,U=t.u,G=t.y,Y=t.B},t=>{M=t._},t=>{L=t.R},t=>{K=t.B},t=>{q=t.V},null,null,null],execute:function(){const e={background:"#444444"},Z=a({mixins:[M],components:{DataTable:n,IonTitle:s,IonToolbar:i,IonHeader:r,IonContent:o,IonGrid:l,IonRow:c,IonButton:u,IonRadioGroup:h,IonRadio:d,IonCol:p,IonFooter:g,IonPage:m,IonItem:f,IonLabel:y},data:()=>({htn:{},hasARVNumber:!0,suggestedNumber:"",columns:[[b.thTxt("Date",{style:e}),b.thTxt("Systolic",{style:e}),b.thTxt("Diastolic",{style:e}),b.thTxt("BP Drugs",{style:e}),b.thTxt("Action / Note",{style:e})]],bpGradeColorMap:{"N/A":"#ffffff",normal:"#ffffff","grade 1":"#FFC3CE","grade 2":"#F20056","grade 3":"#FF3333"},rows:[],riskFactors:[],action:null,trail:[],date:null,patientOnBPDrugs:!1,patientFirstVisit:!1,normatensive:!1,patientHasHyperTensionObs:!1,currentDrugs:[],items:[],isEnrolledInHTN:!1,isAliveOnHTN:!1,HTNProgramID:20,aliveState:160,refer:!1}),watch:{ready:{async handler(t){if(!t)return;const e=await w.create({message:"Please wait...",backdropDismiss:!1});await e.present(),this.htn=new K(this.patientID,this.providerID),this.trail=await this.htn.getBPTrail(),this.rows=this.formatBpTrailRows(this.trail),this.normatensive=K.isBpNormotensive(this.trail),this.riskFactors=await this.getRiskFactors(),this.date=T.toStandardHisDisplayFormat(I.getSessionDate()),await this.isTransfered(),await this.hasHyperTenstion(),await this.getTreatmentStatus(),await this.getProgramStatus(),w.dismiss(),this.patientFirstVisit&&this.patientOnBPDrugs&&await this.alertTransferIn(),this.getItems()},immediate:!0}},computed:{totalRiskFactors(){return this.riskFactors.filter((t=>"Yes"===t.value)).length},showClinicianButton:()=>!(D.isClinician()&&D.isDoctor())},methods:{async onFinish(){if(this.action||this.refer){if(!(await this.htn.createEncounter()))return k("Unable to create encounter");if(this.refer){if(!(await this.htn.saveValueCodedObs("Refer patient to clinician","Yes")))return k("Unable to create Obs");this.gotoPatientDashboard()}else{if(!(await this.htn.saveValueTextObs("Plan",this.action.label)))return k("Unable to create Obs");const t={state:this.action.value};if(await this.htn.enrollPatient(t),"function"==typeof this.action?.other?.action)return this.action.other.action();this.nextTask()}}else k("Please select an action")},referPatient(){this.refer=!0,this.onFinish()},goToDiagnosis(){return this.$router.push({path:`/art/encounters/hypertension_diagnosis/${this.patientID}`})},async hasHyperTenstion(){const t=await v.getFirstValueCoded(this.patientID,"Patient has hypertension");this.patientHasHyperTensionObs=!!`${t}`.match(/yes|no/i)},async isTransfered(){const t=await v.getFirstValueCoded(this.patientID,"Transferred");this.patientFirstVisit=!t},async getTreatmentStatus(){const t=await v.getFirstValueText(this.patientID,"Treatment status");this.patientOnBPDrugs=!(!t||!t.match(/BP Drugs started/i))},async getProgramStatus(){const t=await H.getPatientPrograms(this.patientID);this.isEnrolledInHTN=t.filter((t=>"HYPERTENSION PROGRAM"===t.program.name)).length>0,this.isEnrolledInHTN&&await this.programState()},async programState(){const t=await H.getPatientStates(this.patientID,this.HTNProgramID);this.isAliveOnHTN=t.filter((t=>"Alive"===t.name)).length>0},async getRiskFactors(){const t=P.getConceptsByCategory("risk factors").map((async t=>{const e=await v.getFirstValueCoded(this.patientID,t.name);return{concept:t.name,value:e}}));return Promise.all(t)},formatBpTrailRows(t){return Object.keys(t).map((e=>{const a=T.toStandardHisDisplayFormat(e);this.currentDrugs=this.currentDrugs.concat(t[e].drugs);const n={background:(()=>{const a=K.getBpGrade(parseInt(t[e].sbp),parseInt(t[e].dbp));return this.bpGradeColorMap[a]})()};return[b.tdDate(a,{style:n}),b.td(t[e].sbp,{style:n}),b.td(t[e].dbp,{style:n}),b.td(t[e].drugs.join(", "),{style:n}),b.td(t[e].note,{style:n})]}))},async showRiskFactors(){const t=await _.create({component:L,backdropDismiss:!1,cssClass:"large-modal",componentProps:{factors:this.riskFactors}});t.present();const{data:e}=await t.onDidDismiss();F.isEmpty(e)||(this.riskFactors=e.map((t=>{const e=!0===t.isChecked?"Yes":"No";return{concept:t.concept,value:e}})))},async alertTransferIn(){"Yes"===await C("Transfer in","Does the patient want to transfer in for HTN management?","",[{name:"Yes",slot:"end",color:"success"},{name:"No",slot:"start",color:"danger"}])?(await this.enrollInHTN(),await this.setHtnTransferred("Yes"),this.patientFirstVisit=!1,await this.getItems()):(await this.setHtnTransferred("No"),this.nextTask())},async enrollInHTN(){try{const t=new N(this.patientID);t.setProgramId(this.HTNProgramID),t.setStateDate(H.getSessionDate()),t.setStateId(this.aliveState),await t.enrollProgram(),await t.updateState(),this.isEnrolledInHTN=!0,R("Patient is now enrolled in HTN")}catch(t){console.error(t),k(`${t}`)}},async setHtnTransferred(t){const e=new q(this.patientID,this.providerID);await e.createEncounter()?await e.saveValueCodedObs("Transferred",t)||k("Unable to create observation Transferred for patient"):k("Unable to create patient transfer encounter")},async getItems(){this.currentDrugs.length>0?this.items=[{label:"Did not take prescribed drugs",value:"on treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_adherence/${this.patientID}`)}},{label:"Continue drugs",value:"on treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_adherence/${this.patientID}`)}},{label:"Review drugs",value:"on treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_adherence/${this.patientID}?review=true`)}}]:(this.items=[{label:"Lifestyle advice given",value:"Lifestyle changes only"},{label:"Not yet stable on ART",value:"Symptomatic but not in treatment"},{label:"Patient declining BP drugs ",value:"Symptomatic but not in treatment"}],this.normatensive&&this.items.push({label:"Return to annual screening",value:"Alive"}),this.items.push({label:"Start anti hypertensives",value:"On treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_prescription/${this.patientID}`)}}))}}}),J={key:0,style:{color:"green"}},Q={slot:"end"},W=$("h1",{style:{"text-align":"center"}},"Actions",-1);t("default",S(Z,[["render",function(t,e,a,n,s,i){const r=O("ion-title"),o=O("ion-button"),l=O("ion-toolbar"),c=O("ion-header"),u=O("data-table"),h=O("ion-content"),d=O("ion-label"),p=O("ion-radio"),g=O("ion-item"),m=O("ion-col"),f=O("ion-row"),y=O("ion-grid"),b=O("ion-radio-group"),w=O("ion-footer"),T=O("ion-page");return B(),V(T,null,{default:x((()=>[E(c,null,{default:x((()=>[E(l,null,{default:x((()=>[E(r,null,{default:x((()=>[$("span",null,"BP management screening on "+j(t.date),1),t.patientOnBPDrugs?(B(),A("small",J," (Patient already on BP drugs)")):z("",!0)])),_:1}),$("span",Q,[t.totalRiskFactors>0?(B(),V(o,{key:0,color:"danger",onClick:t.showRiskFactors},{default:x((()=>[U("View/Edit risk factors "+j(t.totalRiskFactors),1)])),_:1},8,["onClick"])):z("",!0),0===t.totalRiskFactors?(B(),V(o,{key:1,onClick:t.showRiskFactors},{default:x((()=>[U("add riskfactors")])),_:1},8,["onClick"])):z("",!0)])])),_:1})])),_:1}),E(h,null,{default:x((()=>[E(u,{config:{showIndex:!1},columns:t.columns,rows:t.rows},null,8,["columns","rows"])])),_:1}),E(w,null,{default:x((()=>[E(l,null,{default:x((()=>[W,E(b,{modelValue:t.action,"onUpdate:modelValue":e[0]||(e[0]=e=>t.action=e)},{default:x((()=>[E(y,null,{default:x((()=>[E(f,null,{default:x((()=>[(B(!0),A(Y,null,G(t.items,((t,e)=>(B(),V(m,{size:"4",key:e},{default:x((()=>[E(g,null,{default:x((()=>[E(d,{style:{"font-size":"1.0rem","font-weight":"bold"}},{default:x((()=>[U(j(t.label),1)])),_:2},1024),E(p,{value:t},null,8,["value"])])),_:2},1024)])),_:2},1024)))),128))])),_:1})])),_:1})])),_:1},8,["modelValue"])])),_:1}),E(l,{color:"dark"},{default:x((()=>[E(o,{size:"large",color:"danger",slot:"start",onClick:t.gotoPatientDashboard},{default:x((()=>[U(" cancel ")])),_:1},8,["onClick"]),t.showClinicianButton?(B(),V(o,{key:0,size:"large",color:"danger",slot:"start",onClick:t.referPatient},{default:x((()=>[U(" Refer to clinician ")])),_:1},8,["onClick"])):z("",!0),t.patientHasHyperTensionObs?z("",!0):(B(),V(o,{key:1,size:"large",slot:"end",onClick:t.goToDiagnosis},{default:x((()=>[U(" Hypertension Diagnosis ")])),_:1},8,["onClick"])),t.patientHasHyperTensionObs&&!t.isEnrolledInHTN?(B(),V(o,{key:2,size:"large",slot:"end",onClick:t.enrollInHTN},{default:x((()=>[U(" Enroll in HTN ")])),_:1},8,["onClick"])):z("",!0),t.patientHasHyperTensionObs?(B(),V(o,{key:3,size:"large",color:"success",slot:"end",onClick:t.onFinish},{default:x((()=>[U(" Finish ")])),_:1},8,["onClick"])):z("",!0)])),_:1})])),_:1})])),_:1})}]]))}}}));
