System.register(["./index-legacy-iEOS67hm.js","./HisStandardForm-legacy-UdjTFVCq.js","./useEncounter-legacy-0Rx46XKA.js","./util-legacy-C4Rh4NgV.js","./commons-legacy-jt-vwAZb.js","./isEmpty-legacy-j3LEhgDm.js","./encounter_guidelines-legacy-CLZ4M_-v.js","./GuidelineEngine-legacy--xbEVG44.js"],(function(e,t){"use strict";var a,i,n,l,r,o,u,s,c,d,E,T,_,p,v,N,S,g,R,A,m,y;return{setters:[e=>{a=e.d,i=e.r,n=e.bI,l=e.dO,r=e.ab,o=e.bg,u=e.ac,s=e.dR,c=e.bO,d=e.u,E=e.v,T=e.w,_=e.x,p=e.y,v=e.aR,N=e.bt,S=e.dP,g=e.a5},e=>{R=e.H},e=>{A=e.u},e=>{m=e.g},e=>{y=e.r},null,null,null],execute:function(){e("default",a({__name:"Reception",setup(e){const t=i([]),a=new n(-1,l.TB_RECEPTION),{goToNextTask:b,patientDashboardUrl:I}=A(((e,i,n)=>{a.patientID=i,a.providerID=e,t.value=[(()=>{let e={};return{id:"treatForIpt",helpText:"Enroll in TPT program?",type:r.TT_SELECT,requireNext:!1,init:async()=>(e=await o.getProgramInformation(i),!0),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}],validation:e=>u.required(e),condition:()=>!e.tb_positive&&n.getAge()>=0&&n.getAge()<s}})(),{id:"catchmentArea",helpText:"Patient living within catchment area?",type:r.TT_SELECT,requireNext:!1,Validation:e=>u.required(e),computedValue:e=>({concept_id:m("LIVES_NEAR"),value_coded:m(`${e.value}`),obs_datetime:a.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]},{id:"livesNearTB",helpText:"Patient living near a TB registration centre?",type:r.TT_SELECT,requireNext:!1,computedValue:e=>({concept_id:m("TRANSFERRED_OUT_EXTERN"),value_coded:m(`${e.value}`),obs_datetime:a.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}],validation:e=>u.required(e),condition:e=>"NO_ANSWER"===e.catchmentArea.value},{id:"locationId",type:r.TT_SELECT,helpText:"Select TB Registration Centre:",computedValue:e=>({concept_id:m("FACILITY_NAME"),value_text:e.label,obs_datetime:a.date}),options:(e,t="")=>c(t),config:{showKeyboard:!0,isFilterDataViaApi:!0},validation:e=>u.required(e),condition:e=>"YES_ANSWER"===e.livesNearTB.value,requireNext:!1}]}));async function h(e,t){if("NO_ANSWER"===e.treatForIpt?.value)return v.push(I.value);await a.createEncounter(),await a.saveObservationList(await y(t));const i=new N(a.patientID);i.setStateDate(a.date);try{await i.enrollProgram()}catch(n){console.warn(`${n}`)}"YES_ANSWER"===e.treatForIpt?.value&&i.setStateId(S.TPT),"YES_ANSWER"===e.livesNearTB?.value&&i.setStateId(S.TRANSFER_OUT),-1!=i.stateId&&await i.updateState(),b()}return(e,a)=>(d(),E(p(g),null,{default:T((()=>[_(R,{cancelDestinationPath:p(I),onFinishAction:h,fields:t.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
