import{d as g,a5 as b,r,ap as v,t as D,av as _,d1 as C,cm as V,cn as u,O as h,a6 as w,v as L,w as B,ab as f,u as N,x as R}from"./index-ii3Qn3XY.js";import{v as S}from"./TableView-VVZCLID7.js";import{V as $}from"./viral_load_report-PcvmPBCO.js";import{w as E,a as F,c as G}from"./v2utils-E9_vWRTr.js";import"./Export-K1a5kYdx.js";import"./index--iKDbRto.js";const I=g({components:{IonPage:b,v2Datatable:S},setup(){const e=r([]),l=r(""),i=r(!1),t=new $,s=r(!1),c=v(()=>[[s.value?{label:"Filing#",ref:"identifier"}:F("identifier"),{label:"First name",ref:"given_name",exportable:!1},{label:"Last name",ref:"family_name",exportable:!1},{label:"Gender",ref:"gender",toValue:a=>V(a)},{label:"DOB",ref:"birthdate",toValue:a=>u(a)},{label:"Date of VL Order",ref:"order_date",toValue:a=>u(a)},G()]]),o=()=>E(async()=>{if(!(t.startDate&&t.endDate))return h("Start date and end date required!");e.value=[],e.value=await t.getVlCollection()}),n=()=>C({onFinish:(a,m,p,d)=>{d&&t.setOccupation(d),l.value="".concat(p),t.startDate=a,t.endDate=m,o()}});return D(()=>{_.get("IS_ART_FILING_NUMBER_ENABLED").then(a=>s.value=a),!e.value.length&&n()}),{reportData:e,isLoading:i,configure:n,generate:o,columns:c,period:l}}});function O(e,l,i,t,s,c){const o=f("v2Datatable"),n=f("ion-page");return N(),L(n,null,{default:B(()=>[R(o,{title:"VL Collection","default-sort-order":"asc","default-sorted-column":"identifier",subtitle:e.period,columns:e.columns,columnData:e.reportData,rowsPerPage:50,onConfigure:e.configure,onRefresh:()=>e.generate(),"report-prefix":"Clinic"},null,8,["subtitle","columns","columnData","onConfigure","onRefresh"])]),_:1})}const q=w(I,[["render",O]]);export{q as default};
