var v=Object.defineProperty;var b=(e,i,t)=>i in e?v(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t;var u=(e,i,t)=>b(e,typeof i!="symbol"?i+"":i,t);import{_ as f}from"./EncounterMixin.vue_vue_type_script_lang-v2aYCq6R.js";import{bQ as m,d as T,I as y,ad as o,ae as a,aj as g,dQ as d,aN as p,aa as _,af as h,a as O,c as V,w as x,b as E}from"./index-CMZASHAR.js";import"./encounter_guidelines-CJXpBOk4.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-BCjM4-bc.js";class D extends m{constructor(t,r){super(t,82,r);u(this,"para");u(this,"gravida");u(this,"nextGravida");this.para=0,this.gravida=0,this.nextGravida=0}async initData(){this.para=await this.getFirstValueNumber("Parity")||0,this.gravida=await this.getFirstValueNumber("Gravida")||0,this.nextGravida=this.gravida>0?this.gravida+1:0}}const S=T({components:{IonPage:y},mixins:[f],data:()=>({service:{},delieveryOptionData:{},abortionOptionData:{}}),watch:{ready:{async handler(e){e&&(this.service=new D(this.patientID,this.providerID),await this.service.initData(),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,i){const t=await this.resolveObs(i);await this.service.createEncounter(),await this.service.saveObservationList(t),this.nextTask()},buildAbortionFields(){return[{label:"Year of abortion",value:"",required:!0,field:{id:"year",helpText:"Year of abortion",type:o.TT_NUMBER,computedValue:e=>this.service.buildValueNumber("Year of abortion",e.value),validation:e=>this.validateSeries([()=>a.required(e),()=>{const[i]=this.patient.getBirthdate().split("-"),[t]=this.service.getDate().split("-");return a.rangeOf(e,i,t)}])}},{label:"Place of abortion",value:"",required:!0,field:{id:"place_of_abortion",helpText:"Place of abortion",type:o.TT_SELECT,computedValue:e=>this.service.buildValueText("Place of birth",e.value),validation:e=>this.validateSeries([()=>a.required(e)]),options:()=>this.mapStrToOptions(["Health facility","In transit","TBA","Home","Other"])}},{label:"Type of abortion",value:"",required:!0,field:{id:"type_of_abortion",helpText:"Type of abortion",type:o.TT_SELECT,computedValue:e=>this.service.buildValueCoded("Type of Abortion",e.value),validation:e=>this.validateSeries([()=>a.required(e)]),options:()=>this.mapStrToOptions(["Complete abortion","Incomplete abortion"])}},{label:"Procedure done",value:"",required:!0,field:{id:"procedure_done",helpText:"Procedure done",type:o.TT_SELECT,validation:e=>this.validateSeries([()=>a.required(e)]),computedValue:e=>this.service.buildValueText("Procedure done",e.value),options:()=>this.mapStrToOptions(["Manual Vacuum Aspiration (MVA)","Evacuation","None"])}},{label:"Gestation (weeks)",value:"",required:!0,field:{id:"gestation_weeks",helpText:"Gestation (weeks)",type:o.TT_NUMBER,computedValue:e=>this.service.buildValueNumber("Gestation",e.value),validation:e=>this.validateSeries([()=>a.required(e),()=>a.rangeOf(e,0,28)])}}]},buildBirthDelieveryFields(){return[{label:"Year of birth",value:"",required:!0,field:{id:"year",helpText:"Year of birth",type:o.TT_NUMBER,computedValue:e=>this.service.buildValueNumber("Year of Birth",e.value),validation:e=>this.validateSeries([()=>a.required(e),()=>{const[i]=this.patient.getBirthdate().split("-"),[t]=this.service.getDate().split("-");return a.rangeOf(e,i,t)}])}},{label:"Place of birth",value:"",required:!0,field:{id:"place_of_birth",helpText:"Place of birth",type:o.TT_SELECT,computedValue:e=>this.service.buildValueText("Place of birth",e.value),validation:e=>a.required(e),options:()=>this.mapStrToOptions(["Health facility","In transit","TBA","Home"])}},{label:"Gestation (weeks)",value:"",required:!0,field:{id:"gestation_weeks",helpText:"Gestation (weeks)",type:o.TT_NUMBER,computedValue:e=>this.service.buildValueNumber("Gestation",e.value),validation:e=>this.validateSeries([()=>a.required(e),()=>a.rangeOf(e,24,42)])}},{label:"Method of delivery",value:"",required:!0,field:{id:"method_of_delivery",helpText:"Method of delivery",type:o.TT_SELECT,computedValue:e=>this.service.buildValueText("Method of delivery",e.value),validation:e=>a.required(e),options:()=>this.mapStrToOptions(["Spontaneous Vertex","Caesarean Section","Vacuum extraction delivery","Breech","Forceps","Others"])}},{label:"Condition at birth",value:"",required:!0,field:{id:"condition_at_birth",helpText:"Condition at birth",type:o.TT_SELECT,computedValue:e=>this.service.buildValueText("Condition at Birth",e.value),onValueUpdate:(e,i)=>{i.forEach(t=>{t.label==="Alive now"&&(t.required=e.value==="Alive",t.disabled=e.value!="Alive")})},validation:e=>a.required(e),options:()=>this.mapStrToOptions(["Alive","Macerated Still Birth (MSB)","Fresh Still Birth (FSB)"])}},{label:"Birth weight",value:"",required:!0,field:{id:"birth_weight",helpText:"Birth weight",type:o.TT_TEXT,computedValue:e=>this.service.buildValueText("Birth weight",e.value),validation:e=>this.validateSeries([()=>a.required(e),()=>e.value!="Unknown"&&!"".concat(e.value).match(/^\d{1,3}\.\d{1,5}$/)?["Invalid weight ".concat(e.value,". Don't forget decimal point")]:null,()=>["N/A","Unknown"].includes("".concat(e.value))?null:a.rangeOf(e,1,5)]),config:{customKeyboard:[[["1","2","3"],["4","5","6"],["7","8","9"],["","0","."]],[["Unknown","Delete"]]],onUnknownEstimateField:()=>({id:"birth_weight_estimate",helpText:"Birth weight estimate",type:o.TT_SELECT,validation:e=>a.required(e),options:()=>this.mapOptions(["Normal","Big baby","Small baby"])}),noChars:!1}}},{label:"Alive now",value:"",disabled:!0,required:!1,field:{id:"alive_now",helpText:"Alive now",type:o.TT_SELECT,computedValue:e=>this.service.buildValueCoded("Alive",e.value),onValueUpdate:(e,i)=>{i.forEach(t=>{t.label==="Age at death"&&(t.required=e.value==="No",t.disabled=e.value==="Yes")})},validation:e=>this.validateSeries([()=>a.required(e)]),options:()=>this.yesNoOptions()}},{label:"Age at death",value:"",disabled:!0,required:!1,field:{id:"age_at_death",helpText:"Age at death",type:o.TT_AGE_INPUT,computedValue:e=>this.service.buildValueText("Age at Death",e.value),validation:e=>this.validateSeries([()=>a.required(e)])}}]},constructOptionData(e,i,t){const r=parseInt("".concat(i)),n={...e};Object.keys(n).forEach(l=>{parseInt(l)+1>r&&delete n[l]});for(let l=0;l<r;++l)n[l]||(n[l]=t);return n},getFields(){return[{id:"gravida",helpText:"Gravida",type:o.TT_NUMBER,defaultValue:()=>this.service.nextGravida>0?this.service.nextGravida:null,beforeNext:async e=>{const i=parseInt("".concat(e.value));return i<=1&&(this.abortionOptionData={},this.delieveryOptionData={}),!(i>9&&!await g("The value is greater than maximum 9. Are you sure about this value?"))},computedValue:e=>this.service.buildValueNumber("Gravida",e.value),validation:e=>this.validateSeries([()=>a.required(e),()=>a.rangeOf(e,this.service.nextGravida||1,19)])},{id:"para",helpText:"Para",type:o.TT_NUMBER,beforeNext:(e,i)=>{this.delieveryOptionData=this.constructOptionData(this.delieveryOptionData,e.value,{});const t=parseInt("".concat(i.gravida.value))-parseInt("".concat(e.value))-1;return this.abortionOptionData=this.constructOptionData(this.abortionOptionData,t,this.buildAbortionFields()),!0},condition:e=>e.gravida.value>1,computedValue:e=>this.service.buildValueNumber("Parity",e.value),validation:(e,i)=>this.validateSeries([()=>a.required(e),()=>a.rangeOf(e,this.service.para,i.gravida.value-1)])},{id:"known_pregnancies",helpText:"Pregnancies with available information",type:o.TT_ANC_PREGNANCY_INPUT_CONFIG,onValue:e=>(e.forEach((i,t)=>{if(!i.isChecked){this.delieveryOptionData[t]={};return}this.delieveryOptionData[t]=this.constructOptionData(this.delieveryOptionData[t],i.value,this.buildBirthDelieveryFields())}),!0),condition:e=>e.gravida.value>1&&e.para.value>0,options:e=>Object.keys(this.delieveryOptionData).map(i=>{const t=parseInt(i)+1;return{label:"".concat(t," <sup>").concat(d(t),"</sup>"),value:Object.keys(this.delieveryOptionData[i]).length||1,isChecked:(e.known_pregnancies||[]).length?!p.isEmpty(this.delieveryOptionData[i]):!0}}),config:{hiddenFooterBtns:["Clear"],pregnancyCount:e=>e.para.value}},(()=>{const e=i=>i.map(t=>t.other.data).flat(2).filter(t=>t.required&&!"".concat(t.value).length?!1:!!t.required).map(t=>{var r,n;return typeof((r=t.field)==null?void 0:r.computedValue)=="function"?(n=t.field)==null?void 0:n.computedValue(t.value):void 0});return{id:"pregnancy_details",helpText:"Pregnancy details",type:o.TT_ANC_PREGNANCY_DETAILS_INPUT,condition:i=>{const t=parseInt("".concat(i.gravida.value))-parseInt("".concat(i.para.value))-1;return i.gravida.value>1&&(t>=1||i.known_pregnancies.some(r=>r.isChecked))},validation:i=>this.validateSeries([()=>a.required(i),()=>i.map(r=>r.other.data).flat(2).every(r=>!(typeof r.required=="boolean"&&r.required&&!"".concat(r.value).length))?null:["Pregnancy details incomplete"]]),config:{hiddenFooterBtns:["Clear"]},onValue:i=>{i.forEach(t=>{switch(t.other.type){case"delieveryOptionData":this.delieveryOptionData[t.other.index]=t.other.data;break;case"abortionOptionData":this.abortionOptionData[t.other.index]=t.other.data[0];break}})},computedValue:i=>e(i).filter(t=>t),options:()=>{const i=[];return Object.keys(this.delieveryOptionData).forEach(t=>{if(p.isEmpty(this.delieveryOptionData[t]))return;const r=parseInt(t)+1,n={label:"".concat(r," <sup>").concat(d(r),"</sup> delivery"),value:-1,other:{type:"delieveryOptionData",index:t,data:[],rowTitles:[]}};Object.keys(this.delieveryOptionData[t]).forEach(l=>{const s=parseInt(l)+1;n.other.rowTitles.push("".concat(s,"<sup>").concat(d(s),"</sup> born in ").concat(n.label," pregnancy")),n.other.data.push(this.delieveryOptionData[t][l])}),i.push(n)}),Object.keys(this.abortionOptionData).forEach(t=>{const r=parseInt(t)+1;i.push({label:"".concat(r," <sup>").concat(d(r),"</sup> abortion"),value:-1,other:{type:"abortionOptionData",index:t,data:[this.abortionOptionData[t]]}})}),i}}})(),{id:"previous_complications",helpText:"Previous complications",type:o.TT_MULTI_SELECT_GRID,condition:e=>e.gravida.value>1,validation:e=>this.validateSeries([()=>a.required(e),()=>e.map(t=>t.value==="").some(Boolean)?["Please complete Complication selection!!"]:null]),computedValue:e=>e.filter(i=>i.value!="").map(i=>this.service.buildValueCoded(i.label,i.value)),config:{hiddenFooterBtns:["Clear"]},options:()=>[{label:"Episiotomy",value:"",other:{options:this.yesNoOptions()}},{label:"Hemorrhage",value:"",other:{options:this.mapStrToOptions(["No","APH","PPH"])}},{label:"Pre-eclampsia",value:"",other:{onClick:(e,i)=>{i.forEach(t=>{t.label==="Eclampsia"&&(t.other.visible=e.value==="Yes")})},options:this.yesNoOptions()}},{label:"Eclampsia",value:"",other:{visible:!1,options:this.yesNoOptions()}}]}]}}});function w(e,i,t,r,n,l){const s=h("his-standard-form"),c=h("ion-page");return O(),V(c,null,{default:x(()=>[E(s,{fields:e.fields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}const I=_(S,[["render",w]]);export{I as default};
