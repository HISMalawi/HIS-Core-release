import{d as l,K as m,b5 as d,cV as u,V as f,o as _,c as v,w as E,b as T,cl as n,I as b}from"./index-BCTN_bnC.js";import{F as h}from"./dynamic-import-helper-BkBZiFw5.js";import{H as D}from"./HisStandardForm-CaDwl-hA.js";import{u as I}from"./useEncounter-CDUT-p5Y.js";import{g as r}from"./util-CyjuS_4X.js";import{r as C}from"./commons-BDvZ1JFN.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";import"./isEmpty-OXtHK5dz.js";import"./_Set-VKtKUQAI.js";import"./_setToArray-BLmuRUHx.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";const M=l({__name:"Examination",setup(g){const i=m([]),e=new d(-1,u.EXAMINATION),{goToNextTask:s,patientDashboardUrl:p}=I((t,a)=>{e.patientID=a,e.providerID=t,i.value=[{id:"diagnosisType",helpText:"Method of Diagnosis:",type:h.TT_SELECT,validation:o=>f.required(o),computedValue:o=>({concept_id:r("PROCEDURE_TYPE"),value_coded:r("".concat(o.value)),obs_datetime:e.date}),options:()=>[{value:"LAB_ORDER",label:"Lab Order"},{value:"CLINICAL",label:"Clinical"}]}]});async function c(t,a){await e.createEncounter(),await e.saveObservationList(await C(a)),s()}return(t,a)=>(_(),v(n(b),null,{default:E(()=>[T(D,{cancelDestinationPath:n(p),onFinishAction:c,fields:i.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{M as default};
