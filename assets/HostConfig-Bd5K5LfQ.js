import{d,a0 as l,by as a,t as h,F as r,V as c,bz as g,aj as f,_ as m,r as S,o as T,c as _}from"./index-BFVcutZq.js";import{H as w}from"./HisStandardForm-DO3sZVdL.js";const u="network_presets",k=d({components:{HisStandardForm:w},methods:{onFinish(){this.$router.back()},usingCustomIp(e){var t,o;return(t=e.presets)!=null&&t.value?/custom/i.test("".concat((o=e.presets)==null?void 0:o.value)):!0},uniqueNetworkPresets(e){const t=e.reduce((o,s)=>({...o,["".concat(s.site).trim().toUpperCase()]:s}),{});return Object.keys(t).map(o=>t[o])},async runHealthCheck(e,t,o){await(await l.create({message:"Please wait...",backdropDismiss:!1})).present(),a.setLocalStorage(e,t,o);const i=await a.healthCheck();if(l.dismiss(),!(i&&i.status===200)||!i){try{const n=await a.expandPath("_health");h("Unable to connect to: ".concat(n))}catch(n){console.warn(n)}return this.clearLocalStorage(),!1}return!0},getFields(){this.fields=[{id:"presets",helpText:"Network sites",type:r.TT_SELECT,init:async()=>{this.networkSites=JSON.parse(localStorage.getItem(u)||"[]");try{const e=await fetch("/config.json");if(e.ok){const t=await e.json();this.networkSites=this.uniqueNetworkPresets(((t==null?void 0:t.networkSites)||[]).concat(this.networkSites))}}catch(e){console.error(e)}return!0},beforeNext:async e=>{if(e.value!="custom"){const{protocol:t,ip:o,port:s}=e.other;return await this.runHealthCheck(t,o,s)}return!0},isRequired:()=>!0,condition:()=>this.networkSites.length,options:()=>[...this.networkSites.map(e=>({label:e.site,value:e.ip,other:e})),{label:"Custom Configuration",value:"custom"}]},{id:"protocol",helpText:"Select Protocol",type:r.TT_SELECT,requireNext:!1,validation:e=>c.required(e),condition:e=>this.usingCustomIp(e),options:()=>[{label:"HTTP",value:"http"},{label:"HTTPS",value:"https"}]},{id:"ip_address",helpText:"Enter IP Address",type:r.TT_IP_ADDRESS,condition:e=>this.usingCustomIp(e),validation:e=>c.required(e)||c.isIPAddress(e)},{id:"port",helpText:"Enter Port",beforeNext:async(e,t)=>{const o=t.protocol.value,s=t.ip_address.value,i=t.port.value;return await this.runHealthCheck(o,s,i)},condition:e=>this.usingCustomIp(e),validation:e=>c.required(e),type:r.TT_TEXT,config:{customKeyboard:[g,[["Delete"]]]}},{id:"to_save_host",helpText:"Host preset",type:r.TT_YES_NO,isRequired:()=>!0,condition:e=>this.usingCustomIp(e),options:()=>[{label:"Do you want to save this configuration preset?",values:[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]}]},{id:"configuration_name",helpText:"Configuration name",type:r.TT_TEXT,condition:e=>e.to_save_host==="Yes",isRequired:()=>!0,beforeNext:(e,t)=>{const o=this.networkSites.concat([{site:e.label,ip:t.ip_address.value,protocol:t.protocol.value,port:t.port.value}]);return localStorage.setItem(u,JSON.stringify(this.uniqueNetworkPresets(o))),!0}}]},async showConfigNotice(){this.isUsingLocalStorage()&&await f("Config notice","The system is currently using user specified configurations.                 Do you wish to reset back to server configurations?","",[{name:"Reset configurations",slot:"start",color:"success"},{name:"New configurations",slot:"end"}])==="Reset configurations"&&(this.clearLocalStorage(),this.$router.back())},isUsingLocalStorage(){return localStorage.getItem("useLocalStorage")==="true"},clearLocalStorage(){const e=["useLocalStorage","apiURL","apiPort","apiProtocol"];a.removeOnly(e)}},data(){return{networkSites:[],fields:[]}},async mounted(){await this.showConfigNotice(),this.getFields()}});function y(e,t,o,s,i,n){const p=S("his-standard-form");return T(),_(p,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0},null,8,["fields","onFinishAction"])}const b=m(k,[["render",y]]);export{b as default};
