import{F as f}from"./dynamic-import-helper-Bsjrd6Ro.js";import{H as A}from"./HisStandardForm-lonwENLb.js";import{d as w,aJ as d,ba as D,aY as _,n as m,cn as c,ab as u,a$ as b,V as v,H as g,_ as T,r as C,o as P,c as $}from"./index-DTBWhHAq.js";import{_ as x}from"./EncounterMixin.vue_vue_type_script_lang-DZZc0yNk.js";import{A as h}from"./appointment_service-D5Ouo8sd.js";import"./TouchScreenForm-BeJsJnwt.js";import"./ToolbarMediumCard-wr9sTFDK.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-DbAo6hHM.js";import"./encounter_guidelines-BDvVJmZ6.js";import"./GuidelineEngine-D6V1_Znr.js";const F=w({mixins:[x],components:{HisStandardForm:A},data:()=>({appointment:{}}),watch:{ready:{handler(e){var n;console.log("The Current App calling this encounter  ",(n=d.getActiveApp())==null?void 0:n.applicationName),e&&(this.appointment=new h(this.patientID,this.providerID),this.fields=[this.getAppointmentField()])},immediate:!0}},methods:{async onFinish(e,n){var i;await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(n));const s=new D(this.patientID);["CxCa","ANC"].includes("".concat((i=d.getActiveApp())==null?void 0:i.applicationName))||await s.printVisitSummaryLbl(),this.nextTask()},getAppointmentField(){const e=t=>g.toStandardHisDisplayFormat(t),n=(t,a)=>new RegExp(t,"i").test("".concat(a));let s="",r="",i=-1,l=this.appointment.date,p=null;const o={},y=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{id:"set_appointment",helpText:"Appointments booking",type:f.TT_DATE_PICKER,init:async()=>{try{const a=await this.appointment.getNextAppointment();l=a.appointment_date,p=a.drugs_run_out_date}catch(a){if(console.warn(a),await _(400),!await m("Next appointment/drug-runout date is not available, do you want to proceed anyway?"))return this.gotoPatientDashboard(),!0}const t=await c.appointmentLimit();return i=t?parseInt(t):0,!0},onValue:async t=>{if(console.log(this.appointment),o[t]===void 0){const a=await h.getDailiyAppointments(t);o[t]=Array.isArray(a)?a.length:0}return!(i>=1&&o[t]>=i&&await m("".concat(o[t]," clients were booked on ").concat(e(t)),{header:"APPOINTMENT LIMIT (".concat(i,") REACHED"),cancelBtnLabel:"Proceed",confirmBtnLabel:"New date"})||(u.isEmpty(r)&&(r=await c.clinicHolidays()),n(t,r)&&!await m("".concat(e(t)," is a clinic holiday, do you want to set an appointment?")))||(u.isEmpty(s)&&(s=this.patient.getAge()>=18?await c.adultClinicDays():await c.peadsClinicDays()),!n(y[b(t).day()],s)&&!await m("".concat(e(t)," is not a clinic day. Do you want to proceed with this date?"))))},validation:t=>v.required(t),defaultValue:()=>l,computedValue:t=>[this.appointment.buildValueDate("Appointment date",t),this.appointment.buildValueDate("Estimated date",l)],config:{hiddenFooterBtns:["Clear"],minDate:()=>this.appointment.date,maxDate:()=>p,supValue:t=>"".concat(o[t]),infoItems:t=>{var a;return((a=d.getActiveApp())==null?void 0:a.applicationName)==="CxCa"?[{label:"User set appointment date",value:e(t)},{label:"Appointments",value:o[t]},{label:"Appointment limit (per/day)",value:i}]:[{label:"Medication Run out Date",value:p?e(p):"Not available"},{label:"User set appointment date",value:e(t)},{label:"Appointments",value:o[t]},{label:"Appointment limit (per/day)",value:i}]}}}}}});function N(e,n,s,r,i,l){const p=C("his-standard-form");return P(),$(p,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const U=T(F,[["render",N]]);export{U as default};
