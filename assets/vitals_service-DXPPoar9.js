import{bQ as a,aN as o}from"./index-CMZASHAR.js";class h extends a{constructor(r,t){super(r,6,t)}isNotEmptyandNumber(r){return"".concat(r.value).match(/^-?\d+\.?\d*$/)?null:["Invalid entry for ".concat(r.label)]}isNotEmptyandFloat(r){return"".concat(r.value).match(/^\d{1,3}\.\d{1,5}$/)?null:["Invalid entry for ".concat(r.label,". Don't forget to add a decimal. e.g. 56.2 ").concat(r.other.modifier)]}checkMinMax(r,t,n){var s,i;const e=[];return parseFloat("".concat(r.value))<t&&e.push(["".concat(r.label," entered is less than minimum ").concat(t," ").concat(((s=r==null?void 0:r.other)==null?void 0:s.modifier)||"")]),parseFloat("".concat(r.value))>n&&e.push(["".concat(r.label," entered is greater than maximum ").concat(n," ").concat(((i=r==null?void 0:r.other)==null?void 0:i.modifier)||"")]),e.length>0?e:null}validateAll(r){const t=[];return r.map(n=>{const e=this.validator(n);return o.isArray(e)?t.push(e):null}),t.length>0?t:null}mergeErrors(r){const t=[];return r.forEach(n=>{o.isArray(n)&&t.push(n)}),t.length>0?t:null}isValidBPReading(r){const t=[],n="".concat(r.value).match(/^\d{1,3}\/\d{1,3}$/g)?null:["Invalid BP reading"];if(t.push(n),n==null){const e="".concat(r.value).split("/"),s={label:"Systolic",value:e[0]},i={label:"Diastolic",value:e[1]};t.push(this.checkMinMax(i,30,200)),t.push(this.checkMinMax(s,40,250))}return this.mergeErrors(t)}validator(r){const n=[{name:"Weight",validator:e=>{const s=this.isNotEmptyandFloat(e),i=this.checkMinMax(e,2,250);return this.mergeErrors([s,i])}},{name:"Height",validator:e=>{const s=[];return s.push(this.isNotEmptyandNumber(e)),s.push(this.checkMinMax(e,40,220)),this.mergeErrors(s)}},{name:"BP",validator:e=>this.isValidBPReading(e)},{name:"Temp",validator:e=>{const s=this.isNotEmptyandNumber(e),i=this.checkMinMax(e,30,42);return this.mergeErrors([s,i])}},{name:"SP02",validator:e=>{const s=this.checkMinMax(e,40,100);return this.mergeErrors([s])}},{name:"Pulse",validator:e=>{const s=this.checkMinMax(e,50,120);return this.mergeErrors([s])}}].filter(e=>e.name===r.label);return n.length>0?n[0].validator(r):null}}export{h as V};
