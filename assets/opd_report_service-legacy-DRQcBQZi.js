System.register(["./index-legacy-CA6M7ipO.js"],(function(t,e){"use strict";var r,a,s,i,o,n,d,g;return{setters:[t=>{t.cl,r=t.cm,a=t.bC,s=t.ao,i=t.cj,o=t.dd,n=t.aN,d=t.S,g=t.H}],execute:function(){var e={exports:{}};!function(t){var e,r;t.exports=(e="month",r="quarter",function(t,a){var s=a.prototype;s.quarter=function(t){return this.$utils().u(t)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t-1))};var i=s.add;s.add=function(t,a){return t=Number(t),this.$utils().p(a)===r?this.add(3*t,e):i.bind(this)(t,a)};var o=s.startOf;s.startOf=function(t,a){var s=this.$utils(),i=!!s.u(a)||a;if(s.p(t)===r){var n=this.quarter()-1;return i?this.month(3*n).startOf(e).startOf("day"):this.month(3*n+2).endOf(e).endOf("day")}return o.bind(this)(t,a)}})}(e);const p=r(e.exports);a.extend(p);const c=t("L",{one:"AL 1",two:"AL 2",three:"AL 3",four:"LA 4"});t("N",["Diabetes","Hypertension","Stroke","Suspected cancer","Confirmed cancer","Palliative cancer","Asthma","Depression","Acute psychosis","Chronic psychosis","Epilepsy"]),t("M",["Organic mental disorder (Chronic)","Organic mental disorder (acute)","Alcohol use mental disorder","Drug use mental disorder","Schizophrenia","Acute and transient psychotic disorder","Schizo-affective disorder","Mood-affective disorder (MANIC)","Mood-affective disorder (BIPOLAR)","Mood-affective disorder (DEPRESSION)","Anxiety disorder","Stress reaction adjustment disorder","Dissociative conversion disorder","Somatoform disorder","Puerperal mental disorder","Personality/Behaviour disorder","Mental retardation","Psychological mental disorder","Hyperkinetic conduct disorder","Epilepsy"]),t("D",{total:"Total Clients",prev_pos_not_on_art:"Pre Pos not on ART",prev_pos_on_art:"Pre Pos on ART",new_neg:"New Neg",new_pos:"New Pos",not_done:"Not Done",screened:"Screened for TB",not_screened:"Not Screened for TB"}),t("O",class extends s{programID;startDate;endDate;date;epiweek;constructor(){super(),this.endDate="",this.startDate="",this.epiweek="",this.date=s.getSessionDate(),this.programID=s.getProgramID()}async getDisaggReport(){const t=await this.getReport(`programs/${this.programID}/reports/opd_disaggregated`),e=this.aggregateDisagReportData(t.data);return[...e.F.rows,...e.M.rows,{ageGroup:"All",gender:"Male",...e.M.aggregate},...await this.buildMaternityAgreggateRows(e.F.aggregate,t.aggregated)]}aggregateDisagReportData(t){return Object.entries(t).reduce(((t,[e,r])=>("Unknown"!==e&&Object.entries(r).forEach((([r,a])=>{t[r].rows.push({ageGroup:e,gender:i(r),...a}),Object.entries(a).forEach((([e,a])=>{t[r].aggregate[e]=[...t[r].aggregate[e]??[],...a]}))})),t)),{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}})}async getMaternalStatus(t,e="pepfar"){const r=o.parameterizeObjToString(this.buildRequest({report_definition:e}));return s.postJson(`vl_maternal_status?${r}`,{patient_ids:t})}async buildMaternityAgreggateRows(t,e,r="pepfar"){const a=Object.keys(t);let s=[],i={FBf:[],FP:[]};if(e)i.FBf=e.bf,i.FP=e.p;else{const e=n.uniq(Object.values(t).flat(1).map((t=>t instanceof Object?t.patient_id:t)));i=await this.getMaternalStatus(e,r)}return s=i.FBf.concat(i.FP),["FP","FNP","FBf"].map((e=>a.reduce(((r,a)=>({[a]:t[a].filter((t=>{const r=t instanceof Object?t.patient_id:t;return"FNP"===e?!s.includes(r):i[e].includes(r)})),...r})),{ageGroup:"All",gender:e})))}getMentalHealth(){return this.getReport(`programs/${this.programID}/reports/mental_health`)}getCasesSeen(){return this.getReport(`programs/${this.programID}/reports/cases_seen`)}getPatientsWithNIDs(){return this.getReport("with_nids")}getClinicRegistrations(){return this.getReport("registration")}getAttendance(){return this.getReport(`programs/${this.programID}/reports/attendance`)}getDrugs(){const t=`programs/${this.programID}/reports/drug`;return s.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}getDiagnosis(){const t=`programs/${this.programID}/reports/diagnosis`;return s.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}getDiagnosisByAddress(){return this.getReport("diagnosis_by_address")}getLaPrescriptions(){const t=`programs/${this.programID}/reports/la_prescriptions`;return s.getJson(t,{start_date:this.startDate,end_date:this.endDate})}getMalariaReport(){const t=`programs/${this.programID}/reports/malaria_report`;return s.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}printLaReport(t){const e=new d,r=`programs/${this.programID}/barcodes/la_report`,a={"date[start]":this.startDate,"date[end]":this.endDate};return Object.keys(c).forEach(((e,r)=>{r++,a[`${r}[prescription]`]=t[`total_la_${e}_prescribed_drugs`],a[`${r}[dispensed]`]=t[`total_la_${e}_dispensed_drugs`]})),e.printLbl(`${r}?${o.parameterizeObjToString(a)}`)}getDateIntervalPeriod(){return`${g.toStandardHisDisplayFormat(this.startDate)} - ${g.toStandardHisDisplayFormat(this.endDate)}`}setStartDate(t){this.startDate=t}setEndDate(t){this.endDate=t}setEpiWeek(t){this.epiweek=t}getReportPeriod(){return this.startDate&&this.endDate?`${g.toStandardHisDisplayFormat(this.startDate)} - ${g.toStandardHisDisplayFormat(this.endDate)}`:"-"}getReport(t,e={}){return s.getJson(t,this.buildRequest(e))}buildRequest(t={}){const e={date:this.date,program_id:this.programID};return this.startDate&&this.endDate&&(e.start_date=this.startDate,e.end_date=this.endDate),this.epiweek&&(e.epiweek=this.epiweek),{...e,...t}}static getReportQuarters(t=4){const e=[];let r=a();for(let a=0;a<4*t;a++)e.push({start:r.startOf("quarter").format("YYYY-MM-DD"),end:r.endOf("quarter").format("YYYY-MM-DD"),name:`Q${r.quarter()} ${r.year()}`}),r=r.subtract(1,"quarter");return e}})}}}));
