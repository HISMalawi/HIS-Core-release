import{F as a}from"./dynamic-import-helper-Bsjrd6Ro.js";import{H as o}from"./HisStandardForm-BfZPxRjA.js";import{d as s,aZ as p,V as r,_ as m,r as d,o as h,c}from"./index-ChqjXh1q.js";import{_ as l}from"./EncounterMixin.vue_vue_type_script_lang-BNBveYHE.js";import{A as i}from"./appointment_service-B5XAw8do.js";import"./TouchScreenForm-Bp625zJI.js";import"./ToolbarMediumCard-NV07rtjo.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-DBgU2Ffk.js";import"./encounter_guidelines-DCQZGDdr.js";import"./GuidelineEngine-D6V1_Znr.js";const u=s({mixins:[l],components:{HisStandardForm:o},data:()=>({appointmentDate:"",maxAppointmentDate:"",appointment:{}}),watch:{ready:{async handler(t){t&&(this.appointment=new i(this.patientID,this.providerID),this.init())},immediate:!0}},methods:{async onFinish(t,e){await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(e,"obs")),this.gotoPatientDashboard()},init(){this.appointmentDate=i.getSessionDate(),this.maxAppointmentDate=p(this.appointmentDate).add(100,"year").format("YYYY-MM-DD"),this.fields=this.getFields()},getFields(){return[{id:"set_appointment",helpText:"Appointments booking",type:a.TT_APPOINTMENTS_ENTRY,validation:t=>r.required(t),computedValue:t=>({tag:"obs",obs:[this.appointment.buildValueDate("Appointment date",t.value)]}),config:{patientAge:this.patient.getAge(),hideRunoutDate:!0,hiddenFooterBtns:["Clear"]},options:()=>[{label:"",value:"",other:{runOutDate:this.maxAppointmentDate,appointmentDate:this.appointmentDate}}]}]}}});function f(t,e,D,_,A,g){const n=d("his-standard-form");return h(),c(n,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const k=m(u,[["render",f]]);export{k as default};
