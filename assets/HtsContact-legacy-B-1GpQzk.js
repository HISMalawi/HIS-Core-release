System.register(["./index-legacy-Ck8hVlzC.js","./PersonFieldHelper-legacy-CUctGHgl.js","./HisStandardForm-legacy-OroqgFde.js","./LocationFieldOptions-legacy-UgaUiM8M.js","./storage-legacy-CIkBlJKf.js"],(function(e,t){"use strict";var a,n,o,i,l,s,u,c,r,d,v,p,_,T,m,b,f,h,g,C,V,x,y,R;return{setters:[e=>{a=e.bk,n=e.d,o=e.I,i=e.K,l=e.dF,s=e.F,u=e.a1,c=e.dG,r=e.O,d=e.ah,v=e.n,p=e.H,_=e.aW,T=e.ai,m=e.aj,b=e.ct,f=e._,h=e.r,g=e.o,C=e.c,V=e.w,x=e.b},e=>{y=e.P},e=>{R=e.H},null,null],execute:function(){class t extends a{constructor(e,t=-1){super(e,195,t)}}const A=n({components:{IonPage:o,HisStandardForm:R},setup(){const e=i([]),a=new t(-1),{htsClient:n,toOption:o,resolveObs:f,yesNoOptions:h,saveEncounter:g,mapStrToOptions:C,patientDashboardUrl:V}=l({onInitVisit:()=>{e.value=[{id:"discuss_partner",helpText:"Discuss Partner",type:s.TT_YES_NO,isRequired:()=>!0,finalComputedValue:e=>({obs:a.buildValueCoded("Consent Confirmation",e)}),options:()=>[{label:"Does the client consent to discuss contact?",value:"",values:h()}]},R()]}});function x(e,t,n){let o={};return o=t.match(/unknown/i)?a.buildValueText(e,"Unknown"):n?a.buildValueDateEstimated(e,t):a.buildValueDate(e,t),o}function R(){let e=null;return{id:"contact_index_page",helpText:"Registered contacts",type:s.TT_TABLE_VIEWER,onload:t=>e=t,condition:e=>"Yes"===e.discuss_partner,isRequired:()=>!0,validation:e=>parseInt(`${e[0].value}`)<=0?["Contact list is empty!!. Please register some"]:null,options:async t=>{let i={};null!=t.contact_index_page&&(i=t.contact_index_page[0]||{});const l=[...i?.other?.rows||[]],g={...i?.other?.contacts||{}},V=[(()=>{const e=y.getGivenNameField();return e.finalComputedValue=e=>({val:e.value,obs:a.buildValueText("First name of contact",`${e.value}`)}),e})(),(()=>{const e=y.getFamilyNameField();return e.finalComputedValue=e=>({val:e.value,obs:a.buildValueText("Last name of contact",`${e.value}`)}),e})(),{id:"relation_to_contact",helpText:"Contact is a ___",type:s.TT_SELECT,finalComputedValue:e=>({val:e.value,obs:a.buildValueCoded("Relationships of contact",e.value)}),isRequired:()=>!0,options:()=>C(["Sexual Partner","Biological Child","Biological Parent"]),validation:e=>{const t=p.getAgeInYears(n.birthDate);return"Biological Child"===e.value&&t<13?["Contact is too young to have a biological child"]:"Sexual Partner"===e.value&&t<13?["Contact is too young to have a sexual partner"]:null}},...(()=>{const e=y.getDobConfig(!1),t=14;return e.helpText="Contact Birth",e.computeValue=e=>{const t=p.getAgeInYears(e);return{valLabel:"Age",val:t,obs:a.buildValueNumber("Age of contact",t)}},e.minDate=e=>{let a="";return"Biological Child"===e.relation_to_contact.value&&(a=_(n.birthDate).add(t,"year").format("YYYY-MM-DD")),a},e.maxDate=e=>{let a="";return"Biological Parent"===e.relation_to_contact.value&&(a=_(n.birthDate).subtract(t,"year").format("YYYY-MM-DD")),a},T(e)})(),(()=>{const e=y.getGenderField([{label:"Male",value:"M"},{label:"Female",value:"F"}]);return e.helpText="Sex of contact",e.finalComputedValue=e=>({val:e.value,obs:a.buildValueText("Gender of contact",`${e.value}`)}),e})(),{id:"contact_pregnancy_status",helpText:"Pregnancy status of contact",type:s.TT_SELECT,condition:e=>"F"===e.gender.value,options:()=>[{label:"Non-Pregnant",value:"FNP"},{label:"Pregnant",value:"FP"},{label:"Breastfeeding",value:"FBf"},{label:"Unknown",value:"Unknown"}],finalComputedValue:e=>({val:e.value,obs:a.buildValueText("Contact pregnancy status",`${e.value}`)})},(()=>{const e=y.getCellNumberField();return e.finalComputedValue=e=>({val:e.value,obs:a.buildValueText("Contact phone number",`${e.value}`)}),e})(),{id:"contact_hiv_status",helpText:"HIV Status of the contact",type:s.TT_SELECT,isRequired:()=>!0,finalComputedValue:e=>({val:e.value,obs:a.buildValueCoded("Contact HIV tested",e.value)}),options:()=>C(["Positive","Negative","Unknown"])},{id:"last_time_hiv_tested",helpText:"When was Contact's Last HIV Test",type:s.TT_SELECT,condition:e=>e.contact_hiv_status.value&&"Negative"==e.contact_hiv_status.value,isRequired:()=>!0,finalComputedValue:e=>({obs:a.buildValueText("Contact HIV test date",`${e.value} ago`)}),options:()=>C(["A year or more ago","Less than a year ago"]),beforeNext:async e=>"Less than a year ago"!=e.value||"OK"==await m("Last HIV test","Last HIV test","The case will be closed because the contact was recently tested and does not need to be followed up on.",[{name:"OK",slot:"start",color:"success"}],"primary",!1)},{id:"ipv_status",helpText:"IPV Status",type:s.TT_SELECT,isRequired:()=>!0,condition:e=>"Negative"==e.contact_hiv_status.value&&"A year or more ago"==e.last_time_hiv_tested.value||"Unknown"==e.contact_hiv_status.value,finalComputedValue:e=>({val:e.value,obs:a.buildValueText("IPV Status",`${e.value}`)}),options:()=>C(["Risk","No Risk"]),beforeNext:async e=>("Risk"==e.value&&await m("IPV Risk","IPV Risk","This contact is at risk of IPV, therefore the case will be closed.",[{name:"OK",slot:"start",color:"success"}],"primary",!1),!0)},{id:"contact_consent",helpText:"Consent to reach out to the contact",type:s.TT_YES_NO,isRequired:()=>!0,condition:e=>"No Risk"===e.ipv_status.value,finalComputedValue:e=>({val:e,obs:a.buildValueCoded("Consent to contact the contact",e)}),options:()=>[{label:"Does the client consent to reach out to the contact?",value:"",values:h()}]},{id:"reason_for_no_consent",helpText:"Would you like to share the reason for not consenting? (Optional)",type:s.TT_NOTE,condition:e=>"No"===e.contact_consent,finalComputedValue:e=>{if(e&&e.value)return{val:e.value,obs:a.buildValueText("Reason for not consenting to contact contact",`${e.value}`)}}},{id:"notification_means",helpText:"Recommended mode of Notification",type:s.TT_SELECT,isRequired:()=>!0,condition:e=>"Yes"===e.contact_consent,options:()=>C(["Active","Passive"]),finalComputedValue:e=>({val:e.value,obs:a.buildValueCoded("Notification Means",e.value)})},{id:"referral_type",helpText:"Referral Type",type:s.TT_SELECT,isRequired:()=>!0,condition:e=>"Active"===e.notification_means.value,finalComputedValue:e=>({val:e.value,obs:a.buildValueCoded("Referral type",e.value)}),options:()=>C(["Provider referral","Contract referral","Dual referral"])},{id:"set_appointment",helpText:"Appointment Date (Within 2 weeks)",type:s.TT_DATE_PICKER,isRequired:()=>!0,defaultValue:()=>a.date,condition:e=>"Active"===e.notification_means.value,finalComputedValue:e=>({val:b(e.value),obs:a.buildValueDate("Contact appointment date",e.value)}),config:{minDate:()=>a.date,maxDate:()=>_(a.date).add(15,"day").toDate(),infoItems:e=>[{label:"User set appointment",value:b(e)}]}},{id:"testing_location",helpText:"Testing Location",type:s.TT_SELECT,isRequired:()=>!0,finalComputedValue:e=>({obs:a.buildValueText("Contact Appointment location",`${e.value}`)}),options:()=>C(["Facility","Home/Other Facility"]),condition:e=>"Active"===e.notification_means.value},{...y.getCurrentRegionField(),helpText:"Contact's Current Region of Residence",config:{footerBtns:[{name:"Same as index",slot:"end",onClickComponentEvents:{setValue:()=>"Same as index"},onClick:()=>"Same as index"}]},condition:e=>"Active"===e.notification_means.value,computedValue:e=>({val:e.label,obs:a.buildValueText("Contact current region",e.label)})},{...y.getCurrentDistrictField(),helpText:"Contact's Current District of Residence",defaultComputedOutput:void 0,condition:e=>!/same as index/i.test(e.current_region.label)&&"Active"===e.notification_means.value,defaultOutput:e=>{if(/Same as index/i.test(e.current_region.label))return o(n.district)},computedValue:e=>({val:e.label,obs:a.buildValueText("Contact current district",e.label)})},{...y.getCurrentTAfield(),helpText:"Contact's Current TA of Residence",defaultComputedOutput:void 0,condition:e=>!/foreign|same as index/i.test(`${e.current_region.label}`)&&"Active"===e.notification_means.value,defaultOutput:e=>{if(/Same as index/i.test(e.current_region.label))return o(n.currentTA)},computedValue:e=>({val:e.label,obs:a.buildValueText("Contact current TA",e.label)})},{...y.getCurrentVillageField(),helpText:"Contact's Current Village of Residence",defaultComputedOutput:void 0,condition:e=>!/foreign|same as index/i.test(`${e.current_region.label}`)&&"Active"===e.notification_means.value,defaultOutput:e=>{if(/Same as index/i.test(e.current_region.label))return o(n.village)},computedValue:e=>({val:e.label,obs:a.buildValueText("Contact current village",`${e.value}`)})},{id:"contact_address",helpText:"Physical address",type:s.TT_NOTE,isRequired:()=>!0,condition:e=>"Active"===e.notification_means.value,finalComputedValue:e=>({val:e.value,obs:a.buildValueText("Contact physical address",`${e.value}`)})},{id:"self_testkit_given",helpText:"Contact Self Test Kit Given",type:s.TT_YES_NO,isRequired:()=>!0,condition:e=>"No"===e.contact_consent||"Passive"===e.notification_means.value,finalComputedValue:e=>({obs:a.buildValueCoded("Self-Test kit given",e)}),options:()=>[{label:"Was a self test kit given to the Index for their contact?",value:"",values:h()}]},{id:"reason_for_not_giving_self_testkit",helpText:"Reason for not providing a self test (Optional)",type:s.TT_NOTE,condition:e=>"No"===e.self_testkit_given,finalComputedValue:e=>{if(e)return{val:e.value,obs:a.buildValueText("Reason for not giving self-test kit",`${e.value}`)}}},{id:"frs_given",helpText:"FRS Given",type:s.TT_YES_NO,isRequired:()=>!1,condition:e=>"Passive"===e.notification_means.value,finalComputedValue:e=>({obs:a.buildValueCoded("FRS given",e)}),options:()=>[{label:"Was FRS given to the Index client for their contact?",value:"",values:h()}]},{id:"reason_for_not_giving_frs",helpText:"Reason for not providing FRS",type:s.TT_TEXT,isRequired:()=>!0,condition:e=>"No"===e.frs_given,finalComputedValue:e=>({obs:a.buildValueText("Reason for not giving FRS",`${e.value}`)})},{id:"contact_on_art",helpText:"On ART",type:s.TT_YES_NO,isRequired:()=>!1,condition:e=>e.contact_hiv_status.value&&"Positive"===e.contact_hiv_status.value,finalComputedValue:e=>({obs:a.buildValueCoded("Contact ever registered at ART clinic",e)}),options:()=>[{label:"Is the Contact on ART?",value:"",values:h()}]},{id:"index_contact",helpText:"Contact Indexing",type:s.TT_YES_NO,isRequired:()=>!0,condition:e=>e.contact_on_art&&"No"===e.contact_on_art,options:()=>[{label:"Do you want to convert the contact to an index client?",value:"",values:h()}],finalComputedValue:e=>({obs:a.buildValueCoded("Index patient",e)})},{id:"art_start_location",helpText:"Contact ART start location?",type:s.TT_SELECT,isRequired:()=>!1,finalComputedValue:e=>({obs:a.buildValueText("Contact location of ART initiation",`${e.value}`)}),options:()=>C(["Same Health Facility","Other Health Facility","Unknown"]),condition:e=>e.contact_on_art&&"Yes"===e.contact_on_art},...T({id:"date_started_art",helpText:"Contact Art Start",required:!1,condition:e=>e.contact_on_art&&"Yes"===e.contact_on_art,minDate:()=>n.birthDate,maxDate:()=>a.getDate(),estimation:{allowUnknown:!0},computeValue:(e,t)=>({date:e,isEstimate:t,obs:x("Contact Date ART started",e,t)})},a.getDate()),{id:"contact_art_number",helpText:"Contact ART number",type:s.TT_TEXT,isRequired:()=>!1,condition:e=>e.contact_on_art&&"Yes"===e.contact_on_art,beforeNext:async e=>(null==e.value||""==e.value.trim()||"Unknown"==e.value?await m("Contact ART number","Contact ART status","Since  an ART number has not been submitted for this HIV+ contact. The case will remian open, until the ART number is added.",[{name:"OK",slot:"start",color:"success"}],"primary",!1):await m("Contact ART number","Contact ART status","The contact is already on ART, therefore does not need follow up. This contact case will be closed.",[{name:"OK",slot:"start",color:"success"}],"primary",!1),!0),computedValue:e=>({tag:"reg",obs:a.buildValueText("Contact ART number at previous location",`${e.value}`)})}],R=await u(V,{formLabel:`Contact Registration #${l.length+1}`,onFinish:async(t,n)=>{const o=l.length+1;l.push([o,`${n.given_name.val} ${n.family_name.val}`,n.relation_to_contact.val,n.birth_date.val+" years",{name:"View",type:"button",color:"primary",action:async()=>{c({id:"summary_view",helpText:"More details",type:s.TT_SUMMARY,options:()=>Object.keys(n).filter((e=>n[e].val)).map((e=>({value:n[e].val,label:n[e].valLabel||d.find(V,{id:e})?.helpText})))},(()=>r.dismiss()))}},{name:"Remove",type:"button",color:"danger",action:async()=>{await v(" Are you sure you want to remove contact?")&&(delete e.data[0].other.contacts[o],e.data[0].label=""+(parseInt(`${e.data[0].label}`)-1),e.data[0].value=parseInt(e.data[0].label),e.data[0].other.rows.splice(e.data[0].other.rows.findIndex((e=>e[0]===o)),1))}}]),g[o]={...await a.buildValueText("Patient contacts construct",`${n.given_name.val} ${n.family_name.val}`),child:await f(n)},r.dismiss()}});return await R.onDidDismiss(),[{label:`${l.length}`,value:`${l.length}`,other:{columns:["ID","Name","Relation","Age"],contacts:g,rows:l}}]},finalComputedValue:e=>({obs:Object.values(e[0].other.contacts).reduce(((e,t)=>e.concat(t)),[])}),config:{footerBtns:[{name:"Add New",slot:"end",color:"success",onClick:async()=>e.data=await e.options(e.fdata)}]}}}return{patientDashboardUrl:V,onFinish:function(e,t){g({encounterName:"HTS Contact",encounterTypeID:a.encounterTypeID,computedData:t})},fields:e}}});e("default",f(A,[["render",function(e,t,a,n,o,i){const l=h("his-standard-form"),s=h("ion-page");return g(),C(s,null,{default:V((()=>[x(l,{formLabel:"Contact tracing",fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.patientDashboardUrl()},null,8,["fields","onFinishAction","cancelDestinationPath"])])),_:1})}]]))}}}));
