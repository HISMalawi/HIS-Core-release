import{H as T}from"./HisStandardForm-Dxm9AvFo.js";import{bL as p,d as _,r as w,ad as n,ae as s,bT as D,aw as u,W as d,ah as x,ak as E,a as C,c as F,w as L,b as P,u as f,I as V,aN as A}from"./index-DOO_dFo7.js";import{r as m}from"./commons-BYdU_7rI.js";import{u as O}from"./useEncounter-CTDcaFHK.js";import"./isEmpty-B9gTfDRz.js";import"./encounter_guidelines-DtVJ39TV.js";import"./GuidelineEngine-D6V1_Znr.js";class k extends p{constructor(a,o){super(a,114,o)}}class W extends p{constructor(a,o){super(a,40,o)}}const K=_({__name:"DischargePatient",setup(l){let a,o;const c=w([]),{goToNextTask:b,patientDashboardUrl:h}=O((e,i)=>{o=new W(i,e),a=new k(i,e),c.value=[g(),y(),S()]});async function v(e,i){await o.createEncounter();const t=await m({...i},"outcome");await o.saveObservationList(t);const r=await m({...i},"referral");A.isEmpty(r)||(await a.createEncounter(),await a.saveObservationList(r)),b()}function g(){return{id:"outcome_status",helpText:"Select Discharge Outcome",type:n.TT_SELECT,validation:e=>s.required(e),computedValue:e=>({tag:"outcome",obs:o.buildValueCoded("outcome",e.value)}),options:()=>[{label:"Referred (Within the Facility)",value:"Patient transferred internally"},{label:"Dead",value:"Died in treatment"},{label:"Abscorded",value:"Absconded"},{label:"Alive (Discharged home)",value:"Discharged home"},{label:"Transferred (Another health facility)",value:"Discharged to another facility"}]}}function y(){return{id:"facility_name",helpText:"Select Facility name",type:n.TT_SELECT,validation:e=>s.required(e),computedValue:e=>({tag:"referral",obs:a.buildValueText("Referred",e.label)}),condition:e=>e.outcome_status.value==="Discharged to another facility",options:(e,i="")=>D(i),config:{showKeyboard:!0,isFilterDataViaApi:!0}}}function S(){return{id:"internal_sections",helpText:"Select Ward/internal section",type:n.TT_SELECT,validation:e=>s.required(e),computedValue:e=>({tag:"referral",obs:a.buildValueText("Specialist clinic",e.label)}),condition:e=>e.outcome_status.value==="Patient transferred internally",options:()=>u.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,i,t)=>{if(typeof t.filter!="string"||t.filter.length<3)return d("Please enter a valid section name");if(t.filtered.some(r=>r.label.toLowerCase()===t.filter.toLowerCase()))return d("Section already existing");if(await x("Do you want to add internal section?")){const r=await u.createInternalSection(t.filter.toUpperCase());r?(t.filter=r.name,t.listData=[{label:r.name,value:r.id},...t.listData]):E("Unable to add ".concat(t.filter))}}}]}}}return(e,i)=>(C(),F(f(V),null,{default:L(()=>[P(T,{cancelDestinationPath:f(h),fields:c.value,onFinishAction:v,skipSummary:""},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{K as default};
