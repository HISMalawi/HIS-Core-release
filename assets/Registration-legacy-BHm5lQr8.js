System.register(["./HisStandardForm-legacy-C7VqHmr3.js","./EncounterMixin.vue_vue_type_script_lang-legacy-BYNMg0KB.js","./index-legacy--hxN_V8z.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./LocationFieldOptions-legacy-TTrPmoN6.js","./KbLayouts-legacy-BKvPSxzZ.js","./TouchScreenForm-legacy-DxIQwsU4.js","./ToolbarMediumCard-legacy-CzmL2SiF.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-TUlObaz7.js","./encounter_guidelines-legacy-BZk5BWg2.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,i){"use strict";var t,a,n,o,l,s,r,d,c,u,p,v,g,y,h;return{setters:[e=>{t=e.H},e=>{a=e._},e=>{n=e.b2,o=e.d,l=e.t,s=e.P,r=e.cz,d=e.V,c=e._,u=e.r,p=e.o,v=e.c},e=>{g=e.F},e=>{y=e.g},e=>{h=e.C},null,null,null,null,null,null],execute:function(){class i extends n{constructor(e,i){super(e,104,i)}}const T=o({components:{HisStandardForm:t},mixins:[a],data:()=>({registrationService:{}}),watch:{ready:{async handler(e){e&&(this.registrationService=new i(this.patient.getID(),this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{mapToOption:e=>e.map((e=>({label:e,value:e}))),async onSubmit(e,i){if(await this.asignNID(e),!(await this.registrationService.createEncounter()))return l("Unable to create registration encounter");const t=await this.resolveObs({...i});if(!(await this.registrationService.saveObservationList(t)))return l("Unable to save observations");this.nextTask()},async asignNID(e){const i=e.national_id_available,t=e.national_id;i&&"Yes"===i.value&&await this.patient.updateMWNationalId(t.value)},mwIdExists:async e=>!!e&&(await s.findByOtherID(r,e)).length>0,getFields(){return[{id:"visit_type",helpText:"Type of visit",type:g.TT_SELECT,validation:e=>d.required(e),computedValue:e=>({obs:this.registrationService.buildValueCoded("Type of visit",e.value)}),options:()=>[{label:"New",value:"New patient"},{label:"Referral",value:"Referral"},{label:"Re-visiting",value:"Re-visiting"}]},{id:"referring_facility_name",helpText:"Referred from",type:g.TT_SELECT,validation:e=>d.required(e),computedValue:({label:e})=>({obs:this.registrationService.buildValueText("Referred from",e)}),condition:e=>"Referral"===e.visit_type.value,options:(e,i="")=>y(i),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"life_threatening_condition",helpText:"Life threatening condition",type:g.TT_SELECT,computedValue:e=>({obs:this.registrationService.buildValueCoded("Life threatening condition",e.value)}),validation:e=>d.required(e),options:()=>this.mapToOption(["Airway","Breathing","Coma","Confusion","Convulsion","Disability","none","other","Temperatur (The child is very hot)"])},{id:"national_id_available",helpText:"National ID Available",type:g.TT_SELECT,validation:e=>d.required(e),condition:()=>"Unknown"===this.patient.getMWNationalID(),options:()=>this.yesNoUnknownOptions(),appearInSummary:()=>!1},{id:"national_id",helpText:"Enter National ID",type:g.TT_TEXT,validation:e=>d.isMWNationalID(e),condition:e=>"Yes"===e.national_id_available.value,beforeNext:async e=>!e.value||!(await this.mwIdExists(e.value.toString()))||(l("National ID already exists"),!1),summaryMapValue:({value:e})=>({value:e,label:"National ID"}),config:{casing:"uppercase",customKeyboard:[h,[["Delete"]]]}},{id:"triage",helpText:"Select Triage Category",type:g.TT_SELECT,computedValue:e=>({obs:this.registrationService.buildValueCoded("Triage category",e.value)}),validation:e=>d.required(e),options:()=>this.mapToOption(["Emergency","Priority","Queue"])}]}}});e("default",c(T,[["render",function(e,i,t,a,n,o){const l=u("his-standard-form");return p(),v(l,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}]]))}}}));
