import{d as u,K as d,cb as h,o as f,c as g,w as T,b as _,cl as r,I as w}from"./index-BCTN_bnC.js";import{F as y}from"./dynamic-import-helper-BkBZiFw5.js";import{H as x}from"./HisStandardForm-CaDwl-hA.js";import{u as F}from"./useEncounter-CDUT-p5Y.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";import"./isEmpty-OXtHK5dz.js";import"./_Set-VKtKUQAI.js";import"./_setToArray-BLmuRUHx.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";const G=u({__name:"WeightTrends",setup(b){const e=d([]),{goToNextTask:n,patientDashboardUrl:s}=F((p,m,t)=>{function c(){let i=[],a="";return{id:"diagnosisType",helpText:"Patient weight trends:",type:y.TT_WEIGHT_CHART,init:async()=>(i=await t.getWeightHistory(),a=await t.getBMI(),!0),options:async()=>[{label:"Weight for patient",value:"Weight trail",other:{bmi:a,values:i.map(o=>({x:h(o.date),y:o.weight})),age:t.getAge()}}]}}e.value=[c()]});function l(){n()}return(p,m)=>(f(),g(r(w),null,{default:T(()=>[_(x,{cancelDestinationPath:r(s),onFinishAction:l,fields:e.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{G as default};
