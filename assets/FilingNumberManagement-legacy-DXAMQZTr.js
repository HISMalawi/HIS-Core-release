System.register(["./index-legacy-CA6M7ipO.js","./HisStandardForm-legacy-a9YJRGaH.js"],(function(i,t){"use strict";var e,n,a,s,r,l,o,m,d,c,h,u,g,f,p,v,b,N,F,D,_,y;return{setters:[i=>{e=i.ao,n=i.dh,a=i.al,s=i.h,r=i.d,l=i.aw,o=i.W,m=i.bs,d=i.aN,c=i.am,h=i.au,u=i.dl,g=i.H,f=i.ad,p=i.ae,v=i.aj,b=i.ak,N=i.aa,F=i.c,D=i.af,_=i.a},i=>{y=i.H}],execute:function(){class t extends e{patientID;activePrefix;dormantPrefix;constructor(){super(),this.patientID=0,this.activePrefix="",this.dormantPrefix=""}getActivePrx(){return this.activePrefix}getDormantPrx(){return this.dormantPrefix}getPatientID(){return this.patientID}setPatientID(i){this.patientID=i}formatNumber(i){const t=i.search(this.activePrefix)>=0?this.activePrefix:i.search(this.dormantPrefix)>=0?this.dormantPrefix:"";return t?i.substring(t.length,i.length):i}async loadFilingPrefix(){const i=await n.filingNumberPrefix();if(i){const[t,e]=i.split(",");this.activePrefix=t,this.dormantPrefix=e}}isActiveFilingNum(i){return!!i.match(new RegExp(this.activePrefix,"i"))}isDormantFilingNum(i){return!!i.match(new RegExp(this.dormantPrefix,"i"))}async assignFilingNumber(){return e.postJson(`patients/${this.patientID}/filing_number`,{})}async getFilingNumber(i){const t=`${this.activePrefix}${i}`,n=await e.getJson("search/patients/by_identifier",{type_id:17,identifier:t});return n?n.map((i=>{const e=new a(i);return{identifier:t,patient_id:e.getID(),given_name:e.getGivenName(),family_name:e.getFamilyName(),state:"N/A",appointment_date:""}})):[]}archiveFilingNumber(){return e.getJson("archive_active_filing_number",{patient_id:this.patientID})}archivePatient(i,t){return e.postJson("swap_active_number",{primary_patient_id:this.patientID,secondary_patient_id:i,identifier:t})}getArchivingCandidates(i=0,t=10){return e.getJson("archiving_candidates",{page:i,page_size:t})}getPastFilingNumbers(){return e.getJson(`patients/${this.patientID}/past_filing_numbers`)}printFilingNumber(){return s(this.patientID)}}const w=r({components:{HisStandardForm:y},data:()=>({service:{},patient:{},fieldComponent:"",fields:[],nextWorkflowRouteName:"",filingNumberAssignment:{}}),watch:{$route:{async handler({query:i,params:e}){if(e&&e.patient_id&&(this.service=new t,this.service.setPatientID(e.patient_id),this.patient=await this.getPatient(e.patient_id),await this.service.loadFilingPrefix()),i){if(this.fields=[this.getFilingNumberField(),this.getCandidateSelectionField(),this.getFilingNumberHistoryField()],"true"===i.archive)return void(await this.archiveFilingNumber());"true"===i.assign&&await this.onAssignFilingNumber(),"true"===i.trail&&(this.fieldComponent="view_filing_history"),i.next_workflow_task&&(this.nextWorkflowRouteName=i.next_workflow_task)}},immediate:!0,deep:!0}},methods:{toFID(i){return this.service.formatNumber(i)},async onAssignFilingNumber(){const i=await this.newFilingNumber();i?(this.filingNumberAssignment=i,this.fieldComponent="filing_number_management",l.invalidate("ACTIVE_PATIENT")):(this.fieldComponent="select_candidate_to_swap",o("Out of filing numbers, Please select eligible candidate"))},async newFilingNumber(){const i={primary:{label:"Dormant → Active",value:this.patient.name,other:{activeNumber:this.patient.filingID?this.toFID(this.patient.filingID):"N/A",dormantNumber:"N/A"}},archived:{label:"Active → Dormant",value:"N/A",other:{activeNumber:"N/A",dormantNumber:"N/A"}}};if(this.service.isActiveFilingNum(this.patient.filingID))return i;await this.presentLoading();const t=await this.service.assignFilingNumber();if(m.dismiss(),!d.isEmpty(t)){if(i.primary.other={activeNumber:this.toFID(t.new_identifier.identifier),dormantNumber:this.service.isDormantFilingNum(this.patient.filingID)?this.toFID(this.patient.filingID):"N/A"},!d.isEmpty(t.archived_identifier)){const e=await this.getPatient(t.archived_identifier.patient_id);i.archived={label:"Active → Dormant",value:e.name,other:{activeNumber:this.toFID(t.archived_identifier.identifier),dormantNumber:this.toFID(t.new_identifier.identifier)}}}return i}},async swapExistingFilingNumbers(i){const t=await this.service.archivePatient(i.patient_id,i.identifier);if(t)return{primary:{label:"Dormant → Active",value:this.patient.name,other:{activeNumber:this.toFID(t.active_number),dormantNumber:this.toFID(this.patient.filingID)||"N/A"}},archived:{label:"Active → Dormant",value:`${i.given_name} ${i.family_name}`,other:{patientID:i.patient_id,activeNumber:this.toFID(t.dormant_number),dormantNumber:this.toFID(t.active_number)}}}},async presentLoading(i="Please wait..."){const t=await m.create({message:i,backdropDismiss:!1});await t.present()},async getPatient(i){const t=await a.findByID(i);if(t){const i=new a(t);return{id:i.getID(),filingID:i.getFilingNumber(),name:`${i.getGivenName()} ${i.getFamilyName()}`}}return{}},async archiveFilingNumber(){await this.presentLoading("Archiving filing number");try{await this.service.archiveFilingNumber(),await this.service.printFilingNumber(),l.invalidate("ACTIVE_PATIENT")}catch(i){c(`${i}`)}await m.dismiss(),this.$router.back()},async filingNumberSearchKeypad(){const i=await h.create({component:u,backdropDismiss:!1,cssClass:"keypad-modal",componentProps:{title:"Find Active number",strictNumbers:!1,onKeyPress:()=>{}}});await i.present();const{data:t}=await i.onDidDismiss();return t},async getArchivingCandidates(i=0){const t=await this.service.getArchivingCandidates(i);return this.formatCandidateOptions(t)},formatCandidateOptions(i){return i.map((i=>({label:`${i.given_name} ${i.family_name} (${i.state})`,value:i.identifier,other:{data:i,list:[{label:"Filing #",value:this.toFID(i.identifier),style:{color:"green",fontWeight:"bold"}},{label:"Given name",value:i.given_name},{label:"Family name",value:i.family_name},{label:"Outcome",value:i.state.match(/trans/i)?"TO":i.state.match(/stop/i)?"Tx stopped":i.state},{label:"LAD",value:g.toStandardHisDisplayFormat(i.appointment_date)}]}})))},getFilingNumberHistoryField(){return{id:"view_filing_history",type:f.TT_TABLE_VIEWER,helpText:"Filing Number Trail",condition:()=>!1,options:async()=>[{label:"Filing Number Trail",value:"Trail",other:{columns:["Status","Filing #","Date Created","Date voided"],rows:(await this.service.getPastFilingNumbers()).map((i=>{const t=0===i.voided;return[t?"Active":"Voided",this.toFID(i.identifier),g.toStandardHisDisplayFormat(i.date_created),t?"N/A":g.toStandardHisDisplayFormat(i.date_voided)]}))}}],config:{toolbarInfo:[{label:"Current filing #",value:this.toFID(this.patient.filingID)},{label:"Status",value:this.service.isActiveFilingNum(this.patient.filingID)?"Active":this.service.isDormantFilingNum(this.patient.filingID)?"Dormant":"N/A"}],hiddenFooterBtns:["Clear","Next","Back","Finish"],footerBtns:[{name:"Get filing #",slot:"end",state:{visible:{default:()=>this.service.isDormantFilingNum(this.patient.filingID)}},onClick:async()=>await this.onAssignFilingNumber()}]}}},getCandidateSelectionField(){let i={},t=0,e="",n=[];return{id:"select_candidate_to_swap",type:f.TT_CARD_SELECTOR,helpText:"Filing Number (Archive)",condition:()=>!1,validation:i=>p.required(i),onload:t=>i=t,onValue:async i=>{if(i&&await v(`Do you want to archive ${i.value}`)){const t=await this.swapExistingFilingNumbers(i.other.data);if(t)return this.filingNumberAssignment=t,this.fieldComponent="filing_number_management",!0}return!1},options:()=>this.getArchivingCandidates(),config:{hiddenFooterBtns:["Clear","Back","Finish","Next"],footerBtns:[{name:"Reset",slot:"end",color:"warning",state:{visible:{default:()=>!!e}},onClick:()=>{e="",i.listData=n,n=[]}},{name:"Specify",slot:"end",color:"success",onClick:async()=>{if(e=await this.filingNumberSearchKeypad(),e){const t=await this.service.getFilingNumber(e);n=[...i.listData],i.listData=this.formatCandidateOptions(t)}}},{name:"Previous batch",slot:"end",state:{visible:{default:()=>!e},disabled:{default:()=>t<=0}},onClick:async()=>{t-=1,i.listData=await this.getArchivingCandidates(t)}},{name:"Next batch",slot:"end",state:{visible:{default:()=>!e},disabled:{default:()=>i.listData&&i.listData.length<=1}},onClick:async()=>{t+=1,i.listData=await this.getArchivingCandidates(t)}}]}}},getFilingNumberField(){return{id:"filing_number_management",type:f.TT_FILING_NUMBER_VIEW,helpText:"Filing Number Management",onload:async()=>await this.service.printFilingNumber(),condition:()=>!1,options:()=>[this.filingNumberAssignment.primary,this.filingNumberAssignment.archived],config:{hiddenFooterBtns:["Cancel","Clear","Next"],footerBtns:[{name:"Print #",slot:"start",onClick:async()=>this.service.printFilingNumber()},{name:"Print Dormant#",slot:"start",state:{visible:{default:()=>!!this.filingNumberAssignment?.archived?.other?.patientID}},onClick:async()=>{const i=new t;i.setPatientID(this.filingNumberAssignment.archived.other.patientID),await i.printFilingNumber()}},{name:"Continue",color:"success",slot:"end",onClick:()=>b(this.patient.id,this.$router,this.$route)}]}}}}});i("default",N(w,[["render",function(i,t,e,n,a,s){const r=D("his-standard-form");return _(),F(r,{skipSummary:!0,activeField:i.fieldComponent,onOnIndex:t[0]||(t[0]=t=>i.fieldComponent=""),fields:i.fields},null,8,["activeField","fields"])}]]))}}}));
