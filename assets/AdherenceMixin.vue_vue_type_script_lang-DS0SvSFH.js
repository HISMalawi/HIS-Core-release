import{d as A,W as _,H as y,ad as h,aw as E,ae as p,aN as v}from"./index-CMZASHAR.js";import{A as f}from"./adherence_service-COV1K1AL.js";import{_ as T}from"./EncounterMixin.vue_vue_type_script_lang-v2aYCq6R.js";const q=A({mixins:[T],data:()=>({adherence:{},drugObs:[],askReasonForPoorAdherence:!1,calculationAgreementObs:[]}),methods:{async saveAdherence(){await this.adherence.createEncounter();const t=await Promise.all([...this.drugObs,...this.calculationAgreementObs]);if(!await this.adherence.saveObservationList(t))return _("Unable to save patient observations")},buildAdherenceReport(t){const e=this.adherence.getReceiptDate(),s=this.adherence.calcTimeElapsed(e,"day"),i=" Last visit: ".concat(y.toStandardHisDisplayFormat(e)," \n                (").concat(s," Days Elapsed)"),o=[{indexes:[0,3,6],class:"adherence-col-bg"}],n=[],c=[i],a=[["Prescription"],["Tabs given"],["Tabs per"],["Tabs remaining"],["Expected"],["Actual (counted)"],["Adherence"],["Doses missed/ Unaccounted for"],["Doses consumed"],["Art Adherence"]];return t.forEach((r,g)=>{const m=this.formatFrequency(r.frequency),d=this.calcPillsExpected(r),l=this.adherence.calculateAdherence(r.quantity,r.pillsBrought,d),u=this.adherence.isAdherenceGood(l)?"Good adherence":"Explore problem",b=this.adherence.calculateUnaccountedOrMissed(d,r.pillsBrought);c.push(r.drug.name),a[0].push(""),a[1].push(r.quantity),a[2].push("".concat(r.equivalent_daily_dose," <b>").concat(m,"</b>")),a[3].push(""),a[4].push(d<0?0:d),a[5].push(r.pillsBrought),a[6].push(""),a[7].push(b),a[8].push("".concat(l,"%")),a[9].push(u),n.push({index:g+1,row:9,class:u.match(/good/i)?"adherence-txt-good":"adherence-txt-bad"})}),[{label:"Selected Medication",value:"Table",other:{columns:c,rows:a,rowColors:o,cellColors:n}}]},formatFrequency(t){return"".concat(t).match(/qod/i)?"QOD":"".concat(t).match(/weekly/i)?"QW":t},calcPillsExpected(t){return this.adherence.calculateExpected(t.quantity,t.equivalent_daily_dose,t.order.start_date,this.formatFrequency(t.frequency))},getAdherenceFields(t=!1){return[{id:"pills_brought",helpText:"Pills remaining (brought to clinic)",type:h.TT_ADHERENCE_INPUT,init:async()=>(this.adherence=new f(this.patientID,this.providerID),await this.adherence.loadPreviousDrugs(await E.get("ASK_HANGING_PILLS")),!0),condition:()=>t?this.adherence.receivedDrugsBefore():!0,validation:e=>p.required(e)?["No drugs available"]:e.map(i=>i.value==="").some(Boolean)?["Some values are missing"]:null,unload:async e=>{this.drugObs=[],e.forEach(async s=>{const{drug:i,order:o}=s.other,n={...s.other,pillsBrought:s.value},c=this.adherence.calculateAdherence(n.quantity,n.pillsBrought,this.calcPillsExpected(n));this.drugObs.push(this.adherence.buildAdherenceObs(o.order_id,i.drug_id,c)),this.drugObs.push(this.adherence.buildPillCountObs(o.order_id,s.value)),this.askReasonForPoorAdherence||(this.askReasonForPoorAdherence=!this.adherence.isAdherenceGood(n))})},options:e=>v.isEmpty(e.pills_brought)?this.adherence.getLastDrugs().map(s=>({label:s.drug.name,value:"",other:{...s}})):e.pills_brought},{id:"adherence_report",helpText:"ART adherence",type:h.TT_TABLE_VIEWER,condition:()=>t?this.adherence.receivedDrugsBefore():!0,options:e=>this.buildAdherenceReport(e.pills_brought.map(s=>({...s.other,pillsBrought:s.value}))),config:{hiddenFooterBtns:["Clear"]}},{id:"agree_with_calculation",helpText:"Agree with adherence calculation",type:h.TT_SELECT,condition:()=>this.askReasonForPoorAdherence,validation:e=>p.required(e),unload:({value:e})=>{this.calculationAgreementObs=[this.adherence.buildValueCoded("Reason for poor treatment adherence",e)]},options:()=>[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]}]}}});export{q as _};
