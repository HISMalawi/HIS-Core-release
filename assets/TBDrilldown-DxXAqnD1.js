import{d,m as b,r as l,aR as h,as as g,a_ as v,bm as _,cv as P,cw as w,bN as D,am as T,ar as f,a as y,b as E,w as $,e as k}from"./index-DrAzzURJ.js";import{v as A}from"./TableView-BsrlHHo8.js";const F=25,B=d({props:{title:{type:String,default:"Drilldown"},patientIdentifiers:{type:Object},onFinish:{type:Function}},components:{IonPage:b,v2Datatable:A},setup(e){const a=l(!0),o=l("-"),n=l([]),c=g(),u=[[{label:"TB Number",ref:"identifier"},{label:"Name",ref:"name"},{label:"Gender",ref:"gender"},{label:"Age",ref:"age"},{label:"Action",ref:"patient_id",exportable:!1,tdClick:({data:t})=>c.push({path:"/patient/dashboard/".concat(t.person_id)}),value:()=>"View client"}]];function s(){a.value=!1,typeof e.onFinish=="function"&&e.onFinish()}return h(()=>e.patientIdentifiers,async t=>{if(n.value=[],o.value="Total: 0",!(t&&t.length))return;const p=v.chunk(t,1e3);for(const m of p){try{if(!a.value)break;const r=(await _.getTBPersons(m)).map(i=>({...i,birthdate:w(i.birthdate),gender:P(i.gender)}));n.value=[...n.value,...r]}catch(r){console.error(r)}o.value="Total: ".concat(n.value.length," of ").concat((t||[]).length),await D(100)}},{immediate:!0}),{columns:u,subtitle:o,reportData:n,canLoadData:a,ITEMS_PER_PAGE:F,runFinishAction:s}}});function I(e,a,o,n,c,u){const s=f("v2Datatable"),t=f("ion-page");return E(),y(t,null,{default:$(()=>[k(s,{title:e.title,subtitle:e.subtitle,columnData:e.reportData,columns:e.columns,"on-finish":e.runFinishAction,rowsPerPage:e.ITEMS_PER_PAGE},null,8,["title","subtitle","columnData","columns","on-finish","rowsPerPage"])]),_:1})}const N=T(B,[["render",I]]);export{N as T};
