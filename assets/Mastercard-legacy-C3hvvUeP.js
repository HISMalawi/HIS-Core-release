System.register(["./index-legacy-CA6M7ipO.js","./Pagination-legacy-BXR2lmLV.js"],(function(t,e){"use strict";var a,i,n,s,l,r,o,u,d,c,p,h,m,b,g,y,v,f,I,V,P,T,w,_,C,A,D,N,S,R,F,x,B,O;return{setters:[t=>{a=t.d,i=t.dx,n=t.aa,s=t.af,l=t.a,r=t.E,o=t.b,u=t.w,d=t.J,c=t.G,p=t.c,h=t.K,m=t.a2,b=t.M,g=t.au,y=t.C,v=t.b3,f=t.I,I=t.aq,V=t._,P=t.cu,T=t.as,w=t.al,_=t.H,C=t.t,A=t.am,D=t.aj,N=t.aw,S=t.bK,R=t.aN,F=t.by,x=t.bn,B=t.ci},t=>{O=t.P}],execute:function(){var e=document.createElement("style");e.textContent="ion-item[data-v-3e4c09f5]{padding:1px!important}\n/*$vite$:1*/",document.head.appendChild(e);const E=a({name:"InformationHeader",components:{MultiColumnView:i},props:{icon:{required:!1},items:{type:Object,required:!0},numberOfColumns:{type:Number,default:2}},emits:["update","updateARVNumber","addGuardian"],setup:(t,{emit:e})=>({onClick:t=>"demographics"===t.other.category?e("update",t.other.attribute):"arv_number"===t.other.category?e("updateARVNumber"):e("addGuardian")})}),H={style:{padding:".1rem"}},$={style:{width:"100%",display:"flex",justifyContent:"space-between",fontSize:"12px",margin:0,padding:0}},k=["onClick"],G=["innerHTML"],M=n(E,[["render",function(t,e,a,i,n,g){const y=s("ion-item"),v=s("ion-list"),f=s("multi-column-view");return l(),r("div",H,[o(f,{items:t.items,numberOfColumns:t.numberOfColumns},{default:u((({entries:e})=>[o(v,null,{default:u((()=>[(l(!0),r(d,null,c(e,(e=>(l(),r("span",{key:e.label},["boolean"!=typeof e.visible||e.visible?(l(),p(y,{key:0,style:{padding:"0 !important",margin:"0 !important"}},{default:u((()=>[h("div",$,[h("span",null,m(e.label)+": ",1),e.other&&e.other.editable?(l(),r("span",{key:0,onClick:a=>t.onClick(e)},[h("a",null,[h("b",null,m(e.value),1)])],8,k)):(l(),r("b",{key:1,innerHTML:e.value||"N/A"},null,8,G))])])),_:2},1024)):b("",!0)])))),128))])),_:2},1024)])),_:1},8,["items","numberOfColumns"])])}],["__scopeId","data-v-3e4c09f5"]]),j=a({components:{InformationHeader:M},props:{title:{type:String,required:!0},visitData:{type:Object,required:!0}},methods:{async closeModal(){await g.dismiss({})}}}),q=n(j,[["render",function(t,e,a,i,n,c){const p=s("ion-title"),h=s("ion-toolbar"),b=s("ion-header"),g=s("information-header"),v=s("ion-content"),f=s("ion-button"),I=s("ion-footer");return l(),r(d,null,[o(b,null,{default:u((()=>[o(h,null,{default:u((()=>[o(p,null,{default:u((()=>[y(m(t.title),1)])),_:1})])),_:1})])),_:1}),o(v,null,{default:u((()=>[o(g,{items:t.visitData},null,8,["items"])])),_:1}),o(I,null,{default:u((()=>[o(h,null,{default:u((()=>[o(f,{onClick:t.closeModal,slot:"end"},{default:u((()=>e[0]||(e[0]=[y(" Close ")]))),_:1},8,["onClick"])])),_:1})])),_:1})],64)}]]),L=a({components:{Preloader:v,Pagination:O,IonPage:f,ReportTable:I,IonContent:V,HisFooter:P,InformationHeader:M},data:()=>({patientId:0,patient:{},patientCardInfo:[],btns:[],itemsPerPage:10,currentPage:0,totalPages:0,pages:[],visitDates:[],tbStats:[],visitDatesInitialised:!1,columns:[[T.thTxt("VISIT DATE"),T.thTxt("WEIGHT (Kg)"),T.thTxt("REG"),T.thTxt("VIRAL LOAD"),T.thTxt("TB STATUS"),T.thTxt("OUTCOME"),T.thTxt("PILLS DISPENSED"),T.thTxt("ACTIONS")]],rows:[]}),created(){this.setPatientCards(),this.patientId=parseInt(`${this.$route.params.patient_id}`),w.getPatientVisits(this.patientId,!0).then((t=>{this.visitDatesInitialised=!0,this.visitDates=t,this.rows=t.map((t=>[T.tdBtn(_.toStandardHisDisplayFormat(t),(()=>C(this.patientId,t))),T.td("..."),T.td("..."),T.td("..."),T.td("..."),T.td("..."),T.td("..."),T.td("...")]))})).catch((t=>{this.visitDatesInitialised=!0,A(`${t}`),console.error(t)})),this.btns.push({name:"Finish",color:"success",size:"large",slot:"end",visible:!0,onClick:()=>{D("Are you sure you want to exit?").then((t=>{if(t)return this.$router.push(`/patient/dashboard/${this.patientId}`)}))}})},async mounted(){if(this.patientId)for(const t of this.patientCardInfo)"function"==typeof t.init&&await t.init(),"function"==typeof t.condition?t.visible=t.condition():t.visible=!0,"function"==typeof t.asyncValue?t.asyncValue(t).then((e=>t.value=e||"")):"function"==typeof t.staticValue&&(t.value=t.staticValue())},methods:{setPatientCards(){this.patientCardInfo=[{label:"ARV Number",value:"...",staticValue:()=>this.patient.getArvNumber(),init:async()=>{this.patient=await N.get("ACTIVE_PATIENT",{patientID:this.patientId})},other:{editable:!0,category:"arv_number"}},{label:"National Patient ID",value:"...",staticValue:()=>this.patient.getNationalID()},{label:"Given Name",value:"...",staticValue:()=>this.patient.getGivenName(),other:{editable:!0,attribute:"given_name",category:"demographics"}},{label:"Family Name",value:"...",staticValue:()=>this.patient.getFamilyName(),other:{editable:!0,attribute:"family_name",category:"demographics"}},{label:"Age",value:"...",staticValue:()=>this.patient.getAge(),other:{editable:!0,attribute:"year_birth_date",category:"demographics"}},{label:"Sex",value:"...",staticValue:()=>this.patient.getGender(),other:{editable:!0,attribute:"gender",category:"demographics"}},{label:"Location",value:"...",staticValue:()=>this.patient.getCurrentVillage(),other:{editable:!0,attribute:"home_region",category:"demographics"}},{label:"Landmark",value:"...",staticValue:()=>this.patient.getAttribute(19)},{label:"Guardian",value:"...",asyncValue:async t=>{const e=await S.getGuardianDetails(this.patientId);return R.isEmpty(e)?(t.other.editable=!0,"add"):e.map((t=>` ${t.name} (${t.relationshipType})`)).join(" ")},other:{editable:!1,attribute:"",category:"guardian"}},{label:"Init W(KG)",value:"...",asyncValue:()=>this.patient.getInitialWeight()},{label:"Init H(CM)",value:"...",asyncValue:()=>this.patient.getInitialHeight()},{label:"Init BMI",value:"...",asyncValue:()=>this.patient.getInitialBMI()},{label:"init Preg",value:"...",condition:()=>this.patient.isFemale(),asyncValue:()=>this.patient.getInitialObs("Is patient pregnant","value_coded")},{label:"init Breastfeeding",value:"...",condition:()=>this.patient.isFemale(),asyncValue:()=>this.patient.getInitialObs("Is patient breast feeding","value_coded")},{label:"cur Preg",value:"...",condition:()=>this.patient.isFemale(),asyncValue:async()=>await this.patient.isPregnant()?"Yes":"No"},{label:"cur Breastfeeding",value:"...",condition:()=>this.patient.isFemale(),asyncValue:async()=>await this.patient.isBreastfeeding()?"Yes":"No"},{label:"TI",value:"...",asyncValue:()=>F.getFirstValueCoded(this.patientId,"Ever received ART")},{label:"Agrees to follow up",value:"...",asyncValue:()=>F.getFirstValueCoded(this.patientId,"Agrees to followup")},{label:"Reason for starting ART",value:"...",asyncValue:()=>F.getFirstValueCoded(this.patientId,"Reason for ART eligibility")},{label:"HIV test date",value:"...",asyncValue:async()=>{const t=await F.getFirstValueDatetime(this.patientId,"Confirmatory HIV test date");return t?_.toStandardHisDisplayFormat(t):""}},{label:"HIV test place",value:"...",asyncValue:()=>F.getFirstValueText(this.patientId,"Confirmatory HIV test location")},{label:"Date of starting first line ART",value:"...",asyncValue:async()=>{const t=await F.getFirstValueDatetime(this.patientId,"Date ART started");return t?_.toStandardHisDisplayFormat(t):""}},{label:"Pulmonary TB within the last 2 years",value:"...",init:async()=>{this.tbStats=await F.getAllValueCoded(this.patientId,"Who stages criteria present")||[]},staticValue:()=>this.hasTbStat("Tuberculosis (PTB or EPTB) within the last 2 years")},{label:"Extra pulmonary TB (EPTB)",value:"...",staticValue:()=>this.hasTbStat("Extrapulmonary tuberculosis (EPTB)")},{label:"Pulmonary TB (current)",value:"...",staticValue:()=>this.hasTbStat("Pulmonary tuberculosis (current)")},{label:"Kaposis sarcoma",value:"...",staticValue:()=>this.hasTbStat("Kaposis sarcoma")}]},buildDetails(t){const e=t=>t.map((([t,e])=>`${t} (${e})`)).join("/");return[{label:"Outcome",value:t.outcome},{label:"Outcome Date",value:t.outcome_date},{label:"Side effects",value:t.side_effects},{label:"Viral load",value:t.viral_load},{label:"Pills Brought",value:e(t.pills_brought)},{label:"Pills dispensed",value:e(t.pills_dispensed)},{label:"Visit by",value:t.visit_by},{label:"Regimen",value:t.regimen},{label:"Adherence",value:e(t.adherence)},{label:"TB Status",value:t.tb_status},{label:"Height (cm)",value:t.height},{label:"Weight (Kg)",value:t.weight},{label:"BMI",value:t.bmi},{label:"Is pregnant",value:t.isPregnant,visible:this.patient.isFemale()},{label:"Is breastfeeding",value:t.isBreastfeeding,visible:this.patient.isFemale()}]},async onNewRow(t){const e=[...t];if(e[1]&&"..."!=e[1].td)return e;const a=e[0].td,i=await x.getCurrentProgramInformation(this.patientId,a),n=await x.getMastercardDrugInformation(this.patientId,a),s=(n?.pills_given||[]).map((t=>`${t.short_name||t.name} <b>(${t.quantity||"?"})</b>`)).join("<br/>");let l="N/A",r="N/A";if(this.patient.isFemale()){const t=await F.getFirstObs(this.patientId,"Is patient pregnant",a);t&&B(t.obs_datetime)===a&&(l=t.value_coded);const e=await F.getFirstObs(this.patientId,"Is patient breast feeding",a);e&&B(e.obs_datetime)===a&&(r=e.value_coded)}return e[1]=T.td(i.weight),e[2]=T.td(i.regimen),e[3]=T.td(i.viral_load),e[4]=T.td(i.tb_status),e[5]=T.td(i.outcome.match(/Unk/i)?"Unknown":i.outcome),e[6]=T.td(s),e[7]=T.tdBtn("More",(async()=>{(await g.create({component:q,backdropDismiss:!1,cssClass:"large-modal",componentProps:{title:a,visitData:this.buildDetails({...i,isPregnant:l,isBreastfeeding:r})}})).present()})),e},hasTbStat(t){return this.tbStats.includes(t)?"Yes":"No"},updateDemographics(t){this.$router.push({path:"/patient/registration",query:{edit_person:this.patientId,person_attribute:t}})},addGuardian(){this.$router.push({path:`/guardian/registration/${this.patientId}`,query:{source:this.$route.name?.toString()}})},updateARVNumber(){this.$router.push({name:"Edit ARV Number"})}}});t("default",n(L,[["render",function(t,e,a,i,n,r){const d=s("information-header"),c=s("report-table"),h=s("preloader"),m=s("pagination"),g=s("ion-content"),y=s("his-footer"),v=s("ion-page");return l(),p(v,{style:{background:"#fff"}},{default:u((()=>[o(d,{items:t.patientCardInfo,numberOfColumns:4,onAddGuardian:t.addGuardian,onUpdate:t.updateDemographics,onUpdateARVNumber:t.updateARVNumber},null,8,["items","onAddGuardian","onUpdate","onUpdateARVNumber"]),o(g,null,{default:u((()=>[o(c,{paginated:!0,rows:t.rows,columns:t.columns,rowsPerPage:t.itemsPerPage,newPage:t.currentPage,asyncRowParser:t.onNewRow,onOnPagination:e[0]||(e[0]=e=>t.totalPages=e.length)},null,8,["rows","columns","rowsPerPage","newPage","asyncRowParser"]),t.visitDatesInitialised?b("",!0):(l(),p(h,{key:0,itemCount:5})),o(m,{perPage:t.itemsPerPage,maxVisibleButtons:20,totalPages:t.totalPages,onOnChangePage:e[1]||(e[1]=e=>t.currentPage=e)},null,8,["perPage","totalPages"])])),_:1}),o(y,{btns:t.btns},null,8,["btns"])])),_:1})}]]))}}}));
