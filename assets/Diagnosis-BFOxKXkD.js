import{H as C}from"./HisStandardForm-CmiKCQno.js";import{b5 as c,aS as y,d as E,K as d,aU as x,V as L,ab as p,o as P,c as F,w as N,b as V,cl as m,I as O,S as M,n as I}from"./index-ukYYv03_.js";import{F as g}from"./dynamic-import-helper-Bsjrd6Ro.js";import{u as k}from"./useEncounter-BBj25pc-.js";import{a as R,r as f}from"./commons-CTGzqhKL.js";import"./TouchScreenForm-C0lsuVE6.js";import"./ToolbarMediumCard-BzOm1RiU.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-DXU7_cLE.js";import"./isEmpty-DlAQtGSP.js";import"./_Set-DO8_BwDk.js";import"./_setToArray-C8hExohd.js";import"./encounter_guidelines-DEFE9wN1.js";import"./GuidelineEngine-D6V1_Znr.js";class _ extends c{constructor(a,i){super(a,41,i)}static async getDiagnosis(a="",i=1,n=10){const o=y.getConceptID("Qech outpatient diagnosis list");return c.getJson("diagnosis",{id:o,name:a,page:i,page_size:n})}}class $ extends c{constructor(a,i){super(a,105,i)}}const Z=E({__name:"Diagnosis",setup(l){let a,i;const n=d("No"),o=d([]),{goToNextTask:v,patientDashboardUrl:S}=k((t,e)=>{x.getLatestMalariaTestResult(e).then(s=>n.value=s),a=new $(e,t),i=new _(e,t),o.value=[u("Primary"),u("Secondary"),w()]});async function T(t,e){await i.createEncounter();const s=await f({...e,obs_datetime:M.getSessionDate()},"diagnosis");await i.saveObservationList(s);const r=await f({...e},"notes");p.isEmpty(r)||(await a.createEncounter(),await a.saveObservationList(r)),v()}async function b(t){return t.some(({label:s})=>/Malaria/i.test(s))?n.value==="Positive"?!0:await I("Patient has ".concat(n.value," malaria test result. Do you want to continue?")):!0}function u(t){return{id:"".concat(t.toLowerCase(),"_diagnosis"),helpText:"".concat(t," Diagnosis"),type:g.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:e=>t==="Primary"?L.required(e):null,options:async(e,s="",r=1,D=10)=>{const h=await _.getDiagnosis(s,r,D);return R(h,"name","concept_id")},beforeNext:async e=>await b(e),computedValue:e=>({tag:"diagnosis",obs:e.map(({value:s})=>i.buildValueCoded("".concat(t," Diagnosis"),s))}),config:{isFilterDataViaApi:!0,showKeyboard:!0}}}function w(){return{id:"clinical_notes",helpText:"Clinical notes",type:g.TT_TEXT,computedValue:t=>p.isEmpty(t)?null:{tag:"notes",obs:a.buildValueText("Clinical notes construct",t.value)}}}return(t,e)=>(P(),F(m(O),null,{default:N(()=>[V(C,{cancelDestinationPath:m(S),fields:o.value,onFinishAction:T},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{Z as default};
