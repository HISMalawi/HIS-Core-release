System.register(["./HisStandardForm-legacy-CCaIL6NL.js","./patient_diagnosis_service-legacy-BUTw3ar_.js","./index-legacy-sLIX6Wy9.js","./useEncounter-legacy-1AxyVJ5j.js","./useLabResultsManager-legacy-2aBsrjNv.js","./commons-legacy-Dtcjo20n.js","./isEmpty-legacy-C9nV41DR.js","./encounter_guidelines-legacy-DAWGM7-g.js","./GuidelineEngine-legacy-KsvQuFdF.js","./lab_order_service-legacy-BJo3O7U0.js"],(function(e,a){"use strict";var t,i,s,n,o,l,c,r,u,d,y,g,p,m,b,v;return{setters:[e=>{t=e.H},e=>{i=e.P},e=>{s=e.bK,n=e.d,o=e.r,l=e.a9,c=e.aa,r=e.aM,u=e.u,d=e.v,y=e.y,g=e.aj,p=e.ad},e=>{m=e.u},e=>{b=e.u},e=>{v=e.r},null,null,null,null],execute:function(){class a extends s{constructor(e,a){super(e,105,a)}}e("default",n({__name:"Diagnosis",setup(e){let s,n;const _=o("No"),T=o([]),w=o(Math.random()),{patientDashboardUrl:E,goToNextTask:h}=m((async(e,t)=>{s=new a(t,e),n=new i(t,e);const{getLabFields:o}=b(t,e,w);T.value=[...o(!0),{id:"primary_diagnosis",helpText:"Select primary diagnosis",type:l.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:e=>c.required(e),options:async(e,a="",t=1,s=10)=>f(await i.getDiagnosis(a,t,s)),beforeNext:async e=>await j(e),computedValue:e=>({tag:"diagnosis",obs:e.map((({other:e})=>n.buildValueCodedFromConceptId("Primary diagnosis",e)))}),summaryMapValue:({value:e})=>({value:e,label:"Primary diagnosis"}),config:{isFilterDataViaApi:!0,showKeyboard:!0}},{id:"secondary_diagnosis",helpText:"Select secondary diagnosis",type:l.TT_INFINITE_SCROLL_MULTIPLE_SELECT,options:async(e,a="",t=1,s=10)=>f(await i.getDiagnosis(a,t,s)),beforeNext:async e=>await j(e),computedValue:e=>!r.isEmpty(e)&&{tag:"diagnosis",obs:e.map((({other:e})=>n.buildValueCodedFromConceptId("Secondary diagnosis",e)))},summaryMapValue:({value:e})=>({value:e,label:"Secondary diagnosis"}),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"clinical_notes",helpText:"Clinical notes",type:l.TT_TEXT,computedValue:e=>e&&{tag:"notes",obs:s.buildValueText("Clinical notes construct",e.value)}}]}));async function L(e,a){await n.createEncounter();const t=await v({...a,obs_datetime:g.getSessionDate()},"diagnosis");await n.saveObservationList(t);const i=await v({...a},"notes");r.isEmpty(i)||(await s.createEncounter(),await s.saveObservationList(i)),h()}function f(e){return r.isEmpty(e)?[]:e.map((e=>({label:e.name,value:e.name,other:e.concept_id,isChecked:!1}))).sort(((e,a)=>e.label<a.label?-1:e.label>a.label?1:0))}async function j(e){return!e.find((e=>"Malaria"===e.label))||"Positive"===_.value||await p(`Patient has ${_.value} malaria test result. Do you want to continue?`)}return(e,a)=>(u(),d(t,{key:w.value,cancelDestinationPath:y(E),fields:T.value,onFinishAction:L},null,8,["cancelDestinationPath","fields"]))}}))}}}));
