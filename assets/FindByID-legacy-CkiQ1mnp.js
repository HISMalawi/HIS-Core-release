System.register(["./index-legacy-CA6M7ipO.js","./HisStandardForm-legacy-a9YJRGaH.js"],(function(e,t){"use strict";var i,n,a,s,r,l,d,p,o,u,c,h,m,g,f,y;return{setters:[e=>{i=e.d,n=e.ad,a=e.ae,s=e.ab,r=e.as,l=e.al,d=e.bo,p=e.bN,o=e.bn,u=e.aN,c=e.W,h=e.aa,m=e.c,g=e.af,f=e.a},e=>{y=e.H}],execute:function(){const t=i({components:{HisStandardForm:y},data:()=>({app:{},fields:[],fieldComponent:"",people:[],patient:{},assignNewARVNumber:!1,suggestedARVNumber:""}),created(){this.setApp(),this.fields=[this.getIdSelectionField(),this.getIdSearchField(),this.getARVDuplicatesField(),this.getReassignARVNumberField()]},methods:{getIdSelectionField(){return{id:"identifier_type",helpText:"Select identifier type",type:n.TT_SELECT,requireNext:!1,validation:e=>a.required(e),options:async()=>{const e=this.app.programPatientIdentifiers?Object.values(this.app.programPatientIdentifiers):[],t=await Promise.all(e.map((async e=>"function"==typeof e.visible?await e.visible():!e.globalPropertySetting||await s.isProp(e.globalPropertySetting))));return e.filter(((e,i)=>e.useForSearch&&t[i])).map((e=>({label:e.name,value:e.id,other:e})))}}},getIdSearchField:()=>({id:"identifier",helpText:"Identifier",dynamicHelpText:e=>`Search by ${e.identifier_type.label}`,type:n.TT_TEXT,validation:(e,t)=>a.validateSeries([()=>a.required(e),()=>"function"==typeof t.identifier_type.other?.validation?t.identifier_type.other.validation(e):null]),config:{casing:"uppercase",initialKb:e=>e.identifier_type.other?.keyboardName||"0-9",prependValue:e=>e.identifier_type.other?.prefix()||""}}),getARVDuplicatesField(){return{id:"arv_duplicates",helpText:"Duplicates",dynamicHelpText:e=>`Duplicate patients with identifer ${e.identifier.value}`,type:n.TT_DATA_TABLE,requireNext:!1,condition:async e=>await this.hasDuplicates(e)&&"ARV Number"===e.identifier_type.label,config:{hiddenFooterBtns:["Clear","Finish"],columns:()=>[[r.thTxt("First Name"),r.thTxt("Family Name"),r.thTxt("Gender"),r.thDate("Birthdate"),r.thTxt("Current Village"),r.thTxt("Actions",{colspan:2})]],rows:()=>this.people.map((e=>{const t=new l(e);return[r.td(t.getGivenName()),r.td(t.getFamilyName()),r.td(t.getGender()),r.tdDate(t.getBirthdate()?.toString()),r.td(t.getCurrentVillage()),r.tdBtn("Select patient",(()=>this.selectPatient(t.getID())),{style:{fontSize:"12px",textTransform:"none"}},"warning"),r.tdBtn("Re-assign identifier",(()=>this.reassignARVNumber(t)),{style:{fontSize:"12px",textTransform:"none"}},"danger")]}))}}},getReassignARVNumberField(){return{id:"arv_number",helpText:"ART number",type:n.TT_TEXT,computedValue:({value:e})=>e,validation:e=>a.required(e),condition:()=>"arv_number"===this.fieldComponent&&this.assignNewARVNumber,defaultValue:()=>this.suggestedARVNumber,config:{initialKb:"0-9",prependValue:e=>e.identifier_type.other.prefix()}}},setApp(){const e=d.getActiveApp();e&&(this.app=e)},async hasDuplicates(e){return this.people=await l.findByOtherID(e.identifier_type.value,e.identifier.value),this.people.length>1},selectPatient(e){this.$router.push(`/patients/confirm?person_id=${e}`)},async reassignARVNumber(e){const t=await p.create({});t.present();const i=await o.getNextSuggestedARVNumber();this.suggestedARVNumber=i.arv_number.replace(/^\D+|\s/g,""),this.patient=e,this.assignNewARVNumber=!0,this.fieldComponent="arv_number",t.dismiss()},async onFinish(e){if(u.isEmpty(this.people))c("Client not found");else if(this.assignNewARVNumber&&!u.isEmpty(this.patient))try{await this.patient.updateARVNumber(e.arv_number.value),this.selectPatient(this.patient.getID())}catch(t){c(`${t}`)}else{const e=new l(this.people[0]);this.selectPatient(e.getID())}}}});e("default",h(t,[["render",function(e,t,i,n,a,s){const r=g("his-standard-form");return f(),m(r,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,activeField:e.fieldComponent},null,8,["fields","onFinishAction","activeField"])}]]))}}}));
