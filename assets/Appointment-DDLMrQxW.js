import{d as b,r as v,bQ as g,bV as I,a9 as D,a7 as w,ew as E,aa as y,es as p,d8 as u,u as S,v as h,w as A,x as P,y as d,bU as N,bA as F,et as k,O as C,eA as O,a5 as V}from"./index-CyYd6aWW.js";import{H as M}from"./HisStandardForm-CuX9K_Ib.js";import{u as L}from"./useEncounter-BSqOthIr.js";import{r as R}from"./commons-j0XB9It2.js";import{A as c}from"./appointment_service-BS9pWUCw.js";import"./encounter_guidelines-Cq7m6ibV.js";import"./GuidelineEngine-D6V1_Znr.js";const K=b({__name:"Appointment",setup(U){const s=v([]),e=new g(-1,I.APPOINTMENT);let m=0;const{goToNextTask:_,patientDashboardUrl:T}=L((r,o)=>{e.patientID=o,e.providerID=r,m=o;const i=()=>{let a={},l=-1;const n={};return{id:"appointment",helpText:"Appointment booking",type:D.TT_DATE_PICKER,init:async()=>(l=await w.get(E.CLINIC_APPOINTMENT_LIMIT),a=await c.getJson("programs/".concat(e.programID,"/patients/").concat(o,"/next_appointment_date"),{date:e.date}),!0),defaultValue:()=>a==null?void 0:a.appointment_date,validation:t=>y.required(t),computedValue:t=>[{concept_id:p("APPOINTMENT_DATE"),value_datetime:t,obs_datetime:e.date},{concept_id:p("ESTIMATED_DATE"),value_datetime:a==null?void 0:a.appointment_date,obs_datetime:e.date}],config:{minDate:()=>e.date,maxDate:()=>a==null?void 0:a.drugs_run_out_date,supValue:t=>"".concat((n[t]||[]).length),infoItems:async t=>(n[t]||(n[t]=await c.getJson("programs/".concat(e.programID,"/booked_appointments"),{date:t,paginate:!1})),[{label:"Medication Run out Date",value:u((a==null?void 0:a.drugs_run_out_date)||"Not available")},{label:"User set appointment date",value:u(t)},{label:"Appointments",value:(n[t]||[]).length},{label:"Appointment limit (per/day)",value:l||"N/A"}]),hiddenFooterBtns:["Clear"]}}};s.value=[i()]});async function f(r,o){if(await e.createEncounter(),await e.saveObservationList(await R(o)),await N.shouldTransferToExternalFacility(e.patientID)){const i=new F(e.patientID);i.setStateDate(e.date),i.setStateId(k.TRANSFER_OUT);try{await i.updateState()}catch(a){C("Failed to transfer out patient, please do it manually for now."),console.error(a)}}await O(e.patientID),_()}return(r,o)=>(S(),h(d(V),null,{default:A(()=>[P(M,{cancelDestinationPath:d(T),onFinishAction:f,fields:s.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{K as default};
