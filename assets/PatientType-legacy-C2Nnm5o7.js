System.register(["./index-legacy-B5_bWIZW.js","./HisStandardForm-legacy-Bk_2V3lo.js","./EncounterMixin.vue_vue_type_script_lang-legacy-3qg1ag9R.js","./encounter_guidelines-legacy-SSGo1c3B.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var i,a,n,l,s,o,r,d,p,u,c,y;return{setters:[e=>{i=e.d,a=e.b7,n=e.U,l=e.F,s=e.V,o=e.b5,r=e._,d=e.r,p=e.o,u=e.c},e=>{c=e.H},e=>{y=e._},null,null],execute:function(){const t=i({mixins:[y],components:{HisStandardForm:c},data:()=>({patientType:{}}),watch:{ready:{async handler(e){e&&(this.patientType=new a(this.patientID,this.providerID),await this.patientType.loadPatientType(),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){await this.patientType.createEncounter(),await this.patientType.saveObservationList(await this.resolveObs(t)),n("Observations and encounter created!"),this.nextTask()},patientTypeField(){return{id:"patient_type",helpText:`Current type: ${this.patientType.getType()}`,type:l.TT_SELECT,validation:e=>s.required(e)||s.notTheSame(e.value,this.patientType.getType()),options:()=>a.getPatientTypes(),computedValue:e=>this.patientType.buildPatientType(e.value)}},facilityLocationField(){return{...o.getFacilityLocationField(),computedValue:e=>this.patientType.buildLocationClinic(e.value),condition:e=>["Emergency supply","External consultation"].includes(e.patient_type.value)}},entryPointField(){return{id:"entry",helpText:"Entry point",type:l.TT_SELECT,computedValue:e=>this.patientType.buildEntryPoint(e.value),condition:e=>/external/i.test(e.patient_type.value),validation:e=>s.required(e),options:()=>this.mapStrToOptions(["ART","ANC","IPD","OPD"])}},hasViralLoadField(){return{id:"has_vl",helpText:"Viral load result available?",type:l.TT_SELECT,condition:e=>/external/i.test(e.patient_type.value),validation:e=>s.required(e),options:()=>this.yesNoOptions()}},viralLoadField(){return{id:"vl",helpText:"Viral load",type:l.TT_TEXT,condition:e=>"Yes"===e.has_vl.value,computedValue:e=>this.patientType.buildVl(e.value),validation:e=>s.validateSeries([()=>s.required(e),()=>/^([=<>]\d*)$|^(LDL)$/i.test(`${e.value}`)?null:["Invalid value format. Viral load values should look similar to  >1000 or <250 or =650 or LDL"]]),config:{customKeyboard:[[["1","2","3","=","<",">"],["4","5","6","LDL"],["7","8","9"],["","0",""]],[["Delete"]]]}}},getFields(){return[this.patientTypeField(),this.facilityLocationField(),this.entryPointField(),this.hasViralLoadField(),this.viralLoadField()]}}});e("default",r(t,[["render",function(e,t,i,a,n,l){const s=d("his-standard-form");return p(),u(s,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}]]))}}}));
