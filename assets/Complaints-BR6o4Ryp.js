import{H as D}from"./HisStandardForm-CWpBcokh.js";import{_}from"./EncounterMixin.vue_vue_type_script_lang-iYCFdq6R.js";import{bJ as I,br as h,d as y,a3 as B,S as R,O as k,R as x,Q as F,a4 as V,dM as f,aL as $,as as p,a8 as b,ad as s,u as C,B as L,x as n,w as o,z as c,E as A,a5 as M,bs as g,bk as N,ai as H,ab as d,ac as z,v as G}from"./index-CG6KEPsv.js";import{L as j}from"./LabOrderModal-BauChqp5.js";import{P as q}from"./patient_radiology_service-DlaOgzli.js";import J from"./HisRadiologyPicker-Di3w_sJX.js";import"./encounter_guidelines-fPxboxGG.js";import"./GuidelineEngine-D6V1_Znr.js";import"./lab_order_service-CTjE52aG.js";import"./SelectMixin-BRQkL8vO.js";import"./BaseTextInput-BumvZKMF.js";import"./FieldMixin.vue_vue_type_script_lang-8lytXBXT.js";import"./patient_radiology_service-BAcNV4ms.js";class m extends I{constructor(t,a){super(t,122,a)}static async getComplaintsList(t,a=""){return h.getConceptSet(t,a)}async fetchLatestTriageEncounter(){return await m.getObs({concept_id:h.getConceptID("History of COVID-19 contact"),start_date:this.date,end_date:this.date,person_id:this.patientID})}}const K=y({name:"Modal",components:{IonButton:B,IonContent:R,IonHeader:k,IonTitle:x,IonToolbar:F,IonFooter:V,HisRadiologyPicker:J},mixins:[_],data:()=>({radiologyService:{},isPacsEnabled:!1,emitedSelectedOptions:{}}),watch:{ready:{async handler(e){e&&(this.radiologyService=new q(this.patientID,this.providerID),this.isPacsEnabled=await f.isPACsEnabled())},immediate:!0,deep:!0}},methods:{async onValue(e){this.emitedSelectedOptions=e},async getSelected(){return this.emitedSelectedOptions.map(async e=>({...await this.radiologyService.buildValueCoded("Radiology Orders",e.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]}))},async onSubmit(){if(!$.isEmpty(this.emitedSelectedOptions)){this.closeModal();let e=await this.getSelected();e=await Promise.all(e),await this.radiologyService.createEncounter();const t=await this.radiologyService.obsObj(e),a=await this.radiologyService.saveObservationList(t);if(await this.radiologyService.printOrders(a,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(a,this.patient)}catch(i){console.log(i)}}},async closeModal(){await p.dismiss([])}}});function Q(e,t,a,i,S,v){const l=s("ion-title"),r=s("ion-toolbar"),w=s("ion-header"),O=s("his-radiology-picker"),P=s("ion-content"),u=s("ion-button"),T=s("ion-footer");return C(),L(A,null,[n(w,null,{default:o(()=>[n(r,null,{default:o(()=>[n(l,{class:"his-lg-text"},{default:o(()=>[c("Radiology Examination")]),_:1})]),_:1})]),_:1}),n(P,{style:{overflow:"hidden",background:"grey",height:"70vh"}},{default:o(()=>[n(O,{onOnValue:e.onValue},null,8,["onOnValue"])]),_:1}),n(T,null,{default:o(()=>[n(r,null,{default:o(()=>[n(u,{onClick:t[0]||(t[0]=E=>e.onSubmit()),size:"large",slot:"end",disabled:e.emitedSelectedOptions.length===0},{default:o(()=>[c(" Place orders ")]),_:1},8,["disabled"]),n(u,{onClick:t[1]||(t[1]=E=>e.closeModal()),size:"large",slot:"start",color:"danger"},{default:o(()=>[c(" Close ")]),_:1})]),_:1})]),_:1})],64)}const U=b(K,[["render",Q]]),W=y({components:{HisStandardForm:D,IonPage:M},mixins:[_],data:()=>({complaintsService:{},todaysDate:g.getSessionDate(),presentingComplaints:"",isPacsEnabled:!1,radiologyBtnName:"Radiology Order",hasTriageComplaints:!1}),watch:{ready:{async handler(e){e&&(this.complaintsService=new m(this.patientID,this.providerID),this.isPacsEnabled=await f.isPACsEnabled(),this.hasTriageComplaints=await this.getTriagePresentingComplaints(),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const a=await Promise.all(t.complaints);await this.complaintsService.createEncounter(),await this.complaintsService.saveObservationList(a),this.nextTask()},async launchOrderSelection(){const e=await p.create({component:j,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async launchRadiologyOrderSelection(){const e=await p.create({component:U,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async getTriagePresentingComplaints(){if(!((await this.complaintsService.fetchLatestTriageEncounter()).length>0))return!1;const a=(await N.getEncounters(this.patientID,this.todaysDate)).filter(function(i){return i.type.name=="TRIAGE PRESENTING COMPLAINTS"&&H.toStandardHisFormat(i.encounter_datetime)==g.getSessionDate()});return a.length>0?(this.presentingComplaints=a[0].observations,!0):!1},buildResults(){const e=["Group","Presenting complaints"];let t="",a=this.presentingComplaints.map(i=>{if(i.obs_group_id!=null)return[t,i.value_text];t=i.value_text});return a=a.filter(i=>i!=null),this.presentingComplaints=a,[{label:"",value:"",other:{columns:e,rows:a}}]},getFields(){return[{id:"triage_complaints",helpText:"Triaging Complaints",condition:()=>this.hasTriageComplaints,type:d.TT_TABLE_VIEWER,options:()=>this.buildResults(),config:{hiddenFooterBtns:["Clear"]}},{id:"complaints",helpText:"Presenting Complaints",type:d.TT_COMPLAINTS_PICKER,validation:e=>z.required(e),computedValue:e=>e.map(async t=>({...await this.complaintsService.buildValueCoded("Presenting complaint",t.other.parent),child:[await this.complaintsService.buildValueCodedFromConceptId(t.other.parent,t.other.concept_id)]})),config:{hiddenFooterBtns:[this.showRadiologyOdersBtn(),this.disableBackBtn()],footerBtns:[{name:"Lab Order",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchOrderSelection(),visibleOnStateChange:e=>e.index===1},{name:this.radiologyBtnName,size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchRadiologyOrderSelection(),visibleOnStateChange:e=>e.index===1}]}},{id:"all_presenting_complaints",helpText:"Summary",condition:()=>this.presentingComplaints.length>0,type:d.TT_SUMMARY,options:e=>this.buildSummaryResults(e),config:{hiddenFooterBtns:["Clear"]}}]},showRadiologyOdersBtn(){return this.isPacsEnabled?"":this.radiologyBtnName},buildSummaryResults(e){const t=e.complaints.map(i=>({label:"OPD Complaints",value:i.label})),a=this.presentingComplaints.map(i=>({label:"Triaging Complaints",value:i[1]}));return t.concat(a)},disableBackBtn(){return this.hasTriageComplaints?"":"Back"}}});function Y(e,t,a,i,S,v){const l=s("his-standard-form"),r=s("ion-page");return C(),G(r,null,{default:o(()=>[n(l,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit,skipSummary:!0},null,8,["cancelDestinationPath","fields","onFinishAction"])]),_:1})}const pe=b(W,[["render",Y]]);export{pe as default};
