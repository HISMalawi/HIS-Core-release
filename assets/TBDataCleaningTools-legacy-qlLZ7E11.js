System.register(["./index-legacy-B-IGLekl.js","./ReportMixin.vue_vue_type_script_lang-legacy-B2AVJ_qe.js","./TableReportTemplate-legacy-DQrxHl8p.js","./HisStandardForm-legacy-zrsmj5en.js","./ReportErrors-legacy-f37ZIf6a.js"],(function(t,e){"use strict";var a,o,s,r,i,n,l,d,u,m,h,T,c,p,_;return{setters:[t=>{a=t.aj,o=t.d,s=t.a5,r=t.ao,i=t.aO,n=t.aN,l=t.ag,d=t.a6,u=t.v,m=t.w,h=t.ab,T=t.u,c=t.x},t=>{p=t._},t=>{_=t.R},null,null],execute:function(){class e extends a{programID;startDate;endDate;date;constructor(){super(),this.startDate="",this.endDate="",this.date=a.getSessionDate(),this.programID=a.getProgramID()}setStartDate(t){this.startDate=t}setEndDate(t){this.endDate=t}buildRequestParams(t){const e={};return this.startDate&&(e.start_date=this.startDate),this.endDate&&(e.end_date=this.endDate),this.date&&(e.date=this.date),this.programID&&(e.program_id=this.programID),{...e,...t}}}var R=(t=>(t.WITHOUT_PROGRAM="WITHOUT PROGRAM",t.WITHOUT_TB_NUMBER="WITHOUT TB NUMBER",t.BAD_TB_NUMBER="BAD TB NUMBER",t.IN_TREATMENT_BUT_COMPLETED="IN TREATMENT BUT COMPLETED",t.WITH_DISPENSATION_ANOMALIES="WITH DISPENSATION ANOMALIES",t.WITH_UNKNOWN_OUTCOME="WITH UNKNOWN OUTCOME",t.WITH_DUPLICATE_TB_NUMBER="WITH DUPLICATE TB NUMBER",t))(R||{});class N extends e{constructor(){super()}getDataToolReport(t){return e.getJson("tb_data_cleaning_tools",this.buildRequestParams({context:t}))}}const D=o({mixins:[p],components:{ReportTemplate:_,IonPage:s},data:()=>({title:"Data cleaning report",rows:[],columns:[[r.thTxt("National ID"),r.thTxt("TB Number"),r.thTxt("Name"),r.thTxt("Gender"),r.thTxt("Birthdate"),r.thTxt("Residence"),r.thTxt("State")]],defaultIndicator:{}}),created(){this.fields=[...i({id:"start_date",helpText:"Start",required:!0,minDate:()=>"2000-01-01",maxDate:()=>a.getSessionDate(),computeValue:t=>t,estimation:{allowUnknown:!1}}),...i({id:"end_date",helpText:"End",required:!0,minDate:()=>"2000-01-01",maxDate:()=>a.getSessionDate(),computeValue:t=>t,estimation:{allowUnknown:!1}})],this.defaultIndicator=n.find(this.getIndicatorOptions(),{label:this.$route.query.case})||null},methods:{async onPeriod(t,e){const a=t=>l.toStandardHisDisplayFormat(t);this.rows=[];const o=this.defaultIndicator;this.title=o.label,this.columns=o.other.columns,this.report=new N,this.report.setStartDate(e.start_date),this.report.setEndDate(e.end_date),this.period=`${a(e.start_date)} - ${a(e.end_date)}`;const s=await this.report.getDataToolReport(o.value);console.log(o,s),n.isNull(s)||(this.rows=await Promise.all(s.map((t=>o.other.formatRow(t)))))},mapRow(t){return[r.td(t.identifier||"N/A"),r.td(t.tb_number||"N/A"),r.tdLink(t.name,(()=>this.$router.push({path:`/patient/dashboard/${t.patient_id}`}))),r.td(t.gender||"N/A"),r.td(t.birthdate||"N/A"),r.td(t.residence||"N/A"),r.td(t.state||"N/A")]},getIndicatorOptions(){return[{label:"without program",value:R.WITHOUT_PROGRAM,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"with duplicate tb number",value:R.WITH_DUPLICATE_TB_NUMBER,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"with unknown outcome",value:R.WITH_UNKNOWN_OUTCOME,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"with dispensation anomalies",value:R.WITH_DISPENSATION_ANOMALIES,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"in treatment but completed",value:R.IN_TREATMENT_BUT_COMPLETED,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"bad tb number",value:R.BAD_TB_NUMBER,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"without tb number",value:R.WITHOUT_TB_NUMBER,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}}]}}});t("default",d(D,[["render",function(t,e,a,o,s,r){const i=h("report-template"),n=h("ion-page");return T(),u(n,null,{default:m((()=>[c(i,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,showFilters:!0,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","onReportConfiguration"])])),_:1})}]]))}}}));
