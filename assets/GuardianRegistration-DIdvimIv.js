import{d as _,al as h,bE as i,bD as g,W as f,ak as D,aN as r,H as u,ad as o,ae as c,bK as F,bF as b,aW as y,aV as R,bL as m,aa as v,c as A,af as C,a as P}from"./index-CMZASHAR.js";import{H as E}from"./HisStandardForm-BCjM4-bc.js";import{R as d}from"./relations_service-Drml3xuO.js";import{p as S}from"./VoidReason-H99Hq1yQ.js";const T=_({components:{HisStandardForm:E},data:()=>({patientData:{},guardianData:{},nationalIDPresets:{},fieldAction:"",fieldComponent:"",fields:[],form:{},redirectURL:"",activeField:"",currentAddressAttributes:["current_region","current_district","current_village","current_traditional_authority"],homeAddressAttributes:["home_region","home_district","home_traditional_authority","home_village"]}),watch:{$route:{async handler({params:t,query:e}){if(t.patient_id){const a=await h.findByID(t.patient_id);a&&(this.patientData=i.mapPersonData(a.person),e.edit_guardian&&(this.fieldAction="edit"),this.fields=this.getFields())}e.source&&(this.redirectURL=e.source)},immediate:!0,deep:!0}},methods:{getFields(){let t=[];return t.push(this.guardianSelection()),t.push(this.guardianIndex()),t.push(this.scanGuardian()),t.push(this.givenNameField()),t.push(this.familyNameField()),t.push(this.genderField()),t.push(this.searchResultField()),t=t.concat(this.dobFields()),t.push(this.homeRegionField()),t.push(this.homeDistrictField()),t.push(this.homeTAField()),t.push(this.homeVillageField()),t.push(this.currentRegionField()),t.push(this.currentDistrictField()),t.push(this.currentTAField()),t.push(this.currentVillage()),t=t.concat(this.landmarkFields()),t.push(this.cellPhoneField()),t.push(this.relationsField()),t},async onFinish(t,e){var a;if(this.isEditMode()){if(this.activeField!="relations"){const n=new g;n.setPersonID(this.guardianData.id),await n.updatePerson(i.resolvePerson(e)),Object.keys(e).forEach(s=>{var l;s in this.guardianData&&(this.guardianData[s]=((l=e[s])==null?void 0:l.date)||e[s].person)})}else if((a=this.guardianData)!=null&&a.relation){const n=await d.amendRelation(this.patientData.id,this.guardianData.id,this.guardianData.relation.relationship_id,t.relations.other.relationship_type_id);n&&(this.guardianData.relation=n)}this.fieldComponent="guardian_index"}else if(this.isSameAsPatient(this.resolvePerson(e)))f("Guardian cannot be the same patient");else{let n=-1;if(this.isRegistrationMode()){const s=new g;await s.registerGuardian(this.resolvePerson(e)),n=s.getPersonID()}else n=this.guardianData.id;if(await d.createRelation(this.patientData.id,n,t.relations.other.relationship_type_id),this.redirectURL)this.$router.push({name:this.redirectURL});else if(this.$route.query.edit_guardian)this.fieldComponent="select_guardian";else return D(this.patientData.id,this.$router,this.$route)}location.reload()},isEditMode(){return this.fieldAction==="edit"},isSearchMode(){return["Search","Registration"].includes(this.fieldAction)},isRegistrationMode(){return this.fieldAction==="Registration"},canEdit(t,e=!0,a=!0){return this.isEditMode()?t.includes(this.activeField)&&a:e},resolvePerson(t){return{...i.resolvePerson(t),...this.nationalIDPresets}},applyNationalIDPresets(t){return{...t,defaultOutput:()=>this.nationalIDPresets[t.id],defaultComputedOutput:()=>this.nationalIDPresets?{person:this.nationalIDPresets[t.id]}:void 0,condition:e=>(t.condition?t.condition(e):!0)&&r.isEmpty(this.nationalIDPresets)}},isSameAsPatient(t){let e="",a="",n="";return this.isRegistrationMode()?(e=u.toStandardHisDisplayFormat(t.birth_date),a=t.given_name&&t.family_name,n=t.gender):(e=this.guardianData.birth_date,a=this.guardianData.name,n=this.guardianData.gender),a.toLowerCase()===this.patientData.name.toLowerCase()&&e===this.patientData.birth_date&&n===this.patientData.gender},guardianSelection(){return{id:"select_guardian",helpText:"Select guardian to edit/view",type:o.TT_SELECT,condition:()=>this.isEditMode(),validation:t=>c.required(t),options:async()=>{const t=await F.getRelationships(this.patientData.id);if(r.isEmpty(t))await b(450),await y("Patient has no guardians","","Select option to proceed",[{name:"Cancel",slot:"start",color:"danger"},{name:"Register new",slot:"start",color:"success"}])==="Register new"?(this.guardianData={},this.nationalIDPresets={},this.fieldAction="Registration",this.fieldComponent="scan"):this.$router.back();else return t.map(e=>{const a=i.mapPersonData(e.relation);return{label:"".concat(a.name," (").concat(e.type.b_is_to_a,")"),value:e.relation.person_id,other:{relations:e,details:a}}});return[]},config:{footerBtns:[{name:"New Guardian",slot:"end",color:"primary",onClick:()=>{this.guardianData={},this.nationalIDPresets={},this.fieldAction="Registration",this.fieldComponent="scan"}}]}}},getDefaultVal(t){try{return this.guardianData[t]}catch(e){return""}},guardianIndex(){return{id:"guardian_index",helpText:"Guardian details",type:o.TT_TABLE_VIEWER,condition:t=>t.select_guardian.value,options:t=>{this.guardianData&&this.guardianData.id!=t.select_guardian.value&&(this.guardianData={...t.select_guardian.other.details,relation:t.select_guardian.other.relations});const e=n=>({name:"Edit",type:"button",action:()=>{this.activeField=n,this.fieldComponent=this.activeField}});return[{label:"",value:"",other:{rows:[["Given Name",this.guardianData.given_name,e("given_name")],["Family Name",this.guardianData.family_name,e("family_name")],["Gender",this.guardianData.gender,e("gender")],["Birthdate",u.toStandardHisDisplayFormat(this.guardianData.birth_date),e("year_birth_date")],["Cell Phone Number",this.guardianData.cell_phone_number,e("cell_phone_number")],["Home District",this.guardianData.home_district,e("home_region")],["Home TA",this.guardianData.home_traditional_authority,e("home_region")],["Home Village",this.guardianData.home_village,e("home_region")],["Current district",this.guardianData.current_district,e("current_region")],["Current T/A",this.guardianData.current_traditional_authority,e("current_region")],["Landmark",this.guardianData.landmark,e("default_landmarks")],["Relation",this.guardianData.relation.type.b_is_to_a,e("relations")]]}}]},config:{overrideDefaultFooterBtns:{nextBtn:{name:"Finish",slot:"end",color:"success",onClick:()=>this.fieldComponent="select_guardian"}},footerBtns:[{name:"Void Relation",slot:"start",color:"danger",onClick:async()=>{S(async t=>{await d.voidRelation(this.patientData.id,this.guardianData.relation.relationship_id,t),this.fieldComponent="select_guardian",location.reload()})}}],hiddenFooterBtns:["Clear","Back"]}}},givenNameField(){const t=i.getGivenNameField();return t.helpText="Guardian First name",t.defaultValue=()=>this.getDefaultVal(t.id),t.condition=()=>this.canEdit([t.id],this.isSearchMode()),this.applyNationalIDPresets(t)},familyNameField(){const t=i.getFamilyNameField();return t.helpText="Guardian Last name",t.defaultValue=()=>this.getDefaultVal(t.id),t.condition=()=>this.canEdit([t.id],this.isSearchMode()),this.applyNationalIDPresets(t)},genderField(){const t=i.getGenderField();return t.defaultValue=()=>this.getDefaultVal(t.id),t.condition=()=>this.canEdit([t.id],this.isSearchMode()),this.applyNationalIDPresets(t)},dobFields(){const t=i.getDobConfig();return t.defaultValue=()=>this.getDefaultVal("birth_date"),t.condition=()=>this.canEdit(["year_birth_date","month_birth_date","day_birth_date"],this.isRegistrationMode()&&r.isEmpty(this.nationalIDPresets)),R(t)},homeRegionField(){const t=i.getHomeRegionField();return t.condition=()=>this.canEdit(this.homeAddressAttributes,this.isRegistrationMode()),t},homeDistrictField(){const t=i.getHomeDistrictField();return t.condition=()=>this.canEdit(this.homeAddressAttributes,this.isRegistrationMode()),t},homeTAField(){const t=i.getHomeTaField();return t.condition=e=>this.canEdit(this.homeAddressAttributes,this.isRegistrationMode()&&!e.home_region.label.match(/foreign/i),!e.home_region.label.match(/foreign/i)),t},homeVillageField(){const t=i.getHomeVillageField();return t.condition=e=>this.canEdit(this.homeAddressAttributes,this.isRegistrationMode()&&!e.home_region.label.match(/foreign/i),!e.home_region.label.match(/foreign/i)),t},currentRegionField(){const t=i.getCurrentRegionField();return t.condition=()=>this.canEdit(this.currentAddressAttributes,this.isRegistrationMode()),t},currentDistrictField(){const t=i.getCurrentDistrictField();return t.condition=()=>this.canEdit(this.currentAddressAttributes,this.isRegistrationMode()),t},currentTAField(){const t=i.getCurrentTAfield();return t.condition=e=>this.canEdit(this.currentAddressAttributes,this.isRegistrationMode()&&!e.current_region.label.match(/foreign/i),!e.current_region.label.match(/foreign/i)),t},currentVillage(){const t=i.getCurrentVillageField();return t.condition=e=>this.canEdit(this.currentAddressAttributes,this.isRegistrationMode()&&!e.current_region.label.match(/foreign/i),!e.current_region.label.match(/foreign/i)),t},cellPhoneField(){const t=i.getCellNumberField();return t.condition=()=>this.canEdit([t.id],this.isRegistrationMode()),t},landmarkFields(){const t=i.getLandmarkFields(),e=t[0].proxyID||t[0].id;return t[0].defaultValue=()=>this.getDefaultVal(e),t[0].condition=()=>this.canEdit([e],this.isRegistrationMode()),t},relationsField(){return{id:"relations",helpText:"Select relationship type",type:o.TT_RELATION_SELECTION,defaultValue:()=>this.getDefaultVal("relations"),validation:t=>c.required(t),condition:()=>this.canEdit(["relations"]),onload:t=>{if(t.patient=this.patientData,this.isRegistrationMode()){const e=this.resolvePerson(t.cdata);t.guardian={name:"".concat(e.given_name," ").concat(e.family_name),birth_date:u.toStandardHisDisplayFormat(e.birthdate),home_address:"".concat(e.home_district," ").concat(e.home_traditional_authority)}}else t.guardian=this.guardianData},options:async()=>(await d.getRelations()).map(e=>({label:e.b_is_to_a,value:e.description,other:e})),config:{hiddenFooterBtns:["Clear"]}}},scanGuardian(){return{id:"scan",helpText:"Scan or Register Guardian",type:o.TT_BARCODE,requireNext:!1,onload:()=>this.nationalIDPresets={},condition:()=>!this.isEditMode(),onValue:async t=>{if(m.isNrbType(t)){const e=await m.onScanQr(t);return e.person?(this.guardianData=i.mapPersonData(e.person.person),this.fieldComponent="relations",this.fieldAction="Scan",!1):(e.qrData&&(this.nationalIDPresets={...e.qrData,birth_date:e.qrData.birthdate,birthdate_estimated:!1},this.fieldAction="Registration"),!0)}else{const e=await h.findByNpid(t);r.isEmpty(e)||(this.guardianData=i.mapPersonData(e[0].person),this.fieldComponent="relations",this.fieldAction="Scan")}return!1},config:{hiddenFooterBtns:["Clear","Next","Back"],footerBtns:[{name:"Find or Register Guardian",color:"success",slot:"end",onClick:()=>{this.fieldAction="Search",this.fieldComponent="given_name"}}]}}},searchResultField(){return{id:"results",helpText:"Search results",type:o.TT_PERSON_RESULT_VIEW,dynamicHelpText:t=>'Search results for \n                "'.concat(t.given_name.value," ").concat(t.family_name.value," | ").concat(t.gender.label,'"\n                '),appearInSummary:()=>!1,condition:()=>this.isSearchMode()&&r.isEmpty(this.nationalIDPresets),validation:t=>c.required(t),options:async t=>(await h.search({given_name:t.given_name.value,family_name:t.family_name.value,gender:t.gender.value})).map(a=>i.getPersonAttributeOptions(a)),config:{hiddenFooterBtns:["Clear","Next","Back"],footerBtns:[{name:"Edit Search",slot:"end",onClick:()=>{this.fieldAction="Search",this.fieldComponent="given_name"}},{name:"New Guardian",slot:"end",onClick:()=>{this.fieldAction="Registration",this.fieldComponent="year_birth_date"}},{name:"Continue Guardian",color:"success",slot:"end",state:{disabled:{default:()=>!0,onValue(t,e){return r.isEmpty(e.results)}}},onClick:t=>{this.guardianData=i.mapPersonData(t.results.other.person.person),this.fieldComponent="relations",this.fieldAction="Search"}}]}}}}});function I(t,e,a,n,s,l){const p=C("his-standard-form");return P(),A(p,{onOnIndex:e[0]||(e[0]=V=>t.fieldComponent=""),skipSummary:!0,activeField:t.fieldComponent,fields:t.fields,onFinishAction:t.onFinish,cancelDestinationPath:"/patient/dashboard/".concat(t.patientData.id)},null,8,["activeField","fields","onFinishAction","cancelDestinationPath"])}const B=v(T,[["render",I]]);export{B as default};
