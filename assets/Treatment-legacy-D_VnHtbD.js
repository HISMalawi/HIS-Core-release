System.register(["./index-legacy-D3AimR5c.js","./HisStandardForm-legacy-BGshLTc9.js","./useEncounter-legacy-DNK3Ux-4.js","./commons-legacy-CziW57mV.js","./isEmpty-legacy-aA8siyQH.js","./encounter_guidelines-legacy-CM5M1LNP.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,n,r,i,o,d,u,l,s,m,c,p,_,g,v,T,E,h,y,D,b;return{setters:[e=>{a=e.d,n=e.r,r=e.bU,i=e.bZ,o=e.an,d=e.e0,u=e.a_,l=e.ao,s=e.a,m=e.b,c=e.w,p=e.e,_=e.i,g=e.B,v=e.bN,T=e.bY,E=e.q},e=>{h=e.H},e=>{y=e.u},e=>{D=e.m,b=e.r},null,null,null],execute:function(){e("default",a({__name:"Treatment",setup(e){const t=n(""),a=n([]),N=new r(-1,i.TREATMENT),O=n("standard"),S=n();function R(e){return[...Array.isArray(e.selectedDrugs)?e.selectedDrugs.map((e=>e.other)):[e.selectedDrugs.other],...e.mdrSupplements?.value&&"NONE"!=e.mdrSupplements?.value?[e.mdrSupplements.other]:[]]}const{goToNextTask:I,patientDashboardUrl:f,facts:x}=y(((e,n)=>{N.patientID=n,N.providerID=e,a.value=[(()=>{let e=[];return{id:"regimenShortCode",helpText:"DR regimen",type:o.TT_DR_PRESCRIPTION_INPUT,proxyID:"selectedDrugs",dynamicHelpText:()=>S.value.regimen_title,computedValue:e=>e.map((e=>({concept_id:d("MEDICAL_ORDERS"),value_coded:e.value,obs_datetime:N.date}))),beforeNext:async e=>{if(!e.every((e=>!!e.other))){const t=e.filter((e=>!e.other)).map((e=>e.label));return await u("System ERROR","Please report this issue to resume using the system:",`Some drugs are missing weight band information: ${t}`,[{name:"Ok",slot:"start",color:"danger"}]),!1}return!0},init:async()=>{if(S.value=await r.getJson("mdr/regimen/status",{patient_id:N.patientID,program_id:N.programID,date:N.date}),S.value?.mdr_status&&(S.value?.regimen_drugs||[]).length){const t=S.value.regimen_drugs.reduce(((e,t)=>({...e,[t.abbreviation]:t})),{});e=S.value.regimen_composition.split("-").reduce(((e,a)=>[...e,{label:a,value:a.split("/")[0],other:a.split("/").map((e=>t[e]))}]),[])}return!0},condition:()=>S.value.mdr_status,options:()=>e}})(),(()=>{let e=[];return{id:"regimens",helpText:"Recommended regimens (weight-band adjusted):",type:o.TT_SELECT,requireNext:!1,proxyID:"selectedDrugs",init:async()=>{const t=await r.getJson(`programs/${N.programID}/regimens`,{patient_id:n,date:N.date});return e=t.map((e=>({label:e.drug.name,value:e.drug_id,other:e}))),!0},computedValue:e=>[{concept_id:d("MEDICAL_ORDERS"),value_coded:e?.other?.drug?.concept_id,obs_datetime:N.date}],onload:()=>O.value="standard",validation:e=>l.required(e),condition:()=>!S.value?.mdr_status,options:()=>e,config:{hiddenFooterBtns:["Back"],footerBtns:[{name:"Custom Regimen",slot:"end",onClick:()=>{O.value="custom",t.value="customRegimen"}}]}}})(),(()=>{let e=[];return{id:"customRegimen",helpText:"Custom regimens:",type:o.TT_MULTIPLE_SELECT,proxyID:"selectedDrugs",validation:e=>l.required(e),condition:()=>"custom"===O.value,computedValue:e=>e.map((e=>({concept_id:d("MEDICAL_ORDERS"),value_coded:e.other.drug.concept_id,obs_datetime:N.date}))),options:async()=>{if(!e.length){const t=await r.getJson(`programs/${N.programID}/custom_tb_ingredients`,{patient_id:n});e=t.map((e=>({label:e.drug.name,value:e.drug_id,other:e})))}return e}}})(),(()=>{let e=[];return{id:"mdrSupplements",helpText:"Supplements:",requireNext:!0,type:o.TT_SELECT,init:async()=>{try{const t=await r.getJson(`programs/${N.programID}/tb_regimen_group`,{patient:n,regimen_group:"secondline-supplements"});e=t.map((e=>({label:e.drug.name,value:e.drug_id,other:e})))}catch(t){console.error(t)}return!0},computedValue:e=>{if("NONE"!=e.value)return{concept_id:d("MEDICAL_ORDERS"),value_coded:e.other.drug.concept_id,obs_datetime:N.date}},validation:e=>l.required(e),condition:e=>e.regimenShortCode.length>=1,options:()=>[{label:"NONE",value:"NONE"},...e]}})(),{id:"drugsView",helpText:"Dosages:",type:o.TT_TABLE_VIEWER,options:e=>[{label:"",value:"",other:{columns:["Name","AM","NOON","PM"],rows:R(e).map((e=>[e.name||e?.drug?.name,e.am_dose,e.noon_dose,e.pm_dose]))}}]},{id:"recommendedNumberOfDays",helpText:"Duration of Drug Supply in Days:",type:o.TT_SELECT,validation:e=>l.required(e),computedValue:e=>{if("Other"!=e.value)return{concept_id:d("REGIMEN_SUPPLY_DAYS"),value_numeric:parseInt(`${e.value}`),obs_datetime:N.date}},options:()=>[{value:1,label:"1"},{value:2,label:"2"},{value:3,label:"3"},{value:14,label:"14"},{value:28,label:"28"},{value:56,label:"56"},{value:84,label:"84"},{value:"Other",label:"Other"}],requireNext:!1},{id:"otherDays",helpText:"Custom Duration of Drug Supply in Days:",type:o.TT_NUMBER,computedValue:e=>({concept_id:d("REGIMEN_SUPPLY_DAYS"),value_numeric:parseInt(`${e.value}`),obs_datetime:N.date}),validation:e=>l.required(e),condition:e=>"Other"===e.recommendedNumberOfDays.value},(()=>{let e=!1;return{id:"useHangingPills",helpText:"Use Hanging Pills:",type:o.TT_SELECT,init:async()=>{const t=await r.getObs({person_id:n,date:N.date,page_size:1,concept_id:d("TB_ADHERENCE")});return e=!!(t||[]).length,!0},condition:()=>e,validation:e=>l.required(e),computedValue:(e,t)=>{"Yes"===e.value&&R(t).map((e=>({concept_id:d("APPOINTMENT_REASON"),value_drug:e.drug_id,value_text:"Optimize - including hanging pills",obs_datetime:N.date})))},options:()=>D(["Yes","No"])}})(),{id:"dot",helpText:"DOT and Adherence Support Technique",type:o.TT_SELECT,validation:e=>l.required(e),computedValue:e=>({concept_id:d("TYPE_OF_SUPPORT"),value_coded:d(`${e.value}`),obs_datetime:N.date}),options:()=>[{value:"GUARDIAN",label:"Guardian"},{value:"HEALTH_CARE_WORKER",label:"Health Care Worker"},{value:"VOLUNTEER",label:"Volunteer"},{value:"HSA",label:"Health Surveillance Assistant"}]}]}));async function A(e,t){await N.createEncounter(),await N.saveObservationList(await b(t)),await r.postJson("drug_orders",{encounter_id:N.encounterID,drug_orders:R(e).map((t=>({drug_inventory_id:t?.drug_id||t?.id||t?.drug?.drug_id,start_date:N.date,am_dose:t.am_dose,noon_dose:t.noon_dose,pm_dose:t.pm_dose,auto_expire_date:g(N.date).add("Other"!=e.recommendedNumberOfDays.value?e.recommendedNumberOfDays.value:e.otherDays.value,"days").format(v),name:t.drug.name,concept_id:t.drug.concept_id,equivalent_daily_dose:t.am_dose+t.noon_dose+t.pm_dose})))}),T.isOnTreatment(x.outcome)||await T.enrollTb(N.patientID),I()}return(e,n)=>(s(),m(_(E),null,{default:c((()=>[p(h,{cancelDestinationPath:_(f),onFinishAction:A,activeField:t.value,onOnIndex:n[0]||(n[0]=e=>t.value=""),fields:a.value,skipSummary:!0},null,8,["cancelDestinationPath","activeField","fields"])])),_:1}))}}))}}}));
