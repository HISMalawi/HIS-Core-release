import{d as A,K as N,b5 as F,cV as x,E as P,S as l,t as I,V as _,G as w,a$ as m,cZ as c,o as B,c as C,w as $,b as V,cl as R,I as Y,cX as q}from"./index-BCTN_bnC.js";import{F as p}from"./dynamic-import-helper-BkBZiFw5.js";import{H as X}from"./HisStandardForm-CaDwl-hA.js";import{u as H}from"./useEncounter-CDUT-p5Y.js";import{g as r}from"./util-CyjuS_4X.js";import{m as f,r as k}from"./commons-BDvZ1JFN.js";import{L as G}from"./lab_service-BRM8Dcbe.js";import{e as W}from"./LocationFieldOptions-CfAZbPnk.js";import"./TouchScreenForm-TKB9q3ZD.js";import"./ToolbarMediumCard-O_J6wu7C.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-BCxYiILf.js";import"./isEmpty-OXtHK5dz.js";import"./_Set-VKtKUQAI.js";import"./_setToArray-BLmuRUHx.js";import"./encounter_guidelines-DZpIPlYY.js";import"./GuidelineEngine-D6V1_Znr.js";const _e=A({__name:"Lab",setup(J){const L=N([]),a=new F(-1,x.LAB_ORDER),n=P();async function E(o,i){var s,T,h,b;const u={tests:[{test_type:"TB",sample_status:"N/A",target_lab:o.target_lab.value,sample_type:o.sample_type.value,recommended_examination:o.examination.value,sample_date:a.date,sending_facility:l.getLocationName(),time_line:((s=o.time_line)==null?void 0:s.value)==="Other"?"Month ".concat((T=o.otherTimeLine)==null?void 0:T.value):((h=o.time_line)==null?void 0:h.value)||"N/A",treatment_history:"N/A",reason:(b=o.time_line)!=null&&b.value?"Follow up":"Diagnosis"}],encounter_id:i,requesting_clinician:l.getUserName()};await l.postJson("programs/".concat(l.getProgramID(),"/lab_tests/orders"),u),await q.printLabOrder(a.patientID,u.tests[0])}const{goToNextTask:O,patientDashboardUrl:S}=H((o,i,u,s)=>{a.patientID=i,a.providerID=o;const T=()=>{let t=[];return{id:"sample_type",helpText:"TB Test Specimens Types",type:p.TT_SELECT,requireNext:!1,init:async()=>{try{t=await l.getJson("/programs/".concat(l.getProgramID(),"/lab_tests/panels?test_type=TB Tests"))}catch(e){return I("Unable to load samples!"),!1}return!0},computedValue:e=>({concept_id:r("SAMPLE"),value_coded:r("".concat(e.value)),obs_datetime:a.date}),validation:e=>_.required(e),options:()=>f(t)}},h=()=>{const t={};return{id:"examination",helpText:"Examination",type:p.TT_SELECT,beforeNext:async e=>{if(!t[e.other])try{const[d,v]=(await w.get(e.other)).split("_");t[e.other]=m("".concat(a.date," ").concat(m().format("HH:mm:ss"))).add(parseInt(d),v).format("YYYY-MM-DD HH:mm:ss")}catch(d){console.warn("".concat(d))}return!0},defaultValue:()=>{var e;return(e=n==null?void 0:n.query)==null?void 0:e.test},computedValue:e=>[{concept_id:r("TEST_REQUESTED"),value_coded:r("".concat(e.value)),obs_datetime:a.date},...t[e.other]?[{concept_id:r("Estimated turnaround time for result"),value_datetime:t[e.other],obs_datetime:a.date}]:[]],validation:e=>_.required(e),options:()=>[{value:"MICROSCOPY",label:"Microscopy",other:c.MICROSCOPY_RESULT_TURN_AROUND},{value:"XPERT_MTB_RIF",label:"Xpert MTB/RIF",other:c.XPERT_MTB_RIF_RESULT_TURN_AROUND},{value:"XPERT_MTB_RIF_ULTRA",label:"Xpert MTB/RIF Ultra",other:c.XPERT_MTB_RIF_ULTRA_RESULT_TURN_AROUND},{value:"CULTURE_AND_DST",label:"Culture and DST",other:c.CULTURE_AND_DST_RESULT_TURN_AROUND},{value:"LPA",label:"LPA",other:c.LPA_RESULT_TURN_AROUND},{value:"LAM",label:"LAM",other:c.LAM_RESULT_TURN_AROUND}]}},b=()=>({id:"target_lab",helpText:"Select Lab:",type:p.TT_SELECT,computedValue:t=>({concept_id:r("LAB"),value_text:"".concat(t.value),obs_datetime:a.date}),validation:t=>_.required(t),defaultValue:()=>l.getLocationName(),options:async(t,e="")=>{try{return await W(e)}catch(d){return f(["".concat(l.getLocationName())])}},config:{showKeyboard:!0,isFilterDataViaApi:!0}}),D=()=>{let t=!1;return{id:"time_line",helpText:"Follow Up Lab Order Month for Month",type:p.TT_SELECT,init:async()=>{const e=await G.getRecentOrders(i);if(e){const d=m(e.encounter_datetime).format("YYYY-MM-DD");t=m(a.date).diff(d,"days",!0)>=28}return!0},defaultValue:()=>{const e=m(a.date).diff(s.outcomeStartDate||a.date,"months");if(!(s.isBdeMode||e<=0))return"Month ".concat(e)},condition:()=>t,validation:e=>_.required(e),computedValue:e=>{if(e.value!="Other")return[{concept_id:r("FOLLOW_UP"),value_text:e.value,obs_datetime:a.date}]},options:()=>[{value:"Month 2",label:"Month 2"},{value:"Month 3",label:"Month 3"},{value:"Month 4",label:"Month 4"},{value:"Month 6",label:"Month 6"},{value:"Other",label:"Other"}]}},g=()=>({id:"otherTimeLine",helpText:"Other Follow Up Lab Order Month for Month:",type:p.TT_NUMBER,computedValue:t=>({concept_id:r("FOLLOW_UP"),value_text:"Month ".concat(t.value),obs_datetime:a.date}),validation:t=>_.required(t),condition:t=>t.time_line.value==="Other"});L.value=[T(),h(),b(),D(),g()]});function U(o){var i,u,s;return(i=n==null?void 0:n.query)!=null&&i.reason?"".concat((u=n==null?void 0:n.query)==null?void 0:u.reason):(s=o.time_line)!=null&&s.value?"FOLLOW_UP":"DIAGNOSIS"}function y(o){return[{concept_id:r("TEST_TYPE"),value_coded:r("TB"),obs_datetime:a.date},{concept_id:r("REASON_FOR_TEST"),value_coded:r(U(o)),obs_datetime:a.date}]}async function M(o,i){await a.createEncounter(),await a.saveObservationList([...y(o),...await k(i)]),await E(o,a.encounterID),O()}return(o,i)=>(B(),C(R(Y),null,{default:$(()=>[V(X,{cancelDestinationPath:R(S),onFinishAction:M,fields:L.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});export{_e as default};
