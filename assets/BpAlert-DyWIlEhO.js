import{_ as b}from"./EncounterMixin.vue_vue_type_script_lang-Ba1E7e4E.js";import{d as v,l as D,i as C,m as T,I,k as R,bs as u,dl as m,bn as F,bo as N,z as S,a_ as $,am as O,a as V,w as n,ar as i,b as c,e as r,h as g,a6 as _,aN as B,g as t,cB as f,j as e,t as d,ak as A,al as z}from"./index-qFt4YszW.js";import{B as E}from"./htn_service-Cm3xA5ai.js";import{R as j}from"./RiskFactorModal-DF_8svAm.js";import"./encounter_guidelines-CLmFwnI6.js";import"./GuidelineEngine-D6V1_Znr.js";import"./HisStandardForm-B3LOSMqB.js";const x=v({mixins:[b],components:{IonFooter:R,IonContent:I,IonPage:T,IonButton:C,IonToolbar:D},data:()=>({sysBp:0,dsBP:0,riskFactors:[],patientOnBpDrugs:!1,isPregnant:!1,systolicThreshold:145,diastolicTheshold:94}),methods:{async showRiskFactors(){const s=await S.create({component:j,backdropDismiss:!1,cssClass:"large-modal",componentProps:{factors:this.riskFactors}});s.present();const{data:o}=await s.onDidDismiss();$.isEmpty(o)||this.nextTask()},async getRiskFactors(){const o=F.getConceptsByCategory("risk factors").map(async a=>{const h=await N.getFirstValueCoded(this.patientID,a.name);return{concept:a.name,value:h}});return Promise.all(o)},recaptureBp(){this.$router.push("/art/encounters/vitals/".concat(this.patientID,"?vital_options=BP"))}},watch:{ready:{async handler(s){if(!s)return;await(await u.create({message:"Verifying Blood Pressure...",backdropDismiss:!1})).present();const a=new E(this.patientID,this.providerID);this.riskFactors=await this.getRiskFactors(),this.systolicThreshold=await m.systolicThreshold()||145,this.diastolicTheshold=await m.diastolicThreshold()||94,this.dsBP=await a.getDiastolicBp()||0,this.sysBp=await a.getSystolicBp()||0,this.patientOnBpDrugs=await a.onBpDrugs()||!1,this.isPregnant=this.patient.isChildBearing()&&await this.patient.isPregnant()||!1,u.dismiss()},immediate:!0}},computed:{patientName(){return this.ready?this.patient.getFullName():"Patient"},hasPressureReading(){return this.sysBp>0&&this.dsBP>0},highBP(){return(this.sysBp>=this.systolicThreshold&&this.dsBP>=this.diastolicTheshold||this.dsBP>=this.diastolicTheshold)&&!this.isPregnant}}}),l=s=>(A("data-v-acbdfaed"),s=s(),z(),s),L=l(()=>t("h1",{class:"ion-text-center"}," HTN Alert ",-1)),M={key:0,class:"vertically-align ion-text-center"},G={style:{"font-weight":"bold"}},H={class:"name"},Y={class:"bp"},q=l(()=>t("br",null,null,-1)),J=l(()=>t("span",null,[e(" Retesting BP is "),t("span",{style:{"font-weight":"bold",color:"#000000","text-decoration":"underline"}},"optional"),e(". "),t("br"),e(" Do you want to test BP? ")],-1)),K={key:1,class:"vertically-align ion-text-center"},Q=l(()=>t("br",null,null,-1)),U=l(()=>t("h1",null," Do you want to test BP? ",-1));function W(s,o,a,h,X,Z){const P=i("ion-content"),p=i("ion-button"),y=i("ion-toolbar"),w=i("ion-footer"),k=i("ion-page");return c(),V(k,null,{default:n(()=>[r(P,null,{default:n(()=>[L,s.hasPressureReading?(c(),g("div",M,[B(t("h2",G," (Patient already on BP drugs) ",512),[[f,s.patientOnBpDrugs]]),t("h2",null,[t("span",H,d(s.patientName),1),e(" has "),B(t("span",null," a high ",512),[[f,s.highBP]]),e(" blood pressure of "),t("span",Y,d(s.sysBp)+" / "+d(s.dsBP),1),q,J])])):_("",!0),s.hasPressureReading?_("",!0):(c(),g("div",K,[e(" No BP Reading found "),Q,U]))]),_:1}),r(w,null,{default:n(()=>[r(y,{color:"dark"},{default:n(()=>[r(p,{onClick:o[0]||(o[0]=()=>s.hasPressureReading?s.showRiskFactors():s.nextTask()),size:"large",color:"danger",slot:"start"},{default:n(()=>[e(" No ")]),_:1}),r(p,{onClick:s.recaptureBp,size:"large",color:"success",slot:"end"},{default:n(()=>[e(" Yes ")]),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1})}const rs=O(x,[["render",W],["__scopeId","data-v-acbdfaed"]]);export{rs as default};
