import{bS as h,d as P,r as m,bn as o,ad as k,ae as D,a as y,c as O,u as T,W as c,R as x}from"./index-BsVOoHAl.js";import{H as E}from"./HisStandardForm-E_D9nYQa.js";import{u as F}from"./useEncounter-CSSIFh8Z.js";import"./isEmpty-FwhKJTM4.js";import"./encounter_guidelines-Dn8XjHDN.js";import"./GuidelineEngine-D6V1_Znr.js";class N extends h{constructor(e,n){super(e,184,n)}}const R=P({__name:"CxCaOutcome",setup(p){let e,n;const i=m([]),l=m([]),u=o.getProgramID(),f=o.getLocationName(),v=o.getSessionDate(),{patientDashboardUrl:_,goToNextTask:b}=F(async(t,r)=>{n=r,e=new N(r,t),o.getProgramWorkflows(u).then(a=>{l.value=a}),i.value=g()});async function w(t){if(!await e.createEncounter())return c("Unable to create encounter");const a=t.select_referral_outcome.value,d=l.value.flatMap(s=>s.states).find(s=>s.concept.concept_names.some(C=>C.name===a));if(!d)return c("Unable to find workflow state for outcome: ".concat(a));if(!await o.createState(n,u,{state:d.program_workflow_state_id,location_id:f,date:v}))return c("Unable to update state");const S=await e.buildValueCoded("Outcome",a);await e.saveObservationList([S]),x("Observations and encounter created!"),b()}function g(){return[{id:"select_referral_outcome",helpText:"Referral outcome",type:k.TT_SELECT,validation:t=>D.required(t),options:()=>[{label:"Continue follow-up",value:"Continue follow-up"},{label:"No Dysplasia/Cancer",value:"No Dysplasia/Cancer"},{label:"Palliative Care",value:"Palliative Care"},{label:"Patient died",value:"Patient died"}]}]}return(t,r)=>(y(),O(E,{fields:i.value,onFinishAction:w,skipSummary:!0,cancelDestinationPath:T(_)},null,8,["fields","cancelDestinationPath"]))}});export{R as default};
