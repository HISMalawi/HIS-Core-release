System.register(["./HisStandardForm-legacy-C7VqHmr3.js","./EncounterMixin.vue_vue_type_script_lang-legacy-BYNMg0KB.js","./index-legacy--hxN_V8z.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./TouchScreenForm-legacy-DxIQwsU4.js","./ToolbarMediumCard-legacy-CzmL2SiF.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-TUlObaz7.js","./encounter_guidelines-legacy-BZk5BWg2.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,i){"use strict";var a,s,t,n,o,l,r,c,d,u,g,h,p,m,y;return{setters:[e=>{a=e.H},e=>{s=e._},e=>{t=e.b2,n=e.aR,o=e.d,l=e.aT,r=e.S,c=e.ab,d=e.n,u=e.V,g=e._,h=e.r,p=e.o,m=e.c},e=>{y=e.F},null,null,null,null,null,null],execute:function(){class i extends t{constructor(e,i){super(e,8,i)}static async getDiagnosis(e="",i=1,a=10){const s=n.getConceptID("Qech outpatient diagnosis list");return t.getJson("diagnosis",{id:s,name:e,page:i,page_size:a})}}class v extends t{constructor(e,i){super(e,105,i)}}const T=o({components:{HisStandardForm:a},mixins:[s],data:()=>({activeField:"",notesService:{},diagnosisService:{},malariaTestResult:"No"}),watch:{ready:{async handler(e){e&&(this.malariaTestResult=await l.getLatestMalariaTestResult(this.patientID),this.notesService=new v(this.patientID,this.providerID),this.diagnosisService=new i(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,i){await this.diagnosisService.createEncounter();const a=await this.resolveObs({...i,obs_datetime:r.getSessionDate()},"diagnosis");await this.diagnosisService.saveObservationList(a);const s=await this.resolveObs({...i},"notes");c.isEmpty(s)||(await this.notesService.createEncounter(),await this.notesService.saveObservationList(s)),this.nextTask()},mapListToOptions:e=>c.isEmpty(e)?[]:e.map((e=>({label:e.name,value:e.name,other:e.concept_id,isChecked:!1}))).sort(((e,i)=>e.label<i.label?-1:e.label>i.label?1:0)),async checkMalariaResult(e){return!e.find((e=>"Malaria"===e.label))||"Positive"===this.malariaTestResult||await d(`Patient has ${this.malariaTestResult} malaria test result. Do you want to continue?`)},getFields(){return[{id:"primary_diagnosis",helpText:"Select primary diagnosis",type:y.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:e=>u.required(e),options:async(e,a="",s=1,t=10)=>this.mapListToOptions(await i.getDiagnosis(a,s,t)),beforeNext:async e=>await this.checkMalariaResult(e),computedValue:e=>({tag:"diagnosis",obs:e.map((({other:e})=>this.diagnosisService.buildValueCodedFromConceptId("Primary diagnosis",e)))}),summaryMapValue:({value:e})=>({value:e,label:"Primary diagnosis"}),config:{isFilterDataViaApi:!0,showKeyboard:!0}},{id:"secondary_diagnosis",helpText:"Select secondary diagnosis",type:y.TT_INFINITE_SCROLL_MULTIPLE_SELECT,options:async(e,a="",s=1,t=10)=>this.mapListToOptions(await i.getDiagnosis(a,s,t)),beforeNext:async e=>await this.checkMalariaResult(e),computedValue:e=>!c.isEmpty(e)&&{tag:"diagnosis",obs:e.map((({other:e})=>this.diagnosisService.buildValueCodedFromConceptId("Secondary diagnosis",e)))},summaryMapValue:({value:e})=>({value:e,label:"Secondary diagnosis"}),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"clinical_notes",helpText:"Clinical notes",type:y.TT_NOTE,computedValue:e=>e&&{tag:"notes",obs:this.notesService.buildValueText("Clinical notes construct",e.value)}}]}}});e("default",g(T,[["render",function(e,i,a,s,t,n){const o=h("his-standard-form");return p(),m(o,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}]]))}}}));
