System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./EncounterMixin.vue_vue_type_script_lang-legacy-2LJHhFXP.js","./LocationFieldOptions-legacy-1YJefGAn.js","./index-legacy-DgZ-kNry.js","./PersonFieldHelper-legacy-DM93SE_X.js","./lab_order_service-legacy-DDdtPg_w.js","./encounter_guidelines-legacy-09xzgRbO.js","./GuidelineEngine-legacy-KsvQuFdF.js","./HisStandardForm-legacy-DbOiuJqi.js","./TouchScreenForm-legacy-DgN0xr5C.js","./ToolbarMediumCard-legacy-BnrK577U.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-Dz1OZJfn.js","./MultiFieldDateHelper-legacy-CCwAgqKG.js","./KbLayouts-legacy-BKvPSxzZ.js","./HisKbConfigurations-legacy-vrLd9Pgz.js"],(function(e,t){"use strict";var i,a,n,s,l,r,c,o,d,u,p,g,m,y,h,v,_,b,T,S,f,F;return{setters:[e=>{i=e.F},e=>{a=e._},e=>{n=e.g},e=>{s=e.d,l=e.cn,r=e.cA,c=e.aS,o=e.aU,d=e.t,u=e.R,p=e.n,g=e.H,m=e.S,y=e.aN,h=e.q,v=e.V,_=e._,b=e.r,T=e.o,S=e.c},e=>{f=e.P},e=>{F=e.L},null,null,null,null,null,null,null,null,null,null],execute:function(){const t=s({mixins:[a],data:()=>({patientID:-1,service:{},fields:[],barcode:"",activityType:"",canScanDBS:!1,isNextBtnDisabled:!0,verifyingBarcode:!1}),async created(){this.canScanDBS=await l.canScanDBS()},watch:{$route:{handler({query:e,params:t}){e&&t&&(this.patientID=t.patient_id,this.activityType=e.type,this.service=new r(this.patientID),this.fields=[this.getClinianGivenNameField(),this.getClinianFamilyNameField(),this.getFacililityLocationField(),this.getReasonForTestField(),this.getTestSpecimensField(),this.getTestSelectionField(),this.getBarcodeInput(),this.getTestCombinationField()])},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const i=await c.getConceptID("HIV viral load"),a=await c.getConceptID("Plasma");if(t.specimen.concept_id!=a){const e=t.tests.findIndex((e=>e.concept_id===i));if(-1!==e){const i=new F(parseInt(this.patientID),this.providerID),a=await i.createEncounter();if(a){const i=t.tests.splice(e,1)[0],n=this.buildLabOrders(t,i.concept_id,a),s=await o.saveOrdersArray(a.encounter_id,n);if(!s)return d("Unable to save lab orders");u.invalidate("PATIENT_LAB_ORDERS"),await p("Lab orders and encounter created!, print out your last orders?",{confirmBtnLabel:"Yes",cancelBtnLabel:"No"})&&await this.service.printSpecimenLabel(s[0].order_id),t.tests.length<=0&&this.$router.push(`/patient/dashboard/${this.patientID}`)}}}if(t.tests.length>0){const e=await this.service.placeOrder(t);e&&(await this.service.printSpecimenLabel(e[0].order_id),this.$router.push(`/patient/dashboard/${this.patientID}`))}},buildLabOrders(e,t,i){return[{accession_number:this.barcode,encounter_id:i.encounter_id,tests:[{concept_id:t}],reason_for_test_id:e.reason_for_test_id,target_lab:e.target_lab,date:g.toStandardHisFormat(m.getSessionDate()),requesting_clinician:e.requesting_clinician,specimen:{concept_id:e.specimen.concept_id}}]},async verifyingScanedBarcode(e){if(this.verifyingBarcode=!this.verifyingBarcode,this.verifyingBarcode)return!1;if((await y.create({message:`Checking ${e}`})).present(),this.isNextBtnDisabled=!0,!/^([A-Z]{1})?[0-9]{7,8}$/i.test(`${e}`.trim()))return d("Invalid Barcode"),this.verifyingBarcode=!1,y.getTop().then((e=>e&&y.dismiss())),!1;try{if(!(await o.accessionNumExists(e)))return this.barcode=e,this.isNextBtnDisabled=!1,!0;d(`Barcode ${e} was already used`)}catch(t){h("Failed to confirm barcode "+e+", Please try again later",8e3)}this.verifyingBarcode=!1,y.getTop().then((e=>e&&y.dismiss()))},getFacililityLocationField:()=>({id:"target_lab",helpText:"Requesting location",type:i.TT_SELECT,defaultValue:()=>r.getLocationName(),validation:e=>v.required(e),options:(e,t="")=>n(t),computedValue:e=>e.label,config:{showKeyboard:!0,isFilterDataViaApi:!0}}),getClinianGivenNameField(){const e=f.getGivenNameField();return e.helpText="Requesting clinician - First name",e.proxyID="requesting_clinician",e.condition=()=>"DRAW_SAMPLES"===this.activityType,e.appearInSummary=()=>!1,e},getClinianFamilyNameField(){const e=f.getFamilyNameField();return e.helpText="Requesting clinician - Last name",e.proxyID="requesting_clinician",e.condition=()=>"DRAW_SAMPLES"===this.activityType,e.summaryMapValue=(e,t)=>({label:"Clinician name",value:`${t.given_name.value} ${e.value}`}),e.computedValue=(e,t)=>`${t.given_name.value} ${e.value}`,e},getReasonForTestField:()=>({id:"reason_for_test_id",helpText:"Reason for test",type:i.TT_SELECT,validation:e=>v.required(e),computedValue:e=>c.getCachedConceptID(e.value,!0),options:()=>[{label:"Routine",value:"Routine"},{label:"Targeted",value:"Targeted"},{label:"Confirmatory",value:"Confirmatory"},{label:"Repeat / Missing",value:"Repeat / Missing"},{label:"Stat",value:"Stat"}]}),getTestSpecimensField(){return{id:"specimen",helpText:"Select specimen",type:i.TT_SELECT,condition:()=>"DRAW_SAMPLES"===this.activityType,validation:e=>v.required(e),computedValue:e=>({concept_id:e.value}),options:async()=>(await o.getSpecimens("")).map((e=>({label:e.name,value:e.concept_id}))),config:{showKeyboard:!0}}},getTestSelectionField(){let e="";return{id:"tests",helpText:"Select tests",type:i.TT_GRID_SELECTOR,validation:e=>v.required(e),computedValue:e=>e.map((e=>({concept_id:e.value}))),options:async(t,i,a)=>t.specimen&&t.specimen.label!=e?(e=t.specimen.label,(await o.getTestTypesBySpecimen(t.specimen.label)).map((e=>({label:e.name,value:e.concept_id,isChecked:!1,other:e})))):a}},getBarcodeInput(){return{id:"barcode",helpText:"Scan viral load barcode",type:i.TT_BARCODE,onValue:async e=>await this.verifyingScanedBarcode(e),summaryMapValue:e=>({label:"Scaned Barcode",value:e}),condition:e=>e.tests.some((e=>"HIV viral load"===e.label&&this.canScanDBS))&&"Plasma"!==e.specimen.label,config:{hiddenFooterBtns:["Clear"],overrideDefaultFooterBtns:{nextBtn:{name:"Next",state:{disabled:{default:()=>this.isNextBtnDisabled}}}},showScannedBarcode:!0}}},getTestCombinationField(){return{id:"combine_tests",helpText:"Combine test(s) in one order",type:i.TT_SELECT,computedValue:e=>"Yes"===e.value,condition:e=>e.tests.length>1,validation:e=>v.required(e),options:()=>this.yesNoOptions()}}}});e("default",_(t,[["render",function(e,t,i,a,n,s){const l=b("his-standard-form");return T(),S(l,{fields:e.fields,onFinishAction:e.onSubmit},null,8,["fields","onFinishAction"])}]]))}}}));
