import{d as b,bg as S,cc as _,ag as C,ao as o,aq as p,cd as h,a9 as D,aa as w,aL as g,as as P,aj as x,aJ as I,af as f,bs as R}from"./index-CzgmKZtb.js";import{D as y}from"./BasicReportTemplate-DHtN73D1.js";const F=b({data:()=>({app:S.getActiveApp(),fields:[],report:{},reportReady:!1,period:"",startDate:"",endDate:"",customFileName:"",isMilitarySite:!1,drillDownCache:{}}),methods:{formatGender(t){return _(t)},toDate(t){return C.toStandardHisDisplayFormat(t)},sortByArvNumber(t,e="arv_number"){try{return t.sort((a,i)=>this.getArvInt(a[e])>this.getArvInt(i[e])?1:-1)}catch(a){return console.error(a),t}},getArvInt(t){if(typeof t=="string"){const e=t.split("-")[2],a=parseInt(e);return typeof a=="number"?a:0}return 0},parseAgeGroup(t){return t==="<1 year"?[0,0]:t==="90 plus years"?[90,1e3]:t.split("-").map(e=>parseInt(e,10))},tdARV(t,e={}){return o.td(t,{sortValue:this.getArvInt(t),...e})},confirmPatient(t){return this.$router.push("/patients/confirm?person_id=".concat(t))},async drilldownAsyncRows(t,e,a,i=!0){(await p.create({component:y,cssClass:"large-modal",componentProps:{title:t,columns:e,asyncRows:a,canExport:i,showFilters:!0,rowsPerPage:50,paginated:!0,showReportStamp:!1,footerColor:"light",onFinish:()=>p.dismiss()}})).present()},async drilldownData(t,e,a,i){(await p.create({component:y,cssClass:"large-modal",componentProps:{title:t,columns:e,rows:a,rowParser:i,rowsPerPage:50,showFilters:!0,paginated:!0,showReportStamp:!1,footerColor:"light",onFinish:()=>p.dismiss()}})).present()},getDefaultDrillDownTable(){const t=[[o.thTxt("ARV number"),o.thTxt("Gender"),o.thTxt("Birth Date"),o.thTxt("Art start date"),o.thTxt("Actions")]];return{rowParser:async a=>{let i=0;const u=a.map(async n=>{let s=null,d=null;if(I.isArray(n)){const[v,m]=n;if(d=v,m in this.drillDownCache)return[d,...this.drillDownCache[m].slice(1)]}else if(s=n,s in this.drillDownCache)return this.drillDownCache[s];const T=await f.findByID(s),A=await new R(s).getProgram(),c=new f(T),l=[];return d&&(i=1,l.push(d)),l.push(this.tdARV(c.getArvNumber())),l.push(o.td(this.formatGender(c.getGender()))),l.push(o.tdDate(c.getBirthdate().toString())),l.push(o.tdDate(A.startDate)),l.push(o.tdBtn("Show",async()=>{await p.dismiss({}),this.$router.push({path:"/patient/dashboard/".concat(s)})})),this.drillDownCache[s]=l,l});return(await Promise.all(u)).sort((n,s)=>n[i].sortValue>s[i].sortValue?1:-1)},columns:t}},runTableDrill(t,e="Drilldown patients"){const{columns:a,rowParser:i}=this.getDefaultDrillDownTable();this.drilldownData(e,a,t,i)},drill(t,e="Drill table"){return t&&t.length>0?o.tdLink(t.length,()=>this.runTableDrill(t,e)):o.td(0)},getQuaterOptions(){return h.getReportQuarters().map(e=>({label:e.name,value:e.start,other:e}))},getDateDurationFields(t=!1,e=!1,a=5,i=x.getSessionDate()){const u="2000-01-01";return[{id:"quarter",helpText:"Select Quarter",type:D.TT_SELECT,condition:()=>t,validation:r=>w.required(r),options:()=>{let n=h.getReportQuarters(a).map(s=>({label:s.name,value:s.start,other:s}));return e&&(n=[{label:"Set custom period",value:"custom_period",other:{}},...n]),n}},...g({id:"start_date",helpText:"Start",required:!0,condition:r=>r.quarter&&r.quarter.value==="custom_period"||!t,minDate:()=>u,maxDate:()=>i,estimation:{allowUnknown:!1},computeValue:r=>r}),...g({id:"end_date",helpText:"End",required:!0,condition:r=>r.quarter&&r.quarter.value==="custom_period"||!t,unload:(r,n,s,d)=>{n==="next"&&(this.endDate=d.end_date)},minDate:(r,n)=>n.start_date,maxDate:()=>i,estimation:{allowUnknown:!1},computeValue:r=>r}),{id:"occupation",helpText:"Report Group",type:D.TT_SELECT,init:async()=>(this.isMilitarySite=await P.get("IS_MILITARY_SITE"),!0),computedValue:r=>r.value,condition:()=>{var r;return((r=this.app)==null?void 0:r.applicationName)==="ART"&&this.isMilitarySite},validation:r=>w.required(r),options:()=>[{label:"All",value:"All"},{label:"Military",value:"Military"},{label:"Civilian",value:"Civilian"}]}]}}});export{F as _};
