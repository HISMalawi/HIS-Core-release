System.register(["./opd_report_service-legacy-DRQcBQZi.js","./index-legacy-CA6M7ipO.js"],(function(e,t){"use strict";var r,s,a,n,i,o,l,u,c,h;return{setters:[e=>{r=e.O},e=>{s=e.ao,a=e.d,n=e.aq,i=e.as,o=e.aa,l=e.af,u=e.a,c=e.E,h=e.b}],execute:function(){e("a",class extends r{regenerate;constructor(){super(),this.regenerate=!1}setRegenerate(e){this.regenerate=e}requestIDSRWeekly(){return this.getReport("generate_weekly_idsr_report",{request:"true"})}requestIDSRMonthly(){return this.getReport("generate_monthly_idsr_report",{request:"true"})}requestIDSRQuarterly(){return this.getReport("generate_quarterly_idsr_report")}renderResults(e){const t=[];let r=1;for(const[s,a]of Object.entries(e)){const e=[],n=a,i={id:0,name:"",lessThanFiveYears:"",lessThanFiveYearsPatientIds:"",greaterThanEqualFiveYears:"",greaterThanEqualFiveYearsPatientIds:"",total:0,totalPatientIds:""};i.name=s;let o=0;i.id=r,r+=1;for(const[t,r]of Object.entries(n)){const s=r;null!=s&&(o+=s.length,i.total=o,s.length&&(e.push(...s),i.totalPatientIds=e),"<5yrs"==t&&(i.lessThanFiveYears=s.length,i.lessThanFiveYearsPatientIds=s),">=5yrs"==t&&(i.greaterThanEqualFiveYears=s.length,i.greaterThanEqualFiveYearsPatientIds=s))}t.push(i)}return t}getCSVString(e){let t="Diseases/Events/Conditions, <5 yrs, >=5 yrs, Total,\n";for(const r of e)t+=`${r.name},${r.lessThanFiveYears},${r.greaterThanEqualFiveYears},${r.total},\n`;return{CSVString:t}}static async getReportEpiWeeks(){const e=[];return(await s.getJson("get_weeks")).reverse().forEach((t=>{const r=t[1].split(" "),s=r[0],a=r[2],n=t[0].split("W"),i=n[0]+"/W"+n[1];e.push({name:i,start:s,end:a})})),e}static async getReportMonths(){const e=[];return(await s.getJson("get_months")).forEach((t=>{const r=t[1],s=r[0],a=r[1].split("to");e.push({name:s,start:a[0],end:a[1].trim()})})),e}});const t=a({components:{ReportTable:n},props:{clinicName:{type:String,default:""},reportparams:{type:Object,required:!0},totalOPDVisits:{type:Number,required:!0},reportName:{type:String,required:!0},periodLabel:{type:String,required:!0},periodDates:{type:String,required:!0},rangeLabel:{type:String,required:!0},range:{type:String,required:!0}},data:function(){return{tableCssTheme:"opd-report-theme",rows:[],columns:[[i.thTxt(this.reportName,{colspan:2,sortable:!1,exportable:!1})]]}},mounted(){this.initTable()},watch:{totalOPDVisits(){this.initTable()}},methods:{initTable(){const e=[];[{name:"Country:",value:"Malawi"},{name:"Reporting Facility Name:",value:this.clinicName},{name:this.rangeLabel+":",value:this.range},{name:this.periodLabel+":",value:this.periodDates},{name:"Total OPD Visits:",value:this.totalOPDVisits}].forEach((t=>{"undefined:"!==t.name&&e.push([i.td(t.name,{style:{textAlign:"left"}}),i.td(t.value,{style:{textAlign:"left"}})])})),this.rows=e}}}),g={style:{margin:"auto",width:"95%","margin-top":"1%"}};e("I",o(t,[["render",function(e,t,r,s,a,n){const i=l("report-table");return u(),c("div",g,[h(i,{columns:e.columns,rows:e.rows,config:{tableCssTheme:e.tableCssTheme}},null,8,["columns","rows","config"])])}]]))}}}));
