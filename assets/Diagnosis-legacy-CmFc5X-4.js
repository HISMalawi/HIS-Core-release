System.register(["./HisStandardForm-legacy-Dsz-zwoz.js","./index-legacy-DCqMHtVA.js","./useEncounter-legacy-C7p8hYha.js","./commons-legacy-CVWA48Ud.js","./isEmpty-legacy-DF-q0G1I.js","./_Set-legacy-DOJa0M6S.js","./_setToArray-legacy-Blqg112e.js","./encounter_guidelines-legacy-D7AZAsep.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,s,n,i,o,l,c,u,r,d,g,y,p,m,_,T,w,v,b,D;return{setters:[e=>{a=e.H},e=>{s=e.bf,n=e.aY,i=e.d,o=e.K,l=e.a_,c=e.F,u=e.V,r=e.ae,d=e.o,g=e.c,y=e.w,p=e.b,m=e.cA,_=e.I,T=e.S,w=e.n},e=>{v=e.u},e=>{b=e.a,D=e.r},null,null,null,null,null],execute:function(){class t extends s{constructor(e,t){super(e,41,t)}static async getDiagnosis(e="",t=1,a=10){const i=n.getConceptID("Qech outpatient diagnosis list");return s.getJson("diagnosis",{id:i,name:e,page:t,page_size:a})}}class E extends s{constructor(e,t){super(e,105,t)}}e("default",i({__name:"Diagnosis",setup(e){let s,n;const i=o("No"),f=o([]),{goToNextTask:h,patientDashboardUrl:j}=v(((e,a)=>{l.getLatestMalariaTestResult(a).then((e=>i.value=e)),s=new E(a,e),n=new t(a,e),f.value=[L("Primary"),L("Secondary"),{id:"clinical_notes",helpText:"Clinical notes",type:c.TT_TEXT,computedValue:e=>r.isEmpty(e)?null:{tag:"notes",obs:s.buildValueText("Clinical notes construct",e.value)}}]}));async function x(e,t){await n.createEncounter();const a=await D({...t,obs_datetime:T.getSessionDate()},"diagnosis");await n.saveObservationList(a);const i=await D({...t},"notes");r.isEmpty(i)||(await s.createEncounter(),await s.saveObservationList(i)),h()}function L(e){return{id:`${e.toLowerCase()}_diagnosis`,helpText:`${e} Diagnosis`,type:c.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:t=>"Primary"===e?u.required(t):null,options:async(e,a="",s=1,n=10)=>{const i=await t.getDiagnosis(a,s,n);return b(i,"name","concept_id")},beforeNext:async e=>await async function(e){return!e.some((({label:e})=>/Malaria/i.test(e)))||"Positive"===i.value||await w(`Patient has ${i.value} malaria test result. Do you want to continue?`)}(e),computedValue:t=>({tag:"diagnosis",obs:t.map((({value:t})=>n.buildValueCoded(`${e} Diagnosis`,t)))}),config:{isFilterDataViaApi:!0,showKeyboard:!0}}}return(e,t)=>(d(),g(m(_),null,{default:y((()=>[p(a,{cancelDestinationPath:m(j),fields:f.value,onFinishAction:x},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
