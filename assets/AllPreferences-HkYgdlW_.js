import{d as h,aq as x,r as l,ay as a,o as C,bv as H,ap as b,a as v,b as k,w as o,e as s,i,aa as I,p as N,f as u,I as P,ax as T,cw as g,q as A,H as D,ak as L}from"./index-CJleCCtM.js";import{A as c}from"./anc_global_props-B8x_1ZWZ.js";const R=["innerHTML"],B={class:"report-content"},M=h({__name:"AllPreferences",setup(V){const p=x(),r={style:{wordWrap:"break-word",maxWidth:"130px"}},m=[{name:"finish",color:"success",slot:"end",visible:!0,size:"large",onClick:()=>p.push("/")}],_=l("Systems settings"),d=l([]),f=l([[a.thTxt("Property"),a.thTxt("Value",r)]]);async function y(){const t=await c.clinicHolidays();return t&&t.split(",").map(e=>D.toStandardHisDisplayFormat(e)).join(", ")}async function w(){const t=await c.clinicDays(),e=await y(),n=await c.appointmentLimit();return[[a.td("Appointment limit"),a.td(n||"Not set")],[a.td("Clinic days"),a.td(t||"Not set")],[a.td("Clinic holidays"),a.td(e||"Not set",r)]]}return C(async()=>{const t=await H.create({});t.present(),d.value=await w(),t.dismiss()}),(t,e)=>{const n=b("ion-title");return v(),k(i(A),null,{default:o(()=>[s(i(I),null,{default:o(()=>[s(i(N),null,{default:o(()=>[s(n,null,{default:o(()=>[u("span",{innerHTML:_.value},null,8,R)]),_:1})]),_:1})]),_:1}),s(i(P),null,{default:o(()=>[u("div",B,[s(T,{rows:d.value,columns:f.value},null,8,["rows","columns"])])]),_:1}),s(g,{btns:m,color:"dark"})]),_:1})}}}),F=L(M,[["__scopeId","data-v-c97510c2"]]);export{F as default};
