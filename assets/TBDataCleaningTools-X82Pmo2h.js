import{T as l}from"./tb_report_service-BfPVsvUy.js";import{_}from"./ReportMixin.vue_vue_type_script_lang-BFLFjbJ1.js";import{R as c}from"./TableReportTemplate-DTUeDl0J.js";import{d as N,aA as e,m as R,H as w,a_ as m,b0 as u,S as p,am as E,ar as T,a as f,b as I,w as D,e as O}from"./index-qFt4YszW.js";import"./BasicReportTemplate-Cv5LTxdO.js";import"./Export-CDLTNdY8.js";import"./index-BckLFmVa.js";import"./Pagination-CAVMmFhb.js";import"./HisStandardForm-B3LOSMqB.js";import"./ReportErrors-DWdHzp12.js";var o=(t=>(t.WITHOUT_PROGRAM="WITHOUT PROGRAM",t.WITHOUT_TB_NUMBER="WITHOUT TB NUMBER",t.BAD_TB_NUMBER="BAD TB NUMBER",t.IN_TREATMENT_BUT_COMPLETED="IN TREATMENT BUT COMPLETED",t.WITH_DISPENSATION_ANOMALIES="WITH DISPENSATION ANOMALIES",t.WITH_UNKNOWN_OUTCOME="WITH UNKNOWN OUTCOME",t.WITH_DUPLICATE_TB_NUMBER="WITH DUPLICATE TB NUMBER",t))(o||{});class U extends l{constructor(){super()}getDataToolReport(a){return l.getJson("tb_data_cleaning_tools",this.buildRequestParams({context:a}))}}const A=N({mixins:[_],components:{ReportTemplate:c,IonPage:R},data:()=>({title:"Data cleaning report",rows:[],columns:[[e.thTxt("National ID"),e.thTxt("TB Number"),e.thTxt("Name"),e.thTxt("Gender"),e.thTxt("Birthdate"),e.thTxt("Residence"),e.thTxt("State")]],defaultIndicator:{}}),created(){this.fields=[...u({id:"start_date",helpText:"Start",required:!0,minDate:()=>"2000-01-01",maxDate:()=>p.getSessionDate(),computeValue:t=>t,estimation:{allowUnknown:!1}}),...u({id:"end_date",helpText:"End",required:!0,minDate:()=>"2000-01-01",maxDate:()=>p.getSessionDate(),computeValue:t=>t,estimation:{allowUnknown:!1}})],this.defaultIndicator=m.find(this.getIndicatorOptions(),{label:this.$route.query.case})||null},methods:{async onPeriod(t,a){const n=i=>w.toStandardHisDisplayFormat(i);this.rows=[];const s=this.defaultIndicator;this.title=s.label,this.columns=s.other.columns,this.report=new U,this.report.setStartDate(a.start_date),this.report.setEndDate(a.end_date),this.period="".concat(n(a.start_date)," - ").concat(n(a.end_date));const r=await this.report.getDataToolReport(s.value);console.log(s,r),m.isNull(r)||(this.rows=await Promise.all(r.map(i=>s.other.formatRow(i))))},mapRow(t){return[e.td(t.identifier||"N/A"),e.td(t.tb_number||"N/A"),e.tdLink(t.name,()=>this.$router.push({path:"/patient/dashboard/".concat(t.patient_id)})),e.td(t.gender||"N/A"),e.td(t.birthdate||"N/A"),e.td(t.residence||"N/A"),e.td(t.state||"N/A")]},getIndicatorOptions(){return[{label:"without program",value:o.WITHOUT_PROGRAM,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"with duplicate tb number",value:o.WITH_DUPLICATE_TB_NUMBER,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"with unknown outcome",value:o.WITH_UNKNOWN_OUTCOME,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"with dispensation anomalies",value:o.WITH_DISPENSATION_ANOMALIES,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"in treatment but completed",value:o.IN_TREATMENT_BUT_COMPLETED,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"bad tb number",value:o.BAD_TB_NUMBER,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}},{label:"without tb number",value:o.WITHOUT_TB_NUMBER,other:{columns:this.columns,formatRow:t=>this.mapRow(t)}}]}}});function b(t,a,n,s,r,i){const d=T("report-template"),h=T("ion-page");return I(),f(h,null,{default:D(()=>[O(d,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,showFilters:!0,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","onReportConfiguration"])]),_:1})}const L=E(A,[["render",b]]);export{L as default};
