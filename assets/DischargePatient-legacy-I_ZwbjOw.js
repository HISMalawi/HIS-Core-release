System.register(["./HisStandardForm-legacy-OekRIZB_.js","./index-legacy-CNrLGT3P.js","./LocationFieldOptions-legacy-DJYLOgCp.js","./commons-legacy-sfoimUeS.js","./useEncounter-legacy-B8HzQoKi.js","./storage-legacy-uuFjVbAf.js","./encounter_guidelines-legacy-BxkBj-oZ.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,i,n,l,o,r,s,c,u,d,f,g,y,h,m,b,p,v,T,w;return{setters:[e=>{a=e.H},e=>{i=e.bk,n=e.d,l=e.K,o=e.F,r=e.V,s=e.W,c=e.t,u=e.n,d=e.q,f=e.o,g=e.c,y=e.w,h=e.b,m=e.cD,b=e.I,p=e.ah},e=>{v=e.g},e=>{T=e.r},e=>{w=e.u},null,null,null],execute:function(){class t extends i{constructor(e,t){super(e,114,t)}}class D extends i{constructor(e,t){super(e,40,t)}}e("default",n({__name:"DischargePatient",setup(e){let i,n;const S=l([]),{goToNextTask:_,patientDashboardUrl:x}=w(((e,a)=>{n=new D(a,e),i=new t(a,e),S.value=[{id:"outcome_status",helpText:"Select Discharge Outcome",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({tag:"outcome",obs:n.buildValueCoded("outcome",e.value)}),options:()=>[{label:"Referred (Within the Facility)",value:"Patient transferred internally"},{label:"Dead",value:"Died in treatment"},{label:"Abscorded",value:"Absconded"},{label:"Alive (Discharged home)",value:"Discharged home"},{label:"Transferred (Another health facility)",value:"Discharged to another facility"}]},{id:"facility_name",helpText:"Select Facility name",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({tag:"referral",obs:i.buildValueText("Referred",e.label)}),condition:e=>"Discharged to another facility"===e.outcome_status.value,options:(e,t="")=>v(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"internal_sections",helpText:"Select Ward/internal section",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({tag:"referral",obs:i.buildValueText("Specialist clinic",e.label)}),condition:e=>"Patient transferred internally"===e.outcome_status.value,options:()=>s.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,t,a)=>{if("string"!=typeof a.filter||a.filter.length<3)return c("Please enter a valid section name");if(a.filtered.some((e=>e.label.toLowerCase()===a.filter.toLowerCase())))return c("Section already existing");if(await u("Do you want to add internal section?")){const e=await s.createInternalSection(a.filter.toUpperCase());e?(a.filter=e.name,a.listData=[{label:e.name,value:e.id},...a.listData]):d(`Unable to add ${a.filter}`)}}}]}}]}));async function E(e,t){await n.createEncounter();const a=await T({...t},"outcome");await n.saveObservationList(a);const l=await T({...t},"referral");p.isEmpty(l)||(await i.createEncounter(),await i.saveObservationList(l)),_()}return(e,t)=>(f(),g(m(b),null,{default:y((()=>[h(a,{cancelDestinationPath:m(x),fields:S.value,onFinishAction:E,skipSummary:""},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
