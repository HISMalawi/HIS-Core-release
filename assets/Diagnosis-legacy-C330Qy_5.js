System.register(["./HisStandardForm-legacy-CturMrfg.js","./EncounterMixin.vue_vue_type_script_lang-legacy-BDi4Plhg.js","./patient_diagnosis_service-legacy-LErnOPBq.js","./index-legacy-DaDUPm0b.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./TouchScreenForm-legacy-kTjvZFWF.js","./ToolbarMediumCard-legacy-TC6u67eT.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-DVkjms5h.js","./encounter_guidelines-legacy-i6miv9ib.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,i){"use strict";var a,s,t,n,o,l,r,c,d,u,h,g,m,p,y;return{setters:[e=>{a=e.H},e=>{s=e._},e=>{t=e.P},e=>{n=e.b3,o=e.d,l=e.aT,r=e.S,c=e.ab,d=e.n,u=e.V,h=e._,g=e.r,m=e.o,p=e.c},e=>{y=e.F},null,null,null,null,null,null],execute:function(){class i extends n{constructor(e,i){super(e,105,i)}}const v=o({components:{HisStandardForm:a},mixins:[s],data:()=>({activeField:"",notesService:{},diagnosisService:{},malariaTestResult:"No"}),watch:{ready:{async handler(e){e&&(this.malariaTestResult=await l.getLatestMalariaTestResult(this.patientID),this.notesService=new i(this.patientID,this.providerID),this.diagnosisService=new t(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,i){await this.diagnosisService.createEncounter();const a=await this.resolveObs({...i,obs_datetime:r.getSessionDate()},"diagnosis");await this.diagnosisService.saveObservationList(a);const s=await this.resolveObs({...i},"notes");c.isEmpty(s)||(await this.notesService.createEncounter(),await this.notesService.saveObservationList(s)),this.nextTask()},mapListToOptions:e=>c.isEmpty(e)?[]:e.map((e=>({label:e.name,value:e.name,other:e.concept_id,isChecked:!1}))).sort(((e,i)=>e.label<i.label?-1:e.label>i.label?1:0)),async checkMalariaResult(e){return!e.find((e=>"Malaria"===e.label))||"Positive"===this.malariaTestResult||await d(`Patient has ${this.malariaTestResult} malaria test result. Do you want to continue?`)},getFields(){return[{id:"primary_diagnosis",helpText:"Select primary diagnosis",type:y.TT_INFINITE_SCROLL_MULTIPLE_SELECT,validation:e=>u.required(e),options:async(e,i="",a=1,s=10)=>this.mapListToOptions(await t.getDiagnosis(i,a,s)),beforeNext:async e=>await this.checkMalariaResult(e),computedValue:e=>({tag:"diagnosis",obs:e.map((({other:e})=>this.diagnosisService.buildValueCodedFromConceptId("Primary diagnosis",e)))}),summaryMapValue:({value:e})=>({value:e,label:"Primary diagnosis"}),config:{isFilterDataViaApi:!0,showKeyboard:!0}},{id:"secondary_diagnosis",helpText:"Select secondary diagnosis",type:y.TT_INFINITE_SCROLL_MULTIPLE_SELECT,options:async(e,i="",a=1,s=10)=>this.mapListToOptions(await t.getDiagnosis(i,a,s)),beforeNext:async e=>await this.checkMalariaResult(e),computedValue:e=>!c.isEmpty(e)&&{tag:"diagnosis",obs:e.map((({other:e})=>this.diagnosisService.buildValueCodedFromConceptId("Secondary diagnosis",e)))},summaryMapValue:({value:e})=>({value:e,label:"Secondary diagnosis"}),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"clinical_notes",helpText:"Clinical notes",type:y.TT_TEXT,computedValue:e=>e&&{tag:"notes",obs:this.notesService.buildValueText("Clinical notes construct",e.value)}}]}}});e("default",h(v,[["render",function(e,i,a,s,t,n){const o=g("his-standard-form");return m(),p(o,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}]]))}}}));
