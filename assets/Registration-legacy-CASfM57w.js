System.register(["./HisStandardForm-legacy-CfaEhksJ.js","./index-legacy-rttSvejT.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./LocationFieldOptions-legacy-dXlt-rZq.js","./KbLayouts-legacy-BKvPSxzZ.js","./useEncounter-legacy-C5XjQAs5.js","./commons-legacy-Cypz2mR1.js","./TouchScreenForm-legacy-Bt9NJZEE.js","./ToolbarMediumCard-legacy-Bi2VVsZ_.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-BdWinx1S.js","./isEmpty-legacy-L6R_XD2X.js","./_Set-legacy-BYUwUcqE.js","./_setToArray-legacy-EPEAZc6q.js","./encounter_guidelines-legacy-Da880sWK.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,a){"use strict";var i,t,n,l,o,s,r,u,c,d,y,p,v,T,g,b,f,_;return{setters:[e=>{i=e.H},e=>{t=e.b5,n=e.d,l=e.K,o=e.V,s=e.t,r=e.o,u=e.c,c=e.cl,d=e.R,y=e.P,p=e.cB},e=>{v=e.F},e=>{T=e.g},e=>{g=e.C},e=>{b=e.u},e=>{f=e.y,_=e.r},null,null,null,null,null,null,null,null,null],execute:function(){class a extends t{constructor(e,a){super(e,104,a)}}e("default",n({__name:"Registration",setup(e){let t,n;const m=l([]),{goToNextTask:E,patientDashboardUrl:j}=b(((e,i,l)=>{n=l,t=new a(i,e),m.value=[{id:"visit_type",helpText:"Type of visit",type:v.TT_SELECT,validation:e=>o.required(e),computedValue:e=>({obs:t.buildValueCoded("Type of visit",e.value)}),options:()=>[{label:"New",value:"New patient"},{label:"Referral",value:"Referral"},{label:"Re-visiting",value:"Re-visiting"}]},{id:"referring_facility_name",helpText:"Referred from",type:v.TT_SELECT,validation:e=>o.required(e),computedValue:({label:e})=>({obs:t.buildValueText("Referred from",e)}),condition:e=>"Referral"===e.visit_type.value,options:(e,a="")=>T(a),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"national_id_available",helpText:"National ID Available",type:v.TT_SELECT,validation:e=>o.required(e),condition:()=>"Unknown"===n.getMWNationalID(),options:()=>f(),appearInSummary:()=>!1},{id:"national_id",helpText:"Enter National ID",type:v.TT_TEXT,validation:e=>o.isMWNationalID(e),condition:e=>"Yes"===e.national_id_available.value,beforeNext:async e=>!e.value||!(await async function(e){return!!e&&(await y.findByOtherID(p,e)).length>0}(e.value.toString()))||(s("National ID already exists"),!1),summaryMapValue:({value:e})=>({value:e,label:"National ID"}),config:{casing:"uppercase",customKeyboard:[g,[["Delete"]]]}},{id:"patient_pregnant",helpText:"Patient pregnant",type:v.TT_SELECT,validation:e=>o.required(e),computedValue:({value:e})=>({obs:t.buildValueCoded("PATIENT PREGNANT",e)}),condition:()=>n.isChildBearing(),options:()=>f()}]}));async function h(e,a){if(await async function(e){const a=e.national_id_available,i=e.national_id;a&&"Yes"===a.value&&(await n.updateMWNationalId(i.value),d.invalidate("ACTIVE_PATIENT"))}(e),!(await t.createEncounter()))return s("Unable to create registration encounter");const i=await _({...a});if(!(await t.saveObservationList(i)))return s("Unable to save observations");E()}return(e,a)=>(r(),u(i,{cancelDestinationPath:c(j),fields:m.value,onFinishAction:h},null,8,["cancelDestinationPath","fields"]))}}))}}}));
