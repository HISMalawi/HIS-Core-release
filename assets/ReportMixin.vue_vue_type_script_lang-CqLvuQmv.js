import{d as _,bo as b,cj as S,H as C,as as o,au as p,cy as w,ad as h,ae as f,ci as u,aw as P,ao as $,aN as I,al as g,bA as R}from"./index-CMZASHAR.js";import{D as T}from"./BasicReportTemplate-CbJ_oMga.js";const F=_({data:()=>({app:b.getActiveApp(),fields:[],report:{},reportReady:!1,period:"",startDate:"",endDate:"",customFileName:"",isMilitarySite:!1,drillDownCache:{}}),methods:{formatGender(t){return S(t)},toDate(t){return C.toStandardHisDisplayFormat(t)},sortByArvNumber(t,r="arv_number"){try{return t.sort((i,a)=>this.getArvInt(i[r])>this.getArvInt(a[r])?1:-1)}catch(i){return console.error(i),t}},getArvInt(t){if(typeof t=="string"){const r=t.split("-")[2],i=parseInt(r);return typeof i=="number"?i:0}return 0},parseAgeGroup(t){return t==="<1 year"?[0,0]:t==="90 plus years"?[90,1e3]:t.split("-").map(r=>parseInt(r,10))},tdARV(t,r={}){return o.td(t,{sortValue:this.getArvInt(t),...r})},confirmPatient(t){return this.$router.push("/patients/confirm?person_id=".concat(t))},async drilldownAsyncRows(t,r,i,a=!0){(await p.create({component:T,cssClass:"large-modal",componentProps:{title:t,columns:r,asyncRows:i,canExport:a,showFilters:!0,rowsPerPage:50,paginated:!0,showReportStamp:!1,footerColor:"light",onFinish:()=>p.dismiss()}})).present()},async drilldownData(t,r,i,a){(await p.create({component:T,cssClass:"large-modal",componentProps:{title:t,columns:r,rows:i,rowParser:a,rowsPerPage:50,showFilters:!0,paginated:!0,showReportStamp:!1,footerColor:"light",onFinish:()=>p.dismiss()}})).present()},getDefaultDrillDownTable(){const t=[[o.thTxt("ARV number"),o.thTxt("Gender"),o.thTxt("Birth Date"),o.thTxt("Art start date"),o.thTxt("Actions")]];return{rowParser:async i=>{let a=0;const d=i.map(async s=>{let n=null,c=null;if(I.isArray(s)){const[A,D]=s;if(c=A,D in this.drillDownCache)return[c,...this.drillDownCache[D].slice(1)]}else if(n=s,n in this.drillDownCache)return this.drillDownCache[n];const v=await g.findByID(n),y=await new R(n).getProgram(),m=new g(v),l=[];return c&&(a=1,l.push(c)),l.push(this.tdARV(m.getArvNumber())),l.push(o.td(this.formatGender(m.getGender()))),l.push(o.tdDate(m.getBirthdate().toString())),l.push(o.tdDate(y.startDate)),l.push(o.tdBtn("Show",async()=>{await p.dismiss({}),this.$router.push({path:"/patient/dashboard/".concat(n)})})),this.drillDownCache[n]=l,l});return(await Promise.all(d)).sort((s,n)=>s[a].sortValue>n[a].sortValue?1:-1)},columns:t}},runTableDrill(t,r="Drilldown patients"){const{columns:i,rowParser:a}=this.getDefaultDrillDownTable();this.drilldownData(r,i,t,a)},drill(t,r="Drill table"){return t&&t.length>0?o.tdLink(t.length,()=>this.runTableDrill(t,r)):o.td(0)},getQuaterOptions(){return w.getReportQuarters().map(r=>({label:r.name,value:r.start,other:r}))},getDateDurationFields(t=!1,r=!1,i=5,a=$.getSessionDate()){const d="2000-01-01";return[{id:"quarter",helpText:"Select Quarter",type:h.TT_SELECT,condition:()=>t,validation:e=>f.required(e),options:()=>{let s=w.getReportQuarters(i).map(n=>({label:n.name,value:n.start,other:n}));return r&&(s=[{label:"Set custom period",value:"custom_period",other:{}},...s]),s}},{id:"start_date",helpText:"Start Date",type:h.TT_FULL_DATE,validation:e=>e?new Date(e.value)<new Date(d)?["".concat(u("".concat(e.value))," is less than minimum date of ").concat(u(d))]:a&&new Date(e.value)>new Date(a)?["".concat(u("".concat(e.value))," is greater than max date of ").concat(u(a))]:null:["Date is required"],computedValue:e=>e.value,condition:e=>e.quarter&&e.quarter.value==="custom_period"||!t},{id:"end_date",helpText:"End Date",type:h.TT_FULL_DATE,defaultValue:e=>e.start_date.value,validation:(e,s)=>e?s.start_date.value&&new Date(e.value)<new Date(s.start_date.value)?["".concat(u("".concat(e.value))," is less than minimum date of ").concat(u(s.start_date.value))]:a&&new Date(e.value)>new Date(a)?["".concat(u("".concat(e.value))," is greater than max date of ").concat(u(a))]:null:["Date is required"],computedValue:e=>e.label,condition:e=>e.quarter&&e.quarter.value==="custom_period"||!t},{id:"occupation",helpText:"Report Group",type:h.TT_SELECT,init:async()=>(this.isMilitarySite=await P.get("IS_MILITARY_SITE"),!0),computedValue:e=>e.value,condition:()=>{var e;return((e=this.app)==null?void 0:e.applicationName)==="ART"&&this.isMilitarySite},validation:e=>f.required(e),options:()=>[{label:"All",value:"All"},{label:"Military",value:"Military"},{label:"Civilian",value:"Civilian"}]}]}}});export{F as _};
