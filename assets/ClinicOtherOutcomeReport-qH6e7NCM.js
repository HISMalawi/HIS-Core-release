import{d as a,L as t,F as s,V as n,cF as p,_ as l,r as d,o as h,c as m}from"./index-BbPYANJn.js";import{_ as u}from"./ReportMixin.vue_vue_type_script_lang-BdKiUyjt.js";import{R as c}from"./TableReportTemplate-CI4WsP-i.js";import"./BasicReportTemplate-BDBwxYU4.js";import"./Export-BN6ZqWE3.js";import"./Pagination-DHHxTtaM.js";import"./HisStandardForm-Qxx6S8J3.js";import"./ReportErrors-Bh41HAsP.js";const f=a({mixins:[u],components:{ReportTemplate:c},data:()=>({title:"",totalClients:[],rows:[],columns:[],outcome:""}),created(){const o=[[t.thTxt("ARV#"),t.thTxt("First name",{csvExportable:!1,pdfExportable:!0}),t.thTxt("Last name",{csvExportable:!1,pdfExportable:!0}),t.thTxt("Birthdate"),t.thTxt("Gender"),t.thTxt("Outcome date"),t.thTxt("Actions")]],r=e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),t.tdDate(e.birthdate),t.td(this.formatGender(e.gender)),t.tdDate(e.outcome_date),t.tdBtn("View",()=>this.$router.push({path:"/patient/dashboard/".concat(e.patient_id)}))];this.fields=[...this.getDateDurationFields(),{id:"outcome",helpText:"Select outcome",type:s.TT_SELECT,validation:e=>n.required(e),options:()=>[{label:"Transfer Out",value:"Transfer Out",other:{columns:[[t.thTxt("ARV#"),t.thTxt("First name",{csvExportable:!1,pdfExportable:!0}),t.thTxt("Last name",{csvExportable:!1,pdfExportable:!0}),t.thTxt("Birthdate"),t.thTxt("Gender"),t.thTxt("Outcome date"),t.thTxt("TO Location"),t.thTxt("Actions")]],rowBuilder:e=>[t.td(e.identifier),t.td(e.given_name),t.td(e.family_name),t.tdDate(e.birthdate),t.td(this.formatGender(e.gender)),t.tdDate(e.outcome_date),t.td(e.transferred_out_to),t.tdBtn("View",()=>this.$router.push({path:"/patient/dashboard/".concat(e.patient_id)}))]}},{label:"Died",value:"Died",other:{columns:o,rowBuilder:r}},{label:"Stopped",value:"Stopped",other:{columns:o,rowBuilder:r}}]}]},methods:{async onPeriod({outcome:o},r){this.rows=[],this.columns=o.other.columns,this.report=new p,this.report.setOccupation(r.occupation),this.report.setStartDate(r.start_date),this.report.setEndDate(r.end_date),this.outcome=o.value.toString(),this.title="".concat(this.outcome," Report"),this.period=this.report.getDateIntervalPeriod(),this.setRows(await this.report.getOtherOutcome(this.outcome),o.other.rowBuilder)},setRows(o,r){o&&this.sortByArvNumber(o,"identifier").forEach(e=>this.rows.push(r(e)))}}});function T(o,r,e,x,_,b){const i=d("report-template");return h(),m(i,{title:o.title,period:o.period,rows:o.rows,fields:o.fields,columns:o.columns,encryptPDF:!0,onReportConfiguration:o.onPeriod,"report-prefix":"Clinic"},null,8,["title","period","rows","fields","columns","onReportConfiguration"])}const $=l(f,[["render",T]]);export{$ as default};
