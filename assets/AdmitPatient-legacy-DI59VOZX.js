System.register(["./HisStandardForm-legacy-DMJkhfrq.js","./index-legacy-X--GYU37.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./useEncounter-legacy-C-vUvR11.js","./TouchScreenForm-legacy-C_f8Ho2H.js","./ToolbarMediumCard-legacy-CdhT4OJW.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-1het9QhE.js","./isEmpty-legacy-CJg3TOXI.js","./encounter_guidelines-legacy-wNYbMa3T.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var n,a,l,i,s,o,r,c,u,d,y,f,g,m,p,w,b;return{setters:[e=>{n=e.H},e=>{a=e.b4,l=e.d,i=e.K,s=e.V,o=e.U,r=e.t,c=e.n,u=e.q,d=e.o,y=e.c,f=e.w,g=e.b,m=e.cl,p=e.I},e=>{w=e.F},e=>{b=e.u},null,null,null,null,null,null,null],execute:function(){class t extends a{constructor(e,t){super(e,42,t)}}e("default",l({__name:"AdmitPatient",setup(e){const a=i([]);let l;const{goToNextTask:j,patientDashboardUrl:h}=b(((e,n)=>{l=new t(n,e),a.value.push({id:"internal_sections",helpText:"Select Ward/internal section",type:w.TT_SELECT,validation:e=>s.required(e),computedValue:e=>l.buildValueText("Admit to ward",e.label),options:()=>o.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,t,n)=>{if("string"!=typeof n.filter||n.filter.length<3)return r("Please enter a valid section name");if(n.filtered.some((e=>e.label.toLowerCase()===n.filter.toLowerCase())))return r("Section already existing");if(await c("Do you want to add internal section?")){const e=await o.createInternalSection(n.filter.toUpperCase());e?(n.filter=e.name,n.listData=[{label:e.name,value:e.id},...n.listData]):u(`Unable to add ${n.filter}`)}}}]}})}));async function S(e,t){const n=await Promise.all([t.internal_sections]);await l.createEncounter(),await l.saveObservationList(n),j()}return(e,t)=>(d(),y(m(p),null,{default:f((()=>[g(n,{cancelDestinationPath:m(h),fields:a.value,onFinishAction:S,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
