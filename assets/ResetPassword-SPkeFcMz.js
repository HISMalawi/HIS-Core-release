import{H as v}from"./HisStandardForm-D4x6GRNw.js";import{d as p,r,al as h,ai as o,aj as t,t as l,a as w,c as f,am as T,U as y,e as m}from"./index-DUHy09-D.js";const C=p({__name:"ResetPassword",setup(_){const i=new T,a=r(!1),n=r("welcome"),d=h(),c=[{id:"welcome",helpText:"Password Reset",type:o.TT_TEXT_BANNER,options:()=>{const e='\n        <h1 style="font-weight: bold;">Welcome to the password reset module</h1>\n        <h2>Please ensure that you\'ve received a verification code from <b>Helpdesk</b></h2>\n        <h3>You can either scan the code or enter it manually</h3>\n        <h4>Click <b>NEXT</b> below to begin</h4>\n      ';return[{label:e,value:e}]}},{id:"has_scanner",helpText:"Do you wish to scan the verification code?",type:o.TT_SELECT,validation:t.required,condition:()=>!a.value,options:()=>[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},{id:"scanner_code",proxyID:"code",helpText:"Scan verification code",type:o.TT_BARCODE,validation:t.required,condition:e=>e.has_scanner.value==="Yes"&&!a.value,onValue:async e=>{a.value=await i.validateResetPasswordToken(e.replace(/-/g,"")),a.value?n.value="new_password":l("Invalid verification code")},config:{hiddenFooterBtns:["Next","Clear"]}},{id:"keyboard_code",proxyID:"code",helpText:"Enter verification Code",type:o.TT_TEXT,validation:t.required,condition:e=>e.has_scanner.value==="No"&&!a.value,beforeNext:async e=>(a.value=await i.validateResetPasswordToken("".concat(e.value).replace(/-/g,"")),a.value?!0:(l("Invalid verification code"),!1)),config:{customKeyboard:[[["1","2","3","4","5","6","7","8","9","0"],["q","w","e","r","t","y","u","i","o","p"],["a","s","d","f","g","h","j","k","l"],["z","x","c","v","b","n","m","-","CAPS"]],[["Delete"],["Clear"]]]}},{id:"new_password",proxyID:"password",helpText:"New Password",type:o.TT_PASSWORD,condition:()=>a.value,validation:e=>t.required(e),computedValue:e=>"".concat(e.value).toLowerCase(),config:{hiddenFooterBtns:["Back"]}},{id:"verify_password",proxyID:"password",helpText:"Confirm Password",type:o.TT_PASSWORD,condition:()=>a.value,validation:(e,s)=>t.validateSeries([()=>t.required(e),()=>e.value!==s.password.value?["Passwords do not match"]:null]),computedValue:e=>"".concat(e.value).toLowerCase()}];async function u(e,s){try{await y.updateUser(i.userID,s)&&(await i.resetUserPasswordChangeCheck(),setTimeout(()=>{d.push("/login")},100))}catch(b){m("Unable to save changes.. Make sure you're not reusing an old password")}}return(e,s)=>(w(),f(v,{cancelDestinationPath:"/login",fields:c,onFinishAction:u,activeField:n.value,"skip-summary":""},null,8,["activeField"]))}});export{C as default};
