import{bT as n,d as a,ai as o,aj as r,af as c,c as d,ak as l,a as p}from"./index-4ZhJu3VE.js";import{H as h}from"./HisStandardForm-K1lIrz3_.js";import{_ as m}from"./EncounterMixin.vue_vue_type_script_lang-EEqewWSM.js";import"./encounter_guidelines-DE8ypU-x.js";import"./GuidelineEngine-D6V1_Znr.js";class f extends n{constructor(t,i){super(t,105,i)}}const u=a({mixins:[m],components:{HisStandardForm:h},data:()=>({service:{}}),watch:{ready:{async handler(e){e&&(this.service=new f(this.patientID,this.providerID),this.fields=[this.notesField()])},immediate:!0}},methods:{async onFinish(e,t){await this.service.createEncounter(),await this.service.saveObservationList(await this.resolveObs(t)),this.nextTask()},notesField(){return{id:"noted",helpText:"Clinical Notes",type:o.TT_NOTE,validation:e=>r.required(e),computedValue:e=>({obs:this.service.buildValueText("Notes",e.value)}),config:{helpText:"Enter any clinical notes you want to add to the patient's record",helpTitle:"Clinical Notes"}}}}});function v(e,t,i,_,T,F){const s=l("his-standard-form");return p(),d(s,{fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const D=c(u,[["render",v]]);export{D as default};
