import{d as E,r as l,at as p,ad as D,a as x,c as k,u as q,aN as h,aW as K,aj as v}from"./index-CMZASHAR.js";import{H as L}from"./HisStandardForm-BCjM4-bc.js";import{V as d}from"./vitals_service-DXPPoar9.js";import{u as R}from"./useEncounter-CsCeua2V.js";import"./isEmpty-DjKeGqZh.js";import"./encounter_guidelines-CJXpBOk4.js";import"./GuidelineEngine-D6V1_Znr.js";const X=E({__name:"AncVitals",setup(U){const c=l(0),u=l(-1),r=l(-1),f=l(-1),g=l([]);let i;const{patientDashboardUrl:m,goToNextTask:w}=R(C),y={label:"Weight",value:"",other:{modifier:"KG",icon:"weight",required:!0}},H={label:"BP",value:"",other:{modifier:"mmHG",icon:"bp"}},V=p(()=>({label:"Age",value:c.value,other:{doNotSave:!0,modifier:"Years old",icon:"",visible:!1}})),W=p(()=>{const t=u.value>0&&c.value>18;return{label:"Height",value:"".concat(t?u.value:""),other:{modifier:"CM",icon:"height",recentHeight:u.value,visible:!t}}});async function C(t,e,a){var o,s;i=new d(e,t);const n=await d.getFirstObs(e,"Weight");r.value=parseFloat("".concat((o=n==null?void 0:n.value_numeric)!=null?o:0)),f.value=parseInt("".concat((s=n==null?void 0:n.obs_id)!=null?s:-1)),c.value=a.getAge(),u.value=await a.getRecentHeight(),g.value.push($())}function O(t){const e=T(t);if(e.length>0)return e.map(n=>["".concat(n.label," can not be empty")]);const a=P(t);return i.validateAll(a)}function P(t){return t.filter(e=>e.label==="Height"&&e.other.required==!1?!1:e.value!==""&&e.label!=="Age")}function T(t){return t.filter(e=>e.value===""&&e.other.required===!0)}function S(t){const e=h.find(t,{label:"BP"});if(e&&e.value!=""){const[a,n]="".concat(e.value).split("/").map(o=>parseInt(o));if(a>=140&&n>=90)return{status:"Client is at risk of pre-eclampsia, refer for urine protein test.",color:"brown"};if(a<120||a>140)return{status:"Systolic reading is out of normal range",color:"brown"};if(n<80||n>90)return{status:"Diastolic reading is out of normal range",color:"brown"};if(a>=130&&a<=139&&n>=80&&n<=89)return{status:"Prehypertension",color:"brown"}}return{status:"",color:""}}async function b(t){const e=t.value,a=e-r.value;if((Math.abs(a)/r.value||1)*100>30){const o="Use ".concat(r.value," Kg"),s="Use ".concat(e," Kg");if(await K("Abnormal Weight Change",'Previous Weight "'.concat(r.value,' Kg". Current Weight "').concat(e,' Kg"'),"Weight Reading has been ".concat(a>0?"increased":"decresed"," by more than 30%. Please SELECT the correct Weight.)"),[{name:o,slot:"start",color:"success"},{name:s,slot:"end",color:"danger"}])===s&&f)await v("Do you want to void Weight observation for ".concat(r.value))&&await d.voidObs(f.value);else return r.value}return e}async function _(t){if(!t.value&&t.other.required)throw"Value for ".concat(t.label," is required");if(t.value){const e=i.validator(t);if(e&&e.length)throw e}t.label==="Weight"&&r.value>0&&(t.value=await b(t))}function $(){return{id:"vitals",helpText:"Vitals entry",type:D.TT_VITALS_ENTRY,validation:O,options:()=>[y,W.value,H,V.value],config:{onUpdateAlertStatus:S,onChangeOption:_,hiddenFooterBtns:["Clear"]}}}async function A(t){const[e,a]=t.split("/");return[await i.buildValueNumber("Systolic",parseInt(e)),await i.buildValueNumber("Diastolic",parseInt(a))]}async function B(t){return(await Promise.all(t.filter(a=>{var n;return!((n=a.other)!=null&&n.doNotSave||h.isEmpty(a.value))}).map(async a=>a.label==="BP"?A(a.value):(a.label==="Weight"&&r.value>0&&(a.value=await b(a)),i.buildValueNumber(a.label,a.value))))).flat()}async function F(t){const e=h.find(t,{label:"Height"});return(e==null?void 0:e.value)>0?!0:!await v("Patient has no height reading. Do you want to proceed without recording height?",{header:"HEIGHT CONFIRMATION",confirmBtnLabel:"Enter Height",cancelBtnLabel:"Proceed"})}async function N({vitals:t}){if(!await F(t))return;await i.createEncounter();const e=await B(t);await i.saveObservationList(e),w()}return(t,e)=>(x(),k(L,{fields:g.value,onFinishAction:N,skipSummary:!0,cancelDestinationPath:q(m)},null,8,["fields","cancelDestinationPath"]))}});export{X as default};
