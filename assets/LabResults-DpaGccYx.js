var R=Object.defineProperty;var L=(s,e,i)=>e in s?R(s,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[e]=i;var c=(s,e,i)=>(L(s,typeof e!="symbol"?e+"":e,i),i);import{H as S}from"./HisStandardForm-4iY8ramV.js";import{F as o}from"./dynamic-import-helper-Bsjrd6Ro.js";import{g as V}from"./MultiFieldDateHelper-C5td-0Rz.js";import{b5 as b,aU as m,d as $,R as x,T as E,q as F,n as O,V as u,t as h,ab as y,H as D,S as C,_ as w,r as H,o as q,c as B}from"./index-L7KBnPzM.js";import"./TouchScreenForm-DLhU6o0i.js";import"./ToolbarMediumCard-BO4GFuiT.js";import"./Transformers-BPPLlH12.js";import"./ViewPort--UGxBUFx.js";import"./KbLayouts-VRA-vjeH.js";import"./HisKbConfigurations-GhFQZvlg.js";class k extends b{constructor(i){super(i,57);c(this,"patientID");c(this,"testTypeID");c(this,"resultDate");c(this,"testID");this.patientID=i,this.testTypeID=-1,this.resultDate="",this.testID=-1}createLabResult(i){return b.postJson("lab/tests/".concat(this.testID,"/results"),{encounter_id:this.encounterID,date:this.resultDate,measures:i})}getTestID(){return this.testID}getTestTypeID(){return this.testTypeID}setTestTypeID(i){this.testTypeID=i}setResultDate(i){this.resultDate=i}setTestID(i){this.testID=i}getTestsWithoutResults(){return m.getOrders(this.patientID,{status:"drawn"})}getTestIndicators(){return m.getJson("lab/test_result_indicators",{test_type_id:this.testTypeID})}}const A=$({components:{HisStandardForm:S},data:()=>({fieldComponent:"",labResult:{},hisFormKey:0,patient:{},fields:[],selectedTest:{},testOptions:[],testIndicators:[]}),watch:{$route:{async handler({params:s}){s&&s.patient_id&&(this.patient=s.patient_id,this.labResult=new k(this.patient),await this.initData(),this.fields=this.getFields())},deep:!0,immediate:!0}},methods:{async onFinish(s,e){try{const i=Object.values(e).filter(r=>r.tag==="result_indicator"&&r.measures).map(r=>r.measures);this.labResult.setTestID(this.selectedTest.value),this.labResult.setResultDate(e.result_date),await this.labResult.createEncounter(),await this.labResult.createLabResult(i),x.invalidate("PATIENT_LAB_ORDERS"),this.testOptions=[],this.selectedTest={},this.testIndicators=[],await this.initData(),this.hisFormKey=Math.floor(Math.random()*5e3),E("Lab result saved!")}catch(i){F("".concat(i)),console.error(i)}},generateTestIndicatorsFields(){return this.testIndicators.reduce((s,e)=>s.concat(this.buildTestIndicatorFields(e.indicatorId,e.indicatorName,e.specimen,e.testId)),[])},async validateVLresults(s,e,i){if(s!=="HIV viral load")return!0;const r=i.substring(0,1),a=i.substring(1,i.length);return m.isValidVLResult(e,r,a)?!0:!await O("Invalid results for ".concat(e," HIV viral load"),{cancelBtnLabel:"Process result",confirmBtnLabel:"Re-enter result"})},alphaValueIsValid(s){try{return!!s.match(/^(>|<|=)(.*)/)}catch(e){return!1}},numericValueIsValid(s){try{return!!s.match(/^(=|<|>)([0-9]*)$/m)}catch(e){return!1}},isMalariaResult(s){return!!s.match(/mrdt|malaria/i)},isUrineLamResult(s){return!!s.match(/Lam/i)},buildTestIndicatorFields(s,e,i,r){const a=s*r,l=t=>[this.selectedTest.value===r,!!y.find(t.result_indicators,{label:e})].every(Boolean),d=t=>this.validateVLresults(e,i,t.value.toString()),n=(t,T)=>{if(t.value==="Other"&&e.match(/HIV viral load/i))return{};const _=this.isMalariaResult(e)||this.isUrineLamResult(e)?"text":T["type_".concat(a)].value,p=this.isMalariaResult(e)||this.isUrineLamResult(e)?"="+t.value:t.value.toString(),v=p.charAt(0),f=_==="numeric"?parseInt(p.substring(1)):p.substring(1),I=T.result_indicators.filter(g=>g.value===s)[0];return{tag:"result_indicator",measures:{indicator:{concept_id:I.value},value:f,value_modifier:v,value_type:_},result:f,modifier:v,test:I.label}};return[{id:"type_".concat(a),helpText:"Result type (".concat(e,")"),type:o.TT_SELECT,group:"test_indicator",condition:t=>l(t)&&!this.isMalariaResult(e)&&!this.isUrineLamResult(e),appearInSummary:()=>!1,validation:t=>u.required(t),options:()=>[{label:"Numeric (numbers only)",value:"numeric"},{label:"Alphanumeric(text and numbers)",value:"text"}]},{id:"urine_result_".concat(a),helpText:"Select Test Result (".concat(e,")"),type:o.TT_SELECT,group:"test_indicator",computedValue:n,validation:t=>u.required(t),condition:t=>l(t)&&this.isUrineLamResult(e),options:()=>[{label:"Positive",value:"positive"},{label:"Negative",value:"negative"}]},{id:"num_".concat(a),helpText:"Test Result (".concat(e,")"),type:o.TT_TEXT,group:"test_indicator",computedValue:n,beforeNext:d,onValue:t=>t&&t.value&&!this.numericValueIsValid(t.value.toString())?(h("You must enter a modifer and numbers only. i.e =90 / >19 / < 750"),!1):!0,validation:t=>u.required(t),condition:t=>l(t)&&t["type_".concat(a)].value==="numeric",config:{customKeyboard:[[["1","2","3"],["4","5","6","=","<",">"],["7","8","9","."],["","0",""]],[["Delete"]]]}},{id:"alpha_".concat(a),helpText:"Test Result (".concat(e,")"),type:o.TT_TEXT,group:"test_indicator",onValue:t=>t&&t.value&&!this.alphaValueIsValid(t.value.toString())?(h("You must enter a modifier plus result (for example =LDL)"),!1):!0,computedValue:n,validation:t=>u.required(t),condition:t=>l(t)&&t["type_".concat(a)].value==="text"&&!e.match(/HIV viral load/i)},{id:"VL_alpha_".concat(a),helpText:"Select Test Result (".concat(e,")"),type:o.TT_SELECT,group:"test_indicator",computedValue:n,validation:t=>u.required(t),condition:t=>l(t)&&t["type_".concat(a)].value==="text"&&e.match(/HIV viral load/i),options:()=>[{label:"Collect Another Sample",value:"=Collect Another Sample"},{label:"<LDL",value:"<LDL"},{label:"=LDL",value:"=LDL"},{value:"Other",label:"Other"}]},{id:"other_VL_alpha_".concat(a),helpText:"Test Result (".concat(e,")"),type:o.TT_TEXT,group:"test_indicator",onValue:t=>t&&t.value&&!this.alphaValueIsValid(t.value.toString())?(h("You must enter a modifier plus result (for example =LDL)"),!1):!0,computedValue:n,validation:t=>u.required(t),condition:t=>l(t)&&t["type_".concat(a)].value==="text"&&e.match(/HIV viral load/i)&&t["VL_alpha_".concat(a)].value==="Other"},{id:"malaria_result_".concat(a),helpText:"Select Test Result (".concat(e,")"),type:o.TT_SELECT,group:"test_indicator",computedValue:n,validation:t=>u.required(t),condition:t=>l(t)&&this.isMalariaResult(e),options:()=>e.match(/mrdt/i)?[{label:"Positive",value:"positive"},{label:"Negative",value:"negative"}]:[{label:"Parasites seen",value:"parasites seen"},{label:"No parasites seen",value:"no parasites seen"}]}]},async initData(){const s=await this.labResult.getTestsWithoutResults();for(const e in s){const i=s[e];for(const r in i.tests){const a=i.tests[r];if(!y.isEmpty(a.result))continue;this.labResult.setTestTypeID(a.concept_id);const d=(await this.labResult.getTestIndicators()).map(n=>({testId:a.id,indicatorName:n.name,indicatorId:n.concept_id,specimen:i.specimen.name}));this.testIndicators=[...this.testIndicators,...d],this.testOptions.push({label:a.name,value:a.id,other:{accession:i.accession_number,specimen:i.specimen.name,test:a.name,orderDate:i.order_date,testIndicators:d}})}}},getFields(){return[{id:"test_type",helpText:"Tests without results",type:o.TT_TABLE_VIEWER,options:()=>[{label:"",value:"",other:{rows:this.testOptions.map(e=>[e.other.accession,e.other.specimen,e.other.test,D.toStandardHisDisplayFormat(e.other.orderDate),{type:"button",name:"Select",action:()=>{this.selectedTest=e,this.$nextTick(()=>this.fieldComponent="year_result_date")}}]),columns:["Acession#","Specimen","Test","Order date"]}}],validation:s=>u.required(s),config:{overrideDefaultFooterBtns:{nextBtn:{name:"Finish",onClick:()=>this.$router.back()}},hiddenFooterBtns:["Clear","Cancel"]}},...V({id:"result_date",helpText:"Result",required:!0,estimation:{allowUnknown:!1},minDate:()=>D.toStandardHisFormat(this.selectedTest.other.orderDate),maxDate:()=>C.getSessionDate(),computeValue:s=>s}),{id:"result_indicators",helpText:"Select test result indicators",type:o.TT_MULTIPLE_SELECT,validation:s=>u.required(s),options:()=>this.selectedTest.other.testIndicators.map(s=>({label:s.indicatorName,value:s.indicatorId}))},...this.generateTestIndicatorsFields(),{id:"entry_confirmation",helpText:"Confirm entry",type:o.TT_TABLE_VIEWER,options:(s,e)=>[{label:"",value:"",other:{rows:Object.values(e).filter(r=>typeof r=="object"&&r!=null&&r.tag==="result_indicator").map(r=>[r.test,r.modifier,r.result]),columns:["Test","Modifier","Result"]}}]}]}}});function M(s,e,i,r,a,l){const d=H("his-standard-form");return q(),B(d,{key:s.hisFormKey,fields:s.fields,activeField:s.fieldComponent,skipSummary:!0,onOnIndex:e[0]||(e[0]=n=>s.fieldComponent=""),onOnFinish:s.onFinish},null,8,["fields","activeField","onOnFinish"])}const Q=w(A,[["render",M]]);export{Q as default};
