import{H as c}from"./HisStandardForm-CNo-jxdn.js";import{_ as h}from"./EncounterMixin.vue_vue_type_script_lang-BGtpmu1n.js";import{P as p}from"./patient_radiology_service-BHIhx5KY.js";import{d as m,cS as u,a$ as g,V as y,_,r as n,o as f,c as v,w as b,b as w}from"./index-BF3WrZAg.js";import{F as d}from"./dynamic-import-helper-Bsjrd6Ro.js";import"./TouchScreenForm-DEXYdl71.js";import"./ToolbarMediumCard-CJsYT4iG.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-J1DvtW6Z.js";import"./encounter_guidelines-DS0UQybO.js";import"./GuidelineEngine-D6V1_Znr.js";const P=m({components:{HisStandardForm:c},mixins:[h],data:()=>({radiologyService:{},isPacsEnabled:!1,previousRadiologyExaminations:{}}),watch:{ready:{async handler(i){i&&(this.radiologyService=new p(this.patientID,this.providerID),this.isPacsEnabled=await u.isPACsEnabled(),this.previousRadiologyExaminations=await this.radiologyService.showPreviousRadiolgy(this.patient),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(i,t){const e=await Promise.all(t.radiology);await this.radiologyService.createEncounter();const s=await this.radiologyService.obsObj(e),a=await this.radiologyService.saveObservationList(s);if(await this.radiologyService.printOrders(a,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(a,this.patient)}catch(o){console.log(o)}this.gotoPatientDashboard()},async getTableData(){const i=await this.radiologyService.getPreviousRadiologyExaminations(this.patient),t=i.data,e=i.url,s=["Accession#","Body Part","Order Type","Ordered","Result"],a=[];for(const o in t){const r=[t[o].children[0].accession_number,t[o].value_text,t[o].children[0].value_text,g(t[o].obs_datetime).format("DD/MMM/YYYY"),'<ion-button slot="end" size="large" href="'.concat(e,'" color="success">\n            View\n          </ion-button>')];a.push(r)}return[{label:"",value:"",other:{columns:s,rows:a}}]},getFields(){return[{id:"radiology_results",helpText:"Previous Radiology Examinations",condition:()=>this.previousRadiologyExaminations,type:d.TT_TABLE_VIEWER,options:()=>this.getTableData(),config:{hiddenFooterBtns:["Clear"]}},{id:"radiology",helpText:"Radiology Examination",type:d.TT_RADIOLOGY_PICKER,validation:i=>y.required(i),config:{hiddenFooterBtns:[this.disableBackBtn()]},computedValue:i=>i.map(async t=>({...await this.radiologyService.buildValueCoded("Radiology Orders",t.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(t.other.parent,t.other.concept_id)]}))}]},disableBackBtn(){return this.previousRadiologyExaminations?"":"Back"}}});function E(i,t,e,s,a,o){const r=n("his-standard-form"),l=n("ion-page");return f(),v(l,null,{default:b(()=>[w(r,{cancelDestinationPath:i.cancelDestination,fields:i.fields,onFinishAction:i.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])]),_:1})}const $=_(P,[["render",E]]);export{$ as default};
