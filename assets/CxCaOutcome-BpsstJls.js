import{bK as h,d as _,O as l,bh as t,K as v,a9 as b,aa as g,a6 as w,ab as C,u as D,v as S}from"./index-BmYpiIZN.js";import{H as P}from"./HisStandardForm-BV2ZSIyY.js";import{_ as O}from"./EncounterMixin.vue_vue_type_script_lang-DI6UEYt1.js";import"./encounter_guidelines-DwvuL4-6.js";import"./GuidelineEngine-D6V1_Znr.js";class F extends h{constructor(n,a){super(n,184,a)}}const k=_({mixins:[O],components:{HisStandardForm:P},data:()=>({outcome:{}}),watch:{patient:{async handler(){this.outcome=new F(this.patientID,this.providerID),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(e){if(!await this.outcome.createEncounter())return l("Unable to create encounter");const a=t.getProgramID(),i=await t.getProgramWorkflows(t.getProgramID()),s=e.select_referral_outcome.value,o={};i.forEach(d=>{d.states.forEach(c=>{const p=c.program_workflow_state_id,f=c.concept.concept_names[0].name;o[f]=p})}),console.log(s),console.log(o);const r={location_id:t.getLocationName(),state:o[s],date:t.getSessionDate()};if(!await t.createState(this.patientID,a,r))return l("Unable to update state");const u=e.select_referral_outcome.value,m=[await this.outcome.buildValueCoded("Outcome",u)];await this.outcome.saveObservationList(m),v("Observations and encounter created!"),this.nextTask()},getFields(){return[{id:"select_referral_outcome",helpText:"Referral outcome",type:b.TT_SELECT,validation:e=>g.required(e),options:()=>[{label:"Continue follow-up",value:"Continue follow-up"},{label:"No Dysplasia/Cancer",value:"No Dysplasia/Cancer"},{label:"Palliative Care",value:"Palliative Care"},{label:"Patient died",value:"Patient died"}]}]}}});function y(e,n,a,i,s,o){const r=C("his-standard-form");return D(),S(r,{fields:e.fields,onFinishAction:e.onFinish,skipSummary:!0,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const A=w(k,[["render",y]]);export{A as default};
