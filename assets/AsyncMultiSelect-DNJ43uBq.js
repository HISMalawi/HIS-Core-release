import{d as k,bW as b,a5 as y,$ as C,a6 as x,aY as $,ai as v,cc as w,cf as O,a$ as V,aa as E,af as i,a as o,c as r,w as l,b as n,E as F,J as I,G as g,K as B,a2 as L}from"./index-CMZASHAR.js";import{_ as S}from"./FieldMixin.vue_vue_type_script_lang-Bg-mZnL5.js";import D from"./BaseTextInput-DJ8sG-L8.js";const K=k({components:{ViewPort:b,IonList:y,IonItem:C,IonLabel:x,HisKeyboard:$,HisTextInput:D,IonCheckbox:v},mixins:[S],data:()=>({filter:"",keyboard:w,listOptions:[]}),mounted(){this.init()},activated(){this.init()},watch:{clear(){this.filter="",this.listOptions.forEach(e=>e.isChecked=!1),this.updateValue()}},computed:{displayList(){return this.filter?new O(this.listOptions,{threshold:.4,keys:["label"],useExtendedSearch:!0}).search(this.filter).map(t=>t.item):this.listOptions}},methods:{init(){this.$emit("onFieldActivated",this),this.options(this.fdata).then(e=>this.indexData(e))},updateValue(){this.$nextTick(()=>{this.$emit("onValue",this.listOptions.filter(e=>e.isChecked))})},indexData(e){const t=this.listOptions.map(a=>a.label);e.forEach(a=>{t.includes(a.label)||this.listOptions.push(a)})},onFilter(e){this.filter=e,this.options(this.fdata,this.filter).then(this.indexData)},onSelect(e){this.listOptions.forEach(t=>{t.label===e.label&&(t.isChecked=!t.isChecked)}),this.updateValue()},keypress(e){this.onFilter(V(e,this.filter))}}}),H={class:"his-md-text"};function P(e,t,a,T,A,N){const c=i("his-text-input"),h=i("ion-checkbox"),d=i("ion-label"),u=i("ion-item"),f=i("ion-list"),p=i("his-keyboard"),m=i("view-port");return o(),r(m,{showFull:!1},{default:l(()=>[n(c,{value:e.filter,onOnValue:t[0]||(t[0]=s=>e.onFilter(s))},null,8,["value"]),n(f,{class:"view-port-content"},{default:l(()=>[(o(!0),F(I,null,g(e.displayList,(s,_)=>(o(),r(u,{key:_,onClick:W=>e.onSelect(s),color:s.isChecked?"lightblue":"",lines:s.isChecked?"none":void 0},{default:l(()=>[n(h,{slot:"start",checked:s.isChecked,disabled:s==null?void 0:s.disabled},null,8,["checked","disabled"]),n(d,null,{default:l(()=>[B("span",H,L(s.label),1)]),_:2},1024)]),_:2},1032,["onClick","color","lines"]))),128))]),_:1}),n(p,{kbConfig:e.keyboard,onKeyPress:e.keypress},null,8,["kbConfig","onKeyPress"])]),_:1})}const M=E(K,[["render",P]]);export{M as default};
