System.register(["./index-legacy-B-IGLekl.js","./HisStandardForm-legacy-zrsmj5en.js","./useEncounter-legacy-Bw69ARkZ.js","./commons-legacy-BJFuFpO6.js","./encounter_guidelines-legacy-By_-ThMW.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,i,n,l,o,r,u,s,c,d,E,p,_,v,T,N,S,g,A,m,b,R;return{setters:[e=>{a=e.d,i=e.r,n=e.bQ,l=e.bV,o=e.a9,r=e.bl,u=e.aa,s=e.ev,c=e.es,d=e.bY,E=e.u,p=e.v,_=e.w,v=e.x,T=e.y,N=e.aU,S=e.bA,g=e.et,A=e.a5},e=>{m=e.H},e=>{b=e.u},e=>{R=e.r},null,null],execute:function(){e("default",a({__name:"Reception",setup(e){const t=i([]),a=new n(-1,l.TB_RECEPTION),{goToNextTask:y,patientDashboardUrl:h}=b(((e,i,n)=>{a.patientID=i,a.providerID=e,t.value=[(()=>{let e={};return{id:"treatForIpt",helpText:"Enroll in TPT program?",type:o.TT_SELECT,requireNext:!1,init:async()=>(e=await r.getProgramInformation(i),!0),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}],validation:e=>u.required(e),condition:()=>!e.tb_positive&&n.getAge()>=0&&n.getAge()<s}})(),{id:"catchmentArea",helpText:"Patient living within catchment area?",type:o.TT_SELECT,requireNext:!1,Validation:e=>u.required(e),computedValue:e=>({concept_id:c("LIVES_NEAR"),value_coded:c(`${e.value}`),obs_datetime:a.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}]},{id:"livesNearTB",helpText:"Patient living near a TB registration centre?",type:o.TT_SELECT,requireNext:!1,computedValue:e=>({concept_id:c("TRANSFERRED_OUT_EXTERN"),value_coded:c(`${e.value}`),obs_datetime:a.date}),options:()=>[{value:"YES_ANSWER",label:"Yes"},{value:"NO_ANSWER",label:"No"}],validation:e=>u.required(e),condition:e=>"NO_ANSWER"===e.catchmentArea.value},{id:"locationId",type:o.TT_SELECT,helpText:"Select TB Registration Centre:",computedValue:e=>({concept_id:c("FACILITY_NAME"),value_text:e.label,obs_datetime:a.date}),options:(e,t="")=>d(t),config:{showKeyboard:!0,isFilterDataViaApi:!0},validation:e=>u.required(e),condition:e=>"YES_ANSWER"===e.livesNearTB.value,requireNext:!1}]}));async function I(e,t){if("NO_ANSWER"===e.treatForIpt?.value)return N.push(h.value);await a.createEncounter(),await a.saveObservationList(await R(t));const i=new S(a.patientID);i.setStateDate(a.date);try{await i.enrollProgram()}catch(n){console.warn(`${n}`)}"YES_ANSWER"===e.treatForIpt?.value&&i.setStateId(g.TPT),-1!=i.stateId&&await i.updateState(),y()}return(e,a)=>(E(),p(T(A),null,{default:_((()=>[v(m,{cancelDestinationPath:T(h),onFinishAction:I,fields:t.value,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
