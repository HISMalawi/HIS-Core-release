import{H as D}from"./HisStandardForm-B3aw5EdY.js";import{_}from"./EncounterMixin.vue_vue_type_script_lang-CclnDWfK.js";import{b4 as I,aS as h,d as f,f as R,l as k,j as B,k as F,i as V,m as x,cR as y,ab as $,O as p,_ as b,r as s,o as C,x as L,b as o,w as n,u as c,F as A,I as M,aT as g,aL as N,H,V as z,c as j}from"./index-BFG-WECc.js";import{L as G}from"./LabOrderModal-BkolbhA0.js";import{P as q}from"./patient_radiology_service-3EPc1PBg.js";import K from"./HisRadiologyPicker-DFrxJBX5.js";import{F as d}from"./dynamic-import-helper-Bsjrd6Ro.js";import"./TouchScreenForm-DiI3Xfhg.js";import"./ToolbarMediumCard-C3iotOe-.js";import"./Transformers-BPPLlH12.js";import"./ViewPort-0kHLdkku.js";import"./encounter_guidelines-BKDCL1GI.js";import"./GuidelineEngine-D6V1_Znr.js";import"./lab_order_service-CUQkVcgC.js";import"./HisKbConfigurations-GhFQZvlg.js";import"./KbLayouts-VRA-vjeH.js";import"./HisKeyboard-CNCznGxV.js";import"./BaseKeyboard-C1F0dD78.js";import"./KbHandler-BuQ4TFU6.js";import"./fuse-YdZE3OCN.js";import"./SelectMixin-BJwlVo7W.js";import"./BaseTextInput-pvpSJicN.js";import"./FieldMixin.vue_vue_type_script_lang-CntTGep4.js";import"./patient_radiology_service-DCIz_G6I.js";class m extends I{constructor(t,i){super(t,122,i)}static async getComplaintsList(t,i=""){return h.getConceptSet(t,i)}async fetchLatestTriageEncounter(){return await m.getObs({concept_id:h.getConceptID("History of COVID-19 contact"),start_date:this.date,end_date:this.date,person_id:this.patientID})}}const U=f({name:"Modal",components:{IonButton:R,IonContent:k,IonHeader:B,IonTitle:F,IonToolbar:V,IonFooter:x,HisRadiologyPicker:K},mixins:[_],data:()=>({radiologyService:{},isPacsEnabled:!1,emitedSelectedOptions:{}}),watch:{ready:{async handler(e){e&&(this.radiologyService=new q(this.patientID,this.providerID),this.isPacsEnabled=await y.isPACsEnabled())},immediate:!0,deep:!0}},methods:{async onValue(e){this.emitedSelectedOptions=e},async getSelected(){return this.emitedSelectedOptions.map(async e=>({...await this.radiologyService.buildValueCoded("Radiology Orders",e.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]}))},async onSubmit(){if(!$.isEmpty(this.emitedSelectedOptions)){this.closeModal();let e=await this.getSelected();e=await Promise.all(e),await this.radiologyService.createEncounter();const t=await this.radiologyService.obsObj(e),i=await this.radiologyService.saveObservationList(t);if(await this.radiologyService.printOrders(i,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(i,this.patient)}catch(a){console.log(a)}}},async closeModal(){await p.dismiss([])}}});function W(e,t,i,a,S,v){const l=s("ion-title"),r=s("ion-toolbar"),w=s("ion-header"),O=s("his-radiology-picker"),P=s("ion-content"),u=s("ion-button"),T=s("ion-footer");return C(),L(A,null,[o(w,null,{default:n(()=>[o(r,null,{default:n(()=>[o(l,{class:"his-lg-text"},{default:n(()=>[c("Radiology Examination")]),_:1})]),_:1})]),_:1}),o(P,{style:{overflow:"hidden",background:"grey",height:"70vh"}},{default:n(()=>[o(O,{onOnValue:e.onValue},null,8,["onOnValue"])]),_:1}),o(T,null,{default:n(()=>[o(r,null,{default:n(()=>[o(u,{onClick:t[0]||(t[0]=E=>e.onSubmit()),size:"large",slot:"end",disabled:e.emitedSelectedOptions.length===0},{default:n(()=>[c(" Place orders ")]),_:1},8,["disabled"]),o(u,{onClick:t[1]||(t[1]=E=>e.closeModal()),size:"large",slot:"start",color:"danger"},{default:n(()=>[c(" Close ")]),_:1})]),_:1})]),_:1})],64)}const Y=b(U,[["render",W]]),J=f({components:{HisStandardForm:D,IonPage:M},mixins:[_],data:()=>({complaintsService:{},todaysDate:g.getSessionDate(),presentingComplaints:"",isPacsEnabled:!1,radiologyBtnName:"Radiology Order",hasTriageComplaints:!1}),watch:{ready:{async handler(e){e&&(this.complaintsService=new m(this.patientID,this.providerID),this.isPacsEnabled=await y.isPACsEnabled(),this.hasTriageComplaints=await this.getTriagePresentingComplaints(),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const i=await Promise.all(t.complaints);await this.complaintsService.createEncounter(),await this.complaintsService.saveObservationList(i),this.nextTask()},async launchOrderSelection(){const e=await p.create({component:G,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async launchRadiologyOrderSelection(){const e=await p.create({component:Y,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async getTriagePresentingComplaints(){if(!((await this.complaintsService.fetchLatestTriageEncounter()).length>0))return!1;const i=(await N.getEncounters(this.patientID,this.todaysDate)).filter(function(a){return a.type.name=="TRIAGE PRESENTING COMPLAINTS"&&H.toStandardHisFormat(a.encounter_datetime)==g.getSessionDate()});return i.length>0?(this.presentingComplaints=i[0].observations,!0):!1},buildResults(){const e=["Group","Presenting complaints"];let t="",i=this.presentingComplaints.map(a=>{if(a.obs_group_id!=null)return[t,a.value_text];t=a.value_text});return i=i.filter(a=>a!=null),this.presentingComplaints=i,[{label:"",value:"",other:{columns:e,rows:i}}]},getFields(){return[{id:"triage_complaints",helpText:"Triaging Complaints",condition:()=>this.hasTriageComplaints,type:d.TT_TABLE_VIEWER,options:()=>this.buildResults(),config:{hiddenFooterBtns:["Clear"]}},{id:"complaints",helpText:"Presenting Complaints",type:d.TT_COMPLAINTS_PICKER,validation:e=>z.required(e),computedValue:e=>e.map(async t=>({...await this.complaintsService.buildValueCoded("Presenting complaint",t.other.parent),child:[await this.complaintsService.buildValueCodedFromConceptId(t.other.parent,t.other.concept_id)]})),config:{hiddenFooterBtns:[this.showRadiologyOdersBtn(),this.disableBackBtn()],footerBtns:[{name:"Lab Order",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchOrderSelection(),visibleOnStateChange:e=>e.index===1},{name:this.radiologyBtnName,size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchRadiologyOrderSelection(),visibleOnStateChange:e=>e.index===1}]}},{id:"all_presenting_complaints",helpText:"Summary",condition:()=>this.presentingComplaints.length>0,type:d.TT_SUMMARY,options:e=>this.buildSummaryResults(e),config:{hiddenFooterBtns:["Clear"]}}]},showRadiologyOdersBtn(){return this.isPacsEnabled?"":this.radiologyBtnName},buildSummaryResults(e){const t=e.complaints.map(a=>({label:"OPD Complaints",value:a.label})),i=this.presentingComplaints.map(a=>({label:"Triaging Complaints",value:a[1]}));return t.concat(i)},disableBackBtn(){return this.hasTriageComplaints?"":"Back"}}});function Q(e,t,i,a,S,v){const l=s("his-standard-form"),r=s("ion-page");return C(),j(r,null,{default:n(()=>[o(l,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit,skipSummary:!0},null,8,["cancelDestinationPath","fields","onFinishAction"])]),_:1})}const ve=b(J,[["render",Q]]);export{ve as default};
