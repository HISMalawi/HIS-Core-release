import{d as C,a5 as S,cX as M,r as p,t as N,aI as B,as as D,af as $,Q as x,aK as j,aj as E,cK as I,a8 as O,ad as w,u as k,v as X,w as G,x as h}from"./index-DrPQ21-i.js";import{T as L}from"./tb_report_service-C8USayzQ.js";import{v as U}from"./TableView-DYQq8HZp.js";import{A as q}from"./v2utils-B87E9iaX.js";import"./Export-CWTuI3QV.js";const K=C({components:{IonPage:S,IonLoading:M,v2Datatable:U},setup(){const e=p([]),g=p(""),d=p(!1),i=new L,F=p(void 0),P=p(void 0),t=(u,l)=>({ref:l,label:u,toValue:o=>o.length,tdClick:async o=>{o.refData.length&&(await D.create({component:q,backdropDismiss:!1,cssClass:"large-modal",componentProps:{subtitle:g,patientIdentifiers:o.refData,title:"".concat(o.data.ageGroup," ").concat(o.data.gender," ").concat(o.column.label),onFinish:()=>D.getTop().then(n=>n&&D.dismiss())}})).present()}}),m=[[{label:"#",ref:"index"},{label:"Age group",ref:"ageGroup"},{label:"Gender",ref:"gender"},t("TX_CURR","tx_curr"),t("Symptom Screen (alone)","symptom_screen_alone"),t("CXR screen","cxr_screen"),t("mWRD screen","mwrd_screen"),t("New on ART/Screen Positive","sceen_pos_new"),t("New on ART/Screen Negative","sceen_neg_new"),t("Already on ART/Screen Positive","sceen_pos_prev"),t("Already on ART/Screen Negative","sceen_neg_prev"),t("TB RX_New on ART","started_tb_new"),t("TB RX_Prev on ART","started_tb_prev")]],_=async()=>v(await $("Do you want to rebuild report?")),v=async(u=!1)=>{if(!(F.value&&P.value))return x("Start date and end date required!");d.value=!0,e.value=[];try{const l=await i.getTxTbReport(u,"pepfar"),o={F:"Female",M:"Male"},n=Object.keys(l).reduce((a,s)=>{if(s==="Unknown")return a;const c=l[s];return Object.keys(c).forEach(r=>{a[r].rows.push({ageGroup:s,gender:o[r],...c[r]}),a[r].aggregate=Object.keys(c[r]).reduce((b,f)=>Array.isArray(c[r][f])?{...b,[f]:[...b[f]||[],...c[r][f]]}:b,a[r].aggregate)}),a},{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}});e.value=[...n.F.rows,...n.M.rows,{ageGroup:"All",gender:"Male",...n.M.aggregate}];const A=Object.values(n.F.aggregate).reduce((a,s)=>a.concat(s),[]),R=await i.getMaternalStatus(j.uniq(A)),y=R.FBf.concat(R.FP);["FP","FNP","FBf"].forEach(a=>{e.value.push(Object.keys(n.F.aggregate).reduce((s,c)=>({...s,[c]:n.F.aggregate[c].filter(r=>a==="FNP"?!y.includes(r):R[a].includes(r))}),{ageGroup:"All",gender:a}))}),e.value=e.value.map((a,s)=>({index:s+1,...a}))}catch(l){console.error(l),E("Unable to generate report!")}d.value=!1},T=()=>I({onFinish:(u,l,o,n)=>{g.value="Period: ".concat(o),i.startDate=u,i.endDate=l,n&&i.setOccupation(n),v()}});return N(()=>T()),{Img:B,reportData:e,isLoading:d,onRefreshReport:_,configure:T,generate:v,columns:m,period:g}}});function V(e,g,d,i,F,P){const t=w("ion-loading"),m=w("v2Datatable"),_=w("ion-page");return k(),X(_,null,{default:G(()=>[h(t,{"is-open":e.isLoading,message:"Please wait..."},null,8,["is-open"]),h(m,{title:"Tx TB Report","icon-url":e.Img("login-logos/PEPFAR.png"),subtitle:e.period,columns:e.columns,columnData:e.reportData,rowsPerPage:100,onConfigure:e.configure,onRefresh:e.onRefreshReport,"report-prefix":"Pepfar"},null,8,["icon-url","subtitle","columns","columnData","onConfigure","onRefresh"])]),_:1})}const Y=O(K,[["render",V]]);export{Y as default};
