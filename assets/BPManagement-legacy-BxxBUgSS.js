System.register(["./index-legacy-pSEoxn3J.js","./EncounterMixin.vue_vue_type_script_lang-legacy-B-rKFJn9.js","./RiskFactorModal-legacy-ChYmG0xo.js","./htn_service-legacy-BHHlPdCx.js","./vitals_service-legacy-CGZ52zc6.js","./encounter_guidelines-legacy-mYSO8ZN5.js","./GuidelineEngine-legacy-KsvQuFdF.js","./HisStandardForm-legacy-CGi-zolz.js"],(function(t,e){"use strict";var a,n,s,i,o,r,l,c,u,h,d,p,g,f,m,y,b,k,T,w,D,I,_,v,C,P,H,F,B,N,A,R,x,S,V,O,E,$,j,U,Y,z,G,L,M,q,J,K,Q,W,X;return{setters:[t=>{a=t.d,n=t.aA,s=t.ah,i=t.a7,o=t.m,r=t.k,l=t.ad,c=t.dA,u=t.du,h=t.i,d=t.ac,p=t.b6,g=t.I,f=t.a4,m=t.l,y=t.a5,b=t.ay,k=t.at,T=t.q,w=t.dB,D=t.bi,I=t.p,_=t.an,v=t.ao,C=t.a$,P=t.z,H=t.a_,F=t.H,B=t.bn,N=t.bo,A=t.be,R=t.U,x=t.bs,S=t.S,V=t.am,O=t.a,E=t.w,$=t.ar,j=t.b,U=t.e,Y=t.g,z=t.h,G=t.a6,L=t.t,M=t.j,q=t.a9,J=t.aa},t=>{K=t._},t=>{Q=t.R},t=>{W=t.B},t=>{X=t.V},null,null,null],execute:function(){const e={background:"#444444"},Z=a({mixins:[K],components:{IonCheckbox:k,DataTable:b,IonTitle:y,IonToolbar:m,IonHeader:f,IonContent:g,IonGrid:p,IonRow:d,IonButton:h,IonRadioGroup:u,IonRadio:c,IonCol:l,IonFooter:r,IonPage:o,IonItem:i,IonLabel:s},data:()=>({htn:{},hasARVNumber:!0,suggestedNumber:"",columns:[[n.thTxt("Date",{style:e}),n.thTxt("Systolic",{style:e}),n.thTxt("Diastolic",{style:e}),n.thTxt("BP Drugs",{style:e}),n.thTxt("Action / Note",{style:e})]],bpGradeColorMap:{"N/A":"#ffffff",normal:"#ffffff","grade 1":"#FFC3CE","grade 2":"#F20056","grade 3":"#FF3333"},rows:[],riskFactors:[],action:null,trail:[],date:null,patientOnBPDrugs:!1,patientFirstVisit:!1,normatensive:!1,patientHasHyperTensionObs:!1,currentDrugs:[],items:[],isEnrolledInHTN:!1,isAliveOnHTN:!1,HTNProgramID:20,aliveState:160,refer:!1,onBpDrugActions:[],noneBpActions:[]}),watch:{ready:{async handler(t){if(!t)return;const e=await x.create({message:"Please wait...",backdropDismiss:!1});await e.present(),this.htn=new W(this.patientID,this.providerID),this.trail=await this.htn.getBPTrail(),this.rows=this.formatBpTrailRows(this.trail),this.normatensive=W.isBpNormotensive(this.trail),this.riskFactors=await this.getRiskFactors(),this.date=F.toStandardHisDisplayFormat(S.getSessionDate()),await this.isTransfered(),await this.hasHyperTenstion(),await this.getTreatmentStatus(),await this.getProgramStatus(),x.dismiss(),this.patientFirstVisit&&this.patientOnBPDrugs&&await this.alertTransferIn(),this.setBpActions()},immediate:!0}},computed:{totalRiskFactors(){return this.riskFactors.filter((t=>"Yes"===t.value)).length},showClinicianButton:()=>!(R.isClinician()&&R.isDoctor())},methods:{setBpActions(){this.onBpDrugActions=[{label:"Continue drugs",value:"on treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_adherence/${this.patientID}`)}},{label:"Medication not available",value:"on treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_adherence/${this.patientID}`)}},{label:"Review drugs",value:"on treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_adherence/${this.patientID}?review=true`)}}],this.noneBpActions=[{label:"Lifestyle advice given",value:"Lifestyle changes only",isChecked:!1},{label:"Patient declining BP drugs ",value:"Symptomatic but not in treatment",isChecked:!1},...(()=>this.normatensive?[{label:"Return to annual screening",value:"Alive"}]:[])(),{label:"Start anti hypertensives",value:"On treatment",other:{action:()=>this.$router.push(`/art/encounters/bp_prescription/${this.patientID}`)}}]},async onFinish(){if(this.noneBpActions.some((t=>t.isChecked))||this.action||this.refer){if(!(await this.htn.createEncounter()))return T("Unable to create encounter");if(this.refer){if(!(await this.htn.saveValueCodedObs("Refer patient to clinician","Yes")))return T("Unable to create Obs");this.gotoPatientDashboard()}else{if(this.currentDrugs.length){await this.htn.saveValueTextObs("Plan",this.action.label);const t={state:this.action.value};await this.htn.enrollPatient(t)}else{const t=this.noneBpActions.filter((t=>t.isChecked));if(t.length){const e=t.map((t=>this.htn.saveValueTextObs("Plan",t.label)));await Promise.all(e)}}const t=this.noneBpActions.filter((t=>t.isChecked&&"function"==typeof t.other?.action));if(t.length)return t.forEach((t=>t.other.action()));if("function"==typeof this.action?.other?.action)return this.action.other.action();this.nextTask()}}else T("Please select an action")},referPatient(){this.refer=!0,this.onFinish()},goToDiagnosis(){return this.$router.push({path:`/art/encounters/hypertension_diagnosis/${this.patientID}`})},async hasHyperTenstion(){const t=await N.getFirstValueCoded(this.patientID,"Patient has hypertension");this.patientHasHyperTensionObs=!!`${t}`.match(/yes|no/i)},async isTransfered(){const t=await N.getFirstValueCoded(this.patientID,"Transferred");this.patientFirstVisit=!t},async getTreatmentStatus(){const t=await N.getFirstValueText(this.patientID,"Treatment status");this.patientOnBPDrugs=!(!t||!t.match(/BP Drugs started/i))},async getProgramStatus(){const t=await A.getPatientPrograms(this.patientID);this.isEnrolledInHTN=t.filter((t=>"HYPERTENSION PROGRAM"===t.program.name)).length>0,this.isEnrolledInHTN&&await this.programState()},async programState(){const t=await A.getPatientStates(this.patientID,this.HTNProgramID);this.isAliveOnHTN=t.filter((t=>"Alive"===t.name)).length>0},async getRiskFactors(){const t=B.getConceptsByCategory("risk factors").map((async t=>{const e=await N.getFirstValueCoded(this.patientID,t.name);return{concept:t.name,value:e}}));return Promise.all(t)},formatBpTrailRows(t){return Object.keys(t).map((e=>{const a=F.toStandardHisDisplayFormat(e);this.currentDrugs=this.currentDrugs.concat(t[e].drugs);const s={background:(()=>{const a=W.getBpGrade(parseInt(t[e].sbp),parseInt(t[e].dbp));return this.bpGradeColorMap[a]})()};return[n.tdDate(a,{style:s}),n.td(t[e].sbp,{style:s}),n.td(t[e].dbp,{style:s}),n.td(t[e].drugs.join(", "),{style:s}),n.td(t[e].note,{style:s})]}))},async showRiskFactors(){const t=await P.create({component:Q,backdropDismiss:!1,cssClass:"large-modal",componentProps:{factors:this.riskFactors}});t.present();const{data:e}=await t.onDidDismiss();H.isEmpty(e)||(this.riskFactors=e.map((t=>{const e=!0===t.isChecked?"Yes":"No";return{concept:t.concept,value:e}})))},async alertTransferIn(){"Yes"===await C("Transfer in","Does the patient want to transfer in for HTN management?","",[{name:"Yes",slot:"end",color:"success"},{name:"No",slot:"start",color:"danger"}])?(await this.enrollInHTN(),await this.setHtnTransferred("Yes"),this.patientFirstVisit=!1,this.setBpActions()):(await this.setHtnTransferred("No"),this.nextTask())},async enrollInHTN(){w({id:"enrollment_date",helpText:"HTN Enrollment date",type:v.TT_FULL_DATE,validation:t=>_.required(t)},(async t=>{try{const e=new D(this.patientID);e.setProgramId(this.HTNProgramID),e.setProgramDate(`${t.value}`),e.setStateDate(`${t.value}`),e.setStateId(this.aliveState),await e.enrollProgram(),await e.updateState(),this.isEnrolledInHTN=!0,I("Patient is now enrolled in HTN")}catch(e){console.error(e),T(`${e}`)}}))},async setHtnTransferred(t){const e=new X(this.patientID,this.providerID);await e.createEncounter()?await e.saveValueCodedObs("Transferred",t)||T("Unable to create observation Transferred for patient"):T("Unable to create patient transfer encounter")}}}),tt={key:0,style:{color:"green"}},et={slot:"end"},at=Y("h1",{style:{"text-align":"center"}},"Actions",-1),nt=Y("h1",{style:{"text-align":"center"}},"Actions",-1);t("default",V(Z,[["render",function(t,e,a,n,s,i){const o=$("ion-title"),r=$("ion-button"),l=$("ion-toolbar"),c=$("ion-header"),u=$("data-table"),h=$("ion-content"),d=$("ion-radio"),p=$("ion-label"),g=$("ion-item"),f=$("ion-col"),m=$("ion-row"),y=$("ion-grid"),b=$("ion-radio-group"),k=$("ion-checkbox"),T=$("ion-footer"),w=$("ion-page");return j(),O(w,null,{default:E((()=>[U(c,null,{default:E((()=>[U(l,null,{default:E((()=>[U(o,null,{default:E((()=>[Y("span",null,"BP management screening on "+L(t.date),1),t.patientOnBPDrugs?(j(),z("small",tt," (Patient already on BP drugs)")):G("",!0)])),_:1}),Y("span",et,[t.totalRiskFactors>0?(j(),O(r,{key:0,color:"danger",onClick:t.showRiskFactors},{default:E((()=>[M("View/Edit risk factors "+L(t.totalRiskFactors),1)])),_:1},8,["onClick"])):G("",!0),0===t.totalRiskFactors?(j(),O(r,{key:1,onClick:t.showRiskFactors},{default:E((()=>[M("add riskfactors")])),_:1},8,["onClick"])):G("",!0)])])),_:1})])),_:1}),U(h,null,{default:E((()=>[U(u,{config:{showIndex:!1},columns:t.columns,rows:t.rows},null,8,["columns","rows"])])),_:1}),U(T,null,{default:E((()=>[t.currentDrugs.length?(j(),O(l,{key:0},{default:E((()=>[at,U(b,{modelValue:t.action,"onUpdate:modelValue":e[0]||(e[0]=e=>t.action=e)},{default:E((()=>[U(y,null,{default:E((()=>[U(m,null,{default:E((()=>[(j(!0),z(q,null,J(t.onBpDrugActions,((t,e)=>(j(),O(f,{key:e},{default:E((()=>[U(g,{lines:"none"},{default:E((()=>[U(d,{style:{"margin-right":"10px"},value:t},null,8,["value"]),U(p,{style:{"font-size":"1.0rem","font-weight":"bold"}},{default:E((()=>[M(L(t.label),1)])),_:2},1024)])),_:2},1024)])),_:2},1024)))),128))])),_:1})])),_:1})])),_:1},8,["modelValue"])])),_:1})):(j(),O(l,{key:1},{default:E((()=>[U(y,null,{default:E((()=>[U(m,null,{default:E((()=>[U(f,null,{default:E((()=>[nt])),_:1})])),_:1}),U(m,null,{default:E((()=>[(j(!0),z(q,null,J(t.noneBpActions,((t,e)=>(j(),O(f,{key:e},{default:E((()=>[U(g,{lines:"none"},{default:E((()=>[U(k,{style:{"margin-right":"10px"},modelValue:t.isChecked,"onUpdate:modelValue":e=>t.isChecked=e},null,8,["modelValue","onUpdate:modelValue"]),U(p,null,{default:E((()=>[M(L(t.label),1)])),_:2},1024)])),_:2},1024)])),_:2},1024)))),128))])),_:1})])),_:1})])),_:1})),U(l,{color:"dark"},{default:E((()=>[U(r,{size:"large",color:"danger",slot:"start",onClick:t.gotoPatientDashboard},{default:E((()=>[M(" cancel ")])),_:1},8,["onClick"]),t.showClinicianButton?(j(),O(r,{key:0,size:"large",color:"danger",slot:"start",onClick:t.referPatient},{default:E((()=>[M(" Refer to clinician ")])),_:1},8,["onClick"])):G("",!0),t.patientHasHyperTensionObs?G("",!0):(j(),O(r,{key:1,size:"large",slot:"end",onClick:t.goToDiagnosis},{default:E((()=>[M(" Hypertension Diagnosis ")])),_:1},8,["onClick"])),t.patientHasHyperTensionObs&&!t.isEnrolledInHTN?(j(),O(r,{key:2,size:"large",slot:"end",onClick:t.enrollInHTN},{default:E((()=>[M(" Enroll in HTN ")])),_:1},8,["onClick"])):G("",!0),t.patientHasHyperTensionObs?(j(),O(r,{key:3,size:"large",color:"success",slot:"end",onClick:t.onFinish},{default:E((()=>[M(" Finish ")])),_:1},8,["onClick"])):G("",!0)])),_:1})])),_:1})])),_:1})}]]))}}}));
