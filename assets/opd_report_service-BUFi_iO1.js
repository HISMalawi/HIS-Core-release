var _=Object.defineProperty;var f=(g,n,t)=>n in g?_(g,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):g[n]=t;var c=(g,n,t)=>f(g,typeof n!="symbol"?n+"":n,t);import{aj as i,cb as S,d3 as m,aJ as $,M as R,ag as u}from"./index-DYyilVc9.js";const A={one:"AL 1",two:"AL 2",three:"AL 3",four:"LA 4"},I=["Diabetes","Hypertension","Stroke","Suspected cancer","Confirmed cancer","Palliative cancer","Asthma","Depression","Acute psychosis","Chronic psychosis","Epilepsy"],P=["Organic mental disorder (Chronic)","Organic mental disorder (acute)","Alcohol use mental disorder","Drug use mental disorder","Schizophrenia","Acute and transient psychotic disorder","Schizo-affective disorder","Mood-affective disorder (MANIC)","Mood-affective disorder (BIPOLAR)","Mood-affective disorder (DEPRESSION)","Anxiety disorder","Stress reaction adjustment disorder","Dissociative conversion disorder","Somatoform disorder","Puerperal mental disorder","Personality/Behaviour disorder","Mental retardation","Psychological mental disorder","Hyperkinetic conduct disorder","Epilepsy"],b={total:"Total Clients",prev_pos_not_on_art:"Pre Pos not on ART",prev_pos_on_art:"Pre Pos on ART",new_neg:"New Neg",new_pos:"New Pos",not_done:"Not Done",screened:"Screened for TB",not_screened:"Not Screened for TB"};class F extends i{constructor(){super();c(this,"programID");c(this,"startDate");c(this,"endDate");c(this,"date");c(this,"epiweek");this.endDate="",this.startDate="",this.epiweek="",this.date=i.getSessionDate(),this.programID=i.getProgramID()}async getDisaggReport(){const t=await this.getReport("programs/".concat(this.programID,"/reports/opd_disaggregated")),e=this.aggregateDisagReportData(t.data);return[...e.F.rows,...e.M.rows,{ageGroup:"All",gender:"Male",...e.M.aggregate},...await this.buildMaternityAgreggateRows(e.F.aggregate,t.aggregated)]}aggregateDisagReportData(t){return Object.entries(t).reduce((e,[r,a])=>(r!=="Unknown"&&Object.entries(a).forEach(([o,s])=>{e[o].rows.push({ageGroup:r,gender:S(o),...s}),Object.entries(s).forEach(([d,p])=>{var h;e[o].aggregate[d]=[...(h=e[o].aggregate[d])!=null?h:[],...p]})}),e),{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}})}async getMaternalStatus(t,e="pepfar"){const r=m.parameterizeObjToString(this.buildRequest({report_definition:e}));return i.postJson("vl_maternal_status?".concat(r),{patient_ids:t})}async buildMaternityAgreggateRows(t,e,r="pepfar"){const a=Object.keys(t);let o=[],s={FBf:[],FP:[]};if(e)s.FBf=e.bf,s.FP=e.p;else{const d=$.uniq(Object.values(t).flat(1).map(p=>p instanceof Object?p.patient_id:p));s=await this.getMaternalStatus(d,r)}return o=s.FBf.concat(s.FP),["FP","FNP","FBf"].map(d=>a.reduce((p,h)=>({[h]:t[h].filter(l=>{const D=l instanceof Object?l.patient_id:l;return d==="FNP"?!o.includes(D):s[d].includes(D)}),...p}),{ageGroup:"All",gender:d}))}getMentalHealth(){return this.getReport("programs/".concat(this.programID,"/reports/mental_health"))}getCasesSeen(){return this.getReport("programs/".concat(this.programID,"/reports/cases_seen"))}getPatientsWithNIDs(){return this.getReport("with_nids")}getClinicRegistrations(){return this.getReport("registration")}getAttendance(){return this.getReport("programs/".concat(this.programID,"/reports/attendance"))}getDrugs(){const t="programs/".concat(this.programID,"/reports/drug");return i.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}getDiagnosis(){const t="programs/".concat(this.programID,"/reports/diagnosis");return i.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}getDiagnosisByAddress(){return this.getReport("diagnosis_by_address")}getLaPrescriptions(){const t="programs/".concat(this.programID,"/reports/la_prescriptions");return i.getJson(t,{start_date:this.startDate,end_date:this.endDate})}getMalariaReport(){const t="programs/".concat(this.programID,"/reports/malaria_report");return i.getJson(t,{start_date:this.startDate,end_date:this.endDate,date:this.date})}printLaReport(t){const e=new R,r="programs/".concat(this.programID,"/barcodes/la_report"),a={"date[start]":this.startDate,"date[end]":this.endDate};return Object.keys(A).forEach((o,s)=>{s++,a["".concat(s,"[prescription]")]=t["total_la_".concat(o,"_prescribed_drugs")],a["".concat(s,"[dispensed]")]=t["total_la_".concat(o,"_dispensed_drugs")]}),e.printLbl("".concat(r,"?").concat(m.parameterizeObjToString(a)))}getDateIntervalPeriod(){return"".concat(u.toStandardHisDisplayFormat(this.startDate)," - ").concat(u.toStandardHisDisplayFormat(this.endDate))}setStartDate(t){this.startDate=t}setEndDate(t){this.endDate=t}setEpiWeek(t){this.epiweek=t}getReportPeriod(){return this.startDate&&this.endDate?"".concat(u.toStandardHisDisplayFormat(this.startDate)," - ").concat(u.toStandardHisDisplayFormat(this.endDate)):"-"}getReport(t,e={}){return i.getJson(t,this.buildRequest(e))}buildRequest(t={}){const e={date:this.date,program_id:this.programID};return this.startDate&&this.endDate&&(e.start_date=this.startDate,e.end_date=this.endDate),this.epiweek&&(e.epiweek=this.epiweek),{...e,...t}}static getReportQuarters(t=4){const e=[];let r=u.getCurrentYear();for(let a=0;a<t;++a)e.push({name:"Q4 ".concat(r),start:"".concat(r,"-10-01"),end:"".concat(r,"-12-31")}),e.push({name:"Q3 ".concat(r),start:"".concat(r,"-07-01"),end:"".concat(r,"-09-30")}),e.push({name:"Q2 ".concat(r),start:"".concat(r,"-04-01"),end:"".concat(r,"-06-30")}),e.push({name:"Q1 ".concat(r),start:"".concat(r,"-01-01"),end:"".concat(r,"-03-31")}),--r;return e}}export{b as D,A as L,P as M,I as N,F as O};
