import{d as h,r as l,aA as s,o as C,bs as H,a as b,w as o,e as a,f as i,l as x,ar as v,g as u,a4 as g,ay as A,I,m as N,as as P,H as T,b as k,cz as D,am as L}from"./index-qFt4YszW.js";import{A as c}from"./anc_global_props-Dev9noBy.js";const R=["innerHTML"],B={class:"report-content"},M=h({__name:"AllPreferences",setup(V){const p=P(),r={style:{wordWrap:"break-word",maxWidth:"130px"}},m=[{name:"finish",color:"success",slot:"end",visible:!0,size:"large",onClick:()=>p.push("/")}],_=l("Systems settings"),d=l([]),f=l([[s.thTxt("Property"),s.thTxt("Value",r)]]);async function y(){const t=await c.clinicHolidays();return t&&t.split(",").map(e=>T.toStandardHisDisplayFormat(e)).join(", ")}async function w(){const t=await c.clinicDays(),e=await y(),n=await c.appointmentLimit();return[[s.td("Appointment limit"),s.td(n||"Not set")],[s.td("Clinic days"),s.td(t||"Not set")],[s.td("Clinic holidays"),s.td(e||"Not set",r)]]}return C(async()=>{const t=await H.create({});t.present(),d.value=await w(),t.dismiss()}),(t,e)=>{const n=v("ion-title");return k(),b(i(N),null,{default:o(()=>[a(i(g),null,{default:o(()=>[a(i(x),null,{default:o(()=>[a(n,null,{default:o(()=>[u("span",{innerHTML:_.value},null,8,R)]),_:1})]),_:1})]),_:1}),a(i(I),null,{default:o(()=>[u("div",B,[a(A,{rows:d.value,columns:f.value},null,8,["rows","columns"])])]),_:1}),a(D,{btns:m,color:"dark"})]),_:1})}}}),F=L(M,[["__scopeId","data-v-c97510c2"]]);export{F as default};
