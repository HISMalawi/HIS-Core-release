const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/MinimalToolbar-Deh-bHhG.js","assets/index-CyYd6aWW.js","assets/index-BX9kniTb.css"])))=>i.map(i=>d[i]);
import{d as V,aW as dt,_ as W,$ as G,a4 as K,R as q,a3 as Z,Q as J,S as ut,aN as D,a7 as It,aK as ct,aq as Q,O as H,ad as kt,a6 as S,ab as a,u as l,B as b,x as i,w as o,z as h,Z as _,E as P,C as A,v as f,aX as pt,a0 as X,U as it,W as Y,ah as mt,G as g,H as y,aY as Dt,a1 as ht,aZ as ft,a_ as ot,a$ as $t,b0 as gt,b1 as nt,r as bt,t as wt,b2 as Et,b3 as Pt,b4 as Tt,a5 as Lt,b5 as At,aJ as Ot,b6 as Vt,b7 as U,b8 as St,b9 as Nt,ba as zt,bb as Mt,bc as Bt,bd as Ht,be as qt,bf as Ut,bg as jt,bh as Rt,bi as Ft,bj as Wt,bk as Gt,bl as N,bm as j,as as B,bn as z,az as tt,bo as Kt,ag as R,bp as F,bq as Zt,aA as et,af as Jt,br as Qt,bs as Xt,bt as Yt,bu as xt,bv as te,bw as ee,K as ne,bx as ie,by as oe,bz as se,bA as ae,bB as re,I as rt}from"./index-CyYd6aWW.js";import{D as le}from"./drug_order_service-CQs150n6.js";import{T as de}from"./TaskCard-TbrWmzlY.js";import{p as ue}from"./VoidReason-TwM_wftO.js";import ce from"./DashboardAppIcon-CpYTPPG8.js";const pe=V({components:{IonGrid:dt,IonRow:W,IonCol:G,TaskCard:de,IonFooter:K,IonToolbar:q,IonButton:Z,IonHeader:J,IonTitle:ut},props:{title:{type:String,default:"Select Activity"},items:{type:Object,required:!0},taskParams:{type:Object,required:!1}},data:()=>({filteredItems:[]}),watch:{items:{async handler(t){if(!(!t||D.isEmpty(t)))for(const e in t){const n=t[e];n.globalProperty&&!await It.isProp(n.globalProperty)||n.condition&&!await n.condition(this.taskParams)||this.filteredItems.push(n)}},deep:!0,immediate:!0}},methods:{img(t){return ct(t)},isDisabled(t){return typeof t=="function"?t(this.taskParams):!1},closeModal(){Q.dismiss({})},async doTask(t){var e,n;if(this.isDisabled(t.disabled))return H("This task is disabled");typeof t.taskCompleted=="boolean"&&(t!=null&&t.taskCompleted)&&!await kt("This task was already completed. Do you want to continue?")||(t.action?t.action(this.taskParams,this.$router):t.url?this.$router.push({path:t.url}):t.patientUrl?this.$router.push("".concat(t.patientUrl,"/").concat((e=this.taskParams)==null?void 0:e.patientID)):this.$router.push({name:t.id,params:{patient_id:(n=this.taskParams)==null?void 0:n.patientID}}),this.closeModal())}}});function me(t,e,n,s,m,k){const p=a("ion-title"),r=a("ion-toolbar"),d=a("ion-header"),v=a("task-card"),$=a("ion-col"),I=a("ion-row"),u=a("ion-grid"),w=a("ion-button"),E=a("ion-footer");return l(),b(P,null,[i(d,null,{default:o(()=>[i(r,null,{default:o(()=>[i(p,null,{default:o(()=>[h(_(t.title),1)]),_:1})]),_:1})]),_:1}),i(u,{class:"selector"},{default:o(()=>[i(I,null,{default:o(()=>[(l(!0),b(P,null,A(t.filteredItems,(C,T)=>(l(),f($,{"size-lg":"4","size-sm":"6",key:T},{default:o(()=>[i(v,{onClick:L=>t.doTask(C),title:C.name.toUpperCase(),description:C.description,taskCompleted:C.taskCompleted,taskDisabled:t.isDisabled(C.disabled),icon:t.img(C.icon)},null,8,["onClick","title","description","taskCompleted","taskDisabled","icon"])]),_:2},1024))),128))]),_:1})]),_:1}),i(E,null,{default:o(()=>[i(r,null,{default:o(()=>[i(w,{class:"close-btn",color:"danger",size:"large",onClick:t.closeModal,slot:"end"},{default:o(()=>e[0]||(e[0]=[h(" Close ")])),_:1},8,["onClick"])]),_:1})]),_:1})],64)}const lt=S(pe,[["render",me],["__scopeId","data-v-e1afb1d9"]]),he=V({components:{HisBasicTable:pt,IonButton:Z,IonToolbar:q,IonList:X,IonFooter:K,IonContent:it,IonRow:W,IonCol:G,IonTitle:ut,IonHeader:J,IonItem:Y},data:()=>({active:{id:-1,name:"",provider:"",rows:[],columns:[]},encounters:[]}),computed:{canVoid(){return!D.isEmpty(this.active)}},watch:{items:{handler(t){D.isEmpty(t)||(this.encounters=t,this.showDetails(this.encounters[0]))},immediate:!0,deep:!0}},props:{title:{type:String,required:!0},items:{type:Object,required:!0}},methods:{closeModal(){Q.dismiss({})},removeEncounter(t){this.encounters=this.encounters.filter(e=>e.other.id!=t)},voidActiveItem(){ue(async t=>{try{await this.active.onVoid(t),this.removeEncounter(this.active.id),this.active={},D.isEmpty(this.encounters)||this.showDetails(this.encounters[0])}catch(e){mt("".concat(e))}},"void-modal custom-modal-backdrop")},async showDetails(t){var e;this.active.id=t.other.id,this.active.name=t.label,this.active.columns=t.other.columns,this.active.onVoid=t.other.onVoid,this.active.rows=await t.other.getRows(),this.active.provider=await t.other.provider,this.active.isBDE=(e=t.other.isBDE)!=null?e:!1}}}),fe={class:"his-md-text",style:{display:"flex","justify-content":"space-between",width:"100%"}},ge={class:"ion-margin-start"},be={class:"ion-margin-end"},_e={class:"tb"};function ve(t,e,n,s,m,k){const p=a("ion-text"),r=a("ion-toolbar"),d=a("ion-header"),v=a("ion-item"),$=a("ion-list"),I=a("ion-col"),u=a("his-basic-table"),w=a("ion-row"),E=a("ion-content"),C=a("ion-button"),T=a("ion-footer");return l(),b(P,null,[i(d,null,{default:o(()=>[i(r,null,{default:o(()=>[g("div",fe,[g("span",ge,_(t.title),1),t.active.isBDE?(l(),f(p,{key:0,color:"danger"},{default:o(()=>e[0]||(e[0]=[h("BDE Record")])),_:1})):y("",!0),g("span",be,"Provider: "+_(t.active.provider),1)])]),_:1})]),_:1}),i(E,null,{default:o(()=>[i(w,null,{default:o(()=>[i(I,{size:"4"},{default:o(()=>[i($,null,{default:o(()=>[(l(!0),b(P,null,A(t.encounters,(L,M)=>(l(),f(v,{class:"his-sm-text",key:M,color:L.other.id===t.active.id?"primary":"",detail:!0,onClick:()=>t.showDetails(L)},{default:o(()=>[h(_(L.label.toUpperCase()),1)]),_:2},1032,["color","onClick"]))),128))]),_:1})]),_:1}),i(I,{size:"8"},{default:o(()=>[g("div",_e,[i(u,{columns:t.active.columns,rows:t.active.rows},null,8,["columns","rows"])])]),_:1})]),_:1})]),_:1}),i(T,null,{default:o(()=>[i(r,null,{default:o(()=>[i(C,{color:"danger",onClick:t.voidActiveItem,disabled:!t.canVoid,size:"large"},{default:o(()=>e[1]||(e[1]=[h(" Void encounter")])),_:1},8,["onClick","disabled"]),i(C,{onClick:t.closeModal,size:"large",slot:"end"},{default:o(()=>e[2]||(e[2]=[h(" Close ")])),_:1},8,["onClick"])]),_:1})]),_:1})],64)}const Ce=S(he,[["render",ve],["__scopeId","data-v-077718a3"]]),ye=V({components:{HisBasicTable:pt,IonHeader:J,IonToolbar:q,IonContent:it,IonFooter:K,IonButton:Z},props:{title:{type:String,required:!0},columns:{type:Array,required:!0},rows:{type:Array,default:()=>[]}},methods:{async closeModal(){await Q.dismiss({})}}});function Ie(t,e,n,s,m,k){const p=a("ion-title"),r=a("ion-toolbar"),d=a("ion-header"),v=a("his-basic-table"),$=a("ion-content"),I=a("ion-button"),u=a("ion-footer");return l(),b(P,null,[i(d,null,{default:o(()=>[i(r,null,{default:o(()=>[i(p,{class:"his-md-text"},{default:o(()=>[h(_(t.title),1)]),_:1})]),_:1})]),_:1}),i($,null,{default:o(()=>[i(v,{columns:t.columns,rows:t.rows},null,8,["columns","rows"])]),_:1}),i(u,null,{default:o(()=>[i(r,null,{default:o(()=>[i(I,{size:"large",onClick:t.closeModal,slot:"end"},{default:o(()=>e[0]||(e[0]=[h(" Close ")])),_:1},8,["onClick"])]),_:1})]),_:1})],64)}const ke=S(ye,[["render",Ie]]),De=V({components:{TextSkeleton:Dt,IonLabel:ht,IonList:X,IonItem:Y,IonChip:ft,IonIcon:ot,IonBadge:$t},data:()=>({time:gt}),props:{isEnabled:{type:Boolean,default:()=>!0},counter:{type:Number,required:!1},isLoading:{type:Boolean},icon:{type:String},title:{type:String,required:!0},items:{type:Object},titleColor:{type:String,required:!1,default:()=>"#337ab7"}}});function $e(t,e,n,s,m,k){const p=a("ion-badge"),r=a("ion-label"),d=a("ion-item"),v=a("text-skeleton"),$=a("ion-icon"),I=a("ion-chip"),u=a("ion-list");return l(),b("div",{class:nt(["card",{inactive:!t.isEnabled,clickable:t.isEnabled}])},[i(d,{color:t.titleColor,lines:"none",class:"his-md-text title-card"},{default:o(()=>[i(p,{slot:"start",class:"his-sm-text",color:"light"},{default:o(()=>[g("b",null,_(t.counter),1)]),_:1}),i(r,null,{default:o(()=>[h(_(t.title),1)]),_:1})]),_:1},8,["color"]),t.isLoading?(l(),f(v,{key:0,itemCount:5})):y("",!0),t.isLoading?y("",!0):(l(),f(u,{key:1},{default:o(()=>[(l(!0),b(P,null,A(t.items,(w,E)=>(l(),f(d,{key:E},{default:o(()=>{var C,T;return[i(r,{class:nt((C=w==null?void 0:w.other)!=null&&C.wrapTxt?"ion-text-wrap":""),innerHTML:w.label},null,8,["class","innerHTML"]),w.value?(l(),f(I,{key:0,class:"his-sm-text ion-no-margin",slot:"end"},{default:o(()=>[i($,{icon:t.icon},null,8,["icon"]),i(r,null,{default:o(()=>[h(_(w.value),1)]),_:2},1024)]),_:2},1024)):y("",!0),(T=w.other)!=null&&T.isBDE?(l(),f(I,{key:1,class:"his-sm-text ion-no-margin",slot:"end",color:"danger",style:{"margin-left":".2rem"}},{default:o(()=>[i(r,null,{default:o(()=>e[0]||(e[0]=[h("BDE")])),_:1})]),_:1})):y("",!0)]}),_:2},1024))),128))]),_:1}))],2)}const we=S(De,[["render",$e],["__scopeId","data-v-5f54c099"]]),Ee=V({components:{IonList:X,IonItem:Y},props:{title:{type:String,default:()=>"Visits"},items:{type:Object,required:!0}},data:()=>({active:{},activeListItems:[],paginatedListItems:[],index:-1,perPage:6,btnSize:45}),computed:{listAlignmentClass(){return this.activeListItems&&this.activeListItems.length===this.perPage?"vertically-align":""},upbuttonImg(){return"/assets/images/drop-up-arrow.svg"},downbuttonImg(){return"/assets/images/drop-down-arrow.svg"},showNextButton(){return this.index+1<this.paginatedListItems.length},showPrevButton(){return this.index>=1}},watch:{items:{handler(t){if(!D.isEmpty(t)){this.index=0,this.paginatedListItems=D.chunk(t,this.perPage),this.activeListItems=this.paginatedListItems[0],this.active=this.activeListItems[0];for(const e in this.paginatedListItems){const n=D.findIndex(this.paginatedListItems[e],s=>s.other.isActive===!0,0);if(n!=-1){this.index=parseInt(e),this.activeListItems=this.paginatedListItems[e],this.active=this.activeListItems[n];break}}}},deep:!0,immediate:!0},index:{handler(t){this.activeListItems=this.paginatedListItems[t]},immediate:!0},active(t){this.$emit("onselect",t)}},methods:{onselect(t){this.active=t},isActive(t){return t.label===this.active.label},goNext(){const t=this.index+1;t<=this.paginatedListItems.length&&(this.index=t)},goPrev(){this.paginatedListItems.length>=1&&(this.index-=1)}}}),Pe={class:"card his-card"},Te={class:"his-md-text header-section"},Le=["disabled"],Ae=["src","width"],Oe={class:"bottom-section"},Ve=["disabled"],Se=["src","width"];function Ne(t,e,n,s,m,k){const p=a("ion-item"),r=a("ion-list");return l(),b("div",Pe,[g("div",Te,_(t.title),1),g("button",{class:"nav-btn nav-btn-top clickable",disabled:!t.showPrevButton,onClick:e[0]||(e[0]=(...d)=>t.goPrev&&t.goPrev(...d))},[g("img",{src:t.upbuttonImg,width:t.btnSize},null,8,Ae)],8,Le),g("div",{class:nt(t.listAlignmentClass)},[i(r,null,{default:o(()=>[(l(!0),b(P,null,A(t.activeListItems,(d,v)=>(l(),f(p,{class:"his-md-text",key:v,onClick:$=>t.onselect(d),detail:!0,color:t.isActive(d)?"primary":""},{default:o(()=>[h(_(d.label),1)]),_:2},1032,["onClick","color"]))),128))]),_:1})],2),g("div",Oe,[g("button",{class:"nav-btn nav-btn-bottom clickable",disabled:!t.showNextButton,onClick:e[1]||(e[1]=(...d)=>t.goNext&&t.goNext(...d))},[g("img",{src:t.downbuttonImg,width:t.btnSize},null,8,Se)],8,Ve)])])}const ze=S(Ee,[["render",Ne],["__scopeId","data-v-751691ca"]]);function Me(){const t=bt({width:window.innerWidth,height:window.innerHeight});function e(n){t.value={height:n.currentTarget.innerHeight,width:n.currentTarget.innerWidth}}return wt(()=>{addEventListener("resize",e)}),Et(()=>{removeEventListener("resize",e)}),{resolution:t}}const Be=V({name:"HisResultCard",components:{IonIcon:ot},props:{icon:{required:!1},items:{type:Object,required:!0}},methods:{hasIcon(t){return"other"in t&&"icon"in t.other}}}),He={class:"tool-bar-medium-card"};function qe(t,e,n,s,m,k){const p=a("ion-icon");return l(),b("div",He,[(l(!0),b(P,null,A(t.items,(r,d)=>(l(),b("div",{key:d},[t.hasIcon(r)?(l(),f(p,{key:0,icon:r.other.icon},null,8,["icon"])):y("",!0),h(" "+_(r.label)+": ",1),g("b",null,_(r.value),1)]))),128))])}const Ue=S(Be,[["render",qe],["__scopeId","data-v-f304e49e"]]),je=V({name:"PatientToolbar",components:{IonHeader:J,IonToolbar:q,IonCol:G,IonRow:W,InfoCard:Ue,IconCard:ce},props:{app:{type:Object},appVersion:{type:String},patientCardInfo:{type:Array,required:!0},programCardInfo:{type:Array,required:!0},appIcon:{type:String,required:!0}},computed:{logo(){return ct(this.appIcon)}}});function Re(t,e,n,s,m,k){const p=a("info-card"),r=a("ion-col"),d=a("icon-card"),v=a("ion-row"),$=a("ion-toolbar"),I=a("ion-header");return l(),f(I,{translucent:!0},{default:o(()=>[i($,null,{default:o(()=>[i(v,null,{default:o(()=>[i(r,{size:"5"},{default:o(()=>[i(p,{items:t.patientCardInfo},null,8,["items"])]),_:1}),i(r,{size:"5"},{default:o(()=>[i(p,{items:t.programCardInfo},null,8,["items"])]),_:1}),i(r,{size:"2"},{default:o(()=>[i(d,{app:t.app,version:t.appVersion,icon:t.logo},null,8,["app","version","icon"])]),_:1})]),_:1})]),_:1})]),_:1})}const Fe=S(je,[["render",Re]]),We=V({components:{IonList:X,IonLabel:ht,IonItem:Y,IonSegment:Pt,IonSegmentButton:Tt,IonChip:ft,IonPage:Lt,IonIcon:ot,IonFooter:K,IonContent:it,IonButton:Z,IonToolbar:q,IonGrid:dt,IonRow:W,IonCol:G,FullToolbar:Fe,PrimaryCard:we,VisitDatesCard:ze,MinimalToolbar:At(()=>re(()=>import("./MinimalToolbar-Deh-bHhG.js"),__vite__mapDeps([0,1,2])))},setup(){const t=bt("lg"),{resolution:e}=Me();return Ot(()=>e.value,n=>{n&&n.width<=900?t.value="sm":t.value="lg"},{immediate:!0,deep:!0}),{sync:Vt,time:gt,timeOutline:U,person:St,calendar:Nt,medical:zt,clipboard:Mt,apps:Bt,folder:Ht,logOut:qt,clipboardOutline:Ut,appsOutline:jt,folderOutline:Rt,logOutOutline:Ft,alertCircle:Wt,screenBreakPoint:t}},data:()=>({online:Gt,initMode:"",activeTab:1,app:{},dashboardComponent:{},isBDE:!1,currentDate:"",sessionDate:"",nextTask:{},programId:0,patientId:0,patient:{},patientProgram:{},patientCardInfo:[],programCardInfo:[],visitDates:[],activeVisitDate:"",patientCards:[],appVersion:N.getFullVersion(),sessionEncounterMap:{},savedEncounters:[]}),computed:{patientIsset(){return!D.isEmpty(this.patient)},patientName(){return D.isEmpty(this.patient)?"N/A":this.patient.name},appHasCustomContent(){return!D.isEmpty(this.app.customPatientDashboardContentComponent)},customDashboardContent(){return this.app.customPatientDashboardContentComponent},visitDatesTitle(){return"".concat(this.visitDates.length," Visits")},hasOfflineObs(){const{offlineData:t}=z();return t.value.some(e=>"".concat(e.id)==="".concat(this.patientId)&&(e.obsToSave||[]).some(n=>n.uploadStatus!="Success")&&e.programID===N.getProgramID())}},watch:{online:{handler(t){t&&this.init()}},activeVisitDate(t){this.appHasCustomContent||this.updateCardVisitData(t)}},created(){this.app=j.getActiveApp(),this.setPatientCards()},mounted(){this.$route.params.id&&(this.patientId=this.$route.params.id,j.doAppManagementTasks().then(()=>{var t;this.app=j.getActiveApp(),typeof((t=this.app)==null?void 0:t.overridePatientDashboardCards)=="function"&&this.setPatientCards(),this.programId=this.app.programID,this.appHasCustomContent&&(this.patientCards=[]),this.init()}))},methods:{async initSynchronization(){const{synchronizeRecord:t,findByID:e}=z();await this.showLoader("Synchronization has started. this may take a while");try{const s=(await t(this.patientId)).personID;if(!s)return this.clearLoader(),this.patientId;if("".concat(s)!="".concat(this.patientId)){const m=e(this.patientId);m.id=s,m.personID=s,m.generatedIDs=[...m.generatedIDs||[],s],document.location="/patient/dashboard/".concat(s)}return this.clearLoader(),parseInt("".concat(s))}catch(n){console.error("Error synchronizing data "+n)}this.clearLoader()},async initOnline(){const t=parseInt("".concat(this.patientId));try{let e=await B.get("ACTIVE_PATIENT",{patientID:t});if(D.isEmpty(e)||this.hasOfflineObs){const n=await this.initSynchronization();if(e=await B.get("ACTIVE_PATIENT",{patientID:parseInt("".concat(n))}),D.isEmpty(e))return!1}this.patient={patient_id:e.getID(),birthdate:e.getBirthdate(),name:e.getFullName(),currentVillage:e.getCurrentVillage(),age:e.getAge(),nationalID:e.getNationalID(),gender:e.getGender(),phone:e.getPhoneNumber()},z().cachePatient(e)}catch(e){return console.error("".concat(e)),H("Unable to initialise client online"),!1}return this.patientCardInfo=this.getPatientCardInfo(this.patient),this.getNextTask().then(e=>this.nextTask=e),this.getPatientVisitDates(t).then(e=>{this.visitDates=e,this.loadSavedEncounters()}).catch(e=>{console.error(e)}),this.buildProgramInfoData(t),tt.value=!1,!0},initOffline(){var n;const t=z().findByID(this.patientId),e=(n=t==null?void 0:t.personParams)==null?void 0:n.person;return e?(this.patient={patient_id:e.personID,birthdate:e.birthdate,name:"".concat(e.given_name," ").concat(e.family_name),currentVillage:e.current_village||"N/A",age:(e==null?void 0:e.age)||Kt(N.getSessionDate()).diff(e.birthdate,"years"),gender:e.gender,phone:e.phone||"N/A",nationalID:e.npid||"No npid"},this.getNextTask().then(s=>this.nextTask=s),this.patientCardInfo=this.getPatientCardInfo(this.patient),this.buildProgramInfoData(this.patientId),!0):!1},async init(){this.currentDate=R.currentDisplayDate(),this.sessionDate=this.toDate(N.getSessionDate()),this.isBDE=N.isBDE()||!1,this.initMode="",await this.initOnline()?this.initMode="online":this.initOffline()&&(this.initMode="offline"),this.initMode?this.initMode==="offline"&&this.launchSyncDialog():H("Unable to initialise dashboard")},async buildProgramInfoData(t){var e,n;this.programCardInfo=typeof((e=this.app)==null?void 0:e.patientProgramInfoData)=="function"?(n=this.app)==null?void 0:n.patientProgramInfoData(t):[];for(const s of this.programCardInfo)try{typeof s.init=="function"&&await s.init(),typeof s.asyncValue=="function"?s.asyncValue().then(m=>s.value=m):typeof s.staticValue=="function"&&(s.value=s.staticValue())}catch(m){console.error("".concat(m))}},setPatientCards(){var e;const t=[{id:"c1",items:[],cache:{},label:"Activities",color:"primary",isLoading:!1,icon:U,isEnabled:this.isCardEnabled("activitiesEnabled"),onVisitDate:({card:n,date:s,allCards:m})=>{n.isLoading=!0;const k=m.filter(p=>p.subscription&&p.subscription.c1);k.forEach(p=>p.isLoading=!0),F.getEncounters(parseInt("".concat(this.patientId)),{date:s}).then(p=>{this.sessionEncounterMap={},k.forEach(r=>{r.subscription&&r.subscription.c1&&(r.isLoading=!1,r.subscription.c1({encounters:p,card:r,date:s}))}),n.items=this.getActivitiesCardInfo(p),n.cache&&(n.cache[s]=n.items),s===N.getSessionDate()&&!D.isEmpty(p)&&(this.sessionEncounterMap=p.reduce((r,d)=>(r[d.type.name.toLowerCase()]=d.observations.reduce((v,$)=>v.concat($.concept.concept_names),[]).map(v=>v.name.toLowerCase()),r),{})),n.isLoading=!1}).catch(p=>{console.error(p),n.items=[],n.isLoading=!1,n.cache&&(n.cache[s]=n.items),k.forEach(r=>r.isLoading=!1)})},onClick:n=>{n.isEnabled&&(n.isLoading?H("Please wait..."):this.openModal(n.items,"Select Activities",Ce))}},{id:"c2",items:[],cache:{},color:"success",isLoading:!1,label:"Lab Orders",icon:U,isEnabled:this.isCardEnabled("labEnabled"),onVisitDate:({card:n,date:s})=>{n.isLoading=!0,this.getLabOrderCardInfo(s).then(m=>{n.items=m,n.cache[s]=n.items,n.isLoading=!1}).catch(()=>{n.items=[],n.cache[s]=n.items,n.isLoading=!1})},onClick:n=>n.isEnabled&&this.$router.push("/art/encounters/lab/".concat(this.patientId))},{id:"c3",items:[],label:"Alerts",color:"danger",icon:Zt,isLoading:!1,isInit:!1,isEnabled:this.isCardEnabled("alertsEnabled"),onVisitDate:({card:n})=>{if(n.isInit)return;const s=this.getPatientAlertCardInfo();typeof s=="object"&&typeof s.then=="function"&&(n.isLoading=!0,this.getPatientAlertCardInfo().then(m=>{m&&(n.items=m),n.isInit=!0,n.isLoading=!1}).catch(()=>{n.items=[],n.isInit=!0,n.isLoading=!1})),s&&(n.items=s)},onClick:()=>{}},{id:"c4",items:[],cache:{},label:"Medications",color:"warning",icon:U,isLoading:!1,isEnabled:this.isCardEnabled("medicationsEnabled"),onVisitDate:({card:n,date:s})=>{n.isLoading=!0,le.getOrderByPatient(parseInt("".concat(this.patientId)),{start_date:s}).then(m=>{n.items=this.getMedicationCardInfo(m),n.cache&&(n.cache[s]=n.items),n.isLoading=!1}).catch(()=>{n.items=[],n.cache&&(n.cache[s]=n.items),n.isLoading=!1})},onClick:n=>{if(!n.isEnabled)return;if(n.isLoading)return H("Please wait..");const s=["Medication","Start date","End date","Amount given"],m=n.items.map(k=>[k.other.drug.name,this.toDate(k.other.order.start_date),this.toDate(k.other.order.auto_expire_date),k.other.quantity]);this.openTableModal(s,m,"Medication History")}}];if(typeof((e=this.app)==null?void 0:e.overridePatientDashboardCards)=="function")for(const n of this.app.overridePatientDashboardCards()){const s=D.findIndex(t,{id:n.id});s>=0&&(t[s]=n)}this.patientCards=t},launchSyncDialog(){z().launchObservationDialog(this.patientId,{onDeleteEncounter:()=>this.init()})},isCardEnabled(t){var n;const e=(n=this.app)==null?void 0:n.configDefaultPatientDashboardCards;return e&&t in e?e[t]||!1:!0},async showLoader(t="Please wait...."){(await et.create({message:t,backdropDismiss:!1})).present()},clearLoader(){et.getTop().then(t=>t?et.dismiss():null)},toDate(t){return R.toStandardHisDisplayFormat(t)},toTime(t){return R.toStandardHisTimeFormat(t)},loadSavedEncounters(){F.getSavedEncounters(parseInt("".concat(this.patientId))).then(t=>this.savedEncounters=t)},updateCardVisitData(t,e=!1,n=""){this.patientCards.forEach(s=>{typeof s.cache=="object"&&s.cache[t]&&!e?s.items=s.cache[t]:s.isEnabled&&typeof s.onVisitDate=="function"?s.onVisitDate({card:s,invalidateCache:e,date:t,allCards:this.patientCards,patient:this.patient}):s.items=[]})},async getPatientVisitDates(t){return(await Jt.getPatientVisits(t,!1)).map(e=>({label:this.toDate(e),value:e,other:{isActive:e===N.getSessionDate()}}))},async getNextTask(){return tt.value?z().nextPatientWorkflowActivity(this.patientId)||{}:Qt.getNextTaskParams(parseInt("".concat(this.patientId)))},goToNextTask(){var t,e,n;if((t=this.nextTask)!=null&&t.patientUrl&&tt.value)return this.$router.push("".concat((e=this.nextTask)==null?void 0:e.patientUrl,"/").concat(this.patientId));Xt((n=this.nextTask)==null?void 0:n.name,this.patientId)},onActiveVisitDate(t){this.activeVisitDate=t.value},getPatientCardInfo(t){const e=t.gender==="M"?Yt:xt;return[{label:"Name",value:t.name,other:{icon:e}},{label:"Birthdate",value:"\n                    ".concat(this.toDate(t.birthdate),"\n                    (").concat(t.age,") \n                    (").concat(t.nationalID,")")},{label:"Current Village",value:t.currentVillage},{label:"Phone#",value:t.phone}]},getActivitiesCardInfo(t){return t.map(e=>({label:"".concat(e.type.name).toUpperCase(),value:this.toTime(e.encounter_datetime),other:{provider:te.getPersonFullName(e.provider_id),isBDE:F.isEncounterInBDE(e),id:e.encounter_id,columns:["Observation","Value","Time"],onVoid:async n=>{await this.showLoader(),F.voidEncounter(e.encounter_id,n).then(()=>{this.clearLoader(),this.loadSavedEncounters(),this.updateCardVisitData(this.activeVisitDate,!0),ee.emit("EncounterVoided",e.encounter_id),this.getNextTask().then(s=>this.nextTask=s),ne("Encounter has been voided!",2e3)}).catch(s=>{this.clearLoader(),mt("".concat(s),32e3)})},getRows:async()=>{var m,k,p,r,d,v;const n=[],{observations:s}=e;for(const $ in s){let I="<UNKNOWN CONCEPT>";const u=s[$];try{if((m=u==null?void 0:u.concept)!=null&&m.concept_names){const C=(v=(d=(p=(k=u==null?void 0:u.drug)==null?void 0:k.drug_cms)==null?void 0:p.short_name)!=null?d:(r=u==null?void 0:u.drug)==null?void 0:r.name)!=null?v:"",T=C?"(".concat(C,")"):"";I="".concat(u.concept.concept_names[0].name," ").concat(T).trim()}else I=await ie.getConceptName(u.concept_id)}catch(C){console.error(u,C)}const w=await oe.resolvePrimaryValue(u),E=R.toStandardHisTimeFormat(u.date_created);n.push([I,w,E])}return n}}}))},getMedicationCardInfo(t){return t.map(e=>({label:"".concat(e.drug.name).concat(e.regimen?" (".concat(e.regimen,")"):""),value:this.toTime(e.order.start_date),other:e}))},async getLabOrderCardInfo(t){return typeof this.app.getPatientDashboardLabOrderCardItems=="function"?this.app.getPatientDashboardLabOrderCardItems(this.patientId,t):(await se.getOrders(parseInt("".concat(this.patientId)),{date:t})).map(n=>({label:n.specimen.name,value:this.toTime(n.order_date)}))},async getPatientAlertCardInfo(){if("getPatientDashboardAlertsAndNotes"in this.app)return this.app.getPatientDashboardAlertsAndNotes(this.patient)},async changeApp(){const t=await j.selectApplication("PatientDashboard",!0);t&&(t.programID!=this.programId?(this.programId=t.programID,this.$router.push("/patients/confirm?patient_barcode=".concat(this.patient.nationalID))):this.init())},async showTasks(){if("primaryPatientActivites"in this.app){const t=[...this.app.primaryPatientActivites].map(e=>{const n=(e.encounterTypeName||e.name).toLowerCase();return typeof e.taskCompletionChecklist=="object"&&!D.isEmpty(this.sessionEncounterMap)?e.taskCompleted=e.taskCompletionChecklist.every(s=>D.isArray(this.sessionEncounterMap[n])&&this.sessionEncounterMap[n].includes(s.toLowerCase())):e.taskCompleted=!D.isEmpty(this.sessionEncounterMap[n]),e});this.openModal(t,"Tasks for",lt,this.sessionDate)}},showOptions(){if("secondaryPatientActivites"in this.app){const t=this.app.secondaryPatientActivites;this.openModal(t,"Select Activity",lt)}},async startModal(t,e){(await Q.create({component:t,backdropDismiss:!1,cssClass:"large-modal",componentProps:e})).present()},async openModal(t,e,n,s=""){D.isEmpty(this.patientProgram)&&(this.patientProgram=await new ae(this.patientId).getProgram()),this.startModal(n,{items:t,title:"".concat(e,": ").concat(s||this.toDate(this.activeVisitDate.toString())),taskParams:{patient:this.patient,gender:this.patient.gender,program:this.patientProgram,visitDate:this.activeVisitDate,patientID:this.patientId,savedEncounters:this.savedEncounters}})},openTableModal(t,e,n){this.startModal(ke,{columns:t,rows:e,title:"".concat(n,": ").concat(this.toDate(this.activeVisitDate.toString()))})},onCancel(){B.invalidate("ACTIVE_PATIENT"),B.invalidate("PATIENT_PROGRAM"),B.invalidate("PATIENT_LAB_ORDERS"),this.$router.push({path:"/"})}}}),Ge={key:0},Ke={class:"his-card info-card-item"},Ze={class:"his-card info-card-item"},Je={class:"his-card info-card-item"},Qe={class:"his-sm-text his-card"},Xe={key:0},Ye={key:1},xe={key:0},tn={key:1},en={key:1};function nn(t,e,n,s,m,k){const p=a("minimal-toolbar"),r=a("ion-icon"),d=a("ion-label"),v=a("ion-segment-button"),$=a("ion-segment"),I=a("ion-toolbar"),u=a("ion-button"),w=a("primary-card"),E=a("ion-col"),C=a("ion-row"),T=a("ion-grid"),L=a("ion-item"),M=a("ion-list"),st=a("ion-content"),_t=a("ion-footer"),at=a("ion-page"),vt=a("full-toolbar"),Ct=a("visit-dates-card"),x=a("ion-chip");return l(),b(P,null,[t.screenBreakPoint==="sm"?(l(),f(at,{key:0},{default:o(()=>[i(p,{title:t.patientName,menuTitle:t.visitDatesTitle,menuItems:t.visitDates,appIcon:t.app.applicationIcon,onOnClickMenuItem:t.onActiveVisitDate},null,8,["title","menuTitle","menuItems","appIcon","onOnClickMenuItem"]),t.screenBreakPoint==="sm"?(l(),f(I,{key:0},{default:o(()=>[i($,{value:t.activeTab,class:"ion-justify-content-center"},{default:o(()=>[i(v,{value:"1",onClick:e[0]||(e[0]=c=>t.activeTab=1)},{default:o(()=>[i(r,{icon:t.calendar},null,8,["icon"]),i(d,null,{default:o(()=>e[6]||(e[6]=[h("Visits")])),_:1})]),_:1}),i(v,{value:"2",onClick:e[1]||(e[1]=c=>t.activeTab=2)},{default:o(()=>[i(r,{icon:t.person},null,8,["icon"]),i(d,null,{default:o(()=>e[7]||(e[7]=[h("Patient")])),_:1})]),_:1}),i(v,{value:"3",onClick:e[2]||(e[2]=c=>t.activeTab=3)},{default:o(()=>[i(r,{icon:t.medical},null,8,["icon"]),i(d,null,{default:o(()=>e[8]||(e[8]=[h("Program")])),_:1})]),_:1}),i(v,{value:"4",onClick:e[3]||(e[3]=c=>t.activeTab=4)},{default:o(()=>[i(r,{icon:t.time},null,8,["icon"]),i(d,null,{default:o(()=>e[9]||(e[9]=[h("Dates")])),_:1})]),_:1})]),_:1},8,["value"])]),_:1})):y("",!0),t.nextTask.name&&t.screenBreakPoint==="sm"?(l(),f(I,{key:1},{default:o(()=>[i(u,{style:{width:"100%"},color:"success",onClick:t.goToNextTask},{default:o(()=>[i(d,null,{default:o(()=>[g("b",null,"Next Task: "+_(t.nextTask.name.toUpperCase()),1)]),_:1}),i(r,{icon:t.alertCircle},null,8,["icon"])]),_:1},8,["onClick"])]),_:1})):y("",!0),i(st,{id:"main-content"},{default:o(()=>[t.screenBreakPoint==="sm"?(l(),b("div",Ge,[t.appHasCustomContent&&t.activeTab===1&&t.patientIsset?(l(),f(rt(t.customDashboardContent),{key:0,patient:t.patient,visitDate:t.activeVisitDate},null,8,["patient","visitDate"])):y("",!0),!t.appHasCustomContent&&t.activeTab===1?(l(),f(T,{key:1},{default:o(()=>[i(C,null,{default:o(()=>[(l(!0),b(P,null,A(t.patientCards,(c,O)=>(l(),f(E,{size:"12",key:O},{default:o(()=>[(l(),f(w,{key:"mcard".concat(O),isEnabled:c.isEnabled,counter:c.items.length,icon:c.icon,title:c.label,titleColor:c.color,items:c.items,isLoading:c.isLoading,onClick:yt=>c.onClick(c)},null,8,["isEnabled","counter","icon","title","titleColor","items","isLoading","onClick"]))]),_:2},1024))),128))]),_:1})]),_:1})):y("",!0),t.activeTab===2?(l(),f(M,{key:2},{default:o(()=>[(l(!0),b(P,null,A(t.patientCardInfo,(c,O)=>(l(),b("div",{class:"his-card info-card-item",key:O},[i(L,{lines:"none"},{default:o(()=>[i(d,null,{default:o(()=>[h(_(c.label),1)]),_:2},1024),i(d,{slot:"end"},{default:o(()=>[g("b",null,_(c.value),1)]),_:2},1024)]),_:2},1024)]))),128))]),_:1})):y("",!0),t.activeTab===3?(l(),f(M,{key:3},{default:o(()=>[(l(!0),b(P,null,A(t.programCardInfo,(c,O)=>(l(),b("div",{class:"his-card info-card-item",key:O},[i(L,{lines:"none"},{default:o(()=>[i(d,null,{default:o(()=>[h(_(c.label),1)]),_:2},1024),i(d,{slot:"end"},{default:o(()=>[g("b",null,_(c.value),1)]),_:2},1024)]),_:2},1024),e[10]||(e[10]=g("p",null,null,-1))]))),128))]),_:1})):y("",!0),t.activeTab===4?(l(),f(M,{key:4},{default:o(()=>[g("div",Ke,[i(L,{lines:"none"},{default:o(()=>[i(d,null,{default:o(()=>e[11]||(e[11]=[h(" Today ")])),_:1}),i(d,{slot:"end"},{default:o(()=>[g("b",null,_(t.currentDate),1)]),_:1})]),_:1})]),g("div",Ze,[i(L,{lines:"none"},{default:o(()=>[i(d,null,{default:o(()=>e[12]||(e[12]=[h(" Session ")])),_:1}),i(d,{slot:"end"},{default:o(()=>[g("b",null,_(t.sessionDate),1)]),_:1})]),_:1})]),g("div",Je,[i(L,{lines:"none"},{default:o(()=>[i(d,null,{default:o(()=>e[13]||(e[13]=[h(" Current visit date ")])),_:1}),i(d,{slot:"end"},{default:o(()=>[g("b",null,_(t.activeVisitDate),1)]),_:1})]),_:1})])]),_:1})):y("",!0)])):y("",!0)]),_:1}),i(_t,null,{default:o(()=>[t.screenBreakPoint==="sm"?(l(),f(I,{key:0,color:"dark"},{default:o(()=>[t.hasOfflineObs?(l(),f(u,{key:0,color:"success",size:"large",slot:"start",onClick:t.launchSyncDialog},{default:o(()=>[i(r,{icon:t.sync},null,8,["icon"])]),_:1},8,["onClick"])):y("",!0),i(u,{color:"light",size:"medium",slot:"start","router-link":"/session/date"},{default:o(()=>[i(r,{icon:t.timeOutline},null,8,["icon"])]),_:1}),i(u,{color:"primary",size:"medium",slot:"end",onClick:t.showTasks},{default:o(()=>[i(r,{icon:t.clipboard},null,8,["icon"])]),_:1},8,["onClick"]),i(u,{color:"primary",size:"medium",slot:"end",onClick:t.showOptions},{default:o(()=>[i(r,{icon:t.folder},null,8,["icon"])]),_:1},8,["onClick"]),i(u,{color:"primary",size:"medium",slot:"end",onClick:t.changeApp},{default:o(()=>[i(r,{icon:t.apps},null,8,["icon"])]),_:1},8,["onClick"]),i(u,{color:"success",size:"medium",slot:"end",onClick:t.onCancel},{default:o(()=>[i(r,{icon:t.logOut},null,8,["icon"])]),_:1},8,["onClick"])]),_:1})):y("",!0)]),_:1})]),_:1})):y("",!0),t.screenBreakPoint==="lg"?(l(),f(at,{key:1},{default:o(()=>[i(vt,{app:t.app,appVersion:t.appVersion,appIcon:t.app.applicationIcon,patientCardInfo:t.patientCardInfo,programCardInfo:t.programCardInfo},null,8,["app","appVersion","appIcon","patientCardInfo","programCardInfo"]),i(st,{id:"main-content"},{default:o(()=>[i(T,{class:"grid-custom vertically-align"},{default:o(()=>[i(C,null,{default:o(()=>[i(E,{size:"2.4"},{default:o(()=>[i(Ct,{title:t.visitDatesTitle,items:t.visitDates,onOnselect:t.onActiveVisitDate},null,8,["title","items","onOnselect"])]),_:1}),i(E,{size:"9.6"},{default:o(()=>[g("div",Qe,[i(C,null,{default:o(()=>[i(E,{"size-md":"4","size-sm":"6"},{default:o(()=>[e[14]||(e[14]=h(" Today's Date: ")),g("b",null,_(t.currentDate),1)]),_:1}),i(E,{"size-md":"4","size-sm":"6"},{default:o(()=>[t.nextTask.name?(l(),b("span",Xe,[i(x,{class:"next-task",color:"success",onClick:t.goToNextTask},{default:o(()=>[h("Next Task: "+_(t.nextTask.name.toUpperCase()),1)]),_:1},8,["onClick"])])):(l(),b("span",Ye,e[15]||(e[15]=[h(" Next Task: "),g("b",null,"NONE",-1)])))]),_:1}),i(E,{"size-md":"4","size-sm":"12"},{default:o(()=>[t.isBDE?(l(),b("span",xe,[i(x,{style:{marginTop:"-8px"},color:"danger",onClick:e[4]||(e[4]=c=>t.$router.push({name:"Session Date"}))},{default:o(()=>[g("b",null," BDE: "+_(t.sessionDate.toUpperCase()),1)]),_:1})])):(l(),b("span",tn,[i(x,{style:{marginTop:"-8px"},color:"dark",onClick:e[5]||(e[5]=c=>t.$router.push({name:"Session Date"}))},{default:o(()=>[g("b",null,"Set Date: "+_(t.sessionDate.toUpperCase()),1)]),_:1})]))]),_:1})]),_:1}),t.appHasCustomContent&&t.patientIsset?(l(),f(rt(t.customDashboardContent),{key:0,patient:t.patient,visitDate:t.activeVisitDate},null,8,["patient","visitDate"])):y("",!0),t.appHasCustomContent?y("",!0):(l(),b("div",en,[i(C,null,{default:o(()=>[(l(!0),b(P,null,A(t.patientCards,(c,O)=>(l(),f(E,{size:"6",key:O},{default:o(()=>[(l(),f(w,{key:c.label,isEnabled:c.isEnabled,counter:c.items.length,icon:c.icon,title:c.label,titleColor:c.color,items:c.items,isLoading:c.isLoading,onClick:yt=>c.onClick(c)},null,8,["isEnabled","counter","icon","title","titleColor","items","isLoading","onClick"]))]),_:2},1024))),128))]),_:1})]))])]),_:1})]),_:1})]),_:1})]),_:1}),i(I,{color:"dark"},{default:o(()=>[t.hasOfflineObs?(l(),f(u,{key:0,color:"light",size:"large",slot:"start",onClick:t.launchSyncDialog},{default:o(()=>[i(r,{icon:t.sync},null,8,["icon"])]),_:1},8,["onClick"])):y("",!0),i(u,{color:"primary",size:"large",slot:"end",onClick:t.showTasks},{default:o(()=>[i(r,{icon:t.clipboardOutline},null,8,["icon"]),e[16]||(e[16]=h(" Tasks "))]),_:1},8,["onClick"]),i(u,{color:"primary",size:"large",slot:"end",onClick:t.showOptions},{default:o(()=>[i(r,{icon:t.folderOutline},null,8,["icon"]),e[17]||(e[17]=h(" Printouts/Other "))]),_:1},8,["onClick"]),i(u,{color:"primary",size:"large",slot:"end",onClick:t.changeApp},{default:o(()=>[i(r,{icon:t.appsOutline},null,8,["icon"]),e[18]||(e[18]=h(" Applications "))]),_:1},8,["onClick"]),i(u,{onClick:t.onCancel,color:"success",size:"large",slot:"end"},{default:o(()=>[i(r,{icon:t.logOutOutline},null,8,["icon"]),e[19]||(e[19]=h(" Finish "))]),_:1},8,["onClick"])]),_:1})]),_:1})):y("",!0)],64)}const dn=S(We,[["render",nn],["__scopeId","data-v-ea02e0c2"]]);export{dn as default};
