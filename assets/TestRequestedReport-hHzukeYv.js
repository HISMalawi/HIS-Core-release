import{L as c}from"./lab_report_service-BeE9WMYt.js";import{_ as g}from"./ReportMixin.vue_vue_type_script_lang-Da78yexD.js";import{R as f}from"./TableReportTemplate-B9gJG81F.js";import{d as T,aq as s,ab as d,dq as h,br as v,a8 as R,ad as _,u as b,v as y}from"./index-CG6KEPsv.js";import"./BasicReportTemplate-DH-zB7dh.js";import"./Export-ngX2Az_3.js";import"./index-bO2fy8Iw.js";import"./Pagination-BNbmZwZV.js";import"./HisStandardForm-CWpBcokh.js";import"./ReportErrors-CnbOzUh9.js";const w=T({mixins:[g],components:{ReportTemplate:f},data:()=>({title:"Tests requested",rows:[],cohort:[],reportType:"",reportReady:!1,columns:[],patientLevelColumns:[[s.thTxt("ARV#"),s.thTxt("Gender"),s.thTxt("Birthdate"),s.thTxt("Ordered Date"),s.thTxt("Test"),s.thTxt("Reason")]],disaggregatedColumns:[s.thTxt("Age group"),s.thTxt("Gender")]}),created(){this.report=new c,this.fields=this.getFormFields()},methods:{async onPeriod({type:e,tests:r}){this.reportReady=!0,this.rows=[],this.period=this.report.getDateIntervalPeriod(),this.reportType=e.value,this.reportType==="disaggregated"?this.setDisaggregatedRows(r):this.reportType==="patient_level"&&this.setPatientLevelRows(r)},getFormFields(){return[...this.getDateDurationFields(),{id:"tests",helpText:"Test(s) Requested",type:d.TT_MULTIPLE_SELECT,options:async(e,r,t)=>{this.report.setStartDate(t.start_date),this.report.setEndDate(t.end_date);const o=await this.report.getSamplesDrawnReport(),a=this.buildAvailableTests(o);return this.buildAvailableTestOptions(a)}},{id:"type",helpText:"Select report type",type:d.TT_SELECT,options:()=>[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}]}]},buildAvailableTests(e){const r={};return e.forEach(t=>{t.tests.forEach(o=>{o in r||(r[o]=[]),r[o].push(t)})}),r},buildAvailableTestOptions(e){const r=[];for(const t in e){const o=e[t];r.push({label:t,value:o.length,other:o})}return r},setDisaggregatedRows(e){const r=[],t=[];this.columns=[this.disaggregatedColumns.concat(e.map(o=>s.thTxt(o.label)))];for(const o in h){const a=h[o],p=[s.td(a),s.td("M")],i=[s.td(a),s.td("F")];e.forEach(({other:u})=>{const l=m=>u.filter(n=>n.gender===m&&n.age_group===a).map(n=>n.patient_id);p.push(this.drill(l("M"),"Males of ".concat(a))),i.push(this.drill(l("F"),"Females of ".concat(a)))}),r.push(p),t.push(i),this.rows=[...t,...r]}},setPatientLevelRows(e){this.columns=this.patientLevelColumns,e.forEach(({other:r})=>{this.sortByArvNumber(r).forEach(async t=>{this.rows.push([s.td(t.arv_number),s.td(t.gender),s.tdDate(t.birthdate),s.tdDate(t.order_date),s.td(t.tests.join(",")),s.td(await v.getConceptName(t.reason_for_test))])})})}}});function E(e,r,t,o,a,p){const i=_("report-template");return b(),y(i,{title:e.title,period:e.period,rows:e.rows,fields:e.fields,columns:e.columns,canExportCsv:!0,canExportPDf:!0,reportReady:e.reportReady,onReportConfiguration:e.onPeriod},null,8,["title","period","rows","fields","columns","reportReady","onReportConfiguration"])}const q=R(w,[["render",E]]);export{q as default};
