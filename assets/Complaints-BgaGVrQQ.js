import{H as T}from"./HisStandardForm-BV2ZSIyY.js";import{_ as h}from"./EncounterMixin.vue_vue_type_script_lang-DI6UEYt1.js";import{P as E}from"./patient_complaints_service-BtmiIspT.js";import{L as D}from"./LabOrderModal-B0Qz4i3y.js";import{d as g,a3 as I,U as R,Q as k,S as B,R as V,a4 as x,dy as y,aM as F,aq as m,a6 as b,ab as s,u as f,B as $,x as o,w as n,z as c,E as A,a5 as L,bs as u,O as M,bk as N,ag as H,a9 as l,aa as z,v as G}from"./index-BmYpiIZN.js";import{P as j}from"./patient_radiology_service-DKUq9oKt.js";import q from"./HisRadiologyPicker-C4XJxeTy.js";import"./encounter_guidelines-DwvuL4-6.js";import"./GuidelineEngine-D6V1_Znr.js";import"./lab_order_service-EXqhgpk7.js";import"./SelectMixin-D8KzZNxQ.js";import"./BaseTextInput-CCnWyurr.js";import"./FieldMixin.vue_vue_type_script_lang-DtlngO4c.js";const U=g({name:"Modal",components:{IonButton:I,IonContent:R,IonHeader:k,IonTitle:B,IonToolbar:V,IonFooter:x,HisRadiologyPicker:q},mixins:[h],data:()=>({radiologyService:{},isPacsEnabled:!1,emitedSelectedOptions:{}}),watch:{ready:{async handler(e){e&&(this.radiologyService=new j(this.patientID,this.providerID),this.isPacsEnabled=await y.isPACsEnabled())},immediate:!0,deep:!0}},methods:{async onValue(e){this.emitedSelectedOptions=e},async getSelected(){return this.emitedSelectedOptions.map(async e=>({...await this.radiologyService.buildValueCoded("Radiology Orders",e.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]}))},async onSubmit(){if(!F.isEmpty(this.emitedSelectedOptions)){this.closeModal();let e=await this.getSelected();e=await Promise.all(e),await this.radiologyService.createEncounter();const t=await this.radiologyService.obsObj(e),i=await this.radiologyService.saveObservationList(t);if(await this.radiologyService.printOrders(i,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(i,this.patient)}catch(a){console.log(a)}}},async closeModal(){await m.dismiss([])}}});function W(e,t,i,a,_,S){const d=s("ion-title"),r=s("ion-toolbar"),v=s("ion-header"),C=s("his-radiology-picker"),w=s("ion-content"),p=s("ion-button"),O=s("ion-footer");return f(),$(A,null,[o(v,null,{default:n(()=>[o(r,null,{default:n(()=>[o(d,{class:"his-lg-text"},{default:n(()=>t[2]||(t[2]=[c("Radiology Examination")])),_:1})]),_:1})]),_:1}),o(w,{style:{overflow:"hidden",background:"grey",height:"70vh"}},{default:n(()=>[o(C,{onOnValue:e.onValue},null,8,["onOnValue"])]),_:1}),o(O,null,{default:n(()=>[o(r,null,{default:n(()=>[o(p,{onClick:t[0]||(t[0]=P=>e.onSubmit()),size:"large",slot:"end",disabled:e.emitedSelectedOptions.length===0},{default:n(()=>t[3]||(t[3]=[c(" Place orders ")])),_:1},8,["disabled"]),o(p,{onClick:t[1]||(t[1]=P=>e.closeModal()),size:"large",slot:"start",color:"danger"},{default:n(()=>t[4]||(t[4]=[c(" Close ")])),_:1})]),_:1})]),_:1})],64)}const K=b(U,[["render",W]]),Q=g({components:{HisStandardForm:T,IonPage:L},mixins:[h],data:()=>({complaintsService:{},todaysDate:u.getSessionDate(),presentingComplaints:"",isPacsEnabled:!1,radiologyBtnName:"Radiology Order",hasTriageComplaints:!1}),watch:{ready:{async handler(e){e&&(this.complaintsService=new E(this.patientID,this.providerID),this.isPacsEnabled=await y.isPACsEnabled(),this.hasTriageComplaints=await this.getTriagePresentingComplaints(),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){try{const i=await this.resolveObs(t,"complaints");await this.complaintsService.createEncounter(),await this.complaintsService.saveObservationList(i),this.nextTask()}catch(i){console.error(i),M("An error occurred while saving the complaints")}},async launchOrderSelection(){const e=await m.create({component:D,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async launchRadiologyOrderSelection(){const e=await m.create({component:K,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async getTriagePresentingComplaints(){if(!((await this.complaintsService.fetchLatestTriageEncounter()).length>0))return!1;const i=(await N.getEncounters(this.patientID,this.todaysDate)).filter(function(a){return a.type.name=="TRIAGE PRESENTING COMPLAINTS"&&H.toStandardHisFormat(a.encounter_datetime)==u.getSessionDate()});return i.length>0?(this.presentingComplaints=i[0].observations,!0):!1},buildResults(){const e=["Group","Presenting complaints"];let t="",i=this.presentingComplaints.map(a=>{if(a.obs_group_id!=null)return[t,a.value_text];t=a.value_text});return i=i.filter(a=>a!=null),this.presentingComplaints=i,[{label:"",value:"",other:{columns:e,rows:i}}]},getFields(){return[{id:"triage_complaints",helpText:"Triaging Complaints",condition:()=>this.hasTriageComplaints,type:l.TT_TABLE_VIEWER,options:()=>this.buildResults(),config:{hiddenFooterBtns:["Clear"]}},{id:"complaints",helpText:"Presenting Complaints",type:l.TT_COMPLAINTS_PICKER,validation:e=>z.required(e),computedValue:e=>({tag:"complaints",obs:e.filter(t=>!/other (specify)/i.test(t.label)).map(async t=>({...await this.complaintsService.buildValueCoded("Presenting complaint",t.other.parent),child:[await this.complaintsService.buildValueCodedFromConceptId(t.other.parent,t.other.concept_id)]}))}),config:{hiddenFooterBtns:[this.showRadiologyOdersBtn()],footerBtns:[{name:"Lab Order",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchOrderSelection(),visibleOnStateChange:e=>e.index===1},{name:this.radiologyBtnName,size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchRadiologyOrderSelection(),visibleOnStateChange:e=>e.index===1}]}},{id:"other_complaints",helpText:"Other Complaints",type:l.TT_TEXT,condition:e=>e.complaints.some(t=>t.label==="Other (specify)"&&t.isChecked),computedValue:async e=>({tag:"complaints",obs:{...await this.complaintsService.buildValueCoded("Presenting complaint","Other"),child:[await this.complaintsService.buildValueText("Other",e.label)]}})},{id:"all_presenting_complaints",helpText:"Summary",condition:()=>this.presentingComplaints.length>0,type:l.TT_SUMMARY,options:e=>this.buildSummaryResults(e),config:{hiddenFooterBtns:["Clear"]}}]},showRadiologyOdersBtn(){return this.isPacsEnabled?"":this.radiologyBtnName},buildSummaryResults(e){const t=e.complaints.map(a=>({label:"OPD Complaints",value:a.label})),i=this.presentingComplaints.map(a=>({label:"Triaging Complaints",value:a[1]}));return t.concat(i)}}});function X(e,t,i,a,_,S){const d=s("his-standard-form"),r=s("ion-page");return f(),G(r,null,{default:n(()=>[o(d,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit,skipSummary:!0},null,8,["cancelDestinationPath","fields","onFinishAction"])]),_:1})}const ce=b(Q,[["render",X]]);export{ce as default};
