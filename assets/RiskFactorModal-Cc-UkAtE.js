import{bT as M,d as $,m as u,bz as p,ad as x,a3 as P,a0 as S,a2 as O,a1 as R,ab as z,aa as E,a4 as H,an as L,a8 as N,ae as T,b3 as Y,a9 as A,af as U,ak as s,a as r,O as _,b as n,w as o,M as i,R as m,Q as j,c as f,a7 as q,X as G}from"./index-4ZhJu3VE.js";class K extends M{constructor(t,a){super(t,30,a)}}const Q=$({name:"Modal",props:{factors:{type:Object,required:!0},title:{type:String,default:""}},computed:{showManageBPButton(){return this.$route.name!="bp_management"}},created(){this.patientID=parseInt("".concat(this.$route.params.patient_id))},methods:{async postActivities(){const e=new K(this.patientID,-1);if(await e.createEncounter()){const a=await this.buildObs();await e.saveObservationList(a),await this.closeModal()}},manageBP(){this.$router.push("/art/encounters/bp_management/".concat(this.patientID))},exit(){u.dismiss([])},async closeModal(){await u.dismiss(this.riskFactors)},async buildObs(){return this.riskFactors.map(e=>{const t=e.isChecked===!0?"Yes":"No",a=p.getConceptID(t,!0);return{concept_id:p.getConceptID(e.concept,!0),value_coded:a}})}},data(){return{patientID:-1,riskFactors:[{name:"Diabetes",isChecked:!1,concept:"Diabetes"},{name:"Cronic kidney disease",isChecked:!1,concept:"CKD"},{name:"Past history of IHD or CVD",isChecked:!1,concept:"history of CVD"},{name:"First degree relative with IHD or CVD <65",isChecked:!1,concept:"relative with CVD"},{name:"Patient currently smokes",isChecked:!1,concept:"patient smokes"}]}},mounted(){this.factors.forEach(e=>{if(e.value==="Yes"){const t=this.riskFactors.findIndex(a=>a.concept===e.concept);this.riskFactors[t].isChecked=!0}})},components:{IonButton:x,IonContent:P,IonHeader:S,IonTitle:O,IonToolbar:R,IonLabel:z,IonList:E,IonItem:H,IonCheckbox:L,IonRow:N,IonFooter:T,IonGrid:Y,IonCol:A}});function X(e,t,a,k,J,W){const h=s("ion-title"),d=s("ion-toolbar"),C=s("ion-header"),b=s("ion-label"),I=s("ion-checkbox"),g=s("ion-item"),v=s("ion-list"),w=s("ion-col"),y=s("ion-row"),D=s("ion-grid"),B=s("ion-content"),l=s("ion-button"),F=s("ion-footer");return r(),_(m,null,[n(C,null,{default:o(()=>[n(d,null,{default:o(()=>[n(h,null,{default:o(()=>t[0]||(t[0]=[i("Risk Factors")])),_:1})]),_:1})]),_:1}),n(B,{style:{overflowY:"hidden",background:"grey"}},{default:o(()=>[n(D,null,{default:o(()=>[n(y,null,{default:o(()=>[n(w,null,{default:o(()=>[n(v,{style:{overflowY:"auto",height:"78vh"}},{default:o(()=>[(r(!0),_(m,null,j(e.riskFactors,c=>(r(),f(g,{key:c},{default:o(()=>[n(b,null,{default:o(()=>[i(q(c.name),1)]),_:2},1024),n(I,{modelValue:c.isChecked,"onUpdate:modelValue":V=>c.isChecked=V,slot:"start"},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024))),128))]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),n(F,null,{default:o(()=>[n(d,null,{default:o(()=>[n(l,{size:"large",onClick:e.exit,slot:"start",color:"danger"},{default:o(()=>t[1]||(t[1]=[i(" Close ")])),_:1},8,["onClick"]),e.showManageBPButton?(r(),f(l,{key:0,size:"large",onClick:e.manageBP,slot:"start"},{default:o(()=>t[2]||(t[2]=[i(" Manage BP ")])),_:1},8,["onClick"])):G("",!0),n(l,{size:"large",color:"success",onClick:e.postActivities,slot:"end"},{default:o(()=>t[3]||(t[3]=[i(" Save ")])),_:1},8,["onClick"])]),_:1})]),_:1})],64)}const ee=U(Q,[["render",X],["__scopeId","data-v-a68c415c"]]);export{ee as R};
