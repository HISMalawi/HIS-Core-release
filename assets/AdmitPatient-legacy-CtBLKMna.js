System.register(["./HisStandardForm-legacy-a9YJRGaH.js","./index-legacy-CA6M7ipO.js","./useEncounter-legacy-CgHUO1ZL.js","./isEmpty-legacy-cRrH0Hs5.js","./encounter_guidelines-legacy-Bcz_Mw7r.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,n,i,l,s,o,r,c,u,d,f,m,y,g,p,w,b;return{setters:[e=>{a=e.H},e=>{n=e.bQ,i=e.d,l=e.r,s=e.ad,o=e.ae,r=e.ax,c=e.W,u=e.aj,d=e.am,f=e.a,m=e.c,y=e.w,g=e.b,p=e.u,w=e.I},e=>{b=e.u},null,null,null],execute:function(){class t extends n{constructor(e,t){super(e,42,t)}}e("default",i({__name:"AdmitPatient",setup(e){const n=l([]);let i;const{goToNextTask:S,patientDashboardUrl:h}=b(((e,a)=>{i=new t(a,e),n.value.push({id:"internal_sections",helpText:"Select Ward/internal section",type:s.TT_SELECT,validation:e=>o.required(e),computedValue:e=>i.buildValueText("Admit to ward",e.label),options:()=>r.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,t,a)=>{if("string"!=typeof a.filter||a.filter.length<3)return c("Please enter a valid section name");if(a.filtered.some((e=>e.label.toLowerCase()===a.filter.toLowerCase())))return c("Section already existing");if(await u("Do you want to add internal section?")){const e=await r.createInternalSection(a.filter.toUpperCase());e?(a.filter=e.name,a.listData=[{label:e.name,value:e.id},...a.listData]):d(`Unable to add ${a.filter}`)}}}]}})}));async function v(e,t){const a=await Promise.all([t.internal_sections]);await i.createEncounter(),await i.saveObservationList(a),S()}return(e,t)=>(f(),m(p(w),null,{default:y((()=>[g(a,{cancelDestinationPath:p(h),fields:n.value,onFinishAction:v,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
