System.register(["./index-legacy-Dab_9-0G.js","./ReportMixin.vue_vue_type_script_lang-legacy--yJoaiAf.js","./TableReportTemplate-legacy-BLZlHJOF.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./MultiFieldDateHelper-legacy-CrZfaPmm.js","./BasicReportTemplate-legacy-DES9wN70.js","./Export-legacy-7JpF_x1y.js","./SIngleTouchField-legacy-BU52wpZr.js","./Pagination-legacy-B-7QKc1e.js","./HisStandardForm-legacy-a-GAw9o3.js","./TouchScreenForm-legacy-BrA5VXvB.js","./ToolbarMediumCard-legacy-tyMOM4tZ.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-kf7cSfpw.js","./ReportErrors-legacy-DZ77uX63.js","./KbLayouts-legacy-BKvPSxzZ.js","./HisKbConfigurations-legacy-vrLd9Pgz.js"],(function(t,e){"use strict";var a,n,i,o,l,s,r,d,u,c,h,m,T,p,_,x,g,f,y;return{setters:[t=>{a=t.d,n=t.I,i=t.V,o=t.ab,l=t.cI,s=t.L,r=t.cJ,d=t.S,u=t.H,c=t._,h=t.r,m=t.o,T=t.c,p=t.w,_=t.b},t=>{x=t._},t=>{g=t.R},t=>{f=t.F},t=>{y=t.g},null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){const e=a({mixins:[x],components:{ReportTemplate:g,IonPage:n},data:()=>({title:"Data cleaning report",rows:[],columns:[],defaultIndicator:{}}),created(){this.fields=[{id:"indicator",helpText:"Select indicator",type:f.TT_SELECT,requireNext:!1,condition:()=>!this.defaultIndicator,defaultOutput:()=>this.defaultIndicator,validation:t=>i.required(t),options:()=>this.getIndicatorOptions()},...y({id:"start_date",helpText:"Start",required:!0,minDate:()=>"2000-01-01",maxDate:()=>d.getSessionDate(),estimation:{allowUnknown:!1},computeValue:t=>t}),...y({id:"end_date",helpText:"End",required:!0,minDate:(t,e)=>e.start_date,maxDate:()=>d.getSessionDate(),estimation:{allowUnknown:!1},computeValue:t=>t})],this.defaultIndicator=o.find(this.getIndicatorOptions(),{value:this.$route.query.cleaning_tool})||null},methods:{async onPeriod(t,e){const a=t=>u.toStandardHisDisplayFormat(t);this.rows=[],this.title=t.indicator.label;const n=t.indicator;this.columns=n.other.columns,this.report=new l,this.report.setStartDate(e.start_date),this.report.setEndDate(e.end_date),this.period=`${a(e.start_date)} - ${a(e.end_date)}`;const i=await this.report.getDataToolReport(n.value);i&&(this.rows=await Promise.all(i.map((t=>n.other.formatRow(t)))))},showPatientBtn(t){return s.tdBtn("View",(()=>this.$router.push("/patient/dashboard/"+t)))},getIndicatorOptions(){return[{label:"Males with ANC Encounters",value:r.MALES_WITH_ANC_ENCOUNTERS,other:{columns:[[s.thTxt("National ID"),s.thTxt("First name"),s.thTxt("Last name"),s.thTxt("Total Encounters"),s.thTxt("Action")]],formatRow:t=>[s.td(t.identifier),s.td(t.given_name),s.td(t.family_name),s.td(t.total_encounters),this.showPatientBtn(t.patient_id)]}},{label:"Encounters after death",value:r.ENCOUNTERS_AFTER_DEATH,other:{columns:[[s.thTxt("National ID"),s.thTxt("First name"),s.thTxt("Last name"),s.thTxt("Date of death"),s.thTxt("Recent encounter date"),s.thTxt("Count"),s.thTxt("Action")]],formatRow:t=>[s.td(t.identifier),s.td(t.given_name),s.td(t.family_name),s.tdDate(t.patient_died_date),s.tdDate(t.minimum_encounter_datetime),s.td(t.total_encounters),this.showPatientBtn(t.patient_id)]}},{label:"Incomplete visits",value:r.INCOMPLETE_VISITS,other:{columns:[[s.thTxt("National ID"),s.thTxt("Name"),s.thTxt("Visit date"),s.thTxt("Incomplete count"),s.thTxt("Action")]],formatRow:t=>[s.td(t.n_id),s.td(t.name),s.td(t.visit_date),s.td(t.visit_no),this.showPatientBtn(t.patient_id)]}},{label:"Duplicate encounters",value:r.DUPLICATE_ENCOUNTERS,other:{columns:[[s.thTxt("National ID"),s.thTxt("Given name"),s.thTxt("Family name"),s.thTxt("Name"),s.thTxt("Total"),s.thTxt("Action")]],formatRow:t=>[s.td(t.identifier),s.td(t.given_name),s.td(t.family_name),s.td(t.name),s.td(t.total),this.showPatientBtn(t.patient_id)]}},{label:"Missing HIV Status",value:r.MISSING_HIV_STATUS,other:{columns:[[s.thTxt("National ID"),s.thTxt("Given name"),s.thTxt("Family name"),s.thTxt("Action")]],formatRow:t=>[s.td(t.identifier),s.td(t.given_name),s.td(t.family_name),this.showPatientBtn(t.patient_id)]}},{label:"Missing Last Menstrual Period (LMP)",value:r.MISSING_LMP,other:{columns:[[s.thTxt("National ID"),s.thTxt("Given name"),s.thTxt("Family name"),s.thTxt("Action")]],formatRow:t=>[s.td(t.identifier),s.td(t.given_name),s.td(t.family_name),this.showPatientBtn(t.patient_id)]}}]}}});t("default",c(e,[["render",function(t,e,a,n,i,o){const l=h("report-template"),s=h("ion-page");return m(),T(s,null,{default:p((()=>[_(l,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,showFilters:!0,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","onReportConfiguration"])])),_:1})}]]))}}}));
