System.register(["./dynamic-import-helper-legacy-DYK5bIOV.js","./HisStandardForm-legacy-CfaEhksJ.js","./index-legacy-rttSvejT.js","./EncounterMixin.vue_vue_type_script_lang-legacy-DgDsRgb3.js","./MultiFieldDateHelper-legacy-DRbrfDh3.js","./TouchScreenForm-legacy-Bt9NJZEE.js","./ToolbarMediumCard-legacy-Bi2VVsZ_.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-BdWinx1S.js","./encounter_guidelines-legacy-Da880sWK.js","./GuidelineEngine-legacy-KsvQuFdF.js","./KbLayouts-legacy-BKvPSxzZ.js","./HisKbConfigurations-legacy-vrLd9Pgz.js"],(function(e,i){"use strict";var n,t,s,a,o,l,r,u,c,d,h,y;return{setters:[e=>{n=e.F},e=>{t=e.H},e=>{s=e.d,a=e.cs,o=e.V,l=e.aT,r=e._,u=e.r,c=e.o,d=e.c},e=>{h=e._},e=>{y=e.g},null,null,null,null,null,null,null,null],execute:function(){const i=s({mixins:[h],components:{HisStandardForm:t},data:()=>({consultation:{}}),watch:{ready:{handler(e){e&&(this.consultation=new a(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,i){await this.consultation.createEncounter();const n=await this.resolveObs(i);await this.consultation.saveObservationList(n),this.$router.back()},getFields(){return[{id:"has_hypertension",helpText:"Does the patient have hypertension",type:n.TT_SELECT,options:()=>this.yesNoOptions(),validation:e=>o.required(e),computedValue:e=>l.buildValueCoded("Patient has hypertension",`${e.value}`)},...y({condition:e=>"Yes"===e.has_hypertension.value,id:"hypertension_diagnosis",helpText:"Date the patient was diagnosed with hypertension",required:!0,estimation:{allowUnknown:!1},computeValue:e=>l.buildValueDate("Hypertension diagnosis date",e)})]}}});e("default",r(i,[["render",function(e,i,n,t,s,a){const o=u("his-standard-form");return c(),d(o,{fields:e.fields,skipSummary:!0,onFinishAction:e.onFinish},null,8,["fields","onFinishAction"])}]]))}}}));
