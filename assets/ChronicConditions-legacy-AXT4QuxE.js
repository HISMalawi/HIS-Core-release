System.register(["./HisStandardForm-legacy-DMJkhfrq.js","./dynamic-import-helper-legacy-DYK5bIOV.js","./index-legacy-X--GYU37.js","./useEncounter-legacy-C-vUvR11.js","./commons-legacy-DLAvZBLU.js","./isEmpty-legacy-CJg3TOXI.js","./TouchScreenForm-legacy-C_f8Ho2H.js","./ToolbarMediumCard-legacy-CdhT4OJW.js","./Transformers-legacy-DhNYVLaS.js","./ViewPort-legacy-1het9QhE.js","./encounter_guidelines-legacy-wNYbMa3T.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,n){"use strict";var t,l,i,a,o,s,c,u,r,d,p,y,T,m,b,h;return{setters:[e=>{t=e.H},e=>{l=e.F},e=>{i=e.b4,a=e.d,o=e.K,s=e.o,c=e.c,u=e.w,r=e.b,d=e.cl,p=e.I},e=>{y=e.u},e=>{T=e.b,m=e.m,b=e.r},e=>{h=e.p},null,null,null,null,null,null],execute:function(){class n extends i{constructor(e,n){super(e,58,n)}}e("default",a({__name:"ChronicConditions",setup(e){const i=o([]);let a;const{goToNextTask:g,patientDashboardUrl:_}=y(((e,t)=>{a=new n(t,e),i.value=[{id:"conditions",helpText:"Condition",type:l.TT_MULTIPLE_YES_NO,computedValue:e=>j(e),options:(e,n)=>T(["Cancer","Diabetes","HIV","Chronic Heart condition","Chronic liver disease"],n,!0)},{id:"additional_conditions",helpText:"Condition continued...",type:l.TT_MULTIPLE_YES_NO,options:(e,n)=>T(["TB","Asthma","Epilepsy","Kidney Disease"],n,!0),computedValue:e=>j(e)},{id:"bmi",helpText:"Select BMI range",type:l.TT_SELECT,computedValue:e=>({obs:a.buildValueText("BMI",e.label)}),options:()=>m(["< 18.5","18.5 - 24.9","25 - 29.9",">= 30"])},{id:"other",helpText:"Other (Specify)",type:l.TT_TEXT,computedValue:e=>h(e)?null:{obs:a.buildValueText("Other (specify)",e.label)}}]}));async function C(e,n){await a.createEncounter();const t=await b(n);await a.saveObservationList(t),g()}function j(e){return h(e)?null:{obs:e.map((async e=>({...await a.buildValueCoded("Condition",e.label),child:[await a.buildValueCoded(e.label,e.value)]})))}}return(e,n)=>(s(),c(d(p),null,{default:u((()=>[r(t,{cancelDestinationPath:d(_),fields:i.value,onFinishAction:C,skipSummary:!0},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
