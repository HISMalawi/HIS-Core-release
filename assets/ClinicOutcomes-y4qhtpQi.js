import{d as m,r as n,dO as g,ap as v,t as _,u as b,v as D,w as h,x as u,y as c,cm as O,a5 as w,O as C,ah as R,cO as x,cc as P,c_ as d}from"./index-CzgmKZtb.js";import{v as S}from"./TableView-CTS2Fyew.js";import"./Export-CwEmLj54.js";import"./index-cE2oHcbY.js";const I=m({__name:"ClinicOutcomes",setup(y){const t=n([]),o=n(""),r=n(!1),a=new g,p=v(()=>[[{label:"Age Group",ref:"age_group"},{label:"Gender",ref:"gender"},{label:"Alive",ref:"alive"},{label:"Died",ref:"gender",value:e=>P(e.gender)},{label:"Referred Within",ref:"birthdate",value:e=>d(e.birthdate)},{label:"Transferred Out",ref:"order_date",value:e=>d(e.order_date)}]]),s=async()=>{if(!(a.startDate&&a.endDate))return C("Start date and end date required!");r.value=!0,t.value=[];try{t.value=await a.getOutcomesReport()}catch(e){R("Unable to generate report!")}r.value=!1},l=()=>x({onFinish:(e,i,f)=>{o.value="Period (".concat(f,")"),a.startDate=e,a.endDate=i,s()}});return _(()=>l()),(e,i)=>(b(),D(c(w),null,{default:h(()=>[u(c(O),{"is-open":r.value,message:"Please wait..."},null,8,["is-open"]),u(S,{title:"Clinic Outcomes Report",subtitle:o.value,columns:p.value,columnData:t.value,rowsPerPage:15,onConfigure:l,onRefresh:()=>s(),"report-prefix":"Clinic"},null,8,["subtitle","columns","columnData","onRefresh"])]),_:1}))}});export{I as default};
