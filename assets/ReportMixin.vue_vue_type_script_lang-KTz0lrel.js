import{d as A,aJ as v,bC as S,H as _,L as o,O as p,bD as h,V as D,R as C,S as x,ab as I,P as w}from"./index-CZt4BSQf.js";import{g as f}from"./MultiFieldDateHelper-BeQr4Gt4.js";import{D as g}from"./BasicReportTemplate-B2bgDnCL.js";import{F as y}from"./dynamic-import-helper-Bsjrd6Ro.js";const q=A({data:()=>({app:v.getActiveApp(),fields:[],report:{},reportReady:!1,period:"",startDate:"",endDate:"",customFileName:"",isMilitarySite:!1,drillDownCache:{}}),methods:{formatGender(t){return S(t)},toDate(t){return _.toStandardHisDisplayFormat(t)},sortByArvNumber(t,e="arv_number"){try{return t.sort((a,i)=>this.getArvInt(a[e])>this.getArvInt(i[e])?1:-1)}catch(a){return console.error(a),t}},getArvInt(t){if(typeof t=="string"){const e=t.split("-")[2],a=parseInt(e);return typeof a=="number"?a:0}return 0},parseAgeGroup(t){return t==="<1 year"?[0,0]:t==="90 plus years"?[90,1e3]:t.split("-").map(e=>parseInt(e,10))},tdARV(t,e={}){return o.td(t,{sortValue:this.getArvInt(t),...e})},confirmPatient(t){return this.$router.push("/patients/confirm?person_id=".concat(t))},async drilldownAsyncRows(t,e,a,i=!0){(await p.create({component:g,cssClass:"large-modal",componentProps:{title:t,columns:e,asyncRows:a,canExport:i,showFilters:!0,rowsPerPage:50,paginated:!0,showReportStamp:!1,footerColor:"light",onFinish:()=>p.dismiss()}})).present()},async drilldownData(t,e,a,i){(await p.create({component:g,cssClass:"large-modal",componentProps:{title:t,columns:e,rows:a,rowParser:i,rowsPerPage:50,showFilters:!0,paginated:!0,showReportStamp:!1,footerColor:"light",onFinish:()=>p.dismiss()}})).present()},getDefaultDrillDownTable(){const t=[[o.thTxt("ARV number"),o.thTxt("Gender"),o.thTxt("Birth Date"),o.thTxt("Actions")]];return{rowParser:async a=>{let i=0;const d=a.map(async s=>{let n=null,u=null;if(I.isArray(s)){const[b,m]=s;if(u=b,m in this.drillDownCache)return[u,...this.drillDownCache[m].slice(1)]}else if(n=s,n in this.drillDownCache)return this.drillDownCache[n];const T=await w.findByID(n),c=new w(T),l=[];return u&&(i=1,l.push(u)),l.push(this.tdARV(c.getArvNumber())),l.push(o.td(this.formatGender(c.getGender()))),l.push(o.tdDate(c.getBirthdate().toString())),l.push(o.tdBtn("Show",async()=>{await p.dismiss({}),this.$router.push({path:"/patient/dashboard/".concat(n)})})),this.drillDownCache[n]=l,l});return(await Promise.all(d)).sort((s,n)=>s[i].sortValue>n[i].sortValue?1:-1)},columns:t}},runTableDrill(t,e="Drilldown patients"){const{columns:a,rowParser:i}=this.getDefaultDrillDownTable();this.drilldownData(e,a,t,i)},drill(t,e="Drill table"){return t&&t.length>0?o.tdLink(t.length,()=>this.runTableDrill(t,e)):o.td(0)},getQuaterOptions(){return h.getReportQuarters().map(e=>({label:e.name,value:e.start,other:e}))},getDateDurationFields(t=!1,e=!1,a=5,i=x.getSessionDate()){const d="2000-01-01";return[{id:"quarter",helpText:"Select Quarter",type:y.TT_SELECT,condition:()=>t,validation:r=>D.required(r),options:()=>{let s=h.getReportQuarters(a).map(n=>({label:n.name,value:n.start,other:n}));return e&&(s=[{label:"Set custom period",value:"custom_period",other:{}},...s]),s}},...f({id:"start_date",helpText:"Start",required:!0,condition:r=>r.quarter&&r.quarter.value==="custom_period"||!t,minDate:()=>d,maxDate:()=>i,estimation:{allowUnknown:!1},computeValue:r=>r}),...f({id:"end_date",helpText:"End",required:!0,condition:r=>r.quarter&&r.quarter.value==="custom_period"||!t,unload:(r,s,n,u)=>{s==="next"&&(this.endDate=u.end_date)},minDate:(r,s)=>s.start_date,maxDate:()=>i,estimation:{allowUnknown:!1},computeValue:r=>r}),{id:"occupation",helpText:"Report Group",type:y.TT_SELECT,init:async()=>(this.isMilitarySite=await C.get("IS_MILITARY_SITE"),!0),computedValue:r=>r.value,condition:()=>{var r;return((r=this.app)==null?void 0:r.applicationName)==="ART"&&this.isMilitarySite},validation:r=>D.required(r),options:()=>[{label:"All",value:"All"},{label:"Military",value:"Military"},{label:"Civilian",value:"Civilian"}]}]}}});export{q as _};
